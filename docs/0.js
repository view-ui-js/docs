(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[0],{

/***/ "./node_modules/@antv/g2/build/g2.js":
/*!*******************************************!*\
  !*** ./node_modules/@antv/g2/build/g2.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 389);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The util method based on the lodash.\n * @author dxq613@gmail.com\n * @see https://github.com/lodash/lodash\n */\nvar Utils = __webpack_require__(127);\n\nvar G = __webpack_require__(16);\n\nvar Util = Utils.mix({}, Utils, {\n  assign: Utils.mix,\n  // simple mix\n  merge: Utils.deepMix,\n  // deep mix\n  cloneDeep: Utils.clone,\n  isFinite: isFinite,\n  isNaN: isNaN,\n  snapEqual: Utils.isNumberEqual,\n  remove: Utils.pull,\n  inArray: Utils.contains,\n\n  /**\n   * 将用户输入的 padding 转换成 [top, right, bottom, right] 的模式\n   * @param  {Number|Array} padding 输入的padding\n   * @return {Array} 四个padding 值\n   */\n  toAllPadding: function toAllPadding(padding) {\n    var top = 0;\n    var left = 0;\n    var right = 0;\n    var bottom = 0;\n\n    if (Util.isNumber(padding) || Util.isString(padding)) {\n      top = left = right = bottom = padding;\n    } else if (Util.isArray(padding)) {\n      top = padding[0];\n      right = !Util.isNil(padding[1]) ? padding[1] : padding[0];\n      bottom = !Util.isNil(padding[2]) ? padding[2] : padding[0];\n      left = !Util.isNil(padding[3]) ? padding[3] : right;\n    } else if (Util.isObject(padding)) {\n      top = padding.top || 0;\n      right = padding.right || 0;\n      bottom = padding.bottom || 0;\n      left = padding.left || 0;\n    }\n\n    return [top, right, bottom, left];\n  },\n  getClipByRange: function getClipByRange(plotRange) {\n    var tl = plotRange.tl,\n        br = plotRange.br;\n    var clip = new G.Rect({\n      attrs: {\n        x: tl.x,\n        y: tl.y,\n        width: br.x - tl.x,\n        height: br.y - tl.y\n      }\n    });\n    return clip;\n  }\n});\nUtil.Array = {\n  groupToMap: Utils.groupToMap,\n  group: Utils.group,\n  merge: Utils.merge,\n  values: Utils.valuesOfKey,\n  getRange: Utils.getRange,\n  firstValue: Utils.firstValue,\n  remove: Utils.pull\n};\nmodule.exports = Util;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar CommonUtil = __webpack_require__(81);\n\nvar Util = {};\nCommonUtil.merge(Util, CommonUtil, {\n  mixin: function mixin(c, mixins) {\n    var Param = c.CFG ? 'CFG' : 'ATTRS';\n\n    if (c && mixins) {\n      c._mixins = mixins;\n      c[Param] = c[Param] || {};\n      var temp = {};\n      Util.each(mixins, function (mixin) {\n        Util.augment(c, mixin);\n        var attrs = mixin[Param];\n\n        if (attrs) {\n          Util.merge(temp, attrs);\n        }\n      });\n      c[Param] = Util.merge(temp, c[Param]);\n    }\n  }\n});\nmodule.exports = Util;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(24);\n\nvar isArray = __webpack_require__(4);\n\nvar each = function each(elements, func) {\n  if (!elements) {\n    return;\n  }\n\n  var rst = void 0;\n\n  if (isArray(elements)) {\n    for (var i = 0, len = elements.length; i < len; i++) {\n      rst = func(elements[i], i);\n\n      if (rst === false) {\n        break;\n      }\n    }\n  } else if (isObject(elements)) {\n    for (var k in elements) {\n      if (elements.hasOwnProperty(k)) {\n        rst = func(elements[k], k);\n\n        if (rst === false) {\n          break;\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = each;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The util method based on the lodash.\n * @author dxq613@gmail.com\n */\nvar G = __webpack_require__(25);\n\nvar Utils = __webpack_require__(127);\n\nvar Util = Utils.mix({\n  assign: Utils.mix,\n  isFinite: isFinite,\n  isNaN: isNaN,\n  Group: G.Group,\n  Event: G.Event\n}, Utils);\nmodule.exports = Util;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isType = __webpack_require__(12);\n\nvar isArray = Array.isArray ? Array.isArray : function (value) {\n  return isType(value, 'Array');\n};\nmodule.exports = isArray;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// isFinite,\nvar isNil = function isNil(value) {\n  /**\n   * isNil(null) => true\n   * isNil() => true\n   */\n  return value === null || value === undefined;\n};\n\nmodule.exports = isNil;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar isPointInPath = __webpack_require__(189);\n\nvar Element = __webpack_require__(102);\n\nvar Inside = __webpack_require__(54);\n\nvar Shape = function Shape(cfg) {\n  Shape.superclass.constructor.call(this, cfg);\n};\n\nShape.ATTRS = {};\nUtil.extend(Shape, Element);\nvar ARRAY_ATTRS = {\n  matrix: 'matrix',\n  path: 'path',\n  points: 'points',\n  lineDash: 'lineDash'\n};\n\nfunction _cloneArrayAttr(arr) {\n  var result = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (Util.isArray(arr[i])) {\n      result.push([].concat(arr[i]));\n    } else {\n      result.push(arr[i]);\n    }\n  }\n\n  return result;\n}\n\nUtil.augment(Shape, isPointInPath, {\n  isShape: true,\n  drawInner: function drawInner(context) {\n    var self = this;\n    var attrs = self._attrs;\n    self.createPath(context);\n    var originOpacity = context.globalAlpha;\n\n    if (self.hasFill()) {\n      var fillOpacity = attrs.fillOpacity;\n\n      if (!Util.isNil(fillOpacity) && fillOpacity !== 1) {\n        context.globalAlpha = fillOpacity;\n        context.fill();\n        context.globalAlpha = originOpacity;\n      } else {\n        context.fill();\n      }\n    }\n\n    if (self.hasStroke()) {\n      var lineWidth = self._attrs.lineWidth;\n\n      if (lineWidth > 0) {\n        var strokeOpacity = attrs.strokeOpacity;\n\n        if (!Util.isNil(strokeOpacity) && strokeOpacity !== 1) {\n          context.globalAlpha = strokeOpacity;\n        }\n\n        context.stroke();\n      }\n    }\n\n    self.afterPath(context);\n  },\n  afterPath: function afterPath() {},\n\n  /**\n   * 击中图形时是否进行包围盒判断\n   * @return {Boolean} [description]\n   */\n  isHitBox: function isHitBox() {\n    return true;\n  },\n\n  /**\n   * 节点是否能够被击中\n   * @param {Number} x x坐标\n   * @param {Number} y y坐标\n   * @return {Boolean} 是否在图形中\n   */\n  isHit: function isHit(x, y) {\n    var self = this;\n    var v = [x, y, 1];\n    self.invert(v); // canvas\n\n    if (self.isHitBox()) {\n      var box = self.getBBox();\n\n      if (box && !Inside.box(box.minX, box.maxX, box.minY, box.maxY, v[0], v[1])) {\n        return false;\n      }\n    }\n\n    var clip = self._attrs.clip;\n\n    if (clip) {\n      clip.invert(v, self.get('canvas'));\n\n      if (clip.isPointInPath(v[0], v[1])) {\n        return self.isPointInPath(v[0], v[1]);\n      }\n    } else {\n      return self.isPointInPath(v[0], v[1]);\n    }\n\n    return false;\n  },\n\n  /**\n   * @protected\n   * 计算包围盒\n   * @return {Object} 包围盒\n   */\n  calculateBox: function calculateBox() {\n    return null;\n  },\n  // 获取拾取时线的宽度，需要考虑附加的线的宽度\n  getHitLineWidth: function getHitLineWidth() {\n    var attrs = this._attrs; // if (!attrs.stroke) {\n    //   return 0;\n    // }\n\n    var lineAppendWidth = attrs.lineAppendWidth || 0;\n    var lineWidth = attrs.lineWidth || 0;\n    return lineWidth + lineAppendWidth;\n  },\n  // 清除当前的矩阵\n  clearTotalMatrix: function clearTotalMatrix() {\n    this._cfg.totalMatrix = null;\n    this._cfg.region = null;\n  },\n  clearBBox: function clearBBox() {\n    this._cfg.box = null;\n    this._cfg.region = null;\n  },\n  getBBox: function getBBox() {\n    var box = this._cfg.box; // 延迟计算\n\n    if (!box) {\n      box = this.calculateBox();\n\n      if (box) {\n        box.x = box.minX;\n        box.y = box.minY;\n        box.width = box.maxX - box.minX;\n        box.height = box.maxY - box.minY;\n      }\n\n      this._cfg.box = box;\n    }\n\n    return box;\n  },\n  clone: function clone() {\n    var self = this;\n    var clone = null;\n    var _attrs = self._attrs;\n    var attrs = {};\n    Util.each(_attrs, function (i, k) {\n      if (ARRAY_ATTRS[k] && Util.isArray(_attrs[k])) {\n        attrs[k] = _cloneArrayAttr(_attrs[k]);\n      } else {\n        attrs[k] = _attrs[k];\n      }\n    });\n    clone = new self.constructor({\n      attrs: attrs\n    }); // zIndex也是绘图属性，但是在cfg中，特殊处理\n\n    clone._cfg.zIndex = self._cfg.zIndex;\n    return clone;\n  }\n});\nmodule.exports = Shape;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 全局变量\n * @author dxq613\n */\nvar Util = __webpack_require__(0);\n\nvar Theme = __webpack_require__(151);\n\nvar Global = {\n  version: '3.4.10',\n  renderer: 'canvas',\n  // trackable: false,\n  trackingInfo: {},\n  animate: true,\n  widthRatio: {\n    // 宽度所占的分类的比例\n    column: 1 / 2,\n    // 一般的柱状图占比 1/2\n    rose: 0.9999999,\n    // 玫瑰图柱状占比 1\n    multiplePie: 1 / 1.3 // 多层的饼图、环图\n\n  },\n  // 折线图、区域图、path 当只有一个数据时，是否显示成点\n  showSinglePoint: false,\n  connectNulls: false,\n  scales: {},\n  registerTheme: function registerTheme(name, theme) {\n    Theme[name] = theme;\n  },\n  setTheme: function setTheme(theme) {\n    var newTheme = {};\n\n    if (Util.isObject(theme)) {\n      newTheme = theme;\n    } else if (Util.indexOf(Object.keys(Theme), theme) !== -1) {\n      newTheme = Theme[theme];\n    } else {\n      newTheme = Theme.default;\n    }\n\n    Util.deepMix(Global, newTheme);\n  }\n};\nGlobal.setTheme('default');\nmodule.exports = Global;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nfunction _mix(dist, obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {\n      dist[key] = obj[key];\n    }\n  }\n}\n\nvar mix = function mix(dist, src1, src2, src3) {\n  if (src1) _mix(dist, src1);\n  if (src2) _mix(dist, src2);\n  if (src3) _mix(dist, src3);\n  return dist;\n};\n\nmodule.exports = mix;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 判断是否数字\n * @return {Boolean} 是否数字\n */\nvar isType = __webpack_require__(12);\n\nvar isNumber = function isNumber(value) {\n  return isType(value, 'Number');\n};\n\nmodule.exports = isNumber;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isType = __webpack_require__(12);\n\nvar isString = function isString(str) {\n  return isType(str, 'String');\n};\n\nmodule.exports = isString;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 是否为函数\n * @param  {*} fn 对象\n * @return {Boolean}  是否函数\n */\nvar isType = __webpack_require__(12);\n\nvar isFunction = function isFunction(value) {\n  return isType(value, 'Function');\n};\n\nmodule.exports = isFunction;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nvar isType = function isType(value, type) {\n  return toString.call(value) === '[object ' + type + ']';\n};\n\nmodule.exports = isType;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nvar isArrayLike = function isArrayLike(value) {\n  /**\n   * isArrayLike([1, 2, 3]) => true\n   * isArrayLike(document.body.children) => true\n   * isArrayLike('abc') => true\n   * isArrayLike(Function) => false\n   */\n  return value !== null && typeof value !== 'function' && isFinite(value.length);\n};\n\nmodule.exports = isArrayLike;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  FONT_FAMILY: '\"-apple-system\", BlinkMacSystemFont, \"Segoe UI\", Roboto,\"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\",SimSun, \"sans-serif\"'\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Helper = __webpack_require__(156);\n\nvar Component = __webpack_require__(32);\n\nvar KEYWORDS = ['min', 'max', 'median', 'start', 'end'];\n\nvar Guide =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Guide, _Component);\n\n  function Guide() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Guide.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Component.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      xScales: null,\n      yScales: null,\n      el: null\n    });\n  };\n\n  _proto.render = function render() {};\n  /**\n   * clear container\n   * @override\n   */\n\n\n  _proto.clear = function clear() {\n    var self = this;\n    var el = self.get('el');\n    el && el.remove();\n  };\n  /**\n   * show or hide\n   * @protected\n   * @param {Boolean} visible true means show, false means hide\n   */\n\n\n  _proto.changeVisible = function changeVisible(visible) {\n    var self = this;\n    self.set('visible', visible);\n    var el = self.get('el');\n    if (!el) return;\n\n    if (el.set) {\n      el.set('visible', visible);\n    } else {\n      el.style.display = visible ? '' : 'none';\n    }\n  };\n  /**\n   * calculate the canvas coordinate value\n   * @protected\n   * @param  {Coordinate} coord  the instance of Coordinate class\n   * @param  {Object | Array | Function} position the value need to convert\n   * @return {Object} return the result\n   */\n\n\n  _proto.parsePoint = function parsePoint(coord, position) {\n    var self = this;\n    var xScales = self.get('xScales');\n    var yScales = self.get('yScales');\n\n    if (Util.isFunction(position)) {\n      position = position(xScales, yScales);\n    }\n\n    var x;\n    var y; // 如果数据格式是 ['50%', '50%'] 的格式\n\n    if (Util.isArray(position) && Util.isString(position[0]) && position[0].indexOf('%') !== -1) {\n      return this._parsePercentPoint(coord, position);\n    }\n\n    if (Util.isArray(position)) {\n      // Array，suuport for mixing of keyword, percent and value\n      x = self._getNormalizedValue(position[0], Helper.getFirstScale(xScales));\n      y = self._getNormalizedValue(position[1], Helper.getFirstScale(yScales));\n    } else {\n      for (var field in position) {\n        var value = position[field];\n\n        if (xScales[field]) {\n          x = self._getNormalizedValue(value, xScales[field]);\n        }\n\n        if (yScales[field]) {\n          y = self._getNormalizedValue(value, yScales[field], 'y');\n        }\n      }\n    }\n\n    if (!Util.isNil(x) && !Util.isNil(y)) {\n      return coord.convert({\n        x: x,\n        y: y\n      });\n    }\n  };\n  /**\n   * Normalized the value\n   * @param  {String | Number} val   param\n   * @param  {Scale} scale the instance of Scale\n   * @return {Number}       return the normalized value\n   */\n\n\n  _proto._getNormalizedValue = function _getNormalizedValue(val, scale) {\n    var result;\n\n    if (Util.indexOf(KEYWORDS, val) !== -1) {\n      // keyword\n      var scaleValue;\n\n      if (val === 'start') {\n        // the start of coordinate\n        result = 0;\n      } else if (val === 'end') {\n        result = 1;\n      } else if (val === 'median') {\n        scaleValue = scale.isCategory ? (scale.values.length - 1) / 2 : (scale.min + scale.max) / 2;\n        result = scale.scale(scaleValue);\n      } else {\n        if (scale.isCategory) {\n          scaleValue = val === 'min' ? 0 : scale.values.length - 1;\n        } else {\n          scaleValue = scale[val];\n        }\n\n        result = scale.scale(scaleValue);\n      }\n    } else {\n      // 数值\n      result = scale.scale(val);\n    }\n\n    return result;\n  };\n\n  _proto._parsePercentPoint = function _parsePercentPoint(coord, position) {\n    var xPercent = parseFloat(position[0]) / 100;\n    var yPercent = parseFloat(position[1]) / 100;\n    var start = coord.start,\n        end = coord.end;\n    var topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y)\n    };\n    var x = coord.width * xPercent + topLeft.x;\n    var y = coord.height * yPercent + topLeft.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return Guide;\n}(Component);\n\nmodule.exports = Guide;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar G = __webpack_require__(25);\n\nmodule.exports = G;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mix = __webpack_require__(8);\n\nvar each = __webpack_require__(2);\n\nvar isObject = __webpack_require__(24);\n\nvar isNil = __webpack_require__(5);\n\nvar Scale =\n/*#__PURE__*/\nfunction () {\n  var _proto = Scale.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.type = 'base';\n    /**\n     * 格式化函数,输出文本或者tick时的格式化函数\n     * @type {Function}\n     */\n\n    this.formatter = null;\n    /**\n     * 输出的值域\n     * @type {Array}\n     */\n\n    this.range = [0, 1];\n    /**\n     * 度量的标记\n     * @type {Array}\n     */\n\n    this.ticks = null;\n    /**\n     * 参与度量计算的值，可选项\n     * @type {Array}\n     */\n\n    this.values = [];\n  };\n\n  function Scale(cfg) {\n    this._initDefaultCfg();\n\n    mix(this, cfg);\n    this.init();\n  }\n  /**\n   * 度量初始化\n   * @protected\n   */\n\n\n  _proto.init = function init() {};\n  /**\n   * 获取该度量的ticks,返回的是多个对象，\n   *   - text: tick 的文本\n   *   - value: 对应的度量转换后的值\n   * <code>\n   *   [\n   *     {text: 0,value:0}\n   *     {text: 1,value:0.2}\n   *     {text: 2,value:0.4}\n   *     {text: 3,value:0.6}\n   *     {text: 4,value:0.8}\n   *     {text: 5,value:1}\n   *   ]\n   * </code>\n   * @param {Number} count 输出tick的个数的近似值，默认是 10\n   * @return {Array} 返回 ticks 数组\n   */\n\n\n  _proto.getTicks = function getTicks() {\n    var self = this;\n    var ticks = self.ticks;\n    var rst = [];\n    each(ticks, function (tick) {\n      var obj;\n\n      if (isObject(tick)) {\n        obj = tick;\n      } else {\n        obj = {\n          text: self.getText(tick),\n          tickValue: tick,\n          value: self.scale(tick)\n        };\n      }\n\n      rst.push(obj);\n    });\n    return rst;\n  };\n  /**\n   * 获取格式化后的文本\n   * @param  {*} value 输入的数据\n   * @param  {*} key 字段的 key\n   * @return {String} 格式化的文本\n   */\n\n\n  _proto.getText = function getText(value, key) {\n    var formatter = this.formatter;\n    value = formatter ? formatter(value, key) : value;\n\n    if (isNil(value) || !value.toString) {\n      value = '';\n    }\n\n    return value.toString();\n  };\n  /**\n   * 输出的值域最小值\n   * @protected\n   * @return {Number} 返回最小的值\n   */\n\n\n  _proto.rangeMin = function rangeMin() {\n    return this.range[0];\n  };\n  /**\n   * 输出的值域最大值\n   * @protected\n   * @return {Number} 返回最大的值\n   */\n\n\n  _proto.rangeMax = function rangeMax() {\n    var range = this.range;\n    return range[range.length - 1];\n  };\n  /**\n   * 度量转换后的结果，翻转回输入域\n   * @param  {Number} value 需要翻转的数值\n   * @return {*} 度量的输入值\n   */\n\n\n  _proto.invert = function invert(value) {\n    return value;\n  };\n  /**\n   * 将传入的值从非数值转换成数值格式，如分类字符串、时间字符串等\n   * @param  {*} value 传入的值\n   * @return {Number} 转换的值\n   */\n\n\n  _proto.translate = function translate(value) {\n    return value;\n  };\n  /**\n   * 进行度量转换\n   * @param  {*} value 输入值\n   * @return {Number} 输出值，在设定的输出值域之间，默认[0,1]\n   */\n\n\n  _proto.scale = function scale(value) {\n    return value;\n  };\n  /**\n   * 克隆一个新的scale,拥有跟当前scale相同的输入域、输出域等\n   * @return {Scale} 克隆的度量\n   */\n\n\n  _proto.clone = function clone() {\n    var self = this;\n    var constr = self.constructor;\n    var cfg = {};\n    each(self, function (v, k) {\n      cfg[k] = self[k];\n    });\n    return new constr(cfg);\n  };\n  /**\n   * 更改度量的属性信息\n   * @param  {Object} info 属性信息\n   * @chainable\n   * @return {Scale} 返回自身的引用\n   */\n\n\n  _proto.change = function change(info) {\n    this.ticks = null;\n    mix(this, info);\n    this.init();\n    return this;\n  };\n\n  return Scale;\n}();\n\nmodule.exports = Scale;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 工厂类，管理各种类型的 shape\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar PathUtil = __webpack_require__(22);\n\nvar GPath = Util.PathUtil;\nvar Shape = {};\nvar ShapeBase = {\n  _coord: null,\n\n  /**\n   * 绘制图形\n   * @param {Object} cfg 配置项\n   * @param {Object} container 容器\n   * @return {Object} shape 创建的 shape\n   */\n  draw: function draw(cfg, container) {\n    if (this.drawShape) {\n      return this.drawShape(cfg, container);\n    }\n\n    return null;\n  },\n\n  /**\n   * 获取绘制图形需要的点, 可以不定义，则使用默认的\n  getPoints(cfg) {\n    if (this.getShapePoints) {\n      return this.getShapePoints(cfg);\n    }\n    return null;\n  },*/\n\n  /**\n   * 设置坐标系\n   * @param {Coord} coord 坐标系\n   */\n  setCoord: function setCoord(coord) {\n    this._coord = coord;\n  },\n\n  /**\n   * 0～1 path 转 画布 path\n   * @param  {path} path 路径\n   * @param  {Boolean} islineToArc 是否转换成圆弧\n   * @return {path} path 转换到画布坐标的path\n   */\n  parsePath: function parsePath(path, islineToArc) {\n    var coord = this._coord;\n    path = GPath.parsePathString(path);\n\n    if (coord.isPolar && islineToArc !== false) {\n      path = PathUtil.convertPolarPath(coord, path);\n    } else {\n      path = PathUtil.convertNormalPath(coord, path);\n    }\n\n    return path;\n  },\n\n  /**\n   * 0～1 point 转 画布 point\n   * @param  {point} point 节点\n   * @return {point} point 转换后的点\n   */\n  parsePoint: function parsePoint(point) {\n    var coord = this._coord;\n    return coord.convertPoint(point);\n  },\n\n  /**\n   * 0～1 points 转 画布 points\n   * @param  {points} points 节点集合\n   * @return {points} points 转换后的多个节点\n   */\n  parsePoints: function parsePoints(points) {\n    var coord = this._coord;\n    var rst = [];\n    Util.each(points, function (point) {\n      rst.push(coord.convertPoint(point));\n    });\n    return rst;\n  }\n};\nvar ShapeFactoryBase = {\n  defaultShapeType: null,\n  setCoord: function setCoord(coord) {\n    this._coord = coord;\n  },\n  getShape: function getShape(type) {\n    var self = this;\n\n    if (Util.isArray(type)) {\n      type = type[0];\n    }\n\n    var shape = self[type] || self[self.defaultShapeType];\n    shape._coord = self._coord;\n    return shape;\n  },\n  getShapePoints: function getShapePoints(type, cfg) {\n    var shape = this.getShape(type);\n    var fn = shape.getPoints || shape.getShapePoints || this.getDefaultPoints;\n    var points = fn(cfg);\n    return points;\n  },\n  getDefaultPoints: function getDefaultPoints()\n  /* cfg */\n  {\n    return [];\n  },\n  getMarkerCfg: function getMarkerCfg(type, cfg) {\n    var shape = this.getShape(type);\n\n    if (!shape.getMarkerCfg) {\n      var defaultShapeType = this.defaultShapeType;\n      shape = this.getShape(defaultShapeType);\n    }\n\n    return shape.getMarkerCfg(cfg);\n  },\n  getSelectedCfg: function getSelectedCfg()\n  /* type, cfg */\n  {\n    return {};\n  },\n  drawShape: function drawShape(type, cfg, container) {\n    var shape = this.getShape(type);\n    var gShape = shape.draw(cfg, container);\n\n    if (gShape) {\n      gShape.setSilent('origin', cfg.origin);\n      gShape._id = cfg.yIndex ? cfg._id + cfg.yIndex : cfg._id;\n      gShape.name = this.name;\n    }\n\n    return gShape;\n  }\n}; // 注册 Geometry 获取图形的入口\n\nShape.registerFactory = function (factoryName, cfg) {\n  var className = Util.upperFirst(factoryName);\n  var geomObj = Util.assign({}, ShapeFactoryBase, cfg);\n  Shape[className] = geomObj;\n  geomObj.name = factoryName;\n  return geomObj;\n}; // 注册图形\n\n\nShape.registerShape = function (factoryName, shapeType, cfg) {\n  var className = Util.upperFirst(factoryName);\n  var factory = Shape[className];\n  var shapeObj = Util.assign({}, ShapeBase, cfg);\n  factory[shapeType] = shapeObj;\n  return shapeObj;\n}; // 获得Geom 对应的 shapeFactory\n\n\nShape.getShapeFactory = function (factoryName) {\n  var self = this;\n  factoryName = factoryName || 'point';\n  var className = Util.upperFirst(factoryName);\n  return self[className];\n};\n\nmodule.exports = Shape;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_color__ = __webpack_require__(60);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_lab__ = __webpack_require__(203);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_lab__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_lab__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_cubehelix__ = __webpack_require__(204);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubehelix__[\"a\"]; });\n\n\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview 所有 Geometry 的基类\n * @author dxq613@gmail.com\n */\nvar Attr = __webpack_require__(73);\n\nvar Adjust = __webpack_require__(297);\n\nvar Base = __webpack_require__(148);\n\nvar Util = __webpack_require__(0);\n\nvar Global = __webpack_require__(7);\n\nvar Labels = __webpack_require__(305);\n\nvar Shape = __webpack_require__(18);\n\nvar TooltipMixin = __webpack_require__(337);\n\nvar ActiveMixin = __webpack_require__(338);\n\nvar SelectMixin = __webpack_require__(339);\n\nvar parseFields = __webpack_require__(340);\n\nvar GROUP_ATTRS = ['color', 'shape', 'size'];\nvar FIELD_ORIGIN = '_origin'; // 转换成对象的数组 [{type: 'adjust'}]\n\nfunction parseAdjusts(adjusts) {\n  // 如果是字符串或者对象转换成数组\n  if (Util.isString(adjusts) || Util.isPlainObject(adjusts)) {\n    adjusts = [adjusts];\n  }\n\n  Util.each(adjusts, function (adjust, index) {\n    if (!Util.isObject(adjust)) {\n      adjusts[index] = {\n        type: adjust\n      };\n    }\n  });\n  return adjusts;\n}\n/**\n * 几何标记\n * @class Geom\n */\n\n\nvar GeomBase =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(GeomBase, _Base);\n\n  var _proto = GeomBase.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * 标记 _id 用于区分执行动画\n       * @type {String}\n       */\n      _id: null,\n\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'base',\n\n      /**\n       * 坐标系\n       * @type {Object}\n       */\n      coord: null,\n\n      /**\n       * 属性映射集\n       * @protected\n       * @type {Object}\n       */\n      attrs: {},\n\n      /**\n       * 所属的View\n       * @type {View}\n       */\n      view: null,\n\n      /**\n       * 几何标记显示的数据\n       * @type {Array}\n       */\n      data: [],\n\n      /**\n       * 相关的度量\n       * @type {Object}\n       */\n      scales: {},\n\n      /**\n       * 绘图容器\n       * @type {Object}\n       */\n      container: null,\n\n      /**\n       * 文本容器\n       * @type {Object}\n       */\n      labelContainer: null,\n\n      /**\n       * 图形容器\n       * @type {Object}\n       */\n      shapeContainer: null,\n\n      /**\n       * 几何标记的一些配置项，用于延迟生成图表\n       * @type {Object}\n       */\n      attrOptions: {},\n      // 样式配置项\n      styleOptions: null,\n      // 选中时的配置项\n      selectedOptions: null,\n      // active 时的配置项\n      activedOptions: null,\n\n      /**\n       * 某些类存在默认的adjust，不能更改 adjust\n       * @type {Boolean}\n       */\n      hasDefaultAdjust: false,\n      // 数据调整类型\n      adjusts: null,\n\n      /**\n       * 使用形状的类型\n       * @protected\n       * @type {String}\n       */\n      shapeType: null,\n\n      /**\n       * 是否生成多个点来绘制图形\n       * @protected\n       * @type {Boolean}\n       */\n      generatePoints: false,\n\n      /**\n       * 数据是否进行排序\n       * @type {Boolean}\n       */\n      sortable: false,\n      labelCfg: null,\n\n      /**\n       * 是否共享 tooltip\n       * @type {Boolean}\n       */\n      shareTooltip: true,\n      tooltipCfg: null,\n\n      /**\n       * 是否执行动画，默认执行\n       * @type {Boolean}\n       */\n      animate: true,\n\n      /**\n       * 动画配置\n       * @type {[type]}\n       */\n      animateCfg: null,\n      visible: true\n    };\n  };\n\n  function GeomBase(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.viewTheme = _this.get('viewTheme');\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), TooltipMixin, ActiveMixin, SelectMixin);\n\n    if (_this.get('container')) {\n      _this._initContainer();\n    }\n\n    _this._initOptions();\n\n    return _this;\n  } // 初始化时对配置项的格式化\n\n\n  _proto._initOptions = function _initOptions() {\n    var adjusts = this.get('adjusts');\n\n    if (adjusts) {\n      adjusts = parseAdjusts(adjusts);\n      this.set('adjusts', adjusts);\n    }\n  };\n\n  _proto._createScale = function _createScale(field, data) {\n    var scales = this.get('scales');\n    var scale = scales[field];\n\n    if (!scale) {\n      scale = this.get('view').createScale(field, data);\n      scales[field] = scale;\n    }\n\n    return scale;\n  };\n\n  _proto._setAttrOptions = function _setAttrOptions(attrName, attrCfg) {\n    var options = this.get('attrOptions');\n    options[attrName] = attrCfg;\n  };\n\n  _proto._createAttrOption = function _createAttrOption(attrName, field, cfg, defaultValues) {\n    var attrCfg = {};\n    attrCfg.field = field;\n\n    if (cfg) {\n      if (Util.isFunction(cfg)) {\n        attrCfg.callback = cfg;\n      } else {\n        attrCfg.values = cfg;\n      }\n    } else if (attrName !== 'color') {\n      attrCfg.values = defaultValues;\n    }\n\n    this._setAttrOptions(attrName, attrCfg);\n  };\n  /**\n   * 位置属性映射\n   * @chainable\n   * @param  {String} field 字段名\n   * @return {Geom} geom 当前几何标记\n   */\n\n\n  _proto.position = function position(field) {\n    this._setAttrOptions('position', {\n      field: field\n    });\n\n    return this;\n  };\n  /**\n   * 颜色属性映射\n   * @chainable\n   * @param  {String} field 字段名\n   * @param  {Array|Function} values 颜色的数组或者回调函数\n   * @return {Geom} geom 当前几何标记\n   */\n\n\n  _proto.color = function color(field, values) {\n    var viewTheme = this.viewTheme || Global;\n\n    this._createAttrOption('color', field, values, viewTheme.colors);\n\n    return this;\n  };\n  /**\n   * 大小属性映射\n   * @chainable\n   * @param  {String} field 字段名\n   * @param  {Array|Function} values 大小的数组或者回调函数\n   * @return {Geom} geom 当前几何标记\n   */\n\n\n  _proto.size = function size(field, values) {\n    var viewTheme = this.viewTheme || Global;\n\n    this._createAttrOption('size', field, values, viewTheme.sizes);\n\n    return this;\n  };\n  /**\n   * 形状属性映射\n   * @chainable\n   * @param  {String} field 字段名\n   * @param  {Array|Function} values 大小的数组或者回调函数\n   * @return {Geom} geom 当前几何标记\n   */\n\n\n  _proto.shape = function shape(field, values) {\n    var viewTheme = this.viewTheme || Global;\n    var type = this.get('type');\n    var shapes = viewTheme.shapes[type] || [];\n\n    this._createAttrOption('shape', field, values, shapes);\n\n    return this;\n  };\n  /**\n   * 透明度属性映射\n   * @chainable\n   * @param  {String} field 字段名\n   * @param  {Array|Function} values 透明度的数组或者回调函数\n   * @return {Geom} geom 当前几何标记\n   */\n\n\n  _proto.opacity = function opacity(field, values) {\n    var viewTheme = this.viewTheme || Global;\n\n    this._createAttrOption('opacity', field, values, viewTheme.opacities);\n\n    return this;\n  };\n\n  _proto.style = function style(field, cfg) {\n    var styleOptions = this.get('styleOptions');\n\n    if (!styleOptions) {\n      styleOptions = {};\n      this.set('styleOptions', styleOptions);\n    }\n\n    if (Util.isObject(field)) {\n      cfg = field;\n      field = null;\n    }\n\n    var fields;\n\n    if (field) {\n      fields = parseFields(field);\n    }\n\n    styleOptions.fields = fields;\n    styleOptions.style = cfg;\n    return this;\n  };\n\n  _proto.label = function label(field, callback, cfg) {\n    var self = this;\n    var labelCfg = self.get('labelCfg'); // const scales = Util.map(self.get('labelCfg').fields, field => self._createScale(field));\n\n    if (!labelCfg) {\n      labelCfg = {};\n      self.set('labelCfg', labelCfg);\n    }\n\n    var fields;\n\n    if (field) {\n      fields = parseFields(field);\n    }\n\n    labelCfg.fields = fields; // 如果存在回调函数\n\n    if (Util.isFunction(callback)) {\n      if (!cfg) {\n        cfg = {};\n      }\n\n      labelCfg.callback = callback;\n    } else if (Util.isObject(callback)) {\n      // 如果没有设置回调函数\n      cfg = callback;\n    }\n\n    labelCfg.globalCfg = cfg;\n    return this;\n  };\n\n  _proto.tooltip = function tooltip(field, cfg) {\n    var tooltipCfg = this.get('tooltipCfg');\n\n    if (!tooltipCfg) {\n      tooltipCfg = {};\n    }\n\n    if (field === false) {\n      // geom 关闭 tooltip\n      this.set('tooltipCfg', false);\n    } else {\n      var tooltipFields;\n\n      if (field) {\n        tooltipFields = parseFields(field);\n      }\n\n      tooltipCfg.fields = tooltipFields;\n      tooltipCfg.cfg = cfg;\n    }\n\n    this.set('tooltipCfg', tooltipCfg);\n    return this;\n  };\n\n  _proto.animate = function animate(cfg) {\n    this.set('animateCfg', cfg);\n    return this;\n  };\n  /**\n   * 是否允许使用默认的图形激活交互\n   * @param  {Boolean} enable 是否允许激活开关\n   * @param {Object} cfg 激活的配置项\n   * @return {Geom}    返回 geom 自身\n   */\n\n\n  _proto.active = function active(enable, cfg) {\n    if (enable === false) {\n      this.set('allowActive', false);\n    } else if (Util.isObject(enable)) {\n      this.set('allowActive', true);\n      this.set('activedOptions', enable);\n    } else {\n      this.set('allowActive', true);\n      this.set('activedOptions', cfg);\n    }\n\n    return this;\n  };\n  /**\n   * 对 geometry 进行数据调整\n   * @chainable\n   * @param  {String|Array|null} adjusts 数据调整的类型\n   * @return {Object} geometry 对象\n   */\n\n\n  _proto.adjust = function adjust(adjusts) {\n    if (!this.get('hasDefaultAdjust')) {\n      if (adjusts) {\n        adjusts = parseAdjusts(adjusts);\n      }\n\n      this.set('adjusts', adjusts);\n    }\n\n    return this;\n  };\n  /**\n   * 设置图形的选中模式\n   * @param  {Boolean|Object} enable 布尔类型用于模式开关，对象类型用于配置\n   * @param  {Object} cfg    选中配置项\n   * @return {Geom}          返回 geom 自身\n   */\n\n\n  _proto.select = function select(enable, cfg) {\n    if (enable === false) {\n      this.set('allowSelect', false);\n    } else if (Util.isObject(enable)) {\n      this.set('allowSelect', true);\n      this.set('selectedOptions', enable);\n    } else {\n      this.set('allowSelect', true);\n      this.set('selectedOptions', cfg);\n    }\n\n    return this;\n  };\n\n  _proto.hasAdjust = function hasAdjust(adjustType) {\n    var self = this;\n    var adjusts = self.get('adjusts');\n\n    if (!adjustType) {\n      return false;\n    }\n\n    var rst = false;\n    Util.each(adjusts, function (adjust) {\n      if (adjust.type === adjustType) {\n        rst = true;\n        return false;\n      }\n    });\n    return rst;\n  };\n\n  _proto.hasStack = function hasStack() {\n    var isStacked = this.get('isStacked');\n\n    if (Util.isNil(isStacked)) {\n      isStacked = this.hasAdjust('stack');\n      this.set('isStacked', isStacked);\n    }\n\n    return isStacked;\n  };\n\n  _proto.isInCircle = function isInCircle() {\n    var coord = this.get('coord');\n    return coord && coord.isPolar;\n  };\n\n  _proto._initContainer = function _initContainer() {\n    var self = this;\n    var shapeContainer = self.get('shapeContainer');\n\n    if (!shapeContainer) {\n      var container = self.get('container');\n      var view = self.get('view');\n      var viewId = view && view.get('_id');\n      shapeContainer = container.addGroup({\n        viewId: viewId,\n        visible: self.get('visible')\n      });\n      self.set('shapeContainer', shapeContainer);\n    }\n  };\n\n  _proto.init = function init() {\n    var self = this;\n\n    self._initContainer();\n\n    self._initAttrs();\n\n    if (self.get('tooltipCfg') && self.get('tooltipCfg').fields) {\n      var tooltipFields = self.get('tooltipCfg').fields;\n      Util.each(tooltipFields, function (field) {\n        self._createScale(field);\n      });\n    }\n\n    var dataArray = self._processData();\n\n    if (self.get('adjusts')) {\n      self._adjust(dataArray);\n    }\n\n    self.set('dataArray', dataArray);\n  }; // step 1: init attrs\n\n\n  _proto._initAttrs = function _initAttrs() {\n    var self = this;\n    var attrs = self.get('attrs');\n    var attrOptions = self.get('attrOptions');\n    var coord = self.get('coord');\n    var viewTheme = self.viewTheme || Global;\n    var isPie = false;\n\n    for (var type in attrOptions) {\n      if (attrOptions.hasOwnProperty(type)) {\n        var option = attrOptions[type];\n        var className = Util.upperFirst(type);\n        var fields = parseFields(option.field);\n\n        if (type === 'position') {\n          option.coord = coord; // 饼图坐标系下，填充一维\n\n          if (fields.length === 1 && coord.type === 'theta') {\n            fields.unshift('1');\n            isPie = true;\n          }\n        }\n\n        var scales = [];\n\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n\n          var scale = self._createScale(field);\n\n          if (type === 'color' && Util.isNil(option.values)) {\n            // 设置 color 的默认色值\n            if (scale.values.length <= 8) {\n              option.values = isPie ? viewTheme.colors_pie : viewTheme.colors;\n            } else if (scale.values.length <= 16) {\n              option.values = isPie ? viewTheme.colors_pie_16 : viewTheme.colors_16;\n            } else {\n              option.values = viewTheme.colors_24;\n            }\n\n            if (Util.isNil(option.values)) {\n              option.values = viewTheme.colors; // 防止主题没有声明诸如 colors_pie 的属性\n            }\n          }\n\n          scales.push(scale);\n        } // 饼图需要填充满整个空间\n\n\n        if (coord.type === 'theta' && type === 'position' && scales.length > 1) {\n          var yScale = scales[1];\n          yScale.change({\n            nice: false,\n            min: 0,\n            max: Math.max.apply(null, yScale.values)\n          });\n        }\n\n        option.scales = scales;\n        var attr = new Attr[className](option);\n        attrs[type] = attr;\n      }\n    }\n  }; // step 2: 处理数据\n\n\n  _proto._processData = function _processData() {\n    var self = this;\n    var data = this.get('data');\n    var dataArray = [];\n\n    var groupedArray = this._groupData(data);\n\n    for (var i = 0; i < groupedArray.length; i++) {\n      var subData = groupedArray[i];\n\n      var tempData = self._saveOrigin(subData);\n\n      self._numberic(tempData);\n\n      dataArray.push(tempData);\n    }\n\n    return dataArray;\n  }; // step 2.1 数据分组\n\n\n  _proto._groupData = function _groupData(data) {\n    var groupScales = this._getGroupScales();\n\n    var fields = groupScales.map(function (scale) {\n      return scale.field;\n    });\n    return Util.Array.group(data, fields);\n  }; // step 2.2 数据调整前保存原始数据\n\n\n  _proto._saveOrigin = function _saveOrigin(data) {\n    var rst = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var origin = data[i];\n      var obj = {};\n\n      for (var k in origin) {\n        obj[k] = origin[k];\n      } // const obj = Util.mix({}, origin);\n\n\n      obj[FIELD_ORIGIN] = origin;\n      rst.push(obj);\n    }\n\n    return rst;\n  }; // step 2.3 将分类数据翻译成数据, 仅对位置相关的度量进行数字化处理\n\n\n  _proto._numberic = function _numberic(data) {\n    var positionAttr = this.getAttr('position');\n    var scales = positionAttr.scales;\n\n    for (var j = 0; j < data.length; j++) {\n      var obj = data[j];\n\n      for (var i = 0; i < Math.min(2, scales.length); i++) {\n        var scale = scales[i];\n\n        if (scale.isCategory) {\n          var field = scale.field;\n          obj[field] = scale.translate(obj[field]);\n        }\n      }\n    }\n  };\n\n  _proto._getGroupScales = function _getGroupScales() {\n    var self = this;\n    var scales = self.get('groupScales');\n\n    if (!scales) {\n      scales = [];\n      var attrs = self.get('attrs');\n      Util.each(attrs, function (attr) {\n        if (GROUP_ATTRS.indexOf(attr.type) !== -1) {\n          var attrScales = attr.scales;\n          Util.each(attrScales, function (scale) {\n            if (scale.isCategory && Util.indexOf(scales, scale) === -1) {\n              scales.push(scale);\n            }\n          });\n        }\n      });\n      self.set('groupScales', scales);\n    }\n\n    return scales;\n  };\n\n  _proto._updateStackRange = function _updateStackRange(field, scale, dataArray) {\n    var mergeArray = Util.Array.merge(dataArray);\n    var min = scale.min;\n    var max = scale.max;\n\n    for (var i = 0; i < mergeArray.length; i++) {\n      var obj = mergeArray[i];\n      var tmpMin = Math.min.apply(null, obj[field]);\n      var tmpMax = Math.max.apply(null, obj[field]);\n\n      if (tmpMin < min) {\n        min = tmpMin;\n      }\n\n      if (tmpMax > max) {\n        max = tmpMax;\n      }\n    }\n\n    if (min < scale.min || max > scale.max) {\n      scale.change({\n        min: min,\n        max: max\n      });\n    }\n  }; // step 2.2 调整数据\n\n\n  _proto._adjust = function _adjust(dataArray) {\n    var self = this;\n    var adjusts = self.get('adjusts');\n    var viewTheme = this.viewTheme || Global;\n    var yScale = self.getYScale();\n    var xScale = self.getXScale();\n    var xField = xScale.field;\n    var yField = yScale ? yScale.field : null;\n    Util.each(adjusts, function (adjust) {\n      var adjustCfg = Util.mix({\n        xField: xField,\n        yField: yField\n      }, adjust);\n      var adjustType = Util.upperFirst(adjust.type);\n\n      if (adjustType === 'Dodge') {\n        var adjustNames = [];\n\n        if (xScale.isCategory || xScale.isIdentity) {\n          adjustNames.push('x');\n        } else if (!yScale) {\n          adjustNames.push('y');\n        } else {\n          throw new Error('dodge is not support linear attribute, please use category attribute!');\n        }\n\n        adjustCfg.adjustNames = adjustNames;\n        adjustCfg.dodgeRatio = viewTheme.widthRatio.column;\n        /* if (self.isInCircle()) {\n          adjustCfg.dodgeRatio = 1;\n          adjustCfg.marginRatio = 0;\n        }*/\n      } else if (adjustType === 'Stack') {\n        var coord = self.get('coord');\n\n        if (!yScale) {\n          // 一维的情况下获取高度和默认size\n          adjustCfg.height = coord.getHeight();\n          var size = self.getDefaultValue('size') || 3;\n          adjustCfg.size = size;\n        } // 不进行 transpose 时，用户又没有设置这个参数时，默认从上向下\n\n\n        if (!coord.isTransposed && Util.isNil(adjustCfg.reverseOrder)) {\n          adjustCfg.reverseOrder = true;\n        }\n      }\n\n      var adjustElement = new Adjust[adjustType](adjustCfg);\n      adjustElement.processAdjust(dataArray);\n\n      if (adjustType === 'Stack' && yScale) {\n        self._updateStackRange(yField, yScale, dataArray);\n      }\n    });\n  };\n  /**\n   * @internal 设置coord，通常外部容器变化时，coord 会发生变化\n   * @param {Object} coord 坐标系\n   */\n\n\n  _proto.setCoord = function setCoord(coord) {\n    this.set('coord', coord);\n    var position = this.getAttr('position');\n    var shapeContainer = this.get('shapeContainer');\n    shapeContainer.setMatrix(coord.matrix);\n\n    if (position) {\n      position.coord = coord;\n    }\n  }; // step 3 绘制\n\n\n  _proto.paint = function paint() {\n    var self = this;\n    var dataArray = self.get('dataArray');\n    var mappedArray = [];\n    var shapeFactory = self.getShapeFactory();\n    shapeFactory.setCoord(self.get('coord'));\n    self.set('shapeFactory', shapeFactory);\n    var shapeContainer = self.get('shapeContainer');\n\n    self._beforeMapping(dataArray);\n\n    for (var i = 0; i < dataArray.length; i++) {\n      var data = dataArray[i];\n      var index = i;\n      data = self._mapping(data);\n      mappedArray.push(data);\n      self.draw(data, shapeContainer, shapeFactory, index);\n    }\n\n    if (self.get('labelCfg')) {\n      self._addLabels(Util.union.apply(null, mappedArray), shapeContainer.get('children'));\n    }\n\n    if (!self.get('sortable')) {\n      self._sort(mappedArray); // 便于数据的查找，需要对数据进行排序，用于 geom.findPoint()\n\n    } else {\n      self.set('dataArray', mappedArray);\n    }\n  };\n\n  _proto._sort = function _sort(mappedArray) {\n    var self = this;\n    var xScale = self.getXScale();\n    var xField = xScale.field;\n    Util.each(mappedArray, function (itemArr) {\n      itemArr.sort(function (obj1, obj2) {\n        return xScale.translate(obj1[FIELD_ORIGIN][xField]) - xScale.translate(obj2[FIELD_ORIGIN][xField]);\n      });\n    });\n    self.set('dataArray', mappedArray);\n  }; // step 3.1 before mapping\n\n\n  _proto._beforeMapping = function _beforeMapping(dataArray) {\n    var self = this;\n\n    if (self.get('sortable')) {\n      var xScale = self.getXScale();\n      var field = xScale.field;\n      Util.each(dataArray, function (data) {\n        data.sort(function (v1, v2) {\n          return xScale.translate(v1[field]) - xScale.translate(v2[field]);\n        });\n      });\n    }\n\n    if (self.get('generatePoints')) {\n      Util.each(dataArray, function (data) {\n        self._generatePoints(data);\n      });\n      Util.each(dataArray, function (data, index) {\n        var nextData = dataArray[index + 1];\n\n        if (nextData) {\n          data[0].nextPoints = nextData[0].points;\n        }\n      });\n    }\n  }; // step 3.2 add labels\n\n\n  _proto._addLabels = function _addLabels(points, shapes) {\n    var self = this;\n    var type = self.get('type');\n    var viewTheme = self.get('viewTheme') || Global;\n    var coord = self.get('coord');\n    var C = Labels.getLabelsClass(coord.type, type);\n    var container = self.get('container');\n    var scales = Util.map(self.get('labelCfg').fields, function (field) {\n      return self._createScale(field);\n    });\n    var labelContainer = container.addGroup(C, {\n      _id: this.get('_id'),\n      labelCfg: Util.mix({\n        scales: scales\n      }, self.get('labelCfg')),\n      coord: coord,\n      geom: self,\n      geomType: type,\n      viewTheme: viewTheme,\n      visible: self.get('visible')\n    });\n    labelContainer.showLabels(points, shapes);\n    self.set('labelContainer', labelContainer);\n  };\n  /**\n   * @protected\n   * 获取图形的工厂类\n   * @return {Object} 工厂类对象\n   */\n\n\n  _proto.getShapeFactory = function getShapeFactory() {\n    var shapeFactory = this.get('shapeFactory');\n\n    if (!shapeFactory) {\n      var shapeType = this.get('shapeType');\n      shapeFactory = Shape.getShapeFactory(shapeType);\n      this.set('shapeFactory', shapeFactory);\n    }\n\n    return shapeFactory;\n  }; // step 3.2 generate points\n\n\n  _proto._generatePoints = function _generatePoints(data) {\n    var self = this;\n    var shapeFactory = self.getShapeFactory();\n    var shapeAttr = self.getAttr('shape');\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i];\n      var cfg = self.createShapePointsCfg(obj);\n      var shape = shapeAttr ? self._getAttrValues(shapeAttr, obj) : null;\n      var points = shapeFactory.getShapePoints(shape, cfg);\n      obj.points = points;\n    }\n  };\n  /**\n   * 获取图形对应点的配置项\n   * @protected\n   * @param  {Object} obj 数据对象\n   * @return {Object} cfg 获取图形对应点的配置项\n   */\n\n\n  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {\n    var xScale = this.getXScale();\n    var yScale = this.getYScale();\n\n    var x = this._normalizeValues(obj[xScale.field], xScale);\n\n    var y; // 存在没有 y 的情况\n\n    if (yScale) {\n      y = this._normalizeValues(obj[yScale.field], yScale);\n    } else {\n      y = obj.y ? obj.y : 0.1;\n    }\n\n    return {\n      x: x,\n      y: y,\n      y0: yScale ? yScale.scale(this.getYMinValue()) : undefined\n    };\n  };\n  /**\n   * @protected\n   * 如果y轴的最小值小于0则返回0，否则返回最小值\n   * @return {Number} y轴上的最小值\n   */\n\n\n  _proto.getYMinValue = function getYMinValue() {\n    var yScale = this.getYScale();\n    var min = yScale.min,\n        max = yScale.max;\n    var value;\n\n    if (min >= 0) {\n      value = min;\n    } else if (max <= 0) {\n      // 当值全位于负区间时，需要保证 ymin 在区域内，不可为 0\n      value = max;\n    } else {\n      value = 0;\n    }\n\n    return value;\n  }; // 将数据归一化\n\n\n  _proto._normalizeValues = function _normalizeValues(values, scale) {\n    var rst = [];\n\n    if (Util.isArray(values)) {\n      for (var i = 0; i < values.length; i++) {\n        var v = values[i];\n        rst.push(scale.scale(v));\n      }\n    } else {\n      rst = scale.scale(values);\n    }\n\n    return rst;\n  }; // step 3.2 mapping\n\n\n  _proto._mapping = function _mapping(data) {\n    var self = this;\n    var attrs = self.get('attrs');\n    var mappedData = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var record = data[i];\n      var newRecord = {};\n      newRecord[FIELD_ORIGIN] = record[FIELD_ORIGIN];\n      newRecord.points = record.points;\n      newRecord.nextPoints = record.nextPoints;\n\n      for (var k in attrs) {\n        if (attrs.hasOwnProperty(k)) {\n          var attr = attrs[k];\n          var names = attr.names;\n\n          var values = self._getAttrValues(attr, record);\n\n          if (names.length > 1) {\n            // position 之类的生成多个字段的属性\n            for (var j = 0; j < values.length; j++) {\n              var val = values[j];\n              var name = names[j];\n              newRecord[name] = Util.isArray(val) && val.length === 1 ? val[0] : val; // 只有一个值时返回第一个属性值\n            }\n          } else {\n            newRecord[names[0]] = values.length === 1 ? values[0] : values;\n          }\n        }\n      }\n\n      mappedData.push(newRecord);\n    }\n\n    return mappedData;\n  }; // 获取属性映射的值\n\n\n  _proto._getAttrValues = function _getAttrValues(attr, record) {\n    var scales = attr.scales;\n    var params = [];\n\n    for (var i = 0; i < scales.length; i++) {\n      var scale = scales[i];\n      var field = scale.field;\n\n      if (scale.type === 'identity') {\n        params.push(scale.value);\n      } else {\n        params.push(record[field]);\n      }\n    }\n\n    var values = attr.mapping.apply(attr, params);\n    return values;\n  };\n\n  _proto.getAttrValue = function getAttrValue(attrName, record) {\n    var attr = this.getAttr(attrName);\n    var rst = null;\n\n    if (attr) {\n      var values = this._getAttrValues(attr, record);\n\n      rst = values[0];\n    }\n\n    return rst;\n  };\n\n  _proto.getDefaultValue = function getDefaultValue(attrName) {\n    var value = this.get(attrName);\n    var attr = this.getAttr(attrName);\n\n    if (attr) {\n      var scale = attr.getScale(attrName);\n\n      if (scale.type === 'identity') {\n        value = scale.value;\n      }\n    }\n\n    return value;\n  };\n  /**\n   * step 3.3 draw\n   * @protected\n   * @param  {Array} data 绘制图形\n   * @param {Object} container 绘图容器\n   * @param {Object} shapeFactory 绘制图形的工厂类\n   * @param {Number} index 每个 shape 的索引值\n   */\n\n\n  _proto.draw = function draw(data, container, shapeFactory, index) {\n    var self = this;\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i];\n      self.drawPoint(obj, container, shapeFactory, index + i);\n    }\n  };\n\n  _proto.getCallbackCfg = function getCallbackCfg(fields, cfg, origin) {\n    if (!fields) {\n      return cfg;\n    }\n\n    var tmpCfg = {};\n    var params = fields.map(function (field) {\n      return origin[field];\n    });\n    Util.each(cfg, function (v, k) {\n      if (Util.isFunction(v)) {\n        tmpCfg[k] = v.apply(null, params);\n      } else {\n        tmpCfg[k] = v;\n      }\n    });\n    return tmpCfg;\n  };\n\n  _proto._getShapeId = function _getShapeId(dataObj) {\n    var id = this.get('_id');\n    var keyFields = this.get('keyFields');\n\n    if (keyFields && keyFields.length > 0) {\n      Util.each(keyFields, function (key) {\n        id += '-' + dataObj[key];\n      });\n    } else {\n      var type = this.get('type');\n      var xScale = this.getXScale();\n      var yScale = this.getYScale();\n      var xField = xScale.field || 'x';\n      var yField = yScale.field || 'y';\n      var yVal = dataObj[yField];\n      var xVal;\n\n      if (xScale.isIdentity) {\n        xVal = xScale.value;\n      } else {\n        xVal = dataObj[xField];\n      }\n\n      if (type === 'interval' || type === 'schema') {\n        id += '-' + xVal;\n      } else if (type === 'line' || type === 'area' || type === 'path') {\n        id += '-' + type;\n      } else {\n        id += '-' + xVal + '-' + yVal;\n      }\n\n      var groupScales = this._getGroupScales();\n\n      if (!Util.isEmpty(groupScales)) {\n        Util.each(groupScales, function (groupScale) {\n          var field = groupScale.field;\n\n          if (groupScale.type !== 'identity') {\n            id += '-' + dataObj[field];\n          }\n        });\n      }\n    }\n\n    return id;\n  };\n\n  _proto.getDrawCfg = function getDrawCfg(obj) {\n    var self = this;\n    var cfg = {\n      origin: obj,\n      x: obj.x,\n      y: obj.y,\n      color: obj.color,\n      size: obj.size,\n      shape: obj.shape,\n      isInCircle: self.isInCircle(),\n      opacity: obj.opacity\n    };\n    var styleOptions = self.get('styleOptions');\n\n    if (styleOptions && styleOptions.style) {\n      cfg.style = self.getCallbackCfg(styleOptions.fields, styleOptions.style, obj[FIELD_ORIGIN]);\n    }\n\n    if (self.get('generatePoints')) {\n      cfg.points = obj.points;\n      cfg.nextPoints = obj.nextPoints;\n    }\n\n    if (self.get('animate')) {\n      // _id 字段仅用于动画\n      cfg._id = self._getShapeId(obj[FIELD_ORIGIN]);\n    }\n\n    return cfg;\n  };\n\n  _proto.appendShapeInfo = function appendShapeInfo(shape, index) {\n    if (shape) {\n      shape.setSilent('index', index);\n      shape.setSilent('coord', this.get('coord'));\n\n      if (this.get('animate') && this.get('animateCfg')) {\n        shape.setSilent('animateCfg', this.get('animateCfg'));\n      }\n    }\n  };\n\n  _proto._applyViewThemeShapeStyle = function _applyViewThemeShapeStyle(cfg, shape, shapeFactory) {\n    // applying view theme\n    var self = this;\n    var viewTheme = self.viewTheme || Global;\n    var shapeName = shapeFactory.name;\n\n    if (shape) {\n      if (shape && (shape.indexOf('hollow') > -1 || shape.indexOf('liquid') > -1)) {\n        shapeName = \"hollow\" + Util.upperFirst(shapeName);\n      }\n    } else if (shapeFactory.defaultShapeType.indexOf('hollow') > -1) {\n      shapeName = \"hollow\" + Util.upperFirst(shapeName);\n    }\n\n    var defaultStyle = viewTheme.shape[shapeName] || {};\n    cfg.style = Util.mix({}, defaultStyle, cfg.style);\n  };\n\n  _proto.drawPoint = function drawPoint(obj, container, shapeFactory, index) {\n    var self = this;\n    var shape = obj.shape;\n    var cfg = self.getDrawCfg(obj);\n\n    self._applyViewThemeShapeStyle(cfg, shape, shapeFactory);\n\n    var geomShape = shapeFactory.drawShape(shape, cfg, container);\n    self.appendShapeInfo(geomShape, index);\n  };\n  /**\n   * 获取属性\n   * @protected\n   * @param {String} name 属性名\n   * @return {Scale} 度量\n   */\n\n\n  _proto.getAttr = function getAttr(name) {\n    return this.get('attrs')[name];\n  };\n  /**\n   * 获取 x 对应的度量\n   * @return {Scale} x 对应的度量\n   */\n\n\n  _proto.getXScale = function getXScale() {\n    return this.getAttr('position').scales[0];\n  };\n  /**\n   * 获取 y 对应的度量\n   * @return {Scale} y 对应的度量\n   */\n\n\n  _proto.getYScale = function getYScale() {\n    return this.getAttr('position').scales[1];\n  };\n\n  _proto.getShapes = function getShapes() {\n    var result = [];\n    var shapeContainer = this.get('shapeContainer');\n    var children = shapeContainer.get('children');\n    Util.each(children, function (child) {\n      if (child.get('origin')) {\n        // 过滤 label\n        result.push(child);\n      }\n    });\n    return result;\n  };\n\n  _proto.getAttrsForLegend = function getAttrsForLegend() {\n    var attrs = this.get('attrs');\n    var rst = [];\n    Util.each(attrs, function (attr) {\n      if (GROUP_ATTRS.indexOf(attr.type) !== -1) {\n        rst.push(attr);\n      }\n    });\n    return rst;\n  };\n\n  _proto.getFieldsForLegend = function getFieldsForLegend() {\n    var fields = [];\n    var attrOptions = this.get('attrOptions');\n    Util.each(GROUP_ATTRS, function (attrName) {\n      var attrCfg = attrOptions[attrName];\n\n      if (attrCfg && attrCfg.field && Util.isString(attrCfg.field)) {\n        fields = fields.concat(attrCfg.field.split('*'));\n      }\n    });\n    return Util.uniq(fields);\n  };\n\n  _proto.changeVisible = function changeVisible(visible, stopDraw) {\n    var me = this;\n    me.set('visible', visible);\n    var shapeContainer = this.get('shapeContainer');\n\n    if (shapeContainer) {\n      shapeContainer.set('visible', visible);\n    }\n\n    var labelContainer = this.get('labelContainer');\n\n    if (labelContainer) {\n      labelContainer.set('visible', visible);\n    }\n\n    if (!stopDraw && shapeContainer) {\n      var canvas = shapeContainer.get('canvas');\n      canvas.draw();\n    }\n  };\n\n  _proto.reset = function reset() {\n    this.set('attrOptions', {});\n    this.clearInner();\n  };\n\n  _proto.clearInner = function clearInner() {\n    this.clearActivedShapes();\n    this.clearSelected();\n    var shapeContainer = this.get('shapeContainer');\n    shapeContainer && shapeContainer.clear(); // 由于 Labels 对应的模块需要生成group，所以这个地方需要删除\n\n    var labelContainer = this.get('labelContainer');\n    labelContainer && labelContainer.remove();\n    this.set('attrs', {});\n    this.set('groupScales', null); // if (!this.get('hasDefaultAdjust')) {\n    //   this.set('adjusts', null);\n    // }\n\n    this.set('labelContainer', null);\n    this.set('xDistance', null);\n    this.set('isStacked', null);\n  };\n\n  _proto.clear = function clear() {\n    this.clearInner();\n    this.set('scales', {});\n  };\n\n  _proto.destroy = function destroy() {\n    this.clear();\n    var shapeContainer = this.get('shapeContainer');\n    shapeContainer && shapeContainer.remove();\n    this.offEvents();\n\n    _Base.prototype.destroy.call(this);\n  };\n\n  _proto.bindEvents = function bindEvents() {\n    if (this.get('view')) {\n      this._bindActiveAction();\n\n      this._bindSelectedAction();\n    }\n  };\n\n  _proto.offEvents = function offEvents() {\n    if (this.get('view')) {\n      this._offActiveAction();\n\n      this._offSelectedAction();\n    }\n  };\n\n  return GeomBase;\n}(Base);\n\nmodule.exports = GeomBase;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Axis: __webpack_require__(306),\n  Component: __webpack_require__(66),\n  Guide: __webpack_require__(314),\n  Label: __webpack_require__(323),\n  Legend: __webpack_require__(324),\n  Tooltip: __webpack_require__(330)\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 计算path 使用的工具方法\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Spline = __webpack_require__(334);\n\nfunction points2path(points, isInCircle) {\n  if (!points.length) {\n    return [];\n  }\n\n  var path = [];\n\n  for (var i = 0, length = points.length; i < length; i++) {\n    var item = points[i];\n\n    if (i === 0) {\n      path.push(['M', item.x, item.y]);\n    } else {\n      path.push(['L', item.x, item.y]);\n    }\n  }\n\n  if (isInCircle) {\n    path.push(['Z']);\n  }\n\n  return path;\n}\n\nfunction _getPointRadius(coord, point) {\n  var center = coord.getCenter();\n  var r = Math.sqrt(Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2));\n  return r;\n}\n\nfunction convertArr(arr, coord) {\n  var len = arr.length;\n  var tmp = [arr[0]];\n\n  for (var i = 1; i < len; i = i + 2) {\n    var point = coord.convertPoint({\n      x: arr[i],\n      y: arr[i + 1]\n    });\n    tmp.push(point.x, point.y);\n  }\n\n  return tmp;\n}\n\nfunction _convertPolarPath(pre, cur, coord) {\n  // const radius = coord.getRadius();\n  // const inner = coord.innerRadius || 0;\n  // let innerRadius = inner * radius;\n  var transposed = coord.isTransposed;\n  var startAngle = coord.startAngle;\n  var endAngle = coord.endAngle;\n  var prePoint = {\n    x: pre[1],\n    y: pre[2]\n  };\n  var curPoint = {\n    x: cur[1],\n    y: cur[2]\n  };\n  var rst = []; // innerRadius = innerRadius || 0;\n\n  var xDim = transposed ? 'y' : 'x';\n  var angleRange = Math.abs(curPoint[xDim] - prePoint[xDim]) * (endAngle - startAngle);\n  var direction = curPoint[xDim] >= prePoint[xDim] ? 1 : 0; // 圆弧的方向\n\n  var flag = angleRange > Math.PI ? 1 : 0; // 大弧还是小弧标志位\n\n  var convertPoint = coord.convertPoint(curPoint);\n\n  var r = _getPointRadius(coord, convertPoint);\n\n  if (r >= 0.5) {\n    // 小于1像素的圆在图像上无法识别\n    if (angleRange === Math.PI * 2) {\n      var middlePoint = {\n        x: (curPoint.x + prePoint.x) / 2,\n        y: (curPoint.y + prePoint.y) / 2\n      };\n      var middleConvertPoint = coord.convertPoint(middlePoint);\n      rst.push(['A', r, r, 0, flag, direction, middleConvertPoint.x, middleConvertPoint.y]);\n      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);\n    } else {\n      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);\n    }\n  }\n\n  return rst;\n} // 当存在整体的圆时，去除圆前面和后面的线，防止出现直线穿过整个圆的情形\n\n\nfunction filterFullCirleLine(path) {\n  Util.each(path, function (subPath, index) {\n    var cur = subPath;\n\n    if (cur[0].toLowerCase() === 'a') {\n      var pre = path[index - 1];\n      var next = path[index + 1];\n\n      if (next && next[0].toLowerCase() === 'a') {\n        if (pre && pre[0].toLowerCase() === 'l') {\n          pre[0] = 'M';\n        }\n      } else if (pre && pre[0].toLowerCase() === 'a') {\n        if (next && next[0].toLowerCase() === 'l') {\n          next[0] = 'M';\n        }\n      }\n    }\n  });\n}\n\nvar PathUtil = {\n  // 线的path\n  getLinePath: function getLinePath(points, isInCircle) {\n    return points2path(points, isInCircle);\n  },\n  // get spline： 限定了范围的平滑线\n  getSplinePath: function getSplinePath(points, isInCircle, constaint) {\n    var data = [];\n    var first = points[0];\n    var prePoint = null;\n\n    if (points.length <= 2) {\n      return PathUtil.getLinePath(points, isInCircle);\n    }\n\n    Util.each(points, function (point) {\n      if (!prePoint || !(prePoint.x === point.x && prePoint.y === point.y)) {\n        data.push(point.x);\n        data.push(point.y);\n        prePoint = point;\n      }\n    });\n    constaint = constaint || [// 范围\n    [0, 0], [1, 1]];\n    var splinePath = Spline.catmullRom2bezier(data, isInCircle, constaint);\n    splinePath.unshift(['M', first.x, first.y]);\n    return splinePath;\n  },\n  getPointRadius: function getPointRadius(coord, point) {\n    var result = _getPointRadius(coord, point);\n\n    return result;\n  },\n  getPointAngle: function getPointAngle(coord, point) {\n    var center = coord.getCenter();\n    var angle = Math.atan2(point.y - center.y, point.x - center.x);\n    return angle;\n  },\n  convertNormalPath: function convertNormalPath(coord, path) {\n    var tmp = [];\n    Util.each(path, function (subPath) {\n      var action = subPath[0];\n\n      switch (action.toLowerCase()) {\n        case 'm':\n        case 'l':\n        case 'c':\n          tmp.push(convertArr(subPath, coord));\n          break;\n\n        case 'z':\n        default:\n          tmp.push(subPath);\n          break;\n      }\n    });\n    return tmp;\n  },\n  convertPolarPath: function convertPolarPath(coord, path) {\n    var tmp = [];\n    var pre;\n    var cur;\n    var transposed;\n    var equals;\n    Util.each(path, function (subPath, index) {\n      var action = subPath[0];\n\n      switch (action.toLowerCase()) {\n        case 'm':\n        case 'c':\n        case 'q':\n          tmp.push(convertArr(subPath, coord));\n          break;\n\n        case 'l':\n          pre = path[index - 1];\n          cur = subPath;\n          transposed = coord.isTransposed; // 是否半径相同，转换成圆弧\n\n          equals = transposed ? pre[pre.length - 2] === cur[1] : pre[pre.length - 1] === cur[2];\n\n          if (equals) {\n            tmp = tmp.concat(_convertPolarPath(pre, cur, coord));\n          } else {\n            // y 不相等，所以直接转换\n            tmp.push(convertArr(subPath, coord));\n          }\n\n          break;\n\n        case 'z':\n        default:\n          tmp.push(subPath);\n          break;\n      }\n    });\n    filterFullCirleLine(tmp); // 过滤多余的直线\n\n    return tmp;\n  }\n};\nmodule.exports = PathUtil;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNil = __webpack_require__(5);\n\nfunction toString(value) {\n  if (isNil(value)) return '';\n  return value.toString();\n}\n\nmodule.exports = toString;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(value) {\n  /**\n   * isObject({}) => true\n   * isObject([1, 2, 3]) => true\n   * isObject(Function) => true\n   * isObject(null) => false\n   */\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return value !== null && type === 'object' || type === 'function';\n};\n\nmodule.exports = isObject;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Canvas: __webpack_require__(181),\n  Group: __webpack_require__(101),\n  Shape: __webpack_require__(6),\n  Arc: __webpack_require__(105),\n  Circle: __webpack_require__(106),\n  Dom: __webpack_require__(107),\n  Ellipse: __webpack_require__(108),\n  Fan: __webpack_require__(109),\n  Image: __webpack_require__(110),\n  Line: __webpack_require__(111),\n  Marker: __webpack_require__(56),\n  Path: __webpack_require__(112),\n  Polygon: __webpack_require__(113),\n  Polyline: __webpack_require__(114),\n  Rect: __webpack_require__(115),\n  Text: __webpack_require__(116),\n  PathSegment: __webpack_require__(39),\n  PathUtil: __webpack_require__(57),\n  Event: __webpack_require__(100),\n  // version, etc.\n  version: '3.3.5'\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObjectLike = __webpack_require__(48);\n\nvar isType = __webpack_require__(12);\n\nvar isPlainObject = function isPlainObject(value) {\n  /**\n   * isObjectLike(new Foo) => false\n   * isObjectLike([1, 2, 3]) => false\n   * isObjectLike({ x: 0, y: 0 }) => true\n   * isObjectLike(Object.create(null)) => true\n   */\n  if (!isObjectLike(value) || !isType(value, 'Object')) {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n};\n\nmodule.exports = isPlainObject;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\nmodule.exports = {\n  parseRadius: function parseRadius(radius) {\n    var r1 = 0,\n        r2 = 0,\n        r3 = 0,\n        r4 = 0;\n\n    if (Util.isArray(radius)) {\n      if (radius.length === 1) {\n        r1 = r2 = r3 = r4 = radius[0];\n      } else if (radius.length === 2) {\n        r1 = r3 = radius[0];\n        r2 = r4 = radius[1];\n      } else if (radius.length === 3) {\n        r1 = radius[0];\n        r2 = r4 = radius[1];\n        r3 = radius[2];\n      } else {\n        r1 = radius[0];\n        r2 = radius[1];\n        r3 = radius[2];\n        r4 = radius[3];\n      }\n    } else {\n      r1 = r2 = r3 = r4 = radius;\n    }\n\n    return {\n      r1: r1,\n      r2: r2,\n      r3: r3,\n      r4: r4\n    };\n  },\n  parsePath: function parsePath(path) {\n    path = path || [];\n\n    if (Util.isArray(path)) {\n      return path;\n    }\n\n    if (Util.isString(path)) {\n      path = path.match(regexTags);\n      Util.each(path, function (item, index) {\n        item = item.match(regexDot);\n\n        if (item[0].length > 1) {\n          var tag = item[0].charAt(0);\n          item.splice(1, 0, item[0].substr(1));\n          item[0] = tag;\n        }\n\n        Util.each(item, function (sub, i) {\n          if (!isNaN(sub)) {\n            item[i] = +sub;\n          }\n        });\n        path[index] = item;\n      });\n      return path;\n    }\n  }\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = hue;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = gamma;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = nogamma;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constant__ = __webpack_require__(121);\n\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n}\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : Object(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n  };\n}\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : Object(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview the Attribute base class\n */\nvar isString = __webpack_require__(10);\n\nvar isArray = __webpack_require__(4);\n\nvar isNil = __webpack_require__(5);\n\nvar mix = __webpack_require__(8);\n\nvar each = __webpack_require__(2);\n\nfunction toScaleString(scale, value) {\n  if (isString(value)) {\n    return value;\n  }\n\n  return scale.invert(scale.scale(value));\n}\n/**\n * 所有视觉通道属性的基类\n * @class Attr\n */\n\n\nvar AttributeBase =\n/*#__PURE__*/\nfunction () {\n  function AttributeBase(cfg) {\n    var _this = this;\n    /**\n     * 属性的类型\n     * @type {String}\n     */\n\n\n    this.type = 'base';\n    /**\n     * 属性的名称\n     * @type {String}\n     */\n\n    this.name = null;\n    /**\n     * 回调函数\n     * @type {Function}\n     */\n\n    this.method = null;\n    /**\n     * 备选的值数组\n     * @type {Array}\n     */\n\n    this.values = [];\n    /**\n     * 属性内部的度量\n     * @type {Array}\n     */\n\n    this.scales = [];\n    /**\n     * 是否通过线性取值, 如果未指定，则根据数值的类型判定\n     * @type {Boolean}\n     */\n\n    this.linear = null;\n    /**\n     * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值\n     */\n\n    var mixedCallback = null;\n    var defaultCallback = this.callback;\n\n    if (cfg.callback) {\n      var userCallback = cfg.callback;\n\n      mixedCallback = function mixedCallback() {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        var ret = userCallback.apply(void 0, params);\n\n        if (isNil(ret)) {\n          ret = defaultCallback.apply(_this, params);\n        }\n\n        return ret;\n      };\n    }\n\n    mix(this, cfg);\n\n    if (mixedCallback) {\n      mix(this, {\n        callback: mixedCallback\n      });\n    }\n  } // 获取属性值，将值映射到视觉通道\n\n\n  var _proto = AttributeBase.prototype;\n\n  _proto._getAttrValue = function _getAttrValue(scale, value) {\n    var values = this.values;\n\n    if (scale.isCategory && !this.linear) {\n      var index = scale.translate(value);\n      return values[index % values.length];\n    }\n\n    var percent = scale.scale(value);\n    return this.getLinearValue(percent);\n  };\n  /**\n   * 如果进行线性映射，返回对应的映射值\n   * @protected\n   * @param  {Number} percent 百分比\n   * @return {*}  颜色值、形状、大小等\n   */\n\n\n  _proto.getLinearValue = function getLinearValue(percent) {\n    var values = this.values;\n    var steps = values.length - 1;\n    var step = Math.floor(steps * percent);\n    var leftPercent = steps * percent - step;\n    var start = values[step];\n    var end = step === steps ? start : values[step + 1];\n    var rstValue = start + (end - start) * leftPercent;\n    return rstValue;\n  };\n  /**\n   * 默认的回调函数\n   * @param {*} value 回调函数的值\n   * @type {Function}\n   * @return {Array} 返回映射后的值\n   */\n\n\n  _proto.callback = function callback(value) {\n    var self = this;\n    var scale = self.scales[0];\n    var rstValue = null;\n\n    if (scale.type === 'identity') {\n      rstValue = scale.value;\n    } else {\n      rstValue = self._getAttrValue(scale, value);\n    }\n\n    return rstValue;\n  };\n  /**\n   * 根据度量获取属性名\n   * @return {Array} dims of this Attribute\n   */\n\n\n  _proto.getNames = function getNames() {\n    var scales = this.scales;\n    var names = this.names;\n    var length = Math.min(scales.length, names.length);\n    var rst = [];\n\n    for (var i = 0; i < length; i++) {\n      rst.push(names[i]);\n    }\n\n    return rst;\n  };\n  /**\n   * 根据度量获取维度名\n   * @return {Array} dims of this Attribute\n   */\n\n\n  _proto.getFields = function getFields() {\n    var scales = this.scales;\n    var rst = [];\n    each(scales, function (scale) {\n      rst.push(scale.field);\n    });\n    return rst;\n  };\n  /**\n   * 根据名称获取度量\n   * @param  {String} name the name of scale\n   * @return {Scale} scale\n   */\n\n\n  _proto.getScale = function getScale(name) {\n    var scales = this.scales;\n    var names = this.names;\n    var index = names.indexOf(name);\n    return scales[index];\n  };\n  /**\n   * 映射数据\n   * @param {*} param1...paramn 多个数值\n   * @return {Array} 映射的值组成的数组\n   */\n\n\n  _proto.mapping = function mapping() {\n    var scales = this.scales;\n    var callback = this.callback;\n\n    for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      params[_key2] = arguments[_key2];\n    }\n\n    var values = params;\n\n    if (callback) {\n      for (var i = 0, len = params.length; i < len; i++) {\n        params[i] = this._toOriginParam(params[i], scales[i]);\n      }\n\n      values = callback.apply(this, params);\n    }\n\n    values = [].concat(values);\n    return values;\n  }; // 原始的参数\n\n\n  _proto._toOriginParam = function _toOriginParam(param, scale) {\n    var rst = param;\n\n    if (!scale.isLinear) {\n      if (isArray(param)) {\n        rst = [];\n\n        for (var i = 0, len = param.length; i < len; i++) {\n          rst.push(toScaleString(scale, param[i]));\n        }\n      } else {\n        rst = toScaleString(scale, param);\n      }\n    }\n\n    return rst;\n  };\n\n  return AttributeBase;\n}();\n\nmodule.exports = AttributeBase;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mix = __webpack_require__(8);\n\nvar Adjust =\n/*#__PURE__*/\nfunction () {\n  var _proto = Adjust.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.adjustNames = ['x', 'y']; // 调整的维度，默认,x,y都做调整\n  };\n\n  function Adjust(cfg) {\n    this._initDefaultCfg();\n\n    mix(this, cfg);\n  }\n  /**\n   * @override\n   */\n\n\n  _proto.processAdjust = function processAdjust()\n  /* dataArray */\n  {};\n\n  return Adjust;\n}();\n\nmodule.exports = Adjust;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Component = __webpack_require__(32);\n\nvar Util = __webpack_require__(3);\n\nvar Grid = __webpack_require__(153);\n\nvar Label = __webpack_require__(154);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar Axis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Axis, _Component);\n\n  function Axis() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Axis.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Component.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 用于动画，唯一标识的 id\n       * @type {[type]}\n       */\n      _id: null,\n      zIndex: 4,\n\n      /**\n       * 坐标轴上的坐标点\n       * @type {Array}\n       */\n      ticks: null,\n\n      /**\n       * 坐标轴线的配置信息，如果设置成null，则不显示轴线\n       * @type {Object}\n       */\n      line: null,\n\n      /**\n       * 坐标轴刻度线的配置,如果设置成null，则不显示刻度线\n       * @type {Object}\n       */\n      tickLine: null,\n\n      /**\n       * 次刻度线个数配置\n       * @type {Number}\n       */\n      subTickCount: 0,\n\n      /**\n       * 次刻度线样式配置\n       * @type {Object}\n       */\n      subTickLine: null,\n\n      /**\n       * 网格线配置，如果值为 null，则不显示\n       * @type {Object}\n       */\n      grid: null,\n\n      /**\n       * 坐标轴文本配置\n       * @type {Object}\n       */\n      label: {\n        offset: 0,\n        offsetX: 0,\n        offsetY: 0,\n        textStyle: {},\n        // 坐标轴文本样式\n        autoRotate: true,\n        autoHide: false,\n        formatter: null // 坐标轴文本格式化回调函数\n\n      },\n      labelItems: [],\n\n      /**\n       * 坐标轴标题配置\n       * @type {Object}\n       */\n      title: {\n        autoRotate: true,\n        // 文本是否自动旋转\n        textStyle: {} // 坐标轴标题样式\n\n      },\n      autoPaint: true\n    });\n  };\n\n  _proto.beforeRender = function beforeRender() {\n    var self = this;\n    var title = self.get('title');\n    var label = self.get('label');\n    var grid = self.get('grid');\n\n    if (title) {\n      self.set('title', Util.deepMix({\n        autoRotate: true,\n        textStyle: {\n          fontSize: 12,\n          fill: '#ccc',\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY,\n          textAlign: 'center'\n        },\n        offset: 48\n      }, title));\n    }\n\n    if (label) {\n      self.set('label', Util.deepMix({\n        autoRotate: true,\n        autoHide: true,\n        textStyle: {\n          fontSize: 12,\n          fill: '#ccc',\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        },\n        offset: 10\n      }, label));\n    }\n\n    if (grid) {\n      self.set('grid', Util.deepMix({\n        lineStyle: {\n          lineWidth: 1,\n          stroke: '#C0D0E0'\n        }\n      }, grid));\n    }\n  };\n\n  _proto.render = function render() {\n    var self = this;\n    self.beforeRender();\n    var labelCfg = self.get('label');\n\n    if (labelCfg) {\n      self.renderLabels();\n    }\n\n    if (self.get('autoPaint')) {\n      self.paint();\n    }\n\n    if (!Util.isNil(self.get('title'))) {\n      self.renderTitle();\n    }\n\n    self.get('group').sort();\n  };\n\n  _proto.renderLabels = function renderLabels() {\n    var self = this;\n    var group = self.get('group');\n    var labelCfg = self.get('label');\n    var labelRenderer = new Label();\n    self.set('labelRenderer', labelRenderer);\n    labelRenderer.set('labelCfg', labelCfg);\n    var cfgs2copy = ['formatter', 'htmlTemplate', 'labelLine', 'textStyle', 'useHtml'];\n    Util.each(cfgs2copy, function (cfg) {\n      if (labelCfg[cfg]) {\n        labelRenderer.set(cfg, labelCfg[cfg]);\n      }\n    });\n    labelRenderer.set('coord', self.get('coord'));\n    labelRenderer.set('group', group.addGroup());\n    labelRenderer.set('canvas', self.get('canvas'));\n  };\n\n  _proto._parseTicks = function _parseTicks(ticks) {\n    ticks = ticks || [];\n    var ticksLength = ticks.length;\n\n    for (var i = 0; i < ticksLength; i++) {\n      var item = ticks[i];\n\n      if (!Util.isObject(item)) {\n        ticks[i] = this.parseTick(item, i, ticksLength);\n      }\n    }\n\n    this.set('ticks', ticks);\n    return ticks;\n  };\n\n  _proto._addTickItem = function _addTickItem(index, point, length, type) {\n    if (type === void 0) {\n      type = '';\n    }\n\n    var tickItems = this.get('tickItems');\n    var subTickItems = this.get('subTickItems');\n    var end = this.getTickEnd(point, length, index);\n    var cfg = {\n      x1: point.x,\n      y1: point.y,\n      x2: end.x,\n      y2: end.y\n    };\n\n    if (!tickItems) {\n      tickItems = [];\n    }\n\n    if (!subTickItems) {\n      subTickItems = [];\n    }\n\n    if (type === 'sub') {\n      subTickItems.push(cfg);\n    } else {\n      tickItems.push(cfg);\n    }\n\n    this.set('tickItems', tickItems);\n    this.set('subTickItems', subTickItems);\n  };\n\n  _proto._renderLine = function _renderLine() {\n    var self = this;\n    var lineCfg = self.get('line');\n    var path;\n\n    if (lineCfg) {\n      path = self.getLinePath();\n      lineCfg = Util.mix({\n        path: path\n      }, lineCfg);\n      var group = self.get('group');\n      var lineShape = group.addShape('path', {\n        attrs: lineCfg\n      });\n      lineShape.name = 'axis-line';\n      self.get('appendInfo') && lineShape.setSilent('appendInfo', self.get('appendInfo'));\n      self.set('lineShape', lineShape);\n    }\n  };\n\n  _proto._processCatTicks = function _processCatTicks() {\n    var self = this;\n    var labelCfg = self.get('label');\n    var tickLineCfg = self.get('tickLine');\n    var ticks = self.get('ticks');\n    ticks = self._parseTicks(ticks);\n\n    var new_ticks = self._getNormalizedTicks(ticks);\n\n    for (var i = 0; i < new_ticks.length; i += 3) {\n      var p = self.getTickPoint(new_ticks[i]);\n      var p0 = self.getTickPoint(new_ticks[i + 1]);\n      var p1 = self.getTickPoint(new_ticks[i + 2]);\n      var index = Math.floor(i / 3);\n      var tick = ticks[index];\n\n      if (tickLineCfg) {\n        if (index === 0) {\n          self._addTickItem(index, p0, tickLineCfg.length);\n        }\n\n        self._addTickItem(index, p1, tickLineCfg.length);\n      }\n\n      if (labelCfg) {\n        self.addLabel(tick, p, index);\n      }\n    }\n  };\n\n  _proto._getNormalizedTicks = function _getNormalizedTicks(ticks) {\n    var tickSeg = 0;\n\n    if (ticks.length > 1) {\n      tickSeg = (ticks[1].value - ticks[0].value) / 2;\n    }\n\n    var points = [];\n\n    for (var i = 0; i < ticks.length; i++) {\n      var tick = ticks[i];\n      var p = tick.value;\n      var p0 = tick.value - tickSeg;\n      var p1 = tick.value + tickSeg;\n      points.push(p, p0, p1);\n    }\n\n    var range = Util.arrayUtil.getRange(points);\n    return points.map(function (p) {\n      var norm = (p - range.min) / (range.max - range.min);\n      return norm;\n    });\n  };\n\n  _proto.addLabel = function addLabel(tick, point, index) {\n    var self = this;\n    var labelItems = self.get('labelItems');\n    var labelRenderer = self.get('labelRenderer');\n    var label = Util.deepMix({}, self.get('label'));\n    var rst;\n\n    if (labelRenderer) {\n      var offset = self.get('_labelOffset');\n\n      if (!Util.isNil(self.get('label').offset)) {\n        offset = self.get('label').offset;\n      }\n\n      var vector = self.getSideVector(offset, point, index);\n      point = {\n        x: point.x + vector[0] + label.offsetX,\n        y: point.y + vector[1] + label.offsetY\n      };\n      label.text = tick.text;\n      label.x = point.x;\n      label.y = point.y;\n      label.point = point;\n      label.textAlign = self.getTextAnchor(vector);\n\n      if (point.rotate) {\n        label.rotate = point.rotate;\n      }\n\n      labelItems.push(label);\n    }\n\n    return rst;\n  };\n\n  _proto._processTicks = function _processTicks() {\n    var self = this;\n    var labelCfg = self.get('label');\n    var subTickCount = self.get('subTickCount');\n    var tickLineCfg = self.get('tickLine');\n    var ticks = self.get('ticks');\n    ticks = self._parseTicks(ticks);\n    Util.each(ticks, function (tick, index) {\n      var tickPoint = self.getTickPoint(tick.value, index);\n\n      if (tickLineCfg) {\n        self._addTickItem(index, tickPoint, tickLineCfg.length);\n      }\n\n      if (labelCfg) {\n        self.addLabel(tick, tickPoint, index);\n      }\n    });\n\n    if (subTickCount) {\n      // 如果有设置次级分点，添加次级tick\n      var subTickLineCfg = self.get('subTickLine');\n      Util.each(ticks, function (tick, index) {\n        if (index > 0) {\n          var diff = tick.value - ticks[index - 1].value;\n          diff = diff / (self.get('subTickCount') + 1);\n\n          for (var i = 1; i <= subTickCount; i++) {\n            var subTick = {\n              text: '',\n              value: index ? ticks[index - 1].value + i * diff : i * diff\n            };\n            var tickPoint = self.getTickPoint(subTick.value);\n            var subTickLength = void 0;\n\n            if (subTickLineCfg && subTickLineCfg.length) {\n              subTickLength = subTickLineCfg.length;\n            } else {\n              subTickLength = parseInt(tickLineCfg.length * (3 / 5), 10);\n            }\n\n            self._addTickItem(i - 1, tickPoint, subTickLength, 'sub');\n          }\n        }\n      });\n    }\n  };\n\n  _proto._addTickLine = function _addTickLine(ticks, lineCfg) {\n    var self = this;\n    var cfg = Util.mix({}, lineCfg);\n    var path = [];\n    Util.each(ticks, function (item) {\n      path.push(['M', item.x1, item.y1]);\n      path.push(['L', item.x2, item.y2]);\n    });\n    delete cfg.length;\n    cfg.path = path;\n    var group = self.get('group');\n    var tickShape = group.addShape('path', {\n      attrs: cfg\n    });\n    tickShape.name = 'axis-ticks';\n    tickShape._id = self.get('_id') + '-ticks';\n    tickShape.set('coord', self.get('coord'));\n    self.get('appendInfo') && tickShape.setSilent('appendInfo', self.get('appendInfo'));\n  };\n\n  _proto._renderTicks = function _renderTicks() {\n    var self = this;\n    var tickItems = self.get('tickItems');\n    var subTickItems = self.get('subTickItems');\n\n    if (!Util.isEmpty(tickItems)) {\n      var tickLineCfg = self.get('tickLine');\n\n      self._addTickLine(tickItems, tickLineCfg);\n    }\n\n    if (!Util.isEmpty(subTickItems)) {\n      var subTickLineCfg = self.get('subTickLine') || self.get('tickLine');\n\n      self._addTickLine(subTickItems, subTickLineCfg);\n    }\n  };\n\n  _proto._renderGrid = function _renderGrid() {\n    var grid = this.get('grid');\n\n    if (!grid) {\n      return;\n    }\n\n    grid.coord = this.get('coord');\n    grid.appendInfo = this.get('appendInfo');\n    var group = this.get('group');\n    this.set('gridGroup', group.addGroup(Grid, grid));\n  };\n\n  _proto._renderLabels = function _renderLabels() {\n    var self = this;\n    var labelRenderer = self.get('labelRenderer');\n    var labelItems = self.get('labelItems');\n\n    if (labelRenderer) {\n      labelRenderer.set('items', labelItems);\n\n      labelRenderer._dryDraw();\n    }\n  };\n\n  _proto.paint = function paint() {\n    var self = this;\n    var tickLineCfg = self.get('tickLine');\n    var alignWithLabel = true;\n\n    if (tickLineCfg && tickLineCfg.hasOwnProperty('alignWithLabel')) {\n      alignWithLabel = tickLineCfg.alignWithLabel;\n    }\n\n    self._renderLine();\n\n    var type = self.get('type');\n    var isCat = type === 'cat' || type === 'timeCat';\n\n    if (isCat && alignWithLabel === false) {\n      self._processCatTicks();\n    } else {\n      self._processTicks();\n    }\n\n    self._renderTicks();\n\n    self._renderGrid();\n\n    self._renderLabels();\n\n    var labelCfg = this.get('label');\n\n    if (labelCfg && labelCfg.autoRotate) {\n      self.autoRotateLabels();\n    }\n\n    if (labelCfg && labelCfg.autoHide) {\n      self.autoHideLabels();\n    }\n  };\n\n  _proto.parseTick = function parseTick(tick, index, length) {\n    return {\n      text: tick,\n      value: index / (length - 1)\n    };\n  };\n\n  _proto.getTextAnchor = function getTextAnchor(vector) {\n    var ratio = Math.abs(vector[1] / vector[0]);\n    var align;\n\n    if (ratio >= 1) {\n      // 上面或者下面\n      align = 'center';\n    } else {\n      if (vector[0] > 0) {\n        // 右侧\n        align = 'start';\n      } else {\n        // 左侧\n        align = 'end';\n      }\n    }\n\n    return align;\n  };\n\n  _proto.getMaxLabelWidth = function getMaxLabelWidth(labelRenderer) {\n    var labels = labelRenderer.getLabels();\n    var max = 0;\n    Util.each(labels, function (label) {\n      var bbox = label.getBBox();\n      var width = bbox.width;\n\n      if (max < width) {\n        max = width;\n      }\n    });\n    return max;\n  };\n\n  _proto.getMaxLabelHeight = function getMaxLabelHeight(labelRenderer) {\n    var labels = labelRenderer.getLabels();\n    var max = 0;\n    Util.each(labels, function (label) {\n      var bbox = label.getBBox();\n      var height = bbox.height;\n\n      if (max < height) {\n        max = height;\n      }\n    });\n    return max;\n  };\n\n  _proto.destroy = function destroy() {\n    var self = this;\n\n    if (!self.destroyed) {\n      _Component.prototype.destroy.call(this);\n\n      var gridGroup = self.get('gridGroup');\n      gridGroup && gridGroup.remove();\n      var labelRenderer = this.get('labelRenderer');\n      labelRenderer && labelRenderer.destroy();\n      var group = self.get('group');\n      group.destroy();\n      self.destroyed = true;\n    }\n  };\n\n  _proto.clear = function clear() {\n    var self = this;\n    var group = self.get('group');\n\n    if (!group.get('destroyed') && group.get('children').length) {\n      var gridGroup = self.get('gridGroup');\n      gridGroup && gridGroup.clear();\n      var labelRenderer = this.get('labelRenderer');\n      labelRenderer && labelRenderer.clear();\n\n      var _group = self.get('group');\n\n      _group.clear();\n    }\n  };\n  /**\n   * 旋转文本\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.autoRotateLabels = function autoRotateLabels() {};\n  /**\n   * 文本自动防遮罩\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.autoHideLabels = function autoHideLabels() {};\n  /**\n   * 渲染标题\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.renderTitle = function renderTitle() {};\n  /**\n   * 获取坐标轴线的 path\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.getLinePath = function getLinePath() {};\n  /**\n   * 获取 tick 在画布上的位置\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.getTickPoint = function getTickPoint() {};\n  /**\n   * 获取标示坐标点的线的终点\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.getTickEnd = function getTickEnd() {};\n  /**\n   * 获取距离坐标轴的向量\n   * @abstract\n   * @return {[type]} [description]\n   */\n\n\n  _proto.getSideVector = function getSideVector() {};\n\n  return Axis;\n}(Component);\n\nmodule.exports = Axis;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(66);\n\nvar Component =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Component, _Base);\n\n  function Component() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Component.prototype; // 配置\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      // 顶层标志位\n      _id: null,\n      // 用于动画\n      // 容器\n      canvas: null,\n      container: null,\n      // html，可选\n      group: null,\n      // G Group，可选\n      // 交互属性\n      capture: false,\n      // props\n      coord: null,\n      offset: [0, 0],\n      plotRange: null,\n      // BBox\n      position: [0, 0],\n      visible: true,\n      zIndex: 1\n    };\n  }; // 基础生命周期\n\n\n  _proto._init = function _init() {};\n\n  _proto.clear = function clear() {};\n\n  _proto.destroy = function destroy() {}; // 绘图\n\n\n  _proto.beforeRender = function beforeRender() {};\n\n  _proto.render = function render() {}; // 初始化、绑事件和绘图\n\n\n  _proto.afterRender = function afterRender() {};\n\n  _proto.beforeDraw = function beforeDraw() {};\n\n  _proto.draw = function draw() {}; // 单纯更新视图\n\n\n  _proto.afterDraw = function afterDraw() {}; // visibility\n\n\n  _proto.show = function show() {};\n\n  _proto.hide = function hide() {}; // props operating syntactic sugar\n\n\n  _proto.setOffset = function setOffset() {};\n\n  _proto.setPosition = function setPosition() {};\n\n  _proto.setVisible = function setVisible() {};\n\n  _proto.setZIndex = function setZIndex() {};\n\n  return Component;\n}(Base);\n\nmodule.exports = Component;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The measurement of linear data scale function\n * @author dxq613@gmail.com\n */\n\n\nvar isNil = __webpack_require__(5);\n\nvar each = __webpack_require__(2);\n\nvar Base = __webpack_require__(17);\n\nvar numberAuto = __webpack_require__(174);\n/**\n * 线性度量\n * @class Scale.Linear\n */\n\n\nvar Linear =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Linear, _Base);\n\n  function Linear() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Linear.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    var self = this;\n    self.type = 'linear';\n    self.isLinear = true;\n    /**\n     * 是否为了用户习惯，优化min,max和ticks，如果进行优化，则会根据生成的ticks调整min,max，否则舍弃(min,max)范围之外的ticks\n     * @type {Boolean}\n     * @default false\n     */\n\n    self.nice = false;\n    /**\n     * min value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.min = null;\n    /**\n     * min value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.minLimit = null;\n    /**\n     * max value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.max = null;\n    /**\n     * max value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.maxLimit = null;\n    /**\n     * 自动生成标记时的个数\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickCount = null;\n    /**\n     * 坐标轴点之间的间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickInterval = null;\n    /**\n     * 坐标轴点之间的最小间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.minTickInterval = null;\n    /**\n     * 用于计算坐标点时逼近的数组\n     * @type {Array}\n     */\n\n    self.snapArray = null;\n  };\n  /**\n   * @protected\n   * @override\n   */\n\n\n  _proto.init = function init() {\n    var self = this;\n\n    if (!self.ticks) {\n      self.min = self.translate(self.min);\n      self.max = self.translate(self.max);\n      self.initTicks();\n    } else {\n      var ticks = self.ticks;\n      var firstValue = self.translate(ticks[0]);\n      var lastValue = self.translate(ticks[ticks.length - 1]);\n\n      if (isNil(self.min) || self.min > firstValue) {\n        self.min = firstValue;\n      }\n\n      if (isNil(self.max) || self.max < lastValue) {\n        self.max = lastValue;\n      }\n    }\n  };\n  /**\n   * 计算坐标点\n   * @protected\n   * @return {Array} 计算完成的坐标点\n   */\n\n\n  _proto.calculateTicks = function calculateTicks() {\n    var min = this.min,\n        max = this.max,\n        minLimit = this.minLimit,\n        maxLimit = this.maxLimit,\n        tickCount = this.tickCount,\n        tickInterval = this.tickInterval,\n        minTickInterval = this.minTickInterval,\n        snapArray = this.snapArray;\n\n    if (tickCount === 1) {\n      throw new Error('linear scale\\'tickCount should not be 1');\n    }\n\n    if (max < min) {\n      throw new Error(\"max: \" + max + \" should not be less than min: \" + min);\n    }\n\n    var tmp = numberAuto({\n      min: min,\n      max: max,\n      minLimit: minLimit,\n      maxLimit: maxLimit,\n      minCount: tickCount,\n      maxCount: tickCount,\n      interval: tickInterval,\n      minTickInterval: minTickInterval,\n      snapArray: snapArray\n    });\n    return tmp.ticks;\n  }; // 初始化ticks\n\n\n  _proto.initTicks = function initTicks() {\n    var self = this;\n    var calTicks = self.calculateTicks();\n\n    if (self.nice) {\n      // 如果需要优化显示的tick\n      self.ticks = calTicks;\n      self.min = calTicks[0];\n      self.max = calTicks[calTicks.length - 1];\n    } else {\n      var ticks = [];\n      each(calTicks, function (tick) {\n        if (tick >= self.min && tick <= self.max) {\n          ticks.push(tick);\n        }\n      }); // 如果 ticks 为空，直接输入最小值、最大值\n\n      if (!ticks.length) {\n        ticks.push(self.min);\n        ticks.push(self.max);\n      }\n\n      self.ticks = ticks;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    if (isNil(value)) {\n      return NaN;\n    }\n\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    }\n\n    var percent = (value - min) / (max - min);\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.invert = function invert(value) {\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n    return this.min + percent * (this.max - this.min);\n  };\n\n  return Linear;\n}(Base);\n\nBase.Linear = Linear;\nmodule.exports = Linear;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(13);\n\nfunction toArray(value) {\n  return isArrayLike(value) ? Array.prototype.slice.call(value) : [];\n}\n\nmodule.exports = toArray;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nvar PRECISION = 0.00001; // numbers less than this is considered as 0\n\nmodule.exports = function isNumberEqual(a, b) {\n  var precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PRECISION;\n  return Math.abs(a - b) < precision;\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1).vec2;\n\nmodule.exports = {\n  at: function at(p1, p2, t) {\n    return (p2 - p1) * t + p1;\n  },\n  pointDistance: function pointDistance(x1, y1, x2, y2, x, y) {\n    var d = [x2 - x1, y2 - y1];\n\n    if (vec2.exactEquals(d, [0, 0])) {\n      return NaN;\n    }\n\n    var u = [-d[1], d[0]];\n    vec2.normalize(u, u);\n    var a = [x - x1, y - y1];\n    return Math.abs(vec2.dot(a, u));\n  },\n  box: function box(x1, y1, x2, y2, lineWidth) {\n    var halfWidth = lineWidth / 2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    return {\n      minX: minX - halfWidth,\n      minY: minY - halfWidth,\n      maxX: maxX + halfWidth,\n      maxY: maxY + halfWidth\n    };\n  },\n  len: function len(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nfunction circlePoint(cx, cy, r, angle) {\n  return {\n    x: Math.cos(angle) * r + cx,\n    y: Math.sin(angle) * r + cy\n  };\n}\n\nfunction angleNearTo(angle, min, max, out) {\n  var v1;\n  var v2;\n\n  if (out) {\n    if (angle < min) {\n      v1 = min - angle;\n      v2 = Math.PI * 2 - max + angle;\n    } else if (angle > max) {\n      v1 = Math.PI * 2 - angle + min;\n      v2 = angle - max;\n    }\n  } else {\n    v1 = angle - min;\n    v2 = max - angle;\n  }\n\n  return v1 > v2 ? max : min;\n}\n\nfunction nearAngle(angle, startAngle, endAngle, clockwise) {\n  var plus = 0;\n\n  if (endAngle - startAngle >= Math.PI * 2) {\n    plus = Math.PI * 2;\n  }\n\n  startAngle = Util.mod(startAngle, Math.PI * 2);\n  endAngle = Util.mod(endAngle, Math.PI * 2) + plus;\n  angle = Util.mod(angle, Math.PI * 2);\n\n  if (clockwise) {\n    if (startAngle >= endAngle) {\n      if (angle > endAngle && angle < startAngle) {\n        return angle;\n      }\n\n      return angleNearTo(angle, endAngle, startAngle, true);\n    }\n\n    if (angle < startAngle || angle > endAngle) {\n      return angle;\n    }\n\n    return angleNearTo(angle, startAngle, endAngle);\n  }\n\n  if (startAngle <= endAngle) {\n    if (startAngle < angle && angle < endAngle) {\n      return angle;\n    }\n\n    return angleNearTo(angle, startAngle, endAngle, true);\n  }\n\n  if (angle > startAngle || angle < endAngle) {\n    return angle;\n  }\n\n  return angleNearTo(angle, endAngle, startAngle);\n}\n\nfunction arcProjectPoint(cx, cy, r, startAngle, endAngle, clockwise, x, y, out) {\n  var v = [x, y];\n  var v0 = [cx, cy];\n  var v1 = [1, 0];\n  var subv = Util.vec2.subtract([], v, v0);\n  var angle = Util.vec2.angleTo(v1, subv);\n  angle = nearAngle(angle, startAngle, endAngle, clockwise);\n  var vpoint = [r * Math.cos(angle) + cx, r * Math.sin(angle) + cy];\n\n  if (out) {\n    out.x = vpoint[0];\n    out.y = vpoint[1];\n  }\n\n  var d = Util.vec2.distance(vpoint, v);\n  return d;\n}\n\nfunction arcBox(cx, cy, r, startAngle, endAngle, clockwise) {\n  var angleRight = 0;\n  var angleBottom = Math.PI / 2;\n  var angleLeft = Math.PI;\n  var angleTop = Math.PI * 3 / 2;\n  var points = [];\n  var angle = nearAngle(angleRight, startAngle, endAngle, clockwise);\n\n  if (angle === angleRight) {\n    points.push(circlePoint(cx, cy, r, angleRight));\n  }\n\n  angle = nearAngle(angleBottom, startAngle, endAngle, clockwise);\n\n  if (angle === angleBottom) {\n    points.push(circlePoint(cx, cy, r, angleBottom));\n  }\n\n  angle = nearAngle(angleLeft, startAngle, endAngle, clockwise);\n\n  if (angle === angleLeft) {\n    points.push(circlePoint(cx, cy, r, angleLeft));\n  }\n\n  angle = nearAngle(angleTop, startAngle, endAngle, clockwise);\n\n  if (angle === angleTop) {\n    points.push(circlePoint(cx, cy, r, angleTop));\n  }\n\n  points.push(circlePoint(cx, cy, r, startAngle));\n  points.push(circlePoint(cx, cy, r, endAngle));\n  var minX = Infinity;\n  var maxX = -Infinity;\n  var minY = Infinity;\n  var maxY = -Infinity;\n  Util.each(points, function (point) {\n    if (minX > point.x) {\n      minX = point.x;\n    }\n\n    if (maxX < point.x) {\n      maxX = point.x;\n    }\n\n    if (minY > point.y) {\n      minY = point.y;\n    }\n\n    if (maxY < point.y) {\n      maxY = point.y;\n    }\n  });\n  return {\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  };\n}\n\nmodule.exports = {\n  nearAngle: nearAngle,\n  projectPoint: function projectPoint(cx, cy, r, startAngle, endAngle, clockwise, x, y) {\n    var rst = {};\n    arcProjectPoint(cx, cy, r, startAngle, endAngle, clockwise, x, y, rst);\n    return rst;\n  },\n  pointDistance: arcProjectPoint,\n  box: arcBox\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Format = __webpack_require__(27);\n\nvar PathSegment = __webpack_require__(39);\n\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar atan2 = Math.atan2;\nvar DEFAULT_LENGTH = 10;\nvar DEFAULT_ANGLE = PI / 3;\n\nfunction _addArrow(ctx, attrs, x1, y1, x2, y2, isStart) {\n  var leftX;\n  var leftY;\n  var rightX;\n  var rightY;\n  var offsetX;\n  var offsetY;\n  var angle;\n\n  if (!attrs.fill) {\n    // 闭合的不绘制箭头\n    var arrowLength = attrs.arrowLength || DEFAULT_LENGTH;\n    var arrowAngle = attrs.arrowAngle ? attrs.arrowAngle * PI / 180 : DEFAULT_ANGLE; // 转换为弧\n    // Calculate angle\n\n    angle = atan2(y1 - y2, x1 - x2);\n    /* // Adjust angle correctly\n    angle -= PI;*/\n    // Calculate offset to place arrow at edge of path\n\n    offsetX = Math.abs(attrs.lineWidth * cos(angle)) / 2;\n    offsetY = Math.abs(attrs.lineWidth * sin(angle)) / 2;\n\n    if (isStart) {\n      offsetX = -offsetX;\n      offsetY = -offsetY;\n    } // Calculate coordinates for left half of arrow\n\n\n    leftX = x2 + arrowLength * cos(angle + arrowAngle / 2);\n    leftY = y2 + arrowLength * sin(angle + arrowAngle / 2); // Calculate coordinates for right half of arrow\n\n    rightX = x2 + arrowLength * cos(angle - arrowAngle / 2);\n    rightY = y2 + arrowLength * sin(angle - arrowAngle / 2);\n    ctx.beginPath(); // Draw left half of arrow\n\n    ctx.moveTo(leftX - offsetX, leftY - offsetY);\n    ctx.lineTo(x2 - offsetX, y2 - offsetY); // Draw right half of arrow\n\n    ctx.lineTo(rightX - offsetX, rightY - offsetY); // Visually connect arrow to path\n\n    ctx.moveTo(x2 - offsetX, y2 - offsetY);\n    ctx.lineTo(x2 + offsetX, y2 + offsetY); // Move back to end of path\n\n    ctx.moveTo(x2, y2);\n    ctx.stroke();\n  }\n}\n\nfunction parsePath(attrs) {\n  var segments = [];\n  var pathArray = Format.parsePath(attrs.path);\n  var preSegment;\n\n  if (!Array.isArray(pathArray) || pathArray.length === 0 || pathArray[0][0] !== 'M' && pathArray[0][0] !== 'm') {\n    return false;\n  }\n\n  var count = pathArray.length;\n\n  for (var i = 0; i < pathArray.length; i++) {\n    var item = pathArray[i];\n    preSegment = new PathSegment(item, preSegment, i === count - 1);\n    segments.push(preSegment);\n  }\n\n  return segments;\n}\n\nfunction _addCustomizedArrow(ctx, attrs, x1, y1, x2, y2, isStart) {\n  var shape = isStart ? attrs.startArrow : attrs.endArrow;\n  var d = shape.d;\n  var deg = 0;\n  var x = x2 - x1;\n  var y = y2 - y1;\n  var tan = Math.atan(x / y);\n\n  if (y === 0 && x < 0) {\n    deg = Math.PI;\n  } else if (x > 0 && y > 0) {\n    deg = Math.PI / 2 - tan;\n  } else if (x < 0 && y < 0) {\n    deg = -Math.PI / 2 - tan;\n  } else if (x >= 0 && y < 0) {\n    deg = -tan - Math.PI / 2;\n  } else if (x <= 0 && y > 0) {\n    deg = Math.PI / 2 - tan;\n  }\n\n  var path = parsePath(shape);\n\n  if (!path) {\n    return;\n  }\n\n  if (d) {\n    if (isStart) {\n      x2 = x2 + Math.sin(Math.abs(tan)) * d;\n      y2 = y2 + Math.cos(Math.abs(tan)) * d - 0.5 * ctx.lineWidth;\n    } else {\n      x2 = x2 - Math.sin(Math.abs(tan)) * d;\n      y2 = y2 - Math.cos(Math.abs(tan)) * d + 0.5 * ctx.lineWidth;\n    }\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.translate(x2, y2);\n  ctx.rotate(deg);\n\n  for (var i = 0; i < path.length; i++) {\n    path[i].draw(ctx);\n  }\n\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.fillStyle = ctx.strokeStyle;\n  ctx.fill();\n  ctx.restore();\n}\n\nmodule.exports = {\n  addStartArrow: function addStartArrow(ctx, attrs, x1, y1, x2, y2) {\n    if (typeof attrs.startArrow === 'object') {\n      _addCustomizedArrow(ctx, attrs, x1, y1, x2, y2, true);\n    } else if (attrs.startArrow) {\n      _addArrow(ctx, attrs, x1, y1, x2, y2, true);\n    }\n  },\n  addEndArrow: function addEndArrow(ctx, attrs, x1, y1, x2, y2) {\n    if (typeof attrs.endArrow === 'object') {\n      _addCustomizedArrow(ctx, attrs, x1, y1, x2, y2, false);\n    } else if (attrs.endArrow) {\n      _addArrow(ctx, attrs, x1, y1, x2, y2, false);\n    }\n  }\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Inside = __webpack_require__(54);\n\nvar Cubic = __webpack_require__(55);\n\nvar Quadratic = __webpack_require__(103);\n\nvar Ellipse = __webpack_require__(104);\n\nvar vec3 = Util.vec3;\nvar mat3 = Util.mat3;\nvar ARR_CMD = ['m', 'l', 'c', 'a', 'q', 'h', 'v', 't', 's', 'z'];\n\nfunction toAbsolute(x, y, curPoint) {\n  // 获取绝对坐标\n  return {\n    x: curPoint.x + x,\n    y: curPoint.y + y\n  };\n}\n\nfunction toSymmetry(point, center) {\n  // 点对称\n  return {\n    x: center.x + (center.x - point.x),\n    y: center.y + (center.y - point.y)\n  };\n}\n\nfunction vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\nfunction vRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\n\nfunction vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\n\nfunction getArcParams(point1, point2, fa, fs, rx, ry, psiDeg) {\n  var psi = Util.mod(Util.toRadian(psiDeg), Math.PI * 2);\n  var x1 = point1.x;\n  var y1 = point1.y;\n  var x2 = point2.x;\n  var y2 = point2.y;\n  var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\n  var f = Math.sqrt((rx * rx * (ry * ry) - diff) / diff);\n\n  if (fa === fs) {\n    f *= -1;\n  }\n\n  if (isNaN(f)) {\n    f = 0;\n  }\n\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = Math.PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * Math.PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * Math.PI;\n  }\n\n  return [point1, cx, cy, rx, ry, theta, dTheta, psi, fs];\n}\n\nvar PathSegment = function PathSegment(item, preSegment, isLast) {\n  this.preSegment = preSegment;\n  this.isLast = isLast;\n  this.init(item, preSegment);\n};\n\nUtil.augment(PathSegment, {\n  init: function init(item, preSegment) {\n    var command = item[0];\n    preSegment = preSegment || {\n      endPoint: {\n        x: 0,\n        y: 0\n      }\n    };\n    var relative = ARR_CMD.indexOf(command) >= 0; // /[a-z]/.test(command);\n\n    var cmd = relative ? command.toUpperCase() : command;\n    var p = item;\n    var point1;\n    var point2;\n    var point3;\n    var point;\n    var preEndPoint = preSegment.endPoint;\n    var p1 = p[1];\n    var p2 = p[2];\n\n    switch (cmd) {\n      default:\n        break;\n\n      case 'M':\n        if (relative) {\n          point = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        this.command = 'M';\n        this.params = [preEndPoint, point];\n        this.subStart = point;\n        this.endPoint = point;\n        break;\n\n      case 'L':\n        if (relative) {\n          point = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'H':\n        if (relative) {\n          point = toAbsolute(p1, 0, preEndPoint);\n        } else {\n          point = {\n            x: p1,\n            y: preEndPoint.y\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'V':\n        if (relative) {\n          point = toAbsolute(0, p1, preEndPoint);\n        } else {\n          point = {\n            x: preEndPoint.x,\n            y: p1\n          };\n        }\n\n        this.command = 'L';\n        this.params = [preEndPoint, point];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point;\n\n        this.endTangent = function () {\n          return [point.x - preEndPoint.x, point.y - preEndPoint.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point.x, preEndPoint.y - point.y];\n        };\n\n        break;\n\n      case 'Q':\n        if (relative) {\n          point1 = toAbsolute(p1, p2, preEndPoint);\n          point2 = toAbsolute(p[3], p[4], preEndPoint);\n        } else {\n          point1 = {\n            x: p1,\n            y: p2\n          };\n          point2 = {\n            x: p[3],\n            y: p[4]\n          };\n        }\n\n        this.command = 'Q';\n        this.params = [preEndPoint, point1, point2];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point2;\n\n        this.endTangent = function () {\n          return [point2.x - point1.x, point2.y - point1.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n        };\n\n        break;\n\n      case 'T':\n        if (relative) {\n          point2 = toAbsolute(p1, p2, preEndPoint);\n        } else {\n          point2 = {\n            x: p1,\n            y: p2\n          };\n        }\n\n        if (preSegment.command === 'Q') {\n          point1 = toSymmetry(preSegment.params[1], preEndPoint);\n          this.command = 'Q';\n          this.params = [preEndPoint, point1, point2];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point2;\n\n          this.endTangent = function () {\n            return [point2.x - point1.x, point2.y - point1.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n          };\n        } else {\n          this.command = 'TL';\n          this.params = [preEndPoint, point2];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point2;\n\n          this.endTangent = function () {\n            return [point2.x - preEndPoint.x, point2.y - preEndPoint.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n          };\n        }\n\n        break;\n\n      case 'C':\n        if (relative) {\n          point1 = toAbsolute(p1, p2, preEndPoint);\n          point2 = toAbsolute(p[3], p[4], preEndPoint);\n          point3 = toAbsolute(p[5], p[6], preEndPoint);\n        } else {\n          point1 = {\n            x: p1,\n            y: p2\n          };\n          point2 = {\n            x: p[3],\n            y: p[4]\n          };\n          point3 = {\n            x: p[5],\n            y: p[6]\n          };\n        }\n\n        this.command = 'C';\n        this.params = [preEndPoint, point1, point2, point3];\n        this.subStart = preSegment.subStart;\n        this.endPoint = point3;\n\n        this.endTangent = function () {\n          return [point3.x - point2.x, point3.y - point2.y];\n        };\n\n        this.startTangent = function () {\n          return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n        };\n\n        break;\n\n      case 'S':\n        if (relative) {\n          point2 = toAbsolute(p1, p2, preEndPoint);\n          point3 = toAbsolute(p[3], p[4], preEndPoint);\n        } else {\n          point2 = {\n            x: p1,\n            y: p2\n          };\n          point3 = {\n            x: p[3],\n            y: p[4]\n          };\n        }\n\n        if (preSegment.command === 'C') {\n          point1 = toSymmetry(preSegment.params[2], preEndPoint);\n          this.command = 'C';\n          this.params = [preEndPoint, point1, point2, point3];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point3;\n\n          this.endTangent = function () {\n            return [point3.x - point2.x, point3.y - point2.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point1.x, preEndPoint.y - point1.y];\n          };\n        } else {\n          this.command = 'SQ';\n          this.params = [preEndPoint, point2, point3];\n          this.subStart = preSegment.subStart;\n          this.endPoint = point3;\n\n          this.endTangent = function () {\n            return [point3.x - point2.x, point3.y - point2.y];\n          };\n\n          this.startTangent = function () {\n            return [preEndPoint.x - point2.x, preEndPoint.y - point2.y];\n          };\n        }\n\n        break;\n\n      case 'A':\n        {\n          var rx = p1;\n          var ry = p2;\n          var psi = p[3];\n          var fa = p[4];\n          var fs = p[5];\n\n          if (relative) {\n            point = toAbsolute(p[6], p[7], preEndPoint);\n          } else {\n            point = {\n              x: p[6],\n              y: p[7]\n            };\n          }\n\n          this.command = 'A';\n          var params = getArcParams(preEndPoint, point, fa, fs, rx, ry, psi);\n          this.params = params;\n          var start = preSegment.subStart;\n          this.subStart = start;\n          this.endPoint = point;\n          var startAngle = params[5] % (Math.PI * 2);\n\n          if (Util.isNumberEqual(startAngle, Math.PI * 2)) {\n            startAngle = 0;\n          }\n\n          var endAngle = params[6] % (Math.PI * 2);\n\n          if (Util.isNumberEqual(endAngle, Math.PI * 2)) {\n            endAngle = 0;\n          }\n\n          var d = 0.001;\n\n          this.startTangent = function () {\n            if (fs === 0) {\n              d *= -1;\n            }\n\n            var dx = params[3] * Math.cos(startAngle - d) + params[1];\n            var dy = params[4] * Math.sin(startAngle - d) + params[2];\n            return [dx - start.x, dy - start.y];\n          };\n\n          this.endTangent = function () {\n            var endAngle = params[6];\n\n            if (endAngle - Math.PI * 2 < 0.0001) {\n              endAngle = 0;\n            }\n\n            var dx = params[3] * Math.cos(startAngle + endAngle + d) + params[1];\n            var dy = params[4] * Math.sin(startAngle + endAngle - d) + params[2];\n            return [preEndPoint.x - dx, preEndPoint.y - dy];\n          };\n\n          break;\n        }\n\n      case 'Z':\n        {\n          this.command = 'Z';\n          this.params = [preEndPoint, preSegment.subStart];\n          this.subStart = preSegment.subStart;\n          this.endPoint = preSegment.subStart;\n        }\n    }\n  },\n  isInside: function isInside(x, y, lineWidth) {\n    var self = this;\n    var command = self.command;\n    var params = self.params;\n    var box = self.box;\n\n    if (box) {\n      if (!Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y)) {\n        return false;\n      }\n    }\n\n    switch (command) {\n      default:\n        break;\n\n      case 'M':\n        return false;\n\n      case 'TL':\n      case 'L':\n      case 'Z':\n        return Inside.line(params[0].x, params[0].y, params[1].x, params[1].y, lineWidth, x, y);\n\n      case 'SQ':\n      case 'Q':\n        return Inside.quadraticline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, lineWidth, x, y);\n\n      case 'C':\n        {\n          return Inside.cubicline(params[0].x, params[0].y, params[1].x, params[1].y, params[2].x, params[2].y, params[3].x, params[3].y, lineWidth, x, y);\n        }\n\n      case 'A':\n        {\n          var p = params;\n          var cx = p[1];\n          var cy = p[2];\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          p = [x, y, 1];\n          var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          mat3.translate(m, m, [-cx, -cy]);\n          mat3.rotate(m, m, -psi);\n          mat3.scale(m, m, [1 / scaleX, 1 / scaleY]);\n          vec3.transformMat3(p, p, m);\n          return Inside.arcline(0, 0, r, theta, theta + dTheta, 1 - fs, lineWidth, p[0], p[1]);\n        }\n    }\n\n    return false;\n  },\n  draw: function draw(context) {\n    var command = this.command;\n    var params = this.params;\n    var point1;\n    var point2;\n    var point3;\n\n    switch (command) {\n      default:\n        break;\n\n      case 'M':\n        context.moveTo(params[1].x, params[1].y);\n        break;\n\n      case 'TL':\n      case 'L':\n        context.lineTo(params[1].x, params[1].y);\n        break;\n\n      case 'SQ':\n      case 'Q':\n        point1 = params[1];\n        point2 = params[2];\n        context.quadraticCurveTo(point1.x, point1.y, point2.x, point2.y);\n        break;\n\n      case 'C':\n        point1 = params[1];\n        point2 = params[2];\n        point3 = params[3];\n        context.bezierCurveTo(point1.x, point1.y, point2.x, point2.y, point3.x, point3.y);\n        break;\n\n      case 'A':\n        {\n          var p = params;\n          var p1 = p[1];\n          var p2 = p[2];\n          var cx = p1;\n          var cy = p2;\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n        }\n\n      case 'Z':\n        context.closePath();\n        break;\n    }\n  },\n  getBBox: function getBBox(lineWidth) {\n    var halfWidth = lineWidth / 2;\n    var params = this.params;\n    var yDims;\n    var xDims;\n    var i;\n    var l;\n\n    switch (this.command) {\n      default:\n      case 'M':\n      case 'Z':\n        break;\n\n      case 'TL':\n      case 'L':\n        this.box = {\n          minX: Math.min(params[0].x, params[1].x) - halfWidth,\n          maxX: Math.max(params[0].x, params[1].x) + halfWidth,\n          minY: Math.min(params[0].y, params[1].y) - halfWidth,\n          maxY: Math.max(params[0].y, params[1].y) + halfWidth\n        };\n        break;\n\n      case 'SQ':\n      case 'Q':\n        xDims = Quadratic.extrema(params[0].x, params[1].x, params[2].x);\n\n        for (i = 0, l = xDims.length; i < l; i++) {\n          xDims[i] = Quadratic.at(params[0].x, params[1].x, params[2].x, xDims[i]);\n        }\n\n        xDims.push(params[0].x, params[2].x);\n        yDims = Quadratic.extrema(params[0].y, params[1].y, params[2].y);\n\n        for (i = 0, l = yDims.length; i < l; i++) {\n          yDims[i] = Quadratic.at(params[0].y, params[1].y, params[2].y, yDims);\n        }\n\n        yDims.push(params[0].y, params[2].y);\n        this.box = {\n          minX: Math.min.apply(Math, xDims) - halfWidth,\n          maxX: Math.max.apply(Math, xDims) + halfWidth,\n          minY: Math.min.apply(Math, yDims) - halfWidth,\n          maxY: Math.max.apply(Math, yDims) + halfWidth\n        };\n        break;\n\n      case 'C':\n        xDims = Cubic.extrema(params[0].x, params[1].x, params[2].x, params[3].x);\n\n        for (i = 0, l = xDims.length; i < l; i++) {\n          xDims[i] = Cubic.at(params[0].x, params[1].x, params[2].x, params[3].x, xDims[i]);\n        }\n\n        yDims = Cubic.extrema(params[0].y, params[1].y, params[2].y, params[3].y);\n\n        for (i = 0, l = yDims.length; i < l; i++) {\n          yDims[i] = Cubic.at(params[0].y, params[1].y, params[2].y, params[3].y, yDims[i]);\n        }\n\n        xDims.push(params[0].x, params[3].x);\n        yDims.push(params[0].y, params[3].y);\n        this.box = {\n          minX: Math.min.apply(Math, xDims) - halfWidth,\n          maxX: Math.max.apply(Math, xDims) + halfWidth,\n          minY: Math.min.apply(Math, yDims) - halfWidth,\n          maxY: Math.max.apply(Math, yDims) + halfWidth\n        };\n        break;\n\n      case 'A':\n        {\n          // todo 待优化\n          var p = params;\n          var cx = p[1];\n          var cy = p[2];\n          var rx = p[3];\n          var ry = p[4];\n          var theta = p[5];\n          var dTheta = p[6];\n          var psi = p[7];\n          var fs = p[8];\n          var start = theta;\n          var end = theta + dTheta;\n          var xDim = Ellipse.xExtrema(psi, rx, ry);\n          var minX = Infinity;\n          var maxX = -Infinity;\n          var xs = [start, end];\n\n          for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n            var xAngle = xDim + i;\n\n            if (fs === 1) {\n              if (start < xAngle && xAngle < end) {\n                xs.push(xAngle);\n              }\n            } else {\n              if (end < xAngle && xAngle < start) {\n                xs.push(xAngle);\n              }\n            }\n          }\n\n          for (i = 0, l = xs.length; i < l; i++) {\n            var x = Ellipse.xAt(psi, rx, ry, cx, xs[i]);\n\n            if (x < minX) {\n              minX = x;\n            }\n\n            if (x > maxX) {\n              maxX = x;\n            }\n          }\n\n          var yDim = Ellipse.yExtrema(psi, rx, ry);\n          var minY = Infinity;\n          var maxY = -Infinity;\n          var ys = [start, end];\n\n          for (i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\n            var yAngle = yDim + i;\n\n            if (fs === 1) {\n              if (start < yAngle && yAngle < end) {\n                ys.push(yAngle);\n              }\n            } else {\n              if (end < yAngle && yAngle < start) {\n                ys.push(yAngle);\n              }\n            }\n          }\n\n          for (i = 0, l = ys.length; i < l; i++) {\n            var y = Ellipse.yAt(psi, rx, ry, cy, ys[i]);\n\n            if (y < minY) {\n              minY = y;\n            }\n\n            if (y > maxY) {\n              maxY = y;\n            }\n          }\n\n          this.box = {\n            minX: minX - halfWidth,\n            maxX: maxX + halfWidth,\n            minY: minY - halfWidth,\n            maxY: maxY + halfWidth\n          };\n          break;\n        }\n    }\n  }\n});\nmodule.exports = PathSegment;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  return a = +a, b -= a, function (t) {\n    return a + b * t;\n  };\n});\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(13);\n\nvar indexOf = Array.prototype.indexOf;\n\nvar contains = function contains(arr, value) {\n  if (!isArrayLike(arr)) {\n    return false;\n  }\n\n  return indexOf.call(arr, value) > -1;\n};\n\nmodule.exports = contains;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nvar merge = function merge(dataArray) {\n  var rst = [];\n\n  for (var i = 0; i < dataArray.length; i++) {\n    rst = rst.concat(dataArray[i]);\n  }\n\n  return rst;\n};\n\nmodule.exports = merge;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  mat3: __webpack_require__(51),\n  vec2: __webpack_require__(97),\n  vec3: __webpack_require__(98),\n  transform: __webpack_require__(99)\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @fileOverview the base class of Coordinate\n * @author sima.zhang\n */\n\n\nvar MatrixUtil = __webpack_require__(43);\n\nvar mix = __webpack_require__(8);\n\nvar mat3 = MatrixUtil.mat3;\nvar vec3 = MatrixUtil.vec3;\n\nvar Coord =\n/*#__PURE__*/\nfunction () {\n  _createClass(Coord, [{\n    key: \"getDefaultCfg\",\n\n    /**\n     * 获取默认的配置属性\n     * @protected\n     * @return {Object} 默认属性\n     */\n    value: function getDefaultCfg() {\n      return {\n        /**\n         * Mark x y is transposed.\n         * @type {Boolean}\n         */\n        isTransposed: false,\n\n        /**\n         * The matrix of coordinate\n         * @type {Array}\n         */\n        matrix: [1, 0, 0, 0, 1, 0, 0, 0, 1]\n      };\n    }\n  }]);\n\n  function Coord(cfg) {\n    _classCallCheck(this, Coord);\n\n    var defaultCfg = this.getDefaultCfg();\n    mix(this, defaultCfg, cfg);\n    this.init();\n  }\n\n  _createClass(Coord, [{\n    key: \"init\",\n    value: function init() {\n      var start = this.start;\n      var end = this.end;\n      var center = {\n        x: (start.x + end.x) / 2,\n        y: (start.y + end.y) / 2\n      };\n      this.center = center;\n      this.width = Math.abs(end.x - start.x);\n      this.height = Math.abs(end.y - start.y);\n    }\n  }, {\n    key: \"_swapDim\",\n    value: function _swapDim(dim) {\n      var dimRange = this[dim];\n\n      if (dimRange) {\n        var tmp = dimRange.start;\n        dimRange.start = dimRange.end;\n        dimRange.end = tmp;\n      }\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.center;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.height;\n    }\n  }, {\n    key: \"convertDim\",\n    value: function convertDim(percent, dim) {\n      var _this$dim = this[dim],\n          start = _this$dim.start,\n          end = _this$dim.end;\n      return start + percent * (end - start);\n    }\n  }, {\n    key: \"invertDim\",\n    value: function invertDim(value, dim) {\n      var _this$dim2 = this[dim],\n          start = _this$dim2.start,\n          end = _this$dim2.end;\n      return (value - start) / (end - start);\n    }\n    /**\n     * 将归一化的坐标点数据转换为画布坐标\n     * @override\n     * @param  {Object} point 归一化的坐标点\n     * @return {Object}       返回画布坐标\n     */\n\n  }, {\n    key: \"convertPoint\",\n    value: function convertPoint(point) {\n      return point;\n    }\n    /**\n     * 将画布坐标转换为归一化的坐标点数据\n     * @override\n     * @param  {Object} point 画布坐标点数据\n     * @return {Object}       归一化后的数据点\n     */\n\n  }, {\n    key: \"invertPoint\",\n    value: function invertPoint(point) {\n      return point;\n    }\n    /**\n     * 将坐标点进行矩阵变换\n     * @param  {Number} x   对应 x 轴画布坐标\n     * @param  {Number} y   对应 y 轴画布坐标\n     * @param  {Number} tag 默认为 0，可取值 0, 1\n     * @return {Array}     返回变换后的三阶向量 [x, y, z]\n     */\n\n  }, {\n    key: \"applyMatrix\",\n    value: function applyMatrix(x, y) {\n      var tag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var matrix = this.matrix;\n      var vector = [x, y, tag];\n      vec3.transformMat3(vector, vector, matrix);\n      return vector;\n    }\n    /**\n     * 将坐标点进行矩阵逆变换\n     * @param  {Number} x   对应 x 轴画布坐标\n     * @param  {Number} y   对应 y 轴画布坐标\n     * @param  {Number} tag 默认为 0，可取值 0, 1\n     * @return {Array}     返回矩阵逆变换后的三阶向量 [x, y, z]\n     */\n\n  }, {\n    key: \"invertMatrix\",\n    value: function invertMatrix(x, y) {\n      var tag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var matrix = this.matrix;\n      var inversedMatrix = mat3.invert([], matrix);\n      var vector = [x, y, tag];\n      vec3.transformMat3(vector, vector, inversedMatrix);\n      return vector;\n    }\n    /**\n     * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换\n     * @param  {Object} point 归一化的坐标点\n     * @return {Object}       返回进行矩阵变换后的画布坐标\n     */\n\n  }, {\n    key: \"convert\",\n    value: function convert(point) {\n      var _this$convertPoint = this.convertPoint(point),\n          x = _this$convertPoint.x,\n          y = _this$convertPoint.y;\n\n      var vector = this.applyMatrix(x, y, 1);\n      return {\n        x: vector[0],\n        y: vector[1]\n      };\n    }\n    /**\n     * 将进行过矩阵变换画布坐标转换为归一化坐标\n     * @param  {Object} point 画布坐标\n     * @return {Object}       返回归一化的坐标点\n     */\n\n  }, {\n    key: \"invert\",\n    value: function invert(point) {\n      var vector = this.invertMatrix(point.x, point.y, 1);\n      return this.invertPoint({\n        x: vector[0],\n        y: vector[1]\n      });\n    }\n    /**\n     * 坐标系旋转变换\n     * @param  {Number} radian 旋转弧度\n     * @return {Object}        返回坐标系对象\n     */\n\n  }, {\n    key: \"rotate\",\n    value: function rotate(radian) {\n      var matrix = this.matrix;\n      var center = this.center;\n      mat3.translate(matrix, matrix, [-center.x, -center.y]);\n      mat3.rotate(matrix, matrix, radian);\n      mat3.translate(matrix, matrix, [center.x, center.y]);\n      return this;\n    }\n    /**\n     * 坐标系反射变换\n     * @param  {String} dim 反射维度\n     * @return {Object}     返回坐标系对象\n     */\n\n  }, {\n    key: \"reflect\",\n    value: function reflect(dim) {\n      switch (dim) {\n        case 'x':\n          this._swapDim('x');\n\n          break;\n\n        case 'y':\n          this._swapDim('y');\n\n          break;\n\n        default:\n          this._swapDim('y');\n\n      }\n\n      return this;\n    }\n    /**\n     * 坐标系比例变换\n     * @param  {Number} s1 x 方向缩放比例\n     * @param  {Number} s2 y 方向缩放比例\n     * @return {Object}    返回坐标系对象\n     */\n\n  }, {\n    key: \"scale\",\n    value: function scale(s1, s2) {\n      var matrix = this.matrix;\n      var center = this.center;\n      mat3.translate(matrix, matrix, [-center.x, -center.y]);\n      mat3.scale(matrix, matrix, [s1, s2]);\n      mat3.translate(matrix, matrix, [center.x, center.y]);\n      return this;\n    }\n    /**\n     * 坐标系平移变换\n     * @param  {Number} x x 方向平移像素\n     * @param  {Number} y y 方向平移像素\n     * @return {Object}   返回坐标系对象\n     */\n\n  }, {\n    key: \"translate\",\n    value: function translate(x, y) {\n      var matrix = this.matrix;\n      mat3.translate(matrix, matrix, [x, y]);\n      return this;\n    }\n    /**\n     * 将坐标系 x y 两个轴进行转置\n     * @return {Object} 返回坐标系对象\n     */\n\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      this.isTransposed = !this.isTransposed;\n      return this;\n    }\n  }]);\n\n  return Coord;\n}();\n\nmodule.exports = Coord;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview shape 的辅助方法\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar ShapeUtil = {\n  splitPoints: function splitPoints(obj) {\n    var points = [];\n    var x = obj.x;\n    var y = obj.y;\n    y = Util.isArray(y) ? y : [y];\n    Util.each(y, function (yItem, index) {\n      var point = {\n        x: Util.isArray(x) ? x[index] : x,\n        y: yItem\n      };\n      points.push(point);\n    });\n    return points;\n  },\n  addFillAttrs: function addFillAttrs(attrs, cfg) {\n    if (cfg.color) {\n      attrs.fill = cfg.color;\n    }\n\n    if (Util.isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.fillOpacity = cfg.opacity;\n    }\n  },\n  addStrokeAttrs: function addStrokeAttrs(attrs, cfg) {\n    if (cfg.color) {\n      attrs.stroke = cfg.color;\n    }\n\n    if (Util.isNumber(cfg.opacity)) {\n      attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n    }\n  }\n};\nmodule.exports = ShapeUtil;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isArray = __webpack_require__(4);\n\nvar clone = function clone(obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {\n    return obj;\n  }\n\n  var rst = void 0;\n\n  if (isArray(obj)) {\n    rst = [];\n\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (_typeof(obj[i]) === 'object' && obj[i] != null) {\n        rst[i] = clone(obj[i]);\n      } else {\n        rst[i] = obj[i];\n      }\n    }\n  } else {\n    rst = {};\n\n    for (var k in obj) {\n      if (_typeof(obj[k]) === 'object' && obj[k] != null) {\n        rst[k] = clone(obj[k]);\n      } else {\n        rst[k] = obj[k];\n      }\n    }\n  }\n\n  return rst;\n};\n\nmodule.exports = clone;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isPlainObject = __webpack_require__(26);\n\nvar isArray = __webpack_require__(4);\n\nvar MAX_MIX_LEVEL = 5;\n\nfunction _deepMix(dist, src, level, maxLevel) {\n  level = level || 0;\n  maxLevel = maxLevel || MAX_MIX_LEVEL;\n\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      var value = src[key];\n\n      if (value !== null && isPlainObject(value)) {\n        if (!isPlainObject(dist[key])) {\n          dist[key] = {};\n        }\n\n        if (level < maxLevel) {\n          _deepMix(dist[key], value, level + 1, maxLevel);\n        } else {\n          dist[key] = src[key];\n        }\n      } else if (isArray(value)) {\n        dist[key] = [];\n        dist[key] = dist[key].concat(value);\n      } else if (value !== undefined) {\n        dist[key] = value;\n      }\n    }\n  }\n}\n\nvar deepMix = function deepMix() {\n  var args = new Array(arguments.length);\n  var length = args.length;\n\n  for (var i = 0; i < length; i++) {\n    args[i] = arguments[i];\n  }\n\n  var rst = args[0];\n\n  for (var _i = 1; _i < length; _i++) {\n    _deepMix(rst, args[_i]);\n  }\n\n  return rst;\n};\n\nmodule.exports = deepMix;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObjectLike = function isObjectLike(value) {\n  /**\n   * isObjectLike({}) => true\n   * isObjectLike([1, 2, 3]) => true\n   * isObjectLike(Function) => false\n   * isObjectLike(null) => false\n   */\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n};\n\nmodule.exports = isObjectLike;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObjectLike = __webpack_require__(48);\n\nvar isArrayLike = __webpack_require__(13);\n\nvar isString = __webpack_require__(10);\n\nvar isEqual = function isEqual(value, other) {\n  if (value === other) {\n    return true;\n  }\n\n  if (!value || !other) {\n    return false;\n  }\n\n  if (isString(value) || isString(other)) {\n    return false;\n  }\n\n  if (isArrayLike(value) || isArrayLike(other)) {\n    if (value.length !== other.length) {\n      return false;\n    }\n\n    var rst = true;\n\n    for (var i = 0; i < value.length; i++) {\n      rst = isEqual(value[i], other[i]);\n\n      if (!rst) {\n        break;\n      }\n    }\n\n    return rst;\n  }\n\n  if (isObjectLike(value) || isObjectLike(other)) {\n    var valueKeys = Object.keys(value);\n    var otherKeys = Object.keys(other);\n\n    if (valueKeys.length !== otherKeys.length) {\n      return false;\n    }\n\n    var _rst = true;\n\n    for (var _i = 0; _i < valueKeys.length; _i++) {\n      _rst = isEqual(value[valueKeys[_i]], other[valueKeys[_i]]);\n\n      if (!_rst) {\n        break;\n      }\n    }\n\n    return _rst;\n  }\n\n  return false;\n};\n\nmodule.exports = isEqual;\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nvar clamp = function clamp(a, min, max) {\n  if (a < min) {\n    return min;\n  } else if (a > max) {\n    return max;\n  }\n\n  return a;\n};\n\nmodule.exports = clamp;\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mat3 = __webpack_require__(182);\n\nmat3.translate = function (out, a, v) {\n  var transMat = new Array(9);\n  mat3.fromTranslation(transMat, v);\n  return mat3.multiply(out, transMat, a);\n};\n\nmat3.rotate = function (out, a, rad) {\n  var rotateMat = new Array(9);\n  mat3.fromRotation(rotateMat, rad);\n  return mat3.multiply(out, rotateMat, a);\n};\n\nmat3.scale = function (out, a, v) {\n  var scaleMat = new Array(9);\n  mat3.fromScaling(scaleMat, v);\n  return mat3.multiply(out, scaleMat, a);\n};\n\nmodule.exports = mat3;\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\n\nvar EPSILON = exports.EPSILON = 0.000001;\nvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = exports.RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * EventEmitter v5.1.0 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n;\n\n(function (exports) {\n  'use strict';\n  /**\n   * Class for managing events.\n   * Can be extended to provide event functionality in other classes.\n   *\n   * @class EventEmitter Manages event registering and emitting.\n   */\n\n  function EventEmitter() {} // Shortcuts to improve speed and size\n\n\n  var proto = EventEmitter.prototype;\n  var originalGlobalValue = exports.EventEmitter;\n  /**\n   * Finds the index of the listener for the event in its storage array.\n   *\n   * @param {Function[]} listeners Array of listeners to search through.\n   * @param {Function} listener Method to look for.\n   * @return {Number} Index of the specified listener, -1 if not found\n   * @api private\n   */\n\n  function indexOfListener(listeners, listener) {\n    var i = listeners.length;\n\n    while (i--) {\n      if (listeners[i].listener === listener) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Alias a method while keeping the context correct, to allow for overwriting of target method.\n   *\n   * @param {String} name The name of the target method.\n   * @return {Function} The aliased method\n   * @api private\n   */\n\n\n  function alias(name) {\n    return function aliasClosure() {\n      return this[name].apply(this, arguments);\n    };\n  }\n  /**\n   * Returns the listener array for the specified event.\n   * Will initialise the event object and listener arrays if required.\n   * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n   * Each property in the object response is an array of listener functions.\n   *\n   * @param {String|RegExp} evt Name of the event to return the listeners from.\n   * @return {Function[]|Object} All listener functions for the event.\n   */\n\n\n  proto.getListeners = function getListeners(evt) {\n    var events = this._getEvents();\n\n    var response;\n    var key; // Return a concatenated array of all matching events if\n    // the selector is a regular expression.\n\n    if (evt instanceof RegExp) {\n      response = {};\n\n      for (key in events) {\n        if (events.hasOwnProperty(key) && evt.test(key)) {\n          response[key] = events[key];\n        }\n      }\n    } else {\n      response = events[evt] || (events[evt] = []);\n    }\n\n    return response;\n  };\n  /**\n   * Takes a list of listener objects and flattens it into a list of listener functions.\n   *\n   * @param {Object[]} listeners Raw listener objects.\n   * @return {Function[]} Just the listener functions.\n   */\n\n\n  proto.flattenListeners = function flattenListeners(listeners) {\n    var flatListeners = [];\n    var i;\n\n    for (i = 0; i < listeners.length; i += 1) {\n      flatListeners.push(listeners[i].listener);\n    }\n\n    return flatListeners;\n  };\n  /**\n   * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n   *\n   * @param {String|RegExp} evt Name of the event to return the listeners from.\n   * @return {Object} All listener functions for an event in an object.\n   */\n\n\n  proto.getListenersAsObject = function getListenersAsObject(evt) {\n    var listeners = this.getListeners(evt);\n    var response;\n\n    if (listeners instanceof Array) {\n      response = {};\n      response[evt] = listeners;\n    }\n\n    return response || listeners;\n  };\n\n  function isValidListener(listener) {\n    if (typeof listener === 'function' || listener instanceof RegExp) {\n      return true;\n    } else if (listener && typeof listener === 'object') {\n      return isValidListener(listener.listener);\n    } else {\n      return false;\n    }\n  }\n  /**\n   * Adds a listener function to the specified event.\n   * The listener will not be added if it is a duplicate.\n   * If the listener returns true then it will be removed after it is called.\n   * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n   *\n   * @param {String|RegExp} evt Name of the event to attach the listener to.\n   * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.addListener = function addListener(evt, listener) {\n    if (!isValidListener(listener)) {\n      throw new TypeError('listener must be a function');\n    }\n\n    var listeners = this.getListenersAsObject(evt);\n    var listenerIsWrapped = typeof listener === 'object';\n    var key;\n\n    for (key in listeners) {\n      if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n        listeners[key].push(listenerIsWrapped ? listener : {\n          listener: listener,\n          once: false\n        });\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Alias of addListener\n   */\n\n\n  proto.on = alias('addListener');\n  /**\n   * Semi-alias of addListener. It will add a listener that will be\n   * automatically removed after its first execution.\n   *\n   * @param {String|RegExp} evt Name of the event to attach the listener to.\n   * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n  proto.addOnceListener = function addOnceListener(evt, listener) {\n    return this.addListener(evt, {\n      listener: listener,\n      once: true\n    });\n  };\n  /**\n   * Alias of addOnceListener.\n   */\n\n\n  proto.once = alias('addOnceListener');\n  /**\n   * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n   * You need to tell it what event names should be matched by a regex.\n   *\n   * @param {String} evt Name of the event to create.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n  proto.defineEvent = function defineEvent(evt) {\n    this.getListeners(evt);\n    return this;\n  };\n  /**\n   * Uses defineEvent to define multiple events.\n   *\n   * @param {String[]} evts An array of event names to define.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.defineEvents = function defineEvents(evts) {\n    for (var i = 0; i < evts.length; i += 1) {\n      this.defineEvent(evts[i]);\n    }\n\n    return this;\n  };\n  /**\n   * Removes a listener function from the specified event.\n   * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n   *\n   * @param {String|RegExp} evt Name of the event to remove the listener from.\n   * @param {Function} listener Method to remove from the event.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.removeListener = function removeListener(evt, listener) {\n    var listeners = this.getListenersAsObject(evt);\n    var index;\n    var key;\n\n    for (key in listeners) {\n      if (listeners.hasOwnProperty(key)) {\n        index = indexOfListener(listeners[key], listener);\n\n        if (index !== -1) {\n          listeners[key].splice(index, 1);\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Alias of removeListener\n   */\n\n\n  proto.off = alias('removeListener');\n  /**\n   * Adds listeners in bulk using the manipulateListeners method.\n   * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n   * You can also pass it a regular expression to add the array of listeners to all events that match it.\n   * Yeah, this function does quite a bit. That's probably a bad thing.\n   *\n   * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to add.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n  proto.addListeners = function addListeners(evt, listeners) {\n    // Pass through to manipulateListeners\n    return this.manipulateListeners(false, evt, listeners);\n  };\n  /**\n   * Removes listeners in bulk using the manipulateListeners method.\n   * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n   * You can also pass it an event name and an array of listeners to be removed.\n   * You can also pass it a regular expression to remove the listeners from all events that match it.\n   *\n   * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to remove.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.removeListeners = function removeListeners(evt, listeners) {\n    // Pass through to manipulateListeners\n    return this.manipulateListeners(true, evt, listeners);\n  };\n  /**\n   * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n   * The first argument will determine if the listeners are removed (true) or added (false).\n   * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n   * You can also pass it an event name and an array of listeners to be added/removed.\n   * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n   *\n   * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n   * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n   * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n    var i;\n    var value;\n    var single = remove ? this.removeListener : this.addListener;\n    var multiple = remove ? this.removeListeners : this.addListeners; // If evt is an object then pass each of its properties to this method\n\n    if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n      for (i in evt) {\n        if (evt.hasOwnProperty(i) && (value = evt[i])) {\n          // Pass the single listener straight through to the singular method\n          if (typeof value === 'function') {\n            single.call(this, i, value);\n          } else {\n            // Otherwise pass back to the multiple function\n            multiple.call(this, i, value);\n          }\n        }\n      }\n    } else {\n      // So evt must be a string\n      // And listeners must be an array of listeners\n      // Loop over it and pass each one to the multiple method\n      i = listeners.length;\n\n      while (i--) {\n        single.call(this, evt, listeners[i]);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Removes all listeners from a specified event.\n   * If you do not specify an event then all listeners will be removed.\n   * That means every event will be emptied.\n   * You can also pass a regex to remove all events that match it.\n   *\n   * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.removeEvent = function removeEvent(evt) {\n    var type = typeof evt;\n\n    var events = this._getEvents();\n\n    var key; // Remove different things depending on the state of evt\n\n    if (type === 'string') {\n      // Remove all listeners for the specified event\n      delete events[evt];\n    } else if (evt instanceof RegExp) {\n      // Remove all events matching the regex.\n      for (key in events) {\n        if (events.hasOwnProperty(key) && evt.test(key)) {\n          delete events[key];\n        }\n      }\n    } else {\n      // Remove all listeners in all events\n      delete this._events;\n    }\n\n    return this;\n  };\n  /**\n   * Alias of removeEvent.\n   *\n   * Added to mirror the node API.\n   */\n\n\n  proto.removeAllListeners = alias('removeEvent');\n  /**\n   * Emits an event of your choice.\n   * When emitted, every listener attached to that event will be executed.\n   * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n   * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n   * So they will not arrive within the array on the other side, they will be separate.\n   * You can also pass a regular expression to emit to all events that match it.\n   *\n   * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n   * @param {Array} [args] Optional array of arguments to be passed to each listener.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n  proto.emitEvent = function emitEvent(evt, args) {\n    var listenersMap = this.getListenersAsObject(evt);\n    var listeners;\n    var listener;\n    var i;\n    var key;\n    var response;\n\n    for (key in listenersMap) {\n      if (listenersMap.hasOwnProperty(key)) {\n        listeners = listenersMap[key].slice(0);\n\n        for (i = 0; i < listeners.length; i++) {\n          // If the listener returns true then it shall be removed from the event\n          // The function is executed either with a basic call or an apply if there is an args array\n          listener = listeners[i];\n\n          if (listener.once === true) {\n            this.removeListener(evt, listener.listener);\n          }\n\n          response = listener.listener.apply(this, args || []);\n\n          if (response === this._getOnceReturnValue()) {\n            this.removeListener(evt, listener.listener);\n          }\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Alias of emitEvent\n   */\n\n\n  proto.trigger = alias('emitEvent');\n  /**\n   * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n   * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n   *\n   * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n   * @param {...*} Optional additional arguments to be passed to each listener.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n  proto.emit = function emit(evt) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return this.emitEvent(evt, args);\n  };\n  /**\n   * Sets the current value to check against when executing listeners. If a\n   * listeners return value matches the one set here then it will be removed\n   * after execution. This value defaults to true.\n   *\n   * @param {*} value The new value to check for when executing listeners.\n   * @return {Object} Current instance of EventEmitter for chaining.\n   */\n\n\n  proto.setOnceReturnValue = function setOnceReturnValue(value) {\n    this._onceReturnValue = value;\n    return this;\n  };\n  /**\n   * Fetches the current value to check against when executing listeners. If\n   * the listeners return value matches this one then it should be removed\n   * automatically. It will return true by default.\n   *\n   * @return {*|Boolean} The current value to check for or the default, true.\n   * @api private\n   */\n\n\n  proto._getOnceReturnValue = function _getOnceReturnValue() {\n    if (this.hasOwnProperty('_onceReturnValue')) {\n      return this._onceReturnValue;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Fetches the events object and creates one if required.\n   *\n   * @return {Object} The events storage object.\n   * @api private\n   */\n\n\n  proto._getEvents = function _getEvents() {\n    return this._events || (this._events = {});\n  };\n  /**\n   * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n   *\n   * @return {Function} Non conflicting EventEmitter class.\n   */\n\n\n  EventEmitter.noConflict = function noConflict() {\n    exports.EventEmitter = originalGlobalValue;\n    return EventEmitter;\n  }; // Expose the class either via AMD, CommonJS or the global object\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return EventEmitter;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this || {});\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Line = __webpack_require__(36);\n\nvar Quadratic = __webpack_require__(103);\n\nvar Cubic = __webpack_require__(55);\n\nvar Arc = __webpack_require__(37);\n\nmodule.exports = {\n  line: function line(x1, y1, x2, y2, lineWidth, x, y) {\n    var box = Line.box(x1, y1, x2, y2, lineWidth);\n\n    if (!this.box(box.minX, box.maxX, box.minY, box.maxY, x, y)) {\n      return false;\n    }\n\n    var d = Line.pointDistance(x1, y1, x2, y2, x, y);\n\n    if (isNaN(d)) {\n      return false;\n    }\n\n    return d <= lineWidth / 2;\n  },\n  polyline: function polyline(points, lineWidth, x, y) {\n    var l = points.length - 1;\n\n    if (l < 1) {\n      return false;\n    }\n\n    for (var i = 0; i < l; i++) {\n      var x1 = points[i][0];\n      var y1 = points[i][1];\n      var x2 = points[i + 1][0];\n      var y2 = points[i + 1][1];\n\n      if (this.line(x1, y1, x2, y2, lineWidth, x, y)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  cubicline: function cubicline(x1, y1, x2, y2, x3, y3, x4, y4, lineWidth, x, y) {\n    return Cubic.pointDistance(x1, y1, x2, y2, x3, y3, x4, y4, x, y) <= lineWidth / 2;\n  },\n  quadraticline: function quadraticline(x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n    return Quadratic.pointDistance(x1, y1, x2, y2, x3, y3, x, y) <= lineWidth / 2;\n  },\n  arcline: function arcline(cx, cy, r, startAngle, endAngle, clockwise, lineWidth, x, y) {\n    return Arc.pointDistance(cx, cy, r, startAngle, endAngle, clockwise, x, y) <= lineWidth / 2;\n  },\n  rect: function rect(rx, ry, width, height, x, y) {\n    return rx <= x && x <= rx + width && ry <= y && y <= ry + height;\n  },\n  circle: function circle(cx, cy, r, x, y) {\n    return Math.pow(x - cx, 2) + Math.pow(y - cy, 2) <= Math.pow(r, 2);\n  },\n  box: function box(minX, maxX, minY, maxY, x, y) {\n    return minX <= x && x <= maxX && minY <= y && y <= maxY;\n  }\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar vec2 = Util.vec2;\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p3 + 3 * t * p2) + t * t * (t * p0 + 3 * onet * p1);\n}\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n\nfunction cubicProjectPoint(x1, y1, x2, y2, x3, y3, x4, y4, x, y, out) {\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n\n  var _t;\n\n  var v1;\n  var d1;\n  var d2;\n  var v2;\n  var prev;\n  var next;\n  var EPSILON = 0.0001;\n  var v0 = [x, y];\n\n  for (_t = 0; _t < 1; _t += 0.05) {\n    v1 = [cubicAt(x1, x2, x3, x4, _t), cubicAt(y1, y2, y3, y4, _t)];\n    d1 = vec2.squaredDistance(v0, v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity;\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval;\n    v1 = [cubicAt(x1, x2, x3, x4, prev), cubicAt(y1, y2, y3, y4, prev)];\n    d1 = vec2.squaredDistance(v0, v1);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      v2 = [cubicAt(x1, x2, x3, x4, next), cubicAt(y1, y2, y3, y4, next)];\n      d2 = vec2.squaredDistance(v0, v2);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n\n  if (out) {\n    out.x = cubicAt(x1, x2, x3, x4, t);\n    out.y = cubicAt(y1, y2, y3, y4, t);\n  }\n\n  return Math.sqrt(d);\n}\n\nfunction cubicExtrema(p0, p1, p2, p3) {\n  var a = 3 * p0 - 9 * p1 + 9 * p2 - 3 * p3;\n  var b = 6 * p1 - 12 * p2 + 6 * p3;\n  var c = 3 * p2 - 3 * p3;\n  var extrema = [];\n  var t1;\n  var t2;\n  var discSqrt;\n\n  if (Util.isNumberEqual(a, 0)) {\n    if (!Util.isNumberEqual(b, 0)) {\n      t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema.push(t1);\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (Util.isNumberEqual(disc, 0)) {\n      extrema.push(-b / (2 * a));\n    } else if (disc > 0) {\n      discSqrt = Math.sqrt(disc);\n      t1 = (-b + discSqrt) / (2 * a);\n      t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema.push(t1);\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema.push(t2);\n      }\n    }\n  }\n\n  return extrema;\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction cubiclLen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (Util.isNil(z)) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\nmodule.exports = {\n  at: cubicAt,\n  derivativeAt: cubicDerivativeAt,\n  projectPoint: function projectPoint(x1, y1, x2, y2, x3, y3, x4, y4, x, y) {\n    var rst = {};\n    cubicProjectPoint(x1, y1, x2, y2, x3, y3, x4, y4, x, y, rst);\n    return rst;\n  },\n  pointDistance: cubicProjectPoint,\n  extrema: cubicExtrema,\n  len: cubiclLen\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Format = __webpack_require__(27);\n\nvar PathSegment = __webpack_require__(39);\n\nvar Marker = function Marker(cfg) {\n  Marker.superclass.constructor.call(this, cfg);\n};\n\nMarker.Symbols = {\n  // 圆\n  circle: function circle(x, y, r) {\n    return [['M', x, y], ['m', -r, 0], ['a', r, r, 0, 1, 0, r * 2, 0], ['a', r, r, 0, 1, 0, -r * 2, 0]];\n  },\n  // 正方形\n  square: function square(x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n  },\n  // 菱形\n  diamond: function diamond(x, y, r) {\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n  },\n  // 三角形\n  triangle: function triangle(x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];\n  },\n  // 倒三角形\n  'triangle-down': function triangleDown(x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n  }\n};\nMarker.ATTRS = {\n  path: null,\n  lineWidth: 1\n};\nUtil.extend(Marker, Shape);\nUtil.augment(Marker, {\n  type: 'marker',\n  canFill: true,\n  canStroke: true,\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      x: 0,\n      y: 0,\n      lineWidth: 1\n    };\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.radius;\n    var lineWidth = this.getHitLineWidth();\n    var halfWidth = lineWidth / 2 + r;\n    return {\n      minX: cx - halfWidth,\n      minY: cy - halfWidth,\n      maxX: cx + halfWidth,\n      maxY: cy + halfWidth\n    };\n  },\n  _getPath: function _getPath() {\n    var attrs = this._attrs;\n    var x = attrs.x;\n    var y = attrs.y;\n    var r = attrs.radius || attrs.r;\n    var symbol = attrs.symbol || 'circle';\n    var method;\n\n    if (Util.isFunction(symbol)) {\n      method = symbol;\n    } else {\n      method = Marker.Symbols[symbol];\n    }\n\n    return method(x, y, r);\n  },\n  createPath: function createPath(context) {\n    var segments = this._cfg.segments;\n\n    if (segments && !this._cfg.hasUpdate) {\n      context.beginPath();\n\n      for (var i = 0; i < segments.length; i++) {\n        segments[i].draw(context);\n      }\n\n      return;\n    }\n\n    var path = Format.parsePath(this._getPath());\n    context.beginPath();\n    var preSegment;\n    segments = [];\n\n    for (var _i = 0; _i < path.length; _i++) {\n      var item = path[_i];\n      preSegment = new PathSegment(item, preSegment, _i === path.length - 1);\n      segments.push(preSegment);\n      preSegment.draw(context);\n    }\n\n    this._cfg.segments = segments;\n    this._cfg.hasUpdate = false;\n  }\n});\nmodule.exports = Marker;\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(81);\n\nvar SPACES = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\";\nvar PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');\nvar PATH_VALUES = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig'); // Parses given path string into an array of arrays of path segments\n\nvar parsePathString = function parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if (typeof pathString === typeof []) {\n    return pathString;\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  };\n  var data = [];\n  String(pathString).replace(PATH_COMMAND, function (a, b, c) {\n    var params = [];\n    var name = b.toLowerCase();\n    c.replace(PATH_VALUES, function (a, b) {\n      b && params.push(+b);\n    });\n\n    if (name === 'm' && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = 'l';\n      b = b === 'm' ? 'l' : 'L';\n    }\n\n    if (name === 'o' && params.length === 1) {\n      data.push([b, params[0]]);\n    }\n\n    if (name === 'r') {\n      data.push([b].concat(params));\n    } else {\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    }\n  });\n  return data;\n}; // http://schepers.cc/getting-to-the-point\n\n\nvar catmullRom2bezier = function catmullRom2bezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n\n  return d;\n};\n\nvar ellipsePath = function ellipsePath(x, y, rx, ry, a) {\n  var res = [];\n\n  if (a === null && ry === null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a !== null) {\n    var rad = Math.PI / 180;\n    var x1 = x + rx * Math.cos(-ry * rad);\n    var x2 = x + rx * Math.cos(-a * rad);\n    var y1 = y + rx * Math.sin(-ry * rad);\n    var y2 = y + rx * Math.sin(-a * rad);\n    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n  }\n\n  return res;\n};\n\nvar pathToAbsolute = function pathToAbsolute(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [];\n  var x = 0;\n  var y = 0;\n  var mx = 0;\n  var my = 0;\n  var start = 0;\n  var pa0;\n  var dots;\n\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 !== pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        // for lint\n\n        default:\n          for (var _j = 1, _jj = pa.length; _j < _jj; _j++) {\n            r[_j] = +pa[_j] + (_j % 2 ? x : y);\n          }\n\n      }\n    } else if (pa0 === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 === 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 === 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 !== 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n\n        case 'H':\n          x = r[1];\n          break;\n\n        case 'V':\n          y = r[1];\n          break;\n\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n          break;\n        // for lint\n\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\nvar l2c = function l2c(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\n\nvar q2c = function q2c(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3;\n\n  var _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\n\nvar a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  if (rx === ry) {\n    rx += 1;\n  }\n\n  var _120 = Math.PI * 120 / 180;\n\n  var rad = Math.PI / 180 * (+angle || 0);\n  var res = [];\n  var xy;\n  var f1;\n  var f2;\n  var cx;\n  var cy;\n\n  var rotate = function rotate(x, y, rad) {\n    var X = x * Math.cos(rad) - y * Math.sin(rad);\n    var Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  };\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    if (x1 === x2 && y1 === y2) {\n      // 若弧的起始点和终点重叠则错开一点\n      x2 += 1;\n      y2 += 1;\n    } // const cos = Math.cos(Math.PI / 180 * angle);\n    // const sin = Math.sin(Math.PI / 180 * angle);\n\n\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (Math.abs(df) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = Math.cos(f1);\n  var s1 = Math.sin(f1);\n  var c2 = Math.cos(f2);\n  var s2 = Math.sin(f2);\n  var t = Math.tan(df / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var m1 = [x1, y1];\n  var m2 = [x1 + hx * s1, y1 - hy * c1];\n  var m3 = [x2 + hx * s2, y2 - hy * c2];\n  var m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  }\n\n  res = [m2, m3, m4].concat(res).join().split(',');\n  var newres = [];\n\n  for (var i = 0, ii = res.length; i < ii; i++) {\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n  }\n\n  return newres;\n};\n\nvar pathTocurve = function pathTocurve(path, path2) {\n  var p = pathToAbsolute(path);\n  var p2 = path2 && pathToAbsolute(path2);\n  var attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var pcoms1 = []; // path commands of original path p\n\n  var pcoms2 = []; // path commands of original path p2\n\n  var pfirst = ''; // temporary holder for original path command\n\n  var pcom = ''; // holder for previous path command of original path\n\n  var ii;\n\n  var processPath = function processPath(path, d, pcom) {\n    var nx, ny;\n\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case 'A':\n        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case 'S':\n        if (pcom === 'C' || pcom === 'S') {\n          // In \"S\" case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n\n      case 'T':\n        if (pcom === 'Q' || pcom === 'T') {\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case 'L':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n        break;\n\n      case 'H':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n        break;\n\n      case 'V':\n        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n        break;\n\n      case 'Z':\n        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n\n      default:\n        break;\n    }\n\n    return path;\n  };\n\n  var fixArc = function fixArc(pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n\n        p2 && (pcoms2[i] = 'A'); // the same as above\n\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  var fixM = function fixM(path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  ii = Math.max(p.length, p2 && p2.length || 0);\n\n  for (var i = 0; i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst !== 'C') {\n      // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i];\n    var seg2 = p2 && p2[i];\n    var seglen = seg.length;\n    var seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n};\n\nvar p2s = /,?([a-z]),?/gi;\n\nvar parsePathArray = function parsePathArray(path) {\n  return path.join(',').replace(p2s, '$1');\n};\n\nvar base3 = function base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\n\nvar bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z === null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n\n  return z2 * sum;\n};\n\nvar curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [];\n  var bounds = [[], []];\n  var a;\n  var b;\n  var c;\n  var t;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (t > 0 && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    var b2ac = b * b - 4 * c * a;\n    var sqrtb2ac = Math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    var t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (t1 > 0 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    var t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (t2 > 0 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length;\n  var jlen = j;\n  var mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n};\n\nvar intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator;\n  var py = ny / denominator;\n  var px2 = +px.toFixed(2);\n  var py2 = +py.toFixed(2);\n\n  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n};\n\nvar isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\n\nvar rectPath = function rectPath(x, y, w, h, r) {\n  if (r) {\n    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.parsePathArray = parsePathArray;\n  return res;\n};\n\nvar box = function box(x, y, width, height) {\n  if (x === null) {\n    x = y = width = height = 0;\n  }\n\n  if (y === null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: Math.min(width, height) / 2,\n    r2: Math.max(width, height) / 2,\n    r0: Math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n};\n\nvar isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\n\nvar bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!Util.isArray(p1x)) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveDim.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\n\nvar findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t;\n  var t13 = Math.pow(t1, 3);\n  var t12 = Math.pow(t1, 2);\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  var ax = t1 * p1x + t * c1x;\n  var ay = t1 * p1y + t * c1y;\n  var cx = t1 * c2x + t * p2x;\n  var cy = t1 * c2y + t * p2y;\n  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);\n\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n};\n\nvar interHelper = function interHelper(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1);\n  var bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1);\n  var l2 = bezlen.apply(0, bez2);\n  var n1 = ~~(l1 / 8);\n  var n2 = ~~(l2 / 8);\n  var dots1 = [];\n  var dots2 = [];\n  var xy = {};\n  var res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: d.x,\n      y: d.y,\n      t: i / n1\n    });\n  }\n\n  for (var _i = 0; _i < n2 + 1; _i++) {\n    var _d = findDotsAtSegment.apply(0, bez2.concat(_i / n2));\n\n    dots2.push({\n      x: _d.x,\n      y: _d.y,\n      t: _i / n2\n    });\n  }\n\n  for (var _i2 = 0; _i2 < n1; _i2++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[_i2];\n      var di1 = dots1[_i2 + 1];\n      var dj = dots2[j];\n      var dj1 = dots2[j + 1];\n      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\n        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar interPathHelper = function interPathHelper(path1, path2, justCount) {\n  path1 = pathTocurve(path1);\n  path2 = pathTocurve(path2);\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x1m;\n  var y1m;\n  var x2m;\n  var y2m;\n  var bez1;\n  var bez2;\n  var res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] === 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] === 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] === 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] === 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = interHelper(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar pathIntersection = function pathIntersection(path1, path2) {\n  return interPathHelper(path1, path2);\n};\n\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function recurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var middlePoints = [];\n\n      for (var i = 0; i < points.length - 1; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === points.length - 2) {\n          right.push(points[i + 1]);\n        }\n\n        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      recurse(middlePoints, t);\n    }\n  }\n\n  if (points.length) {\n    recurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n\nfunction splitCurve(start, end, count) {\n  var points = [[start[1], start[2]]];\n  count = count || 2;\n  var segments = [];\n\n  if (end[0] === 'A') {\n    points.push(end[6]);\n    points.push(end[7]);\n  } else if (end[0] === 'C') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n    points.push([end[5], end[6]]);\n  } else if (end[0] === 'S' || end[0] === 'Q') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n  } else {\n    points.push([end[1], end[2]]);\n  }\n\n  var leftSegments = points;\n  var t = 1 / count;\n\n  for (var i = 0; i < count - 1; i++) {\n    var rt = t / (1 - t * i);\n    var split = decasteljau(leftSegments, rt);\n    segments.push(split.left);\n    leftSegments = split.right;\n  }\n\n  segments.push(leftSegments);\n  var result = segments.map(function (segment) {\n    var cmd = [];\n\n    if (segment.length === 4) {\n      cmd.push('C');\n      cmd = cmd.concat(segment[2]);\n    }\n\n    if (segment.length >= 3) {\n      if (segment.length === 3) {\n        cmd.push('Q');\n      }\n\n      cmd = cmd.concat(segment[1]);\n    }\n\n    if (segment.length === 2) {\n      cmd.push('L');\n    }\n\n    cmd = cmd.concat(segment[segment.length - 1]);\n    return cmd;\n  });\n  return result;\n}\n\nvar splitSegment = function splitSegment(start, end, count) {\n  if (count === 1) {\n    return [[].concat(start)];\n  }\n\n  var segments = [];\n\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n    segments = segments.concat(splitCurve(start, end, count));\n  } else {\n    var temp = [].concat(start);\n\n    if (temp[0] === 'M') {\n      temp[0] = 'L';\n    }\n\n    for (var i = 0; i <= count - 1; i++) {\n      segments.push(temp);\n    }\n  }\n\n  return segments;\n};\n\nvar fillPath = function fillPath(source, target) {\n  if (source.length === 1) {\n    return source;\n  }\n\n  var sourceLen = source.length - 1;\n  var targetLen = target.length - 1;\n  var ratio = sourceLen / targetLen;\n  var segmentsToFill = [];\n\n  if (source.length === 1 && source[0][0] === 'M') {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      source.push(source[0]);\n    }\n\n    return source;\n  }\n\n  for (var _i3 = 0; _i3 < targetLen; _i3++) {\n    var index = Math.floor(ratio * _i3);\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n  }\n\n  var filled = segmentsToFill.reduce(function (filled, count, i) {\n    if (i === sourceLen) {\n      return filled.concat(source[sourceLen]);\n    }\n\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\n  }, []);\n  filled.unshift(source[0]);\n\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n    filled.push('Z');\n  }\n\n  return filled;\n};\n\nvar isEqual = function isEqual(obj1, obj2) {\n  if (obj1.length !== obj2.length) {\n    return false;\n  }\n\n  var result = true;\n  Util.each(obj1, function (item, i) {\n    if (item !== obj2[i]) {\n      result = false;\n      return false;\n    }\n  });\n  return result;\n};\n\nfunction getMinDiff(del, add, modify) {\n  var type = null;\n  var min = modify;\n\n  if (add < min) {\n    min = add;\n    type = 'add';\n  }\n\n  if (del < min) {\n    min = del;\n    type = 'del';\n  }\n\n  return {\n    type: type,\n    min: min\n  };\n}\n/*\n * https://en.wikipedia.org/wiki/Levenshtein_distance\n * 计算两条path的编辑距离\n */\n\n\nvar levenshteinDistance = function levenshteinDistance(source, target) {\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var sourceSegment, targetSegment;\n  var temp = 0;\n\n  if (sourceLen === 0 || targetLen === 0) {\n    return null;\n  }\n\n  var dist = [];\n\n  for (var i = 0; i <= sourceLen; i++) {\n    dist[i] = [];\n    dist[i][0] = {\n      min: i\n    };\n  }\n\n  for (var j = 0; j <= targetLen; j++) {\n    dist[0][j] = {\n      min: j\n    };\n  }\n\n  for (var _i4 = 1; _i4 <= sourceLen; _i4++) {\n    sourceSegment = source[_i4 - 1];\n\n    for (var _j2 = 1; _j2 <= targetLen; _j2++) {\n      targetSegment = target[_j2 - 1];\n\n      if (isEqual(sourceSegment, targetSegment)) {\n        temp = 0;\n      } else {\n        temp = 1;\n      }\n\n      var del = dist[_i4 - 1][_j2].min + 1;\n      var add = dist[_i4][_j2 - 1].min + 1;\n      var modify = dist[_i4 - 1][_j2 - 1].min + temp;\n      dist[_i4][_j2] = getMinDiff(del, add, modify);\n    }\n  }\n\n  return dist;\n};\n\nvar fillPathByDiff = function fillPathByDiff(source, target) {\n  var diffMatrix = levenshteinDistance(source, target);\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var changes = [];\n  var index = 1;\n  var minPos = 1; // 如果source和target不是完全不相等\n\n  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\n    // 获取从source到target所需改动\n    for (var i = 1; i <= sourceLen; i++) {\n      var min = diffMatrix[i][i].min;\n      minPos = i;\n\n      for (var j = index; j <= targetLen; j++) {\n        if (diffMatrix[i][j].min < min) {\n          min = diffMatrix[i][j].min;\n          minPos = j;\n        }\n      }\n\n      index = minPos;\n\n      if (diffMatrix[i][index].type) {\n        changes.push({\n          index: i - 1,\n          type: diffMatrix[i][index].type\n        });\n      }\n    } // 对source进行增删path\n\n\n    for (var _i5 = changes.length - 1; _i5 >= 0; _i5--) {\n      index = changes[_i5].index;\n\n      if (changes[_i5].type === 'add') {\n        source.splice(index, 0, [].concat(source[index]));\n      } else {\n        source.splice(index, 1);\n      }\n    }\n  } // source尾部补齐\n\n\n  sourceLen = source.length;\n  var diff = targetLen - sourceLen;\n\n  if (sourceLen < targetLen) {\n    for (var _i6 = 0; _i6 < diff; _i6++) {\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n      } else {\n        source.push(source[sourceLen - 1]);\n      }\n\n      sourceLen += 1;\n    }\n  }\n\n  return source;\n}; // 将两个点均分成count个点\n\n\nfunction _splitPoints(points, former, count) {\n  var result = [].concat(points);\n  var index;\n  var t = 1 / (count + 1);\n\n  var formerEnd = _getSegmentPoints(former)[0];\n\n  for (var i = 1; i <= count; i++) {\n    t *= i;\n    index = Math.floor(points.length * t);\n\n    if (index === 0) {\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    } else {\n      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    }\n  }\n\n  return result;\n}\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\n\n\nfunction _getSegmentPoints(segment) {\n  var points = [];\n\n  switch (segment[0]) {\n    case 'M':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'L':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'A':\n      points.push([segment[6], segment[7]]);\n      break;\n\n    case 'Q':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'T':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'C':\n      points.push([segment[5], segment[6]]);\n      points.push([segment[1], segment[2]]);\n      points.push([segment[3], segment[4]]);\n      break;\n\n    case 'S':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'H':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    case 'V':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    default:\n  }\n\n  return points;\n}\n\nvar formatPath = function formatPath(fromPath, toPath) {\n  if (fromPath.length <= 1) {\n    return fromPath;\n  }\n\n  var points;\n\n  for (var i = 0; i < toPath.length; i++) {\n    if (fromPath[i][0] !== toPath[i][0]) {\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n      points = _getSegmentPoints(fromPath[i]);\n\n      switch (toPath[i][0]) {\n        case 'M':\n          fromPath[i] = ['M'].concat(points[0]);\n          break;\n\n        case 'L':\n          fromPath[i] = ['L'].concat(points[0]);\n          break;\n\n        case 'A':\n          fromPath[i] = [].concat(toPath[i]);\n          fromPath[i][6] = points[0][0];\n          fromPath[i][7] = points[0][1];\n          break;\n\n        case 'Q':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'T':\n          fromPath[i] = ['T'].concat(points[0]);\n          break;\n\n        case 'C':\n          if (points.length < 3) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 2);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'S':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        default:\n          fromPath[i] = toPath[i];\n      }\n    }\n  }\n\n  return fromPath;\n};\n\nmodule.exports = {\n  parsePathString: parsePathString,\n  parsePathArray: parsePathArray,\n  pathTocurve: pathTocurve,\n  pathToAbsolute: pathToAbsolute,\n  catmullRomToBezier: catmullRom2bezier,\n  rectPath: rectPath,\n  fillPath: fillPath,\n  fillPathByDiff: fillPathByDiff,\n  formatPath: formatPath,\n  intersection: pathIntersection\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = now;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Timer;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = timer;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = timerFlush;\nvar frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function (callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function () {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nfunction timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n/***/ }),\n/* 59 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rgb__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__array__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__date__ = __webpack_require__(123);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__number__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__object__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__string__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__constant__ = __webpack_require__(121);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var t = typeof b,\n      c;\n  return b == null || t === \"boolean\" ? Object(__WEBPACK_IMPORTED_MODULE_7__constant__[\"a\" /* default */])(b) : (t === \"number\" ? __WEBPACK_IMPORTED_MODULE_4__number__[\"a\" /* default */] : t === \"string\" ? (c = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"a\" /* color */])(b)) ? (b = c, __WEBPACK_IMPORTED_MODULE_1__rgb__[\"a\" /* default */]) : __WEBPACK_IMPORTED_MODULE_6__string__[\"a\" /* default */] : b instanceof __WEBPACK_IMPORTED_MODULE_0_d3_color__[\"a\" /* color */] ? __WEBPACK_IMPORTED_MODULE_1__rgb__[\"a\" /* default */] : b instanceof Date ? __WEBPACK_IMPORTED_MODULE_3__date__[\"a\" /* default */] : Array.isArray(b) ? __WEBPACK_IMPORTED_MODULE_2__array__[\"a\" /* default */] : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? __WEBPACK_IMPORTED_MODULE_5__object__[\"a\" /* default */] : __WEBPACK_IMPORTED_MODULE_4__number__[\"a\" /* default */])(a, b);\n});\n\n/***/ }),\n/* 60 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Color;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return darker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return brighter; });\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = color;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = rgbConvert;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = rgb;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = Rgb;\n/* unused harmony export hslConvert */\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = hsl;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(61);\n\nfunction Color() {}\nvar darker = 0.7;\nvar brighter = 1 / darker;\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Color, color, {\n  displayable: function () {\n    return this.rgb().displayable();\n  },\n  toString: function () {\n    return this.rgb() + \"\";\n  }\n});\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n  : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Rgb, rgb, Object(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(Color, {\n  brighter: function (k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function (k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function () {\n    return this;\n  },\n  displayable: function () {\n    return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  toString: function () {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Hsl, hsl, Object(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(Color, {\n  brighter: function (k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function (k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function () {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function () {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}\n\n/***/ }),\n/* 61 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = extend;\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n});\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) prototype[key] = definition[key];\n\n  return prototype;\n}\n\n/***/ }),\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = basis;\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\n/* harmony default export */ __webpack_exports__[\"b\"] = (function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isArrayLike = __webpack_require__(13);\n\nvar filter = function filter(arr, func) {\n  if (!isArrayLike(arr)) {\n    return arr;\n  }\n\n  var result = [];\n  each(arr, function (value, index) {\n    if (func(value, index)) {\n      result.push(value);\n    }\n  });\n  return result;\n};\n\nmodule.exports = filter;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNil = __webpack_require__(5);\n\nvar isArray = __webpack_require__(4);\n\nvar each = __webpack_require__(2);\n\nmodule.exports = function valuesOfKey(data, name) {\n  var rst = [];\n  var tmpMap = {};\n\n  for (var i = 0; i < data.length; i++) {\n    var obj = data[i];\n    var value = obj[name];\n\n    if (!isNil(value)) {\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      each(value, function (val) {\n        if (!tmpMap[val]) {\n          rst.push(val);\n          tmpMap[val] = true;\n        }\n      });\n    }\n  }\n\n  return rst;\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(16),\n    Group = _require.Group;\n\nvar _require2 = __webpack_require__(21),\n    Label = _require2.Label; // const visualCenter = require('@antv/component/lib/label/utils/visual-center');\n\n\nvar Global = __webpack_require__(7);\n\nvar Util = __webpack_require__(0);\n\nvar IGNORE_ARR = ['line', 'point', 'path'];\nvar ORIGIN = '_origin';\n\nfunction avg(arr) {\n  var sum = 0;\n  Util.each(arr, function (value) {\n    sum += value;\n  });\n  return sum / arr.length;\n} // 计算多边形重心: https://en.wikipedia.org/wiki/Centroid#Of_a_polygon\n\n\nfunction getCentroid(xs, ys) {\n  var i = -1,\n      x = 0,\n      y = 0;\n  var former,\n      current = xs.length - 1;\n  var diff,\n      k = 0;\n\n  while (++i < xs.length) {\n    former = current;\n    current = i;\n    k += diff = xs[former] * ys[current] - xs[current] * ys[former];\n    x += (xs[former] + xs[current]) * diff;\n    y += (ys[former] + ys[current]) * diff;\n  }\n\n  k *= 3;\n  return [x / k, y / k];\n}\n\nvar GeomLabels =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(GeomLabels, _Group);\n\n  function GeomLabels() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = GeomLabels.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      label: Global.label,\n\n      /**\n       * 用户传入的文本配置信息\n       * @type {Object}\n       */\n      labelCfg: null,\n\n      /**\n       * 所在的坐标系\n       * @type {Object}\n       */\n      coord: null,\n\n      /**\n       * 图表的类型\n       * @type {String}\n       */\n      geomType: null,\n      zIndex: 6\n    };\n  };\n\n  _proto._renderUI = function _renderUI() {\n    _Group.prototype._renderUI.call(this);\n\n    this.initLabelsCfg();\n    var labelsGroup = this.addGroup();\n    var lineGroup = this.addGroup({\n      elCls: 'x-line-group'\n    });\n    var labelRenderer = this.get('labelRenderer');\n    this.set('labelsGroup', labelsGroup);\n    this.set('lineGroup', lineGroup);\n    this.get('labelRenderer').set('group', labelsGroup);\n    labelRenderer.set('group', labelsGroup);\n    labelRenderer.set('lineGroup', lineGroup);\n  }; // 初始化labels的配置项\n\n\n  _proto.initLabelsCfg = function initLabelsCfg() {\n    var self = this;\n    var labelRenderer = new Label();\n    var labels = self.getDefaultLabelCfg();\n    var labelCfg = self.get('labelCfg'); // Util.merge(labels, labelCfg.cfg);\n\n    Util.deepMix(labels, labelCfg.globalCfg || labelCfg.cfg);\n    labelRenderer.set('config', false);\n\n    if (labels.labelLine) {\n      labelRenderer.set('labelLine', labels.labelLine);\n    }\n\n    labelRenderer.set('coord', self.get('coord'));\n    this.set('labelRenderer', labelRenderer);\n    self.set('label', labels);\n  };\n  /**\n   * @protected\n   * 默认的文本样式\n   * @return {Object} default label config\n   */\n\n\n  _proto.getDefaultLabelCfg = function getDefaultLabelCfg() {\n    var self = this;\n    var labelCfg = self.get('labelCfg').cfg || self.get('labelCfg').globalCfg;\n    var geomType = self.get('geomType');\n    var viewTheme = self.get('viewTheme') || Global;\n\n    if (geomType === 'polygon' || labelCfg && labelCfg.offset < 0 && Util.indexOf(IGNORE_ARR, geomType) === -1) {\n      return Util.deepMix({}, self.get('label'), viewTheme.innerLabels, labelCfg);\n    }\n\n    return Util.deepMix({}, self.get('label'), viewTheme.label, labelCfg);\n  };\n  /**\n   * @protected\n   * 获取labels\n   * @param {Array} points points\n   * @param {Array} shapes shapes\n   * @return {Array} label items\n   */\n\n\n  _proto.getLabelsItems = function getLabelsItems(points, shapes) {\n    var self = this;\n    var items = [];\n    var geom = self.get('geom');\n    var coord = self.get('coord');\n\n    self._getLabelCfgs(points, shapes);\n\n    var labelCfg = self.get('labelItemCfgs'); // 获取label相关的x，y的值，获取具体的x,y,防止存在数组\n\n    Util.each(points, function (point, i) {\n      var origin = point[ORIGIN];\n      var label = labelCfg[i];\n\n      if (!label) {\n        items.push(null);\n        return;\n      }\n\n      if (!Util.isArray(label.text)) {\n        label.text = [label.text];\n      }\n\n      var total = label.length;\n      Util.each(label.text, function (sub, subIndex) {\n        if (Util.isNil(sub) || sub === '') {\n          items.push(null);\n          return;\n        }\n\n        var obj = self.getLabelPoint(label, point, subIndex);\n        obj = Util.mix({}, label, obj);\n\n        if (!obj.textAlign) {\n          obj.textAlign = self.getLabelAlign(obj, subIndex, total);\n        }\n\n        if (geom) {\n          obj._id = geom._getShapeId(origin) + '-glabel-' + subIndex + '-' + obj.text;\n        }\n\n        obj.coord = coord;\n        items.push(obj);\n      });\n    });\n    return items;\n  };\n  /* /!*\n   * @protected\n   * 如果发生冲突则会调整文本的位置\n   * @param {Array} items 文本的集合\n   * @param {Array} shapes 关联形状\n   * @return {Array} adjusted items\n   *!/\n  adjustItems(items, shapes) {\n    // 多边形shape的label位于其可视中心\n    if (this.get('geomType') === 'polygon') {\n      let index,\n        shape,\n        path,\n        center,\n        points;\n      Util.each(items, (item, i) => {\n        if (!item) return;\n        shape = shapes[ i ];\n        path = shape.attr('path');\n        points = [[]];\n        index = 0;\n        path.forEach((segment, i) => {\n          if (segment[ 0 ] === 'z' || segment[ 0 ] === 'Z' && i !== path.length - 1) {\n            points.push([]);\n            index += 1;\n          }\n          if (segment.length === 3) {\n            points[ index ].push([ segment[ 1 ], segment[ 2 ] ]);\n          }\n        });\n        center = visualCenter(points);\n        item.x = center.x;\n        item.y = center.y;\n      });\n    }\n    return items;\n  }\n  */\n\n\n  _proto.adjustItems = function adjustItems(items) {\n    Util.each(items, function (item) {\n      if (!item) {\n        return;\n      }\n\n      if (item.offsetX) {\n        item.x += item.offsetX;\n      }\n\n      if (item.offsetY) {\n        item.y += item.offsetY;\n      }\n    });\n    return items;\n  };\n  /**\n   * drawing lines to labels\n   * @param  {Array} items labels\n   * @param  {Object} labelLine configuration for label lines\n   */\n\n\n  _proto.drawLines = function drawLines(items) {\n    var self = this;\n    Util.each(items, function (point) {\n      if (!point) {\n        return;\n      }\n\n      if (point.offset > 0) {\n        self.lineToLabel(point);\n      }\n    });\n  }; // 定义连接线\n\n\n  _proto.lineToLabel = function lineToLabel() {};\n  /**\n   * @protected\n   * 获取文本的位置信息\n   * @param {Array} labelCfg labels\n   * @param {Object} point point\n   * @param {Number} index index\n   * @return {Object} point\n   */\n\n\n  _proto.getLabelPoint = function getLabelPoint(labelCfg, point, index) {\n    var self = this;\n    var coord = self.get('coord');\n    var total = labelCfg.text.length;\n\n    function getDimValue(value, idx) {\n      if (Util.isArray(value)) {\n        if (labelCfg.text.length === 1) {\n          // 如果仅一个label,多个y,取最后一个y\n          if (value.length <= 2) {\n            value = value[value.length - 1]; // value = value[0];\n          } else {\n            value = avg(value);\n          }\n        } else {\n          value = value[idx];\n        }\n      }\n\n      return value;\n    }\n\n    var label = {\n      text: labelCfg.text[index]\n    }; // 多边形场景,多用于地图\n\n    if (point && this.get('geomType') === 'polygon') {\n      var centroid = getCentroid(point.x, point.y);\n      label.x = centroid[0];\n      label.y = centroid[1];\n    } else {\n      label.x = getDimValue(point.x, index);\n      label.y = getDimValue(point.y, index);\n    } // get nearest point of the shape as the label line start point\n\n\n    if (point && point.nextPoints && (point.shape === 'funnel' || point.shape === 'pyramid')) {\n      var maxX = -Infinity;\n      point.nextPoints.forEach(function (p) {\n        p = coord.convert(p);\n\n        if (p.x > maxX) {\n          maxX = p.x;\n        }\n      });\n      label.x = (label.x + maxX) / 2;\n    } // sharp edge of the pyramid\n\n\n    if (point.shape === 'pyramid' && !point.nextPoints && point.points) {\n      point.points.forEach(function (p) {\n        p = coord.convert(p);\n\n        if (Util.isArray(p.x) && point.x.indexOf(p.x) === -1 || Util.isNumber(p.x) && point.x !== p.x) {\n          label.x = (label.x + p.x) / 2;\n        }\n      });\n    }\n\n    if (labelCfg.position) {\n      self.setLabelPosition(label, point, index, labelCfg.position);\n    }\n\n    var offsetPoint = self.getLabelOffset(labelCfg, index, total);\n\n    if (labelCfg.offsetX) {\n      offsetPoint.x += labelCfg.offsetX;\n    }\n\n    if (labelCfg.offsetY) {\n      offsetPoint.y += labelCfg.offsetY;\n    }\n\n    self.transLabelPoint(label);\n    label.start = {\n      x: label.x,\n      y: label.y\n    };\n    label.x += offsetPoint.x;\n    label.y += offsetPoint.y;\n    label.color = point.color;\n    return label;\n  };\n\n  _proto.setLabelPosition = function setLabelPosition() {};\n\n  _proto.transLabelPoint = function transLabelPoint(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var tmpPoint = coord.applyMatrix(point.x, point.y, 1);\n    point.x = tmpPoint[0];\n    point.y = tmpPoint[1];\n  };\n\n  _proto.getOffsetVector = function getOffsetVector(point) {\n    var self = this;\n    var offset = point.offset || 0;\n    var coord = self.get('coord');\n    var vector;\n\n    if (coord.isTransposed) {\n      // 如果x,y翻转，则偏移x\n      vector = coord.applyMatrix(offset, 0);\n    } else {\n      // 否则，偏转y\n      vector = coord.applyMatrix(0, offset);\n    }\n\n    return vector;\n  }; // 获取默认的偏移量\n\n\n  _proto.getDefaultOffset = function getDefaultOffset(point) {\n    var self = this;\n    var offset = 0;\n    var coord = self.get('coord');\n    var vector = self.getOffsetVector(point);\n\n    if (coord.isTransposed) {\n      // 如果x,y翻转，则偏移x\n      offset = vector[0];\n    } else {\n      // 否则，偏转y\n      offset = vector[1];\n    }\n\n    return offset;\n  }; // 获取文本的偏移位置，x,y\n\n\n  _proto.getLabelOffset = function getLabelOffset(point, index, total) {\n    var self = this;\n    var offset = self.getDefaultOffset(point);\n    var coord = self.get('coord');\n    var transposed = coord.isTransposed;\n    var yField = transposed ? 'x' : 'y';\n    var factor = transposed ? 1 : -1; // y 方向上越大，像素的坐标越小，所以transposed时将系数变成\n\n    var offsetPoint = {\n      x: 0,\n      y: 0\n    };\n\n    if (index > 0 || total === 1) {\n      // 判断是否小于0\n      offsetPoint[yField] = offset * factor;\n    } else {\n      offsetPoint[yField] = offset * factor * -1;\n    }\n\n    return offsetPoint;\n  };\n\n  _proto.getLabelAlign = function getLabelAlign(point, index, total) {\n    var self = this;\n    var align = 'center';\n    var coord = self.get('coord');\n\n    if (coord.isTransposed) {\n      var offset = self.getDefaultOffset(point); // var vector = coord.applyMatrix(offset,0);\n\n      if (offset < 0) {\n        align = 'right';\n      } else if (offset === 0) {\n        align = 'center';\n      } else {\n        align = 'left';\n      }\n\n      if (total > 1 && index === 0) {\n        if (align === 'right') {\n          align = 'left';\n        } else if (align === 'left') {\n          align = 'right';\n        }\n      }\n    }\n\n    return align;\n  };\n\n  _proto._getLabelValue = function _getLabelValue(origin, scales) {\n    if (!Util.isArray(scales)) {\n      scales = [scales];\n    }\n\n    var text = [];\n    Util.each(scales, function (scale) {\n      var value = origin[scale.field];\n\n      if (Util.isArray(value)) {\n        var tmp = [];\n        Util.each(value, function (subVal) {\n          tmp.push(scale.getText(subVal));\n        });\n        value = tmp;\n      } else {\n        value = scale.getText(value);\n      }\n\n      if (Util.isNil(value) || value === '') {\n        text.push(null);\n      }\n\n      text.push(value);\n    });\n    return text;\n  }; // 获取每个label的配置\n\n\n  _proto._getLabelCfgs = function _getLabelCfgs(points) {\n    var self = this;\n    var labelCfg = this.get('labelCfg');\n    var scales = labelCfg.scales;\n    var defaultCfg = this.get('label');\n    var cfgs = [];\n\n    if (labelCfg.globalCfg && labelCfg.globalCfg.type) {\n      self.set('type', labelCfg.globalCfg.type);\n    }\n\n    Util.each(points, function (point, i) {\n      var cfg = {};\n      var origin = point[ORIGIN];\n\n      var originText = self._getLabelValue(origin, scales);\n\n      if (labelCfg.callback) {\n        // callback中应使用原始数据，而不是数据字符串\n        var originValues = scales.map(function (scale) {\n          return origin[scale.field];\n        });\n        cfg = labelCfg.callback.apply(null, originValues);\n      }\n\n      if (!cfg && cfg !== 0) {\n        cfgs.push(null);\n        return;\n      }\n\n      if (Util.isString(cfg) || Util.isNumber(cfg)) {\n        cfg = {\n          text: cfg\n        };\n      } else {\n        cfg.text = cfg.content || originText[0];\n        delete cfg.content;\n      }\n\n      cfg = Util.mix({}, defaultCfg, labelCfg.globalCfg || {}, cfg); // 兼容旧的源数据写在item.point中\n\n      point.point = origin;\n\n      if (cfg.htmlTemplate) {\n        cfg.useHtml = true;\n        cfg.text = cfg.htmlTemplate.call(null, cfg.text, point, i);\n        delete cfg.htmlTemplate;\n      }\n\n      if (cfg.formatter) {\n        cfg.text = cfg.formatter.call(null, cfg.text, point, i);\n        delete cfg.formatter;\n      }\n\n      if (cfg.label) {\n        // 兼容有些直接写在labelCfg.label的配置\n        var label = cfg.label;\n        delete cfg.label;\n        cfg = Util.mix(cfg, label);\n      }\n\n      if (cfg.textStyle) {\n        // 兼容旧写法，globalCfg的offset优先级高\n        delete cfg.textStyle.offset;\n        var textStyle = cfg.textStyle;\n\n        if (Util.isFunction(textStyle)) {\n          cfg.textStyle = textStyle.call(null, cfg.text, point, i);\n        }\n      }\n\n      if (cfg.labelLine) {\n        cfg.labelLine = Util.mix({}, defaultCfg.labelLine, cfg.labelLine);\n      }\n\n      cfg.textStyle = Util.mix({}, defaultCfg.textStyle, cfg.textStyle);\n      delete cfg.items;\n      cfgs.push(cfg);\n    });\n    this.set('labelItemCfgs', cfgs);\n  };\n\n  _proto.showLabels = function showLabels(points, shapes) {\n    var self = this;\n    var labelRenderer = self.get('labelRenderer');\n    var items = self.getLabelsItems(points, shapes);\n    shapes = [].concat(shapes);\n    var type = self.get('type');\n    items = self.adjustItems(items, shapes);\n    self.drawLines(items);\n    labelRenderer.set('items', items.filter(function (item, i) {\n      if (!item) {\n        shapes.splice(i, 1);\n        return false;\n      }\n\n      return true;\n    }));\n\n    if (type) {\n      labelRenderer.set('shapes', shapes);\n      labelRenderer.set('type', type);\n      labelRenderer.set('points', points);\n    }\n\n    labelRenderer.set('canvas', this.get('canvas'));\n    labelRenderer.draw();\n  };\n\n  _proto.destroy = function destroy() {\n    this.get('labelRenderer').destroy(); // 清理文本\n\n    _Group.prototype.destroy.call(this);\n  };\n\n  return GeomLabels;\n}(Group); // Util.assign(GeomLabels.prototype, Labels.LabelslabelRenderer);\n\n\nmodule.exports = GeomLabels;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/**\n * @fileOverview Chart、View、Geometry 的基类\n * @author dxq613@gmail.com\n */\n\n\nvar EventEmitter = __webpack_require__(53);\n\nvar Util = __webpack_require__(3);\n\nvar Base =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(Base, _EventEmitter);\n\n  var _proto = Base.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {};\n  };\n\n  function Base(cfg) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n    var attrs = {\n      visible: true\n    };\n    var defaultCfg = self.getDefaultCfg();\n    self._attrs = attrs;\n    Util.deepMix(attrs, defaultCfg, cfg);\n    return _this;\n  }\n\n  _proto.get = function get(name) {\n    return this._attrs[name];\n  };\n\n  _proto.set = function set(name, value) {\n    this._attrs[name] = value;\n  };\n  /**\n   * @protected\n   * @param {Boolean} visible 是否可见\n   * 显示、隐藏\n   */\n\n\n  _proto.changeVisible = function changeVisible()\n  /* visible */\n  {};\n\n  _proto.destroy = function destroy() {\n    var self = this;\n    self._attrs = {};\n    self.removeAllListeners();\n    self.destroyed = true;\n  };\n\n  return Base;\n}(EventEmitter);\n\nmodule.exports = Base;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The base class of continuous legend\n * @author sima.zhang\n */\n\n\nvar Util = __webpack_require__(3);\n\nvar Legend = __webpack_require__(158);\n\nvar Slider = __webpack_require__(327);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar TRIGGER_WIDTH = 8;\nvar Event = Util.Event;\nvar Group = Util.Group;\n\nvar Continuous =\n/*#__PURE__*/\nfunction (_Legend) {\n  _inheritsLoose(Continuous, _Legend);\n\n  function Continuous() {\n    return _Legend.apply(this, arguments) || this;\n  }\n\n  var _proto = Continuous.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Legend.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'continuous-legend',\n\n      /**\n       * 子项\n       * @type {Array}\n       */\n      items: null,\n\n      /**\n       * 布局方式\n       * horizontal 水平\n       * vertical 垂直\n       * @type {String}\n       */\n      layout: 'vertical',\n\n      /**\n       * 宽度\n       * @type {Number}\n       */\n      width: 20,\n\n      /**\n       * 高度\n       * @type {Number}\n       */\n      height: 156,\n\n      /**\n       * 默认文本图形属性\n       * @type {ATTRS}\n       */\n      textStyle: {\n        fill: '#333',\n        textAlign: 'center',\n        textBaseline: 'middle',\n        stroke: '#fff',\n        lineWidth: 5,\n        fontFamily: FONT_FAMILY\n      },\n      hoverTextStyle: {\n        fill: 'rgba(0,0,0,0.25)'\n      },\n\n      /**\n       * 连续图例是否可滑动\n       * @type {Boolean}\n       */\n      slidable: true,\n\n      /**\n       * 两头滑块的样式\n       * @type {object}\n       */\n      triggerAttr: {\n        fill: '#fff',\n        // shadowOffsetX: -2,\n        // shadowOffsetY: 2,\n        shadowBlur: 10,\n        shadowColor: 'rgba(0,0,0,0.65)',\n        radius: 2\n      },\n\n      /**\n       * slider 的范围\n       * @type {array}}\n       */\n      _range: [0, 100],\n\n      /**\n       * 中间 bar 背景灰色\n       * @type {ATTRS}\n       */\n      middleBackgroundStyle: {\n        fill: '#D9D9D9'\n      },\n\n      /**\n       * 文本与图例间距\n       * @type {Number}\n       */\n      textOffset: 4,\n\n      /**\n       * line segment to seperate the unslidable slider blocks\n       * @type {object}\n       */\n      lineStyle: {\n        lineWidth: 1,\n        stroke: '#fff'\n      },\n\n      /**\n       * the pointer while activate the legend by mouse hovering or called by outside\n       * @type {object}\n       */\n      pointerStyle: {\n        // color: '#ccc',\n        fill: 'rgb(230, 230, 230)'\n      }\n    });\n  };\n\n  _proto._calStartPoint = function _calStartPoint() {\n    var start = {\n      x: 10,\n      y: this.get('titleGap') - TRIGGER_WIDTH\n    };\n    var titleShape = this.get('titleShape');\n\n    if (titleShape) {\n      var titleBox = titleShape.getBBox();\n      start.y += titleBox.height;\n    }\n\n    return start;\n  };\n\n  _proto.beforeRender = function beforeRender() {\n    var items = this.get('items');\n\n    if (!Util.isArray(items) || Util.isEmpty(items)) {\n      return;\n    }\n\n    _Legend.prototype.beforeRender.call(this);\n\n    this.set('firstItem', items[0]);\n    this.set('lastItem', items[items.length - 1]);\n  };\n\n  _proto._formatItemValue = function _formatItemValue(value) {\n    var formatter = this.get('formatter') || this.get('itemFormatter');\n\n    if (formatter) {\n      value = formatter.call(this, value);\n    }\n\n    return value;\n  };\n\n  _proto.render = function render() {\n    _Legend.prototype.render.call(this);\n\n    if (this.get('slidable')) {\n      this._renderSlider();\n    } else {\n      this._renderUnslidable();\n    }\n  };\n\n  _proto._renderSlider = function _renderSlider() {\n    var minHandleElement = new Group();\n    var maxHandleElement = new Group();\n    var backgroundElement = new Group();\n\n    var start = this._calStartPoint();\n\n    var group = this.get('group');\n    var slider = group.addGroup(Slider, {\n      minHandleElement: minHandleElement,\n      maxHandleElement: maxHandleElement,\n      backgroundElement: backgroundElement,\n      layout: this.get('layout'),\n      range: this.get('_range'),\n      width: this.get('width'),\n      height: this.get('height')\n    });\n    slider.translate(start.x, start.y);\n    this.set('slider', slider);\n\n    var shape = this._renderSliderShape();\n\n    shape.attr('clip', slider.get('middleHandleElement'));\n\n    this._renderTrigger();\n  }; // the middle bar\n\n\n  _proto._addMiddleBar = function _addMiddleBar(parent, name, attrs) {\n    // background of the middle bar\n    parent.addShape(name, {\n      attrs: Util.mix({}, attrs, this.get('middleBackgroundStyle'))\n    }); // frontground of the middle bar\n\n    return parent.addShape(name, {\n      attrs: attrs\n    });\n  };\n\n  _proto._renderTrigger = function _renderTrigger() {\n    var min = this.get('firstItem');\n    var max = this.get('lastItem');\n    var layout = this.get('layout');\n    var textStyle = this.get('textStyle');\n    var triggerAttr = this.get('triggerAttr');\n    var minBlockAttr = Util.mix({}, triggerAttr);\n    var maxBlockAttr = Util.mix({}, triggerAttr);\n    var minTextAttr = Util.mix({\n      text: this._formatItemValue(min.value) + ''\n    }, textStyle);\n    var maxTextAttr = Util.mix({\n      text: this._formatItemValue(max.value) + ''\n    }, textStyle);\n\n    if (layout === 'vertical') {\n      this._addVerticalTrigger('min', minBlockAttr, minTextAttr);\n\n      this._addVerticalTrigger('max', maxBlockAttr, maxTextAttr);\n    } else {\n      this._addHorizontalTrigger('min', minBlockAttr, minTextAttr);\n\n      this._addHorizontalTrigger('max', maxBlockAttr, maxTextAttr);\n    }\n  };\n\n  _proto._addVerticalTrigger = function _addVerticalTrigger(type, blockAttr, textAttr) {\n    var slider = this.get('slider');\n    var trigger = slider.get(type + 'HandleElement');\n    var width = this.get('width');\n    var button = trigger.addShape('rect', {\n      attrs: Util.mix({\n        x: width / 2 - TRIGGER_WIDTH - 2,\n        y: type === 'min' ? 0 : -TRIGGER_WIDTH,\n        width: 2 * TRIGGER_WIDTH + 2,\n        height: TRIGGER_WIDTH\n      }, blockAttr)\n    });\n    var text = trigger.addShape('text', {\n      attrs: Util.mix(textAttr, {\n        x: width + this.get('textOffset'),\n        y: type === 'max' ? -4 : 4,\n        textAlign: 'start',\n        lineHeight: 1,\n        textBaseline: 'middle'\n      })\n    });\n    var layout = this.get('layout');\n    var trigerCursor = layout === 'vertical' ? 'ns-resize' : 'ew-resize';\n    button.attr('cursor', trigerCursor);\n    text.attr('cursor', trigerCursor);\n    this.set(type + 'ButtonElement', button);\n    this.set(type + 'TextElement', text);\n  };\n\n  _proto._addHorizontalTrigger = function _addHorizontalTrigger(type, blockAttr, textAttr) {\n    var slider = this.get('slider');\n    var trigger = slider.get(type + 'HandleElement');\n    var button = trigger.addShape('rect', {\n      attrs: Util.mix({\n        x: type === 'min' ? -TRIGGER_WIDTH : 0,\n        y: -TRIGGER_WIDTH - this.get('height') / 2,\n        width: TRIGGER_WIDTH,\n        height: 2 * TRIGGER_WIDTH\n      }, blockAttr)\n    });\n    var text = trigger.addShape('text', {\n      attrs: Util.mix(textAttr, {\n        x: type === 'min' ? -TRIGGER_WIDTH - 4 : TRIGGER_WIDTH + 4,\n        y: TRIGGER_WIDTH / 2 + this.get('textOffset') + 10,\n        textAlign: type === 'min' ? 'end' : 'start',\n        textBaseline: 'middle'\n      })\n    });\n    var layout = this.get('layout');\n    var trigerCursor = layout === 'vertical' ? 'ns-resize' : 'ew-resize';\n    button.attr('cursor', trigerCursor);\n    text.attr('cursor', trigerCursor);\n    this.set(type + 'ButtonElement', button);\n    this.set(type + 'TextElement', text);\n  };\n\n  _proto._bindEvents = function _bindEvents() {\n    var _this = this;\n\n    if (this.get('slidable')) {\n      var slider = this.get('slider');\n      slider.on('sliderchange', function (ev) {\n        var range = ev.range;\n\n        var firstItemValue = _this.get('firstItem').value;\n\n        var lastItemValue = _this.get('lastItem').value;\n\n        var minValue = firstItemValue + range[0] / 100 * (lastItemValue - firstItemValue);\n        var maxValue = firstItemValue + range[1] / 100 * (lastItemValue - firstItemValue);\n\n        _this._updateElement(minValue, maxValue);\n\n        var itemFiltered = new Event('itemfilter', ev, true, true);\n        itemFiltered.range = [minValue, maxValue];\n\n        _this.emit('itemfilter', itemFiltered);\n      });\n    }\n\n    if (this.get('hoverable')) {\n      this.get('group').on('mousemove', Util.wrapBehavior(this, '_onMouseMove'));\n      this.get('group').on('mouseleave', Util.wrapBehavior(this, '_onMouseLeave'));\n    }\n  }; // update the text of min and max trigger\n\n\n  _proto._updateElement = function _updateElement(min, max) {\n    var minTextElement = this.get('minTextElement');\n    var maxTextElement = this.get('maxTextElement');\n\n    if (max > 1) {\n      // 对于大于 1 的值，默认显示为整数\n      min = parseInt(min, 10);\n      max = parseInt(max, 10);\n    }\n\n    minTextElement.attr('text', this._formatItemValue(min) + '');\n    maxTextElement.attr('text', this._formatItemValue(max) + '');\n  };\n\n  _proto._onMouseLeave = function _onMouseLeave() {\n    var hoverPointer = this.get('group').findById('hoverPointer');\n    hoverPointer && hoverPointer.destroy();\n    var hoverText = this.get('group').findById('hoverText');\n    hoverText && hoverText.destroy();\n    this.get('canvas').draw();\n  }; // activate the legend while mouse moving\n\n\n  _proto._onMouseMove = function _onMouseMove(ev) {\n    var height = this.get('height');\n    var width = this.get('width');\n    var items = this.get('items');\n    var el = this.get('canvas').get('el');\n    var el_bbox = el.getBoundingClientRect();\n    var bbox = this.get('group').getBBox();\n    var value;\n\n    if (this.get('layout') === 'vertical') {\n      var valuePadding = 5;\n\n      if (this.get('type') === 'color-legend') {\n        valuePadding = 30;\n      }\n\n      var titleOffset = this.get('titleGap');\n      var titleShape = this.get('titleShape');\n      if (titleShape) titleOffset += titleShape.getBBox().maxY - titleShape.getBBox().minY;\n      var currentPage = ev.clientY || ev.event.clientY;\n      currentPage = currentPage - el_bbox.y - this.get('group').attr('matrix')[7] + bbox.y - valuePadding + titleOffset;\n      value = items[0].value + (1 - currentPage / height) * (items[items.length - 1].value - items[0].value);\n    } else {\n      var _currentPage = ev.clientX || ev.event.clientX;\n\n      _currentPage = _currentPage - el_bbox.x - this.get('group').attr('matrix')[6];\n      value = items[0].value + _currentPage / width * (items[items.length - 1].value - items[0].value);\n    }\n\n    value = value.toFixed(2);\n    this.activate(value);\n    this.emit('mousehover', {\n      value: value\n    });\n  }; // activated by mouse moving or being called\n\n\n  _proto.activate = function activate(value) {\n    if (!value) {\n      return;\n    }\n\n    var hoverPointer = this.get('group').findById('hoverPointer');\n    var hoverText = this.get('group').findById('hoverText');\n    var items = this.get('items');\n\n    if (value < items[0].value || value > items[items.length - 1].value) {\n      return;\n    }\n\n    var height = this.get('height');\n    var width = this.get('width');\n    var titleShape = this.get('titleShape');\n    var titleGap = this.get('titleGap');\n    var points = [];\n    var page = (value - items[0].value) / (items[items.length - 1].value - items[0].value);\n    var textStyle;\n\n    if (this.get('layout') === 'vertical') {\n      // revise the offset\n      var paddingY = 0,\n          paddingX = 0;\n\n      if (this.get('type') === 'color-legend') {\n        paddingY = titleGap;\n        if (titleShape) paddingY += titleShape.getBBox().height;\n      }\n\n      if (this.get('slidable')) {\n        if (this.get('type') === 'color-legend') {\n          paddingY -= 13;\n        } else {\n          paddingY = titleGap - 15;\n          if (titleShape) paddingY += titleShape.getBBox().height;\n        }\n\n        paddingX += 10;\n      }\n\n      page = (1 - page) * height;\n      points = [[paddingX, page + paddingY], [paddingX - 10, page + paddingY - 5], [paddingX - 10, page + paddingY + 5]];\n      textStyle = Util.mix({}, {\n        x: width + this.get('textOffset') / 2 + paddingX,\n        y: page + paddingY,\n        text: this._formatItemValue(value) + '' // 以字符串格式展示\n\n      }, this.get('textStyle'), {\n        textAlign: 'start'\n      });\n    } else {\n      var _paddingY = 0,\n          _paddingX = 0;\n\n      if (this.get('type') === 'color-legend') {\n        _paddingY = titleGap;\n        if (titleShape) _paddingY += titleShape.getBBox().height;\n      }\n\n      if (this.get('slidable')) {\n        if (this.get('type') === 'color-legend') {\n          // hoverPointer三角形的高\n          _paddingY -= 7;\n        } else {\n          _paddingY = titleGap;\n          if (!titleShape) _paddingY -= 7;\n        }\n\n        _paddingX += 10;\n      }\n\n      page *= width;\n      points = [[page + _paddingX, _paddingY], [page + _paddingX - 5, _paddingY - 10], [page + _paddingX + 5, _paddingY - 10]];\n      textStyle = Util.mix({}, {\n        x: page - 5,\n        y: height + this.get('textOffset') + _paddingY,\n        text: this._formatItemValue(value) + '' // 以字符串格式展示\n\n      }, this.get('textStyle'));\n    }\n\n    var hoverTextStyle = Util.mix(textStyle, this.get('hoverTextStyle'));\n\n    if (!hoverText) {\n      // mouse enter the legend, add hoverText\n      hoverText = this.get('group').addShape('text', {\n        attrs: hoverTextStyle\n      });\n      hoverText.set('id', 'hoverText');\n    } else {\n      // mouse move, update hoverText\n      hoverText.attr(hoverTextStyle);\n    }\n\n    if (!hoverPointer) {\n      // mouse enter the legend, add hoverPointer\n      hoverPointer = this.get('group').addShape('Polygon', {\n        attrs: Util.mix({\n          points: points\n        }, this.get('pointerStyle'))\n      });\n      hoverPointer.set('id', 'hoverPointer');\n    } else {\n      // mouse move, update hoverPointer\n      hoverPointer.attr(Util.mix({\n        points: points\n      }, this.get('pointerStyle')));\n    }\n\n    this.get('canvas').draw();\n  };\n\n  _proto.deactivate = function deactivate() {\n    var hoverPointer = this.get('group').findById('hoverPointer');\n    hoverPointer && hoverPointer.destroy();\n    var hoverText = this.get('group').findById('hoverText');\n    hoverText && hoverText.destroy();\n    this.get('canvas').draw();\n  };\n\n  return Continuous;\n}(Legend);\n\nmodule.exports = Continuous;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Component = __webpack_require__(66);\n\nvar Util = __webpack_require__(3);\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tooltip, _Component);\n\n  function Tooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tooltip.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Component.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * tooltip container\n       * @type {Dom / String}\n       */\n\n      /**\n       * 右下角坐标\n       * @type {Number}\n       */\n      x: 0,\n\n      /**\n       * y 右下角坐标\n       * @type {Number}\n       */\n      y: 0,\n\n      /**\n       * tooltip 记录项\n       * @type {Array}\n       */\n      items: null,\n\n      /**\n       * tooltip 标题\n       * @type {Array}\n       */\n      titleContent: null,\n\n      /**\n       * 是否展示 title\n       * @type {Boolean}\n       */\n      showTitle: true,\n\n      /**\n       * 视图范围\n       * @type {Object}\n       */\n      plotRange: null,\n\n      /**\n       * x轴上，移动到位置的偏移量\n       * @type {Number}\n       */\n      offset: 10,\n      // TODO:支持xy两个方向上的offset\n\n      /**\n       * 时间戳\n       * @type {Number}\n       */\n      timeStamp: 0,\n\n      /**\n       * 将 tooltip 展示在指定区域内\n       * @type {Boolean}\n       */\n      inPlot: true,\n\n      /**\n       * tooltip 辅助线配置\n       * @type {Object}\n       */\n      crosshairs: null\n    });\n  };\n\n  _proto.isContentChange = function isContentChange(title, items) {\n    var titleContent = this.get('titleContent');\n    var lastItems = this.get('items');\n    var isChanged = !(title === titleContent && lastItems.length === items.length);\n\n    if (!isChanged) {\n      Util.each(items, function (item, index) {\n        var preItem = lastItems[index];\n\n        for (var key in item) {\n          if (item.hasOwnProperty(key)) {\n            if (!Util.isObject(item[key]) && item[key] !== preItem[key]) {\n              isChanged = true;\n              break;\n            }\n          }\n        }\n\n        if (isChanged) {\n          return false;\n        }\n      });\n    }\n\n    return isChanged;\n  };\n\n  _proto.setContent = function setContent(title, items) {\n    var timeStamp = new Date().valueOf();\n    this.set('items', items);\n    this.set('titleContent', title);\n    this.set('timeStamp', timeStamp);\n    this.render();\n    return this;\n  };\n\n  _proto.setPosition = function setPosition(x, y) {\n    this.set('x', x);\n    this.set('y', y);\n  };\n\n  _proto.render = function render() {};\n\n  _proto.clear = function clear() {};\n\n  _proto.show = function show() {\n    this.set('visible', true);\n  };\n\n  _proto.hide = function hide() {\n    this.set('visible', false);\n  };\n\n  _proto.destroy = function destroy() {};\n\n  return Tooltip;\n}(Component);\n\nmodule.exports = Tooltip;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return root; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Selection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__select__ = __webpack_require__(402);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__selectAll__ = __webpack_require__(403);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__filter__ = __webpack_require__(404);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data__ = __webpack_require__(405);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__enter__ = __webpack_require__(382);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__exit__ = __webpack_require__(407);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__merge__ = __webpack_require__(408);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__order__ = __webpack_require__(409);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__sort__ = __webpack_require__(410);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__call__ = __webpack_require__(411);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__nodes__ = __webpack_require__(412);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__node__ = __webpack_require__(413);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__size__ = __webpack_require__(414);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__empty__ = __webpack_require__(415);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__each__ = __webpack_require__(416);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__attr__ = __webpack_require__(417);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__style__ = __webpack_require__(384);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__property__ = __webpack_require__(418);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__classed__ = __webpack_require__(419);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__text__ = __webpack_require__(420);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__html__ = __webpack_require__(421);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__raise__ = __webpack_require__(422);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__lower__ = __webpack_require__(423);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__append__ = __webpack_require__(424);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__insert__ = __webpack_require__(425);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__remove__ = __webpack_require__(426);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__clone__ = __webpack_require__(427);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__datum__ = __webpack_require__(428);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__on__ = __webpack_require__(374);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__dispatch__ = __webpack_require__(429);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar root = [null];\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: __WEBPACK_IMPORTED_MODULE_0__select__[\"a\" /* default */],\n  selectAll: __WEBPACK_IMPORTED_MODULE_1__selectAll__[\"a\" /* default */],\n  filter: __WEBPACK_IMPORTED_MODULE_2__filter__[\"a\" /* default */],\n  data: __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */],\n  enter: __WEBPACK_IMPORTED_MODULE_4__enter__[\"b\" /* default */],\n  exit: __WEBPACK_IMPORTED_MODULE_5__exit__[\"a\" /* default */],\n  merge: __WEBPACK_IMPORTED_MODULE_6__merge__[\"a\" /* default */],\n  order: __WEBPACK_IMPORTED_MODULE_7__order__[\"a\" /* default */],\n  sort: __WEBPACK_IMPORTED_MODULE_8__sort__[\"a\" /* default */],\n  call: __WEBPACK_IMPORTED_MODULE_9__call__[\"a\" /* default */],\n  nodes: __WEBPACK_IMPORTED_MODULE_10__nodes__[\"a\" /* default */],\n  node: __WEBPACK_IMPORTED_MODULE_11__node__[\"a\" /* default */],\n  size: __WEBPACK_IMPORTED_MODULE_12__size__[\"a\" /* default */],\n  empty: __WEBPACK_IMPORTED_MODULE_13__empty__[\"a\" /* default */],\n  each: __WEBPACK_IMPORTED_MODULE_14__each__[\"a\" /* default */],\n  attr: __WEBPACK_IMPORTED_MODULE_15__attr__[\"a\" /* default */],\n  style: __WEBPACK_IMPORTED_MODULE_16__style__[\"a\" /* default */],\n  property: __WEBPACK_IMPORTED_MODULE_17__property__[\"a\" /* default */],\n  classed: __WEBPACK_IMPORTED_MODULE_18__classed__[\"a\" /* default */],\n  text: __WEBPACK_IMPORTED_MODULE_19__text__[\"a\" /* default */],\n  html: __WEBPACK_IMPORTED_MODULE_20__html__[\"a\" /* default */],\n  raise: __WEBPACK_IMPORTED_MODULE_21__raise__[\"a\" /* default */],\n  lower: __WEBPACK_IMPORTED_MODULE_22__lower__[\"a\" /* default */],\n  append: __WEBPACK_IMPORTED_MODULE_23__append__[\"a\" /* default */],\n  insert: __WEBPACK_IMPORTED_MODULE_24__insert__[\"a\" /* default */],\n  remove: __WEBPACK_IMPORTED_MODULE_25__remove__[\"a\" /* default */],\n  clone: __WEBPACK_IMPORTED_MODULE_26__clone__[\"a\" /* default */],\n  datum: __WEBPACK_IMPORTED_MODULE_27__datum__[\"a\" /* default */],\n  on: __WEBPACK_IMPORTED_MODULE_28__on__[\"b\" /* default */],\n  dispatch: __WEBPACK_IMPORTED_MODULE_29__dispatch__[\"a\" /* default */]\n};\n/* harmony default export */ __webpack_exports__[\"b\"] = (selection);\n\n/***/ }),\n/* 70 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export CREATED */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return SCHEDULED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return STARTING; });\n/* unused harmony export STARTED */\n/* unused harmony export RUNNING */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ENDING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ENDED; });\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = init;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = set;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = get;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_dispatch__ = __webpack_require__(438);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_timer__ = __webpack_require__(170);\n\n\nvar emptyOn = Object(__WEBPACK_IMPORTED_MODULE_0_d3_dispatch__[\"a\" /* dispatch */])(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n/* harmony default export */ __webpack_exports__[\"e\"] = (function (node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n});\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween; // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n\n  schedules[id] = self;\n  self.timer = Object(__WEBPACK_IMPORTED_MODULE_1_d3_timer__[\"timer\"])(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n\n      if (o.state === STARTED) return Object(__WEBPACK_IMPORTED_MODULE_1_d3_timer__[\"timeout\"])(start); // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      } // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n    } // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n    Object(__WEBPACK_IMPORTED_MODULE_1_d3_timer__[\"timeout\"])(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    }); // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n\n    self.state = STARTED; // Initialize the tween, deleting null tween.\n\n    tween = new Array(n = self.tween.length);\n\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    } // Dispatch the end event.\n\n\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\n\n    delete node.__transition;\n  }\n}\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 提取公共代码到util方法\n * @author dxq613@gmail.com\n */\nvar isString = __webpack_require__(10);\n\nvar isDate = __webpack_require__(80);\n\nmodule.exports = {\n  toTimeStamp: function toTimeStamp(value) {\n    if (isString(value)) {\n      if (value.indexOf('T') > 0) {\n        value = new Date(value).getTime();\n      } else {\n        value = new Date(value.replace(/-/ig, '/')).getTime();\n      }\n    }\n\n    if (isDate(value)) {\n      value = value.getTime();\n    }\n\n    return value;\n  }\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_create__ = __webpack_require__(401);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_create__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_creator__ = __webpack_require__(360);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"creator\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_creator__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_local__ = __webpack_require__(430);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"local\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_local__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_matcher__ = __webpack_require__(381);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"matcher\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_matcher__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_mouse__ = __webpack_require__(431);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"mouse\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_mouse__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_namespace__ = __webpack_require__(370);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"namespace\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_namespace__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_namespaces__ = __webpack_require__(371);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"namespaces\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_namespaces__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_point__ = __webpack_require__(361);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"clientPoint\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_point__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_select__ = __webpack_require__(379);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"select\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_select__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_selectAll__ = __webpack_require__(432);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"selectAll\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_selectAll__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_selection_index__ = __webpack_require__(69);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"selection\", function() { return __WEBPACK_IMPORTED_MODULE_10__src_selection_index__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_selector__ = __webpack_require__(372);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"selector\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_selector__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_selectorAll__ = __webpack_require__(380);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorAll\", function() { return __WEBPACK_IMPORTED_MODULE_12__src_selectorAll__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_selection_style__ = __webpack_require__(384);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"style\", function() { return __WEBPACK_IMPORTED_MODULE_13__src_selection_style__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_touch__ = __webpack_require__(433);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"touch\", function() { return __WEBPACK_IMPORTED_MODULE_14__src_touch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_touches__ = __webpack_require__(434);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"touches\", function() { return __WEBPACK_IMPORTED_MODULE_15__src_touches__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_window__ = __webpack_require__(373);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"window\", function() { return __WEBPACK_IMPORTED_MODULE_16__src_window__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__src_selection_on__ = __webpack_require__(374);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"event\", function() { return __WEBPACK_IMPORTED_MODULE_17__src_selection_on__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"customEvent\", function() { return __WEBPACK_IMPORTED_MODULE_17__src_selection_on__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Position: __webpack_require__(292),\n  Color: __webpack_require__(293),\n  Shape: __webpack_require__(294),\n  Size: __webpack_require__(295),\n  Opacity: __webpack_require__(296),\n  ColorUtil: __webpack_require__(149)\n};\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Scale entry, used to reference all the scales\n * @author dxq613@gmail.com\n */\nvar lowerFirst = __webpack_require__(75);\n\nvar Base = __webpack_require__(17);\n\nBase.Linear = __webpack_require__(33);\nBase.Identity = __webpack_require__(175);\nBase.Cat = __webpack_require__(77);\nBase.Time = __webpack_require__(176);\nBase.TimeCat = __webpack_require__(178);\nBase.Log = __webpack_require__(179);\nBase.Pow = __webpack_require__(180);\n\nvar _loop = function _loop(k) {\n  if (Base.hasOwnProperty(k)) {\n    var methodName = lowerFirst(k);\n\n    Base[methodName] = function (cfg) {\n      return new Base[k](cfg);\n    };\n  }\n};\n\nfor (var k in Base) {\n  _loop(k);\n}\n\nvar CAT_ARR = ['cat', 'timeCat'];\n\nBase.isCategory = function (type) {\n  return CAT_ARR.indexOf(type) >= 0;\n};\n\nmodule.exports = Base;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(23);\n\nvar lowerFirst = function lowerFirst(value) {\n  var str = toString(value);\n  return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\nmodule.exports = lowerFirst;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\n/**\n * @fileOverview 计算方法\n * @author dxq613@gmail.com\n */\n// 如果小数点后面超过 10 位浮点数时进行一下处理\nvar DECIMAL_LENGTH = 12; // 获取系数\n\nfunction getFactor(v) {\n  var factor = 1;\n\n  if (v === Infinity || v === -Infinity) {\n    throw new Error('Not support Infinity!');\n  }\n\n  if (v < 1) {\n    var count = 0;\n\n    while (v < 1) {\n      factor = factor / 10;\n      v = v * 10;\n      count++;\n    } // 浮点数计算出现问题\n\n\n    if (factor.toString().length > DECIMAL_LENGTH) {\n      factor = parseFloat(factor.toFixed(count));\n    }\n  } else {\n    while (v > 10) {\n      factor = factor * 10;\n      v = v / 10;\n    }\n  }\n\n  return factor;\n} // 取小于当前值的\n\n\nfunction arrayFloor(values, value) {\n  var length = values.length;\n\n  if (length === 0) {\n    return NaN;\n  }\n\n  var pre = values[0];\n\n  if (value < values[0]) {\n    return NaN;\n  }\n\n  if (value >= values[length - 1]) {\n    return values[length - 1];\n  }\n\n  for (var i = 1; i < values.length; i++) {\n    if (value < values[i]) {\n      break;\n    }\n\n    pre = values[i];\n  }\n\n  return pre;\n} // 大于当前值的第一个\n\n\nfunction arrayCeiling(values, value) {\n  var length = values.length;\n\n  if (length === 0) {\n    return NaN;\n  } // var pre = values[0];\n\n\n  var rst;\n\n  if (value > values[length - 1]) {\n    return NaN;\n  }\n\n  if (value < values[0]) {\n    return values[0];\n  }\n\n  for (var i = 1; i < values.length; i++) {\n    if (value <= values[i]) {\n      rst = values[i];\n      break;\n    }\n  }\n\n  return rst;\n}\n\nvar Util = {\n  // 获取逼近的数值\n  snapFactorTo: function snapFactorTo(v, arr, snapType) {\n    // 假设 v = -512,isFloor = true\n    if (isNaN(v)) {\n      return NaN;\n    }\n\n    var factor = 1; // 计算系数\n\n    if (v !== 0) {\n      if (v < 0) {\n        factor = -1;\n      }\n\n      v = v * factor; // v = 512\n\n      var tmpFactor = getFactor(v);\n      factor = factor * tmpFactor; // factor = -100\n\n      v = v / tmpFactor; // v = 5.12\n    }\n\n    if (snapType === 'floor') {\n      v = Util.snapFloor(arr, v); // v = 5\n    } else if (snapType === 'ceil') {\n      v = Util.snapCeiling(arr, v); // v = 6\n    } else {\n      v = Util.snapTo(arr, v); // 四舍五入 5\n    }\n\n    var rst = v * factor; // 如果出现浮点数计算问题，需要处理一下\n\n    if (Math.abs(factor) < 1 && rst.toString().length > DECIMAL_LENGTH) {\n      var decimalVal = parseInt(1 / factor);\n      var symbol = factor > 0 ? 1 : -1;\n      rst = v / decimalVal * symbol;\n    }\n\n    return rst;\n  },\n  // 获取逼近的倍数\n  snapMultiple: function snapMultiple(v, base, snapType) {\n    var div;\n\n    if (snapType === 'ceil') {\n      div = Math.ceil(v / base);\n    } else if (snapType === 'floor') {\n      div = Math.floor(v / base);\n    } else {\n      div = Math.round(v / base);\n    }\n\n    return div * base;\n  },\n\n  /**\n   * 获取逼近的值，用于对齐数据\n   * @param  {Array} values   数据集合\n   * @param  {Number} value   数值\n   * @return {Number} 逼近的值\n   */\n  snapTo: function snapTo(values, value) {\n    // 这里假定values是升序排列\n    var floorVal = arrayFloor(values, value);\n    var ceilingVal = arrayCeiling(values, value);\n\n    if (isNaN(floorVal) || isNaN(ceilingVal)) {\n      if (values[0] >= value) {\n        return values[0];\n      }\n\n      var last = values[values.length - 1];\n\n      if (last <= value) {\n        return last;\n      }\n    }\n\n    if (Math.abs(value - floorVal) < Math.abs(ceilingVal - value)) {\n      return floorVal;\n    }\n\n    return ceilingVal;\n  },\n\n  /**\n   * 获取逼近的最小值，用于对齐数据\n   * @param  {Array} values   数据集合\n   * @param  {Number} value   数值\n   * @return {Number} 逼近的最小值\n   */\n  snapFloor: function snapFloor(values, value) {\n    // 这里假定values是升序排列\n    return arrayFloor(values, value);\n  },\n\n  /**\n   * 获取逼近的最大值，用于对齐数据\n   * @param  {Array} values   数据集合\n   * @param  {Number} value   数值\n   * @return {Number} 逼近的最大值\n   */\n  snapCeiling: function snapCeiling(values, value) {\n    // 这里假定values是升序排列\n    return arrayCeiling(values, value);\n  },\n  fixedBase: function fixedBase(v, base) {\n    var str = base.toString();\n    var index = str.indexOf('.');\n\n    if (index === -1) {\n      return Math.round(v);\n    }\n\n    var length = str.substr(index + 1).length;\n\n    if (length > 20) {\n      length = 20;\n    }\n\n    return parseFloat(v.toFixed(length));\n  }\n};\nmodule.exports = Util;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(17);\n\nvar catAuto = __webpack_require__(78);\n\nvar each = __webpack_require__(2);\n\nvar isNumber = __webpack_require__(9);\n\nvar isString = __webpack_require__(10);\n\nvar Category =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Category, _Base);\n\n  function Category() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Category.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    this.type = 'cat';\n    /**\n     * 是否分类度量\n     * @type {Boolean}\n     */\n\n    this.isCategory = true;\n    this.isRounding = true; // 是否进行取整操作\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.init = function init() {\n    var self = this;\n    var values = self.values;\n    var tickCount = self.tickCount;\n    each(values, function (v, i) {\n      values[i] = v.toString();\n    });\n\n    if (!self.ticks) {\n      var ticks = values;\n\n      if (tickCount) {\n        var temp = catAuto({\n          maxCount: tickCount,\n          data: values,\n          isRounding: self.isRounding\n        });\n        ticks = temp.ticks;\n      }\n\n      this.ticks = ticks;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.getText = function getText(value) {\n    if (this.values.indexOf(value) === -1 && isNumber(value)) {\n      value = this.values[Math.round(value)];\n    }\n\n    return _Base.prototype.getText.call(this, value);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.translate = function translate(value) {\n    var index = this.values.indexOf(value);\n\n    if (index === -1 && isNumber(value)) {\n      index = value;\n    } else if (index === -1) {\n      index = NaN;\n    }\n\n    return index;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    var percent;\n\n    if (isString(value) || this.values.indexOf(value) !== -1) {\n      value = this.translate(value);\n    }\n\n    if (this.values.length > 1) {\n      percent = value / (this.values.length - 1);\n    } else {\n      percent = value;\n    }\n\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.invert = function invert(value) {\n    if (isString(value)) {\n      // 如果已经是字符串\n      return value;\n    }\n\n    var min = this.rangeMin();\n    var max = this.rangeMax(); // 归一到 范围内\n\n    if (value < min) {\n      value = min;\n    }\n\n    if (value > max) {\n      value = max;\n    }\n\n    var percent = (value - min) / (max - min);\n    var index = Math.round(percent * (this.values.length - 1)) % this.values.length;\n    index = index || 0;\n    return this.values[index];\n  };\n\n  return Category;\n}(Base);\n\nBase.Cat = Category;\nmodule.exports = Category;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 计算分类的的坐标点\n * @author dxq613@gmail.com\n */\nvar each = __webpack_require__(2);\n\nvar MAX_COUNT = 8;\nvar SUB_COUNT = 4; // 控制个数不能过小\n\nfunction getSimpleArray(data) {\n  var arr = [];\n  each(data, function (sub) {\n    arr = arr.concat(sub);\n  });\n  return arr;\n}\n\nfunction getGreatestFactor(count, number) {\n  var i;\n\n  for (i = number; i > 0; i--) {\n    if (count % i === 0) {\n      break;\n    }\n  } // 如果是素数，没有可以整除的数字\n\n\n  if (i === 1) {\n    for (i = number; i > 0; i--) {\n      if ((count - 1) % i === 0) {\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nmodule.exports = function (info) {\n  var rst = {};\n  var ticks = [];\n  var isRounding = info.isRounding;\n  var categories = getSimpleArray(info.data);\n  var length = categories.length;\n  var maxCount = info.maxCount || MAX_COUNT;\n  var tickCount;\n\n  if (isRounding) {\n    // 取整操作\n    tickCount = getGreatestFactor(length - 1, maxCount - 1) + 1; // 如果计算出来只有两个坐标点，则直接使用传入的 maxCount\n\n    if (tickCount === 2) {\n      tickCount = maxCount;\n    } else if (tickCount < maxCount - SUB_COUNT) {\n      tickCount = maxCount - SUB_COUNT;\n    }\n  } else {\n    tickCount = maxCount;\n  }\n\n  if (!isRounding && length <= tickCount + tickCount / 2) {\n    ticks = [].concat(categories);\n  } else {\n    var step = parseInt(length / (tickCount - 1), 10);\n    var groups = categories.map(function (e, i) {\n      return i % step === 0 ? categories.slice(i, i + step) : null;\n    }).filter(function (e) {\n      return e;\n    });\n\n    for (var i = 1, groupLen = groups.length; i < groupLen && (isRounding ? i * step < length - step : i < tickCount - 1); i++) {\n      ticks.push(groups[i][0]);\n    }\n\n    if (categories.length) {\n      ticks.unshift(categories[0]);\n      var last = categories[length - 1];\n\n      if (ticks.indexOf(last) === -1) {\n        ticks.push(last);\n      }\n    }\n  }\n\n  rst.categories = categories;\n  rst.ticks = ticks;\n  return rst;\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function (main) {\n  'use strict';\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var literal = /\\[([^]*?)\\]/gm;\n\n  var noop = function () {};\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) {\n      val = '0' + val;\n    }\n\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n  var formatFlags = {\n    D: function (dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function (dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function (dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function (dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function (dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function (dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function (dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function (dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function (dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function (dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function (dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function (dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function (dateObj) {\n      return pad(dateObj.getFullYear(), 4);\n    },\n    h: function (dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function (dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function (dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function (dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function (dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function (dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function (dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function (dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function (dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function (dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function (dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function (dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function (dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function (dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\n      d.day = parseInt(v, 10);\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(),\n          cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/([\\+\\-]\\d\\d:?\\d\\d|Z)/, function (d, v) {\n      if (v === 'Z') v = '+00:00';\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi),\n          minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a; // Some common format strings\n\n  fecha.masks = {\n    default: 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n    var literals = []; // Make literals inactive by replacing them with ??\n\n    mask = mask.replace(literal, function ($0, $1) {\n      literals.push($1);\n      return '??';\n    }); // Apply formatting rules\n\n    mask = mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    }); // Inline literal values back into the formatted value\n\n    return mask.replace(/\\?\\?/g, function () {\n      return literals.shift();\n    });\n  };\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n\n\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n\n    return date;\n  };\n  /* istanbul ignore next */\n\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return fecha;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this);\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isType = __webpack_require__(12);\n\nvar isDate = function isDate(value) {\n  return isType(value, 'Date');\n};\n\nmodule.exports = isDate;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  isFunction: __webpack_require__(11),\n  isObject: __webpack_require__(24),\n  isBoolean: __webpack_require__(82),\n  isNil: __webpack_require__(5),\n  isString: __webpack_require__(10),\n  isArray: __webpack_require__(4),\n  isNumber: __webpack_require__(9),\n  isEmpty: __webpack_require__(83),\n  // isBlank\n  uniqueId: __webpack_require__(86),\n  clone: __webpack_require__(46),\n  deepMix: __webpack_require__(47),\n  assign: __webpack_require__(8),\n  // simpleMix\n  merge: __webpack_require__(47),\n  // mix\n  upperFirst: __webpack_require__(87),\n  // ucfirst\n  each: __webpack_require__(2),\n  isEqual: __webpack_require__(49),\n  toArray: __webpack_require__(34),\n  extend: __webpack_require__(88),\n  augment: __webpack_require__(89),\n  remove: __webpack_require__(90),\n  isNumberEqual: __webpack_require__(35),\n  toRadian: __webpack_require__(91),\n  toDegree: __webpack_require__(92),\n  mod: __webpack_require__(93),\n  clamp: __webpack_require__(50),\n  createDom: __webpack_require__(94),\n  modifyCSS: __webpack_require__(95),\n  requestAnimationFrame: __webpack_require__(96),\n  getRatio: function getRatio() {\n    return window.devicePixelRatio ? window.devicePixelRatio : 2;\n  },\n  mat3: __webpack_require__(51),\n  vec2: __webpack_require__(97),\n  vec3: __webpack_require__(98),\n  transform: __webpack_require__(99)\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 是否是布尔类型\n *\n * @param {Object} value 测试的值\n * @return {Boolean}\n */\nvar isType = __webpack_require__(12);\n\nvar isBoolean = function isBoolean(value) {\n  return isType(value, 'Boolean');\n};\n\nmodule.exports = isBoolean;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNil = __webpack_require__(5);\n\nvar isArrayLike = __webpack_require__(13);\n\nvar getType = __webpack_require__(84);\n\nvar isPrototype = __webpack_require__(85);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isEmpty(value) {\n  /**\n   * isEmpty(null) => true\n   * isEmpty() => true\n   * isEmpty(true) => true\n   * isEmpty(1) => true\n   * isEmpty([1, 2, 3]) => false\n   * isEmpty('abc') => false\n   * isEmpty({ a: 1 }) => false\n   */\n  if (isNil(value)) {\n    return true;\n  }\n\n  if (isArrayLike(value)) {\n    return !value.length;\n  }\n\n  var type = getType(value);\n\n  if (type === 'Map' || type === 'Set') {\n    return !value.size;\n  }\n\n  if (isPrototype(value)) {\n    return !Object.keys(value).length;\n  }\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isEmpty;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nvar getType = function getType(value) {\n  return toString.call(value).replace(/^\\[object /, '').replace(/\\]$/, '');\n};\n\nmodule.exports = getType;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\nvar objectProto = Object.prototype;\n\nvar isPrototype = function isPrototype(value) {\n  var Ctor = value && value.constructor;\n  var proto = typeof Ctor === 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n};\n\nmodule.exports = isPrototype;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\nvar uniqueId = function () {\n  var map = {};\n  return function (prefix) {\n    prefix = prefix || 'g';\n\n    if (!map[prefix]) {\n      map[prefix] = 1;\n    } else {\n      map[prefix] += 1;\n    }\n\n    return prefix + map[prefix];\n  };\n}();\n\nmodule.exports = uniqueId;\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(23);\n\nvar upperFirst = function upperFirst(value) {\n  var str = toString(value);\n  return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nmodule.exports = upperFirst;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(11);\n\nvar mix = __webpack_require__(8);\n\nvar extend = function extend(subclass, superclass, overrides, staticOverrides) {\n  // 如果只提供父类构造函数，则自动生成子类构造函数\n  if (!isFunction(superclass)) {\n    overrides = superclass;\n    superclass = subclass;\n\n    subclass = function subclass() {};\n  }\n\n  var create = Object.create ? function (proto, c) {\n    return Object.create(proto, {\n      constructor: {\n        value: c\n      }\n    });\n  } : function (proto, c) {\n    function Tmp() {}\n\n    Tmp.prototype = proto;\n    var o = new Tmp();\n    o.constructor = c;\n    return o;\n  };\n  var superObj = create(superclass.prototype, subclass); // new superclass(),//实例化父类作为子类的prototype\n\n  subclass.prototype = mix(superObj, subclass.prototype); // 指定子类的prototype\n\n  subclass.superclass = create(superclass.prototype, superclass);\n  mix(superObj, overrides);\n  mix(subclass, staticOverrides);\n  return subclass;\n};\n\nmodule.exports = extend;\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(11);\n\nvar toArray = __webpack_require__(34);\n\nvar mix = __webpack_require__(8);\n\nvar augment = function augment(c) {\n  var args = toArray(arguments);\n\n  for (var i = 1; i < args.length; i++) {\n    var obj = args[i];\n\n    if (isFunction(obj)) {\n      obj = obj.prototype;\n    }\n\n    mix(c.prototype, obj);\n  }\n};\n\nmodule.exports = augment;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\nvar arrPrototype = Array.prototype;\nvar splice = arrPrototype.splice;\nvar indexOf = arrPrototype.indexOf;\nvar slice = arrPrototype.slice;\n\nvar pull = function pull(arr) {\n  var values = slice.call(arguments, 1);\n\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n    var fromIndex = -1;\n\n    while ((fromIndex = indexOf.call(arr, value)) > -1) {\n      splice.call(arr, fromIndex, 1);\n    }\n  }\n\n  return arr;\n};\n\nmodule.exports = pull;\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\nvar RADIAN = Math.PI / 180;\n\nvar toRadian = function toRadian(degree) {\n  return RADIAN * degree;\n};\n\nmodule.exports = toRadian;\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\nvar DEGREE = 180 / Math.PI;\n\nvar toDegree = function toDegree(radian) {\n  return DEGREE * radian;\n};\n\nmodule.exports = toDegree;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\nvar mod = function mod(n, m) {\n  return (n % m + m) % m;\n};\n\nmodule.exports = mod;\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\n/**\n * 创建DOM 节点\n * @param  {String} str Dom 字符串\n * @return {HTMLElement}  DOM 节点\n */\nvar TABLE = document.createElement('table');\nvar TABLE_TR = document.createElement('tr');\nvar FRAGMENT_REG = /^\\s*<(\\w+|!)[^>]*>/;\nvar CONTAINERS = {\n  tr: document.createElement('tbody'),\n  tbody: TABLE,\n  thead: TABLE,\n  tfoot: TABLE,\n  td: TABLE_TR,\n  th: TABLE_TR,\n  '*': document.createElement('div')\n};\n\nmodule.exports = function createDom(str) {\n  var name = FRAGMENT_REG.test(str) && RegExp.$1;\n\n  if (!(name in CONTAINERS)) {\n    name = '*';\n  }\n\n  var container = CONTAINERS[name];\n  str = str.replace(/(^\\s*)|(\\s*$)/g, '');\n  container.innerHTML = '' + str;\n  var dom = container.childNodes[0];\n  container.removeChild(dom);\n  return dom;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\nmodule.exports = function modifyCSS(dom, css) {\n  if (dom) {\n    for (var key in css) {\n      if (css.hasOwnProperty(key)) {\n        dom.style[key] = css[key];\n      }\n    }\n  }\n\n  return dom;\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports) {\n\nmodule.exports = function requestAnimationFrame(fn) {\n  var method = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function (fn) {\n    return setTimeout(fn, 16);\n  };\n\n  return method(fn);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(183);\n\nvar clamp = __webpack_require__(50);\n\nvec2.angle = function (v1, v2) {\n  var theta = vec2.dot(v1, v2) / (vec2.length(v1) * vec2.length(v2));\n  return Math.acos(clamp(theta, -1, 1));\n};\n/**\n * 向量 v1 到 向量 v2 夹角的方向\n * @param  {Array} v1 向量\n * @param  {Array} v2 向量\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\n */\n\n\nvec2.direction = function (v1, v2) {\n  return v1[0] * v2[1] - v2[0] * v1[1];\n};\n\nvec2.angleTo = function (v1, v2, direct) {\n  var angle = vec2.angle(v1, v2);\n  var angleLargeThanPI = vec2.direction(v1, v2) >= 0;\n\n  if (direct) {\n    if (angleLargeThanPI) {\n      return Math.PI * 2 - angle;\n    }\n\n    return angle;\n  }\n\n  if (angleLargeThanPI) {\n    return angle;\n  }\n\n  return Math.PI * 2 - angle;\n};\n\nvec2.vertical = function (out, v, flag) {\n  if (flag) {\n    out[0] = v[1];\n    out[1] = -1 * v[0];\n  } else {\n    out[0] = -1 * v[1];\n    out[1] = v[0];\n  }\n\n  return out;\n};\n\nmodule.exports = vec2;\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec3 = __webpack_require__(184);\n\nmodule.exports = vec3;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(46);\n\nvar each = __webpack_require__(2);\n\nvar mat3 = __webpack_require__(51);\n\nmodule.exports = function transform(m, ts) {\n  m = clone(m);\n  each(ts, function (t) {\n    switch (t[0]) {\n      case 't':\n        mat3.translate(m, m, [t[1], t[2]]);\n        break;\n\n      case 's':\n        mat3.scale(m, m, [t[1], t[2]]);\n        break;\n\n      case 'r':\n        mat3.rotate(m, m, t[1]);\n        break;\n\n      case 'm':\n        mat3.multiply(m, m, t[1]);\n        break;\n\n      default:\n        return false;\n    }\n  });\n  return m;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Event = function Event(type, event, bubbles, cancelable) {\n  this.type = type; // 事件类型\n\n  this.target = null; // 目标\n\n  this.currentTarget = null; // 当前目标\n\n  this.bubbles = bubbles; // 冒泡\n\n  this.cancelable = cancelable; // 是否能够阻止\n\n  this.timeStamp = new Date().getTime(); // 时间戳\n\n  this.defaultPrevented = false; // 阻止默认\n\n  this.propagationStopped = false; // 阻止冒泡\n\n  this.removed = false; // 是否被移除\n\n  this.event = event; // 触发的原生事件\n};\n\nUtil.augment(Event, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = this.cancelable && true;\n  },\n  stopPropagation: function stopPropagation() {\n    this.propagationStopped = true;\n  },\n  remove: function remove() {\n    this.remove = true;\n  },\n  clone: function clone() {\n    return Util.clone(this);\n  },\n  toString: function toString() {\n    return '[Event (type=' + this.type + ')]';\n  }\n});\nmodule.exports = Event;\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Element = __webpack_require__(102);\n\nvar Shape = __webpack_require__(188);\n\nvar SHAPE_MAP = {}; // 缓存图形类型\n\nvar INDEX = '_INDEX';\n\nfunction getComparer(compare) {\n  return function (left, right) {\n    var result = compare(left, right);\n    return result === 0 ? left[INDEX] - right[INDEX] : result;\n  };\n}\n\nfunction find(children, x, y) {\n  var rst;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var child = children[i];\n\n    if (child._cfg.visible && child._cfg.capture) {\n      if (child.isGroup) {\n        rst = child.getShape(x, y);\n      } else if (child.isHit(x, y)) {\n        rst = child;\n      }\n    }\n\n    if (rst) {\n      break;\n    }\n  }\n\n  return rst;\n}\n\nvar Group = function Group(cfg) {\n  Group.superclass.constructor.call(this, cfg);\n  this.set('children', []);\n  this.set('tobeRemoved', []);\n\n  this._beforeRenderUI();\n\n  this._renderUI();\n\n  this._bindUI();\n};\n\nfunction initClassCfgs(c) {\n  if (c._cfg || c === Group) {\n    return;\n  }\n\n  var superCon = c.superclass.constructor;\n\n  if (superCon && !superCon._cfg) {\n    initClassCfgs(superCon);\n  }\n\n  c._cfg = {};\n  Util.merge(c._cfg, superCon._cfg);\n  Util.merge(c._cfg, c.CFG);\n}\n\nUtil.extend(Group, Element);\nUtil.augment(Group, {\n  isGroup: true,\n  type: 'group',\n  canFill: true,\n  canStroke: true,\n  getDefaultCfg: function getDefaultCfg() {\n    initClassCfgs(this.constructor);\n    return Util.merge({}, this.constructor._cfg);\n  },\n  _beforeRenderUI: function _beforeRenderUI() {},\n  _renderUI: function _renderUI() {},\n  _bindUI: function _bindUI() {},\n  addShape: function addShape(type, cfg) {\n    var canvas = this.get('canvas');\n    cfg = cfg || {};\n    var shapeType = SHAPE_MAP[type];\n\n    if (!shapeType) {\n      shapeType = Util.upperFirst(type);\n      SHAPE_MAP[type] = shapeType;\n    }\n\n    if (cfg.attrs && canvas) {\n      var attrs = cfg.attrs;\n\n      if (type === 'text') {\n        // 临时解决\n        var topFontFamily = canvas.get('fontFamily');\n\n        if (topFontFamily) {\n          attrs.fontFamily = attrs.fontFamily ? attrs.fontFamily : topFontFamily;\n        }\n      }\n    }\n\n    cfg.canvas = canvas;\n    cfg.type = type;\n    var rst = new Shape[shapeType](cfg);\n    this.add(rst);\n    return rst;\n  },\n\n  /** 添加图组\n   * @param  {Function|Object|undefined} param 图组类\n   * @param  {Object} cfg 配置项\n   * @return {Object} rst 图组\n   */\n  addGroup: function addGroup(param, cfg) {\n    var canvas = this.get('canvas');\n    var rst;\n    cfg = Util.merge({}, cfg);\n\n    if (Util.isFunction(param)) {\n      if (cfg) {\n        cfg.canvas = canvas;\n        cfg.parent = this;\n        rst = new param(cfg);\n      } else {\n        rst = new param({\n          canvas: canvas,\n          parent: this\n        });\n      }\n\n      this.add(rst);\n    } else if (Util.isObject(param)) {\n      param.canvas = canvas;\n      rst = new Group(param);\n      this.add(rst);\n    } else if (param === undefined) {\n      rst = new Group();\n      this.add(rst);\n    } else {\n      return false;\n    }\n\n    return rst;\n  },\n\n  /** 绘制背景\n   * @param  {Array} padding 内边距\n   * @param  {Attrs} attrs 图形属性\n   * @param  {Shape} backShape 背景图形\n   * @return {Object} 背景层对象\n   */\n  renderBack: function renderBack(padding, attrs) {\n    var backShape = this.get('backShape');\n    var innerBox = this.getBBox(); // const parent = this.get('parent'); // getParent\n\n    Util.merge(attrs, {\n      x: innerBox.minX - padding[3],\n      y: innerBox.minY - padding[0],\n      width: innerBox.width + padding[1] + padding[3],\n      height: innerBox.height + padding[0] + padding[2]\n    });\n\n    if (backShape) {\n      backShape.attr(attrs);\n    } else {\n      backShape = this.addShape('rect', {\n        zIndex: -1,\n        attrs: attrs\n      });\n    }\n\n    this.set('backShape', backShape);\n    this.sort();\n    return backShape;\n  },\n  removeChild: function removeChild(item, destroy) {\n    if (arguments.length >= 2) {\n      if (this.contain(item)) {\n        item.remove(destroy);\n      }\n    } else {\n      if (arguments.length === 1) {\n        if (Util.isBoolean(item)) {\n          destroy = item;\n        } else {\n          if (this.contain(item)) {\n            item.remove(true);\n          }\n\n          return this;\n        }\n      }\n\n      if (arguments.length === 0) {\n        destroy = true;\n      }\n\n      Group.superclass.remove.call(this, destroy);\n    }\n\n    return this;\n  },\n\n  /**\n   * 向组中添加shape或者group\n   * @param {Object} items 图形或者分组\n   * @return {Object} group 本尊\n   */\n  add: function add(items) {\n    var self = this;\n    var children = self.get('children');\n\n    if (Util.isArray(items)) {\n      Util.each(items, function (item) {\n        var parent = item.get('parent');\n\n        if (parent) {\n          parent.removeChild(item, false);\n        }\n\n        self._setCfgProperty(item);\n      });\n      self._cfg.children = children.concat(items);\n    } else {\n      var item = items;\n      var parent = item.get('parent');\n\n      if (parent) {\n        parent.removeChild(item, false);\n      }\n\n      self._setCfgProperty(item);\n\n      children.push(item);\n    }\n\n    return self;\n  },\n  _setCfgProperty: function _setCfgProperty(item) {\n    var cfg = this._cfg;\n    item.set('parent', this);\n    item.set('canvas', cfg.canvas);\n\n    if (cfg.timeline) {\n      item.set('timeline', cfg.timeline);\n    }\n  },\n  contain: function contain(item) {\n    var children = this.get('children');\n    return children.indexOf(item) > -1;\n  },\n  getChildByIndex: function getChildByIndex(index) {\n    var children = this.get('children');\n    return children[index];\n  },\n  getFirst: function getFirst() {\n    return this.getChildByIndex(0);\n  },\n  getLast: function getLast() {\n    var lastIndex = this.get('children').length - 1;\n    return this.getChildByIndex(lastIndex);\n  },\n  getBBox: function getBBox() {\n    var self = this;\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var children = self.get('children');\n\n    if (children.length > 0) {\n      Util.each(children, function (child) {\n        if (child.get('visible')) {\n          if (child.isGroup && child.get('children').length === 0) {\n            return;\n          }\n\n          var _box = child.getBBox();\n\n          if (!_box) {\n            return true;\n          }\n\n          var leftTop = [_box.minX, _box.minY, 1];\n          var leftBottom = [_box.minX, _box.maxY, 1];\n          var rightTop = [_box.maxX, _box.minY, 1];\n          var rightBottom = [_box.maxX, _box.maxY, 1];\n          child.apply(leftTop);\n          child.apply(leftBottom);\n          child.apply(rightTop);\n          child.apply(rightBottom);\n          var boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          var boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n\n          if (boxMinX < minX) {\n            minX = boxMinX;\n          }\n\n          if (boxMaxX > maxX) {\n            maxX = boxMaxX;\n          }\n\n          if (boxMinY < minY) {\n            minY = boxMinY;\n          }\n\n          if (boxMaxY > maxY) {\n            maxY = boxMaxY;\n          }\n        }\n      });\n    } else {\n      minX = 0;\n      maxX = 0;\n      minY = 0;\n      maxY = 0;\n    }\n\n    var box = {\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    };\n    box.x = box.minX;\n    box.y = box.minY;\n    box.width = box.maxX - box.minX;\n    box.height = box.maxY - box.minY;\n    return box;\n  },\n  getCount: function getCount() {\n    return this.get('children').length;\n  },\n  sort: function sort() {\n    var children = this.get('children'); // 稳定排序\n\n    Util.each(children, function (child, index) {\n      child[INDEX] = index;\n      return child;\n    });\n    children.sort(getComparer(function (obj1, obj2) {\n      return obj1.get('zIndex') - obj2.get('zIndex');\n    }));\n    return this;\n  },\n  findById: function findById(id) {\n    return this.find(function (item) {\n      return item.get('id') === id;\n    });\n  },\n\n  /**\n   * 根据查找函数查找分组或者图形\n   * @param  {Function} fn 匹配函数\n   * @return {Canvas.Base} 分组或者图形\n   */\n  find: function find(fn) {\n    if (Util.isString(fn)) {\n      return this.findById(fn);\n    }\n\n    var children = this.get('children');\n    var rst = null;\n    Util.each(children, function (item) {\n      if (fn(item)) {\n        rst = item;\n      } else if (item.find) {\n        rst = item.find(fn);\n      }\n\n      if (rst) {\n        return false;\n      }\n    });\n    return rst;\n  },\n\n  /**\n   * @param  {Function} fn filter mathod\n   * @return {Array} all the matching shapes and groups\n   */\n  findAll: function findAll(fn) {\n    var children = this.get('children');\n    var rst = [];\n    var childRst = [];\n    Util.each(children, function (item) {\n      if (fn(item)) {\n        rst.push(item);\n      }\n\n      if (item.findAllBy) {\n        childRst = item.findAllBy(fn);\n        rst = rst.concat(childRst);\n      }\n    });\n    return rst;\n  },\n\n  /**\n   * @Deprecated\n   * @param  {Function} fn filter method\n   * @return {Object} found shape or group\n   */\n  findBy: function findBy(fn) {\n    var children = this.get('children');\n    var rst = null;\n    Util.each(children, function (item) {\n      if (fn(item)) {\n        rst = item;\n      } else if (item.findBy) {\n        rst = item.findBy(fn);\n      }\n\n      if (rst) {\n        return false;\n      }\n    });\n    return rst;\n  },\n\n  /**\n   * @Deprecated\n   * @param  {Function} fn filter mathod\n   * @return {Array} all the matching shapes and groups\n   */\n  findAllBy: function findAllBy(fn) {\n    var children = this.get('children');\n    var rst = [];\n    var childRst = [];\n    Util.each(children, function (item) {\n      if (fn(item)) {\n        rst.push(item);\n      }\n\n      if (item.findAllBy) {\n        childRst = item.findAllBy(fn);\n        rst = rst.concat(childRst);\n      }\n    });\n    return rst;\n  },\n  getShape: function getShape(x, y) {\n    var self = this;\n    var clip = self._attrs.clip;\n    var children = self._cfg.children;\n    var rst;\n\n    if (clip) {\n      var v = [x, y, 1];\n      clip.invert(v, self.get('canvas')); // 已经在外面转换\n\n      if (clip.isPointInPath(v[0], v[1])) {\n        rst = find(children, x, y);\n      }\n    } else {\n      rst = find(children, x, y);\n    }\n\n    return rst;\n  },\n  clearTotalMatrix: function clearTotalMatrix() {\n    var m = this.get('totalMatrix');\n\n    if (m) {\n      this.setSilent('totalMatrix', null);\n      var children = this._cfg.children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        child.clearTotalMatrix();\n      }\n    }\n  },\n  clear: function clear(delayRemove) {\n    var children = this._cfg.children;\n\n    for (var i = children.length - 1; i >= 0; i--) {\n      children[i].remove(true, delayRemove);\n    }\n\n    this._cfg.children = [];\n    return this;\n  },\n  destroy: function destroy() {\n    if (this.get('destroyed')) {\n      return;\n    }\n\n    this.clear();\n    Group.superclass.destroy.call(this);\n  },\n  clone: function clone() {\n    var self = this;\n    var children = self._cfg.children;\n    var clone = new Group();\n    Util.each(children, function (child) {\n      clone.add(child.clone());\n    });\n    return clone;\n  }\n});\nmodule.exports = Group;\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Attribute = __webpack_require__(185);\n\nvar Transform = __webpack_require__(186);\n\nvar Animate = __webpack_require__(187);\n\nvar EventEmitter = __webpack_require__(53);\n\nvar Element = function Element(cfg) {\n  this._cfg = {\n    zIndex: 0,\n    capture: true,\n    visible: true,\n    destroyed: false\n  }; // 配置存放地\n\n  Util.assign(this._cfg, this.getDefaultCfg(), cfg); // Element.CFG不合并，提升性能 合并默认配置，用户配置->继承默认配置->Element默认配置\n\n  this.initAttrs(this._cfg.attrs); // 初始化绘图属性\n\n  this._cfg.attrs = {};\n  this.initTransform(); // 初始化变换\n\n  this.init(); // 类型初始化\n};\n\nElement.CFG = {\n  /**\n   * 唯一标示\n   * @type {Number}\n   */\n  id: null,\n\n  /**\n   * Z轴的层叠关系，Z值越大离用户越近\n   * @type {Number}\n   */\n  zIndex: 0,\n\n  /**\n   * Canvas对象\n   * @type: {Object}\n   */\n  canvas: null,\n\n  /**\n   * 父元素指针\n   * @type {Object}\n   */\n  parent: null,\n\n  /**\n   * 用来设置当前对象是否能被捕捉\n   * true 能\n   * false 不能\n   * 对象默认是都可以被捕捉的, 当capture为false时，group.getShape(x, y)方法无法获得该元素\n   * 通过将不必要捕捉的元素的该属性设置成false, 来提高捕捉性能\n   * @type {Boolean}\n   **/\n  capture: true,\n\n  /**\n   * 画布的上下文\n   * @type {Object}\n   */\n  context: null,\n\n  /**\n   * 是否显示\n   * @type {Boolean}\n   */\n  visible: true,\n\n  /**\n   * 是否被销毁\n   * @type: {Boolean}\n   */\n  destroyed: false\n};\nUtil.augment(Element, Attribute, Transform, EventEmitter, Animate, {\n  init: function init() {\n    this.setSilent('animable', true);\n    this.setSilent('animating', false); // 初始时不处于动画状态\n  },\n  getParent: function getParent() {\n    return this._cfg.parent;\n  },\n\n  /**\n   * 获取默认的配置信息\n   * @protected\n   * @return {Object} 默认的属性\n   */\n  getDefaultCfg: function getDefaultCfg() {\n    return {};\n  },\n  set: function set(name, value) {\n    if (name === 'zIndex' && this._beforeSetZIndex) {\n      this._beforeSetZIndex(value);\n    }\n\n    if (name === 'loading' && this._beforeSetLoading) {\n      this._beforeSetLoading(value);\n    }\n\n    this._cfg[name] = value;\n    return this;\n  },\n  // deprecated\n  setSilent: function setSilent(name, value) {\n    this._cfg[name] = value;\n  },\n  get: function get(name) {\n    return this._cfg[name];\n  },\n  show: function show() {\n    this._cfg.visible = true;\n    return this;\n  },\n  hide: function hide() {\n    this._cfg.visible = false;\n    return this;\n  },\n  remove: function remove(destroy, delayRemove) {\n    var cfg = this._cfg;\n    var parent = cfg.parent;\n    var el = cfg.el;\n\n    if (parent) {\n      Util.remove(parent.get('children'), this);\n    }\n\n    if (el) {\n      if (delayRemove) {\n        parent && parent._cfg.tobeRemoved.push(el);\n      } else {\n        el.parentNode.removeChild(el);\n      }\n    }\n\n    if (destroy || destroy === undefined) {\n      this.destroy();\n    }\n\n    return this;\n  },\n  destroy: function destroy() {\n    var destroyed = this.get('destroyed');\n\n    if (destroyed) {\n      return;\n    }\n\n    this._attrs = null;\n    this.removeEvent(); // 移除所有的事件\n\n    this._cfg = {\n      destroyed: true\n    };\n  },\n  toFront: function toFront() {\n    var cfg = this._cfg;\n    var parent = cfg.parent;\n\n    if (!parent) {\n      return;\n    }\n\n    var children = parent._cfg.children;\n    var el = cfg.el;\n    var index = children.indexOf(this);\n    children.splice(index, 1);\n    children.push(this);\n\n    if (el) {\n      el.parentNode.removeChild(el);\n      cfg.el = null;\n    }\n  },\n  toBack: function toBack() {\n    var cfg = this._cfg;\n    var parent = cfg.parent;\n\n    if (!parent) {\n      return;\n    }\n\n    var children = parent._cfg.children;\n    var el = cfg.el;\n    var index = children.indexOf(this);\n    children.splice(index, 1);\n    children.unshift(this);\n\n    if (el) {\n      var parentNode = el.parentNode;\n      parentNode.removeChild(el);\n      parentNode.insertBefore(el, parentNode.firstChild);\n    }\n  },\n  _beforeSetZIndex: function _beforeSetZIndex(zIndex) {\n    var parent = this._cfg.parent;\n    this._cfg.zIndex = zIndex;\n\n    if (!Util.isNil(parent)) {\n      parent.sort();\n    }\n\n    var el = this._cfg.el;\n\n    if (el) {\n      var children = parent._cfg.children;\n      var index = children.indexOf(this);\n      var parentNode = el.parentNode;\n      parentNode.removeChild(el);\n\n      if (index === children.length - 1) {\n        parentNode.appendChild(el);\n      } else {\n        parentNode.insertBefore(el, parentNode.childNodes[index]);\n      }\n    }\n\n    return zIndex;\n  },\n  _setAttrs: function _setAttrs(attrs) {\n    this.attr(attrs);\n    return attrs;\n  },\n  setZIndex: function setZIndex(zIndex) {\n    this._cfg.zIndex = zIndex;\n    return this._beforeSetZIndex(zIndex);\n  },\n  clone: function clone() {\n    return Util.clone(this);\n  },\n  getBBox: function getBBox() {}\n});\nmodule.exports = Element;\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar vec2 = Util.vec2;\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n\nfunction quadraticProjectPoint(x1, y1, x2, y2, x3, y3, x, y, out) {\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var d1;\n  var v1;\n  var v2;\n\n  var _t;\n\n  var d2;\n  var i;\n  var EPSILON = 0.0001;\n  var v0 = [x, y];\n\n  for (_t = 0; _t < 1; _t += 0.05) {\n    v1 = [quadraticAt(x1, x2, x3, _t), quadraticAt(y1, y2, y3, _t)];\n    d1 = vec2.squaredDistance(v0, v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity;\n\n  for (i = 0; i < 32; i++) {\n    if (interval < EPSILON) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval;\n    v1 = [quadraticAt(x1, x2, x3, prev), quadraticAt(y1, y2, y3, prev)];\n    d1 = vec2.squaredDistance(v0, v1);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      v2 = [quadraticAt(x1, x2, x3, next), quadraticAt(y1, y2, y3, next)];\n      d2 = vec2.squaredDistance(v0, v2);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n\n  if (out) {\n    out.x = quadraticAt(x1, x2, x3, t);\n    out.y = quadraticAt(y1, y2, y3, t);\n  }\n\n  return Math.sqrt(d);\n}\n\nfunction quadraticExtrema(p0, p1, p2) {\n  var a = p0 + p2 - 2 * p1;\n\n  if (Util.isNumberEqual(a, 0)) {\n    return [0.5];\n  }\n\n  var rst = (p0 - p1) / a;\n\n  if (rst <= 1 && rst >= 0) {\n    return [rst];\n  }\n\n  return [];\n}\n\nmodule.exports = {\n  at: quadraticAt,\n  projectPoint: function projectPoint(x1, y1, x2, y2, x3, y3, x, y) {\n    var rst = {};\n    quadraticProjectPoint(x1, y1, x2, y2, x3, y3, x, y, rst);\n    return rst;\n  },\n  pointDistance: quadraticProjectPoint,\n  extrema: quadraticExtrema\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  xAt: function xAt(psi, rx, ry, cx, t) {\n    return rx * Math.cos(psi) * Math.cos(t) - ry * Math.sin(psi) * Math.sin(t) + cx;\n  },\n  yAt: function yAt(psi, rx, ry, cy, t) {\n    return rx * Math.sin(psi) * Math.cos(t) + ry * Math.cos(psi) * Math.sin(t) + cy;\n  },\n  xExtrema: function xExtrema(psi, rx, ry) {\n    return Math.atan(-ry / rx * Math.tan(psi));\n  },\n  yExtrema: function yExtrema(psi, rx, ry) {\n    return Math.atan(ry / (rx * Math.tan(psi)));\n  }\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar ArcMath = __webpack_require__(37);\n\nvar Arrow = __webpack_require__(38);\n\nfunction _getArcX(x, radius, angle) {\n  return x + radius * Math.cos(angle);\n}\n\nfunction _getArcY(y, radius, angle) {\n  return y + radius * Math.sin(angle);\n}\n\nvar Arc = function Arc(cfg) {\n  Arc.superclass.constructor.call(this, cfg);\n};\n\nArc.ATTRS = {\n  x: 0,\n  y: 0,\n  r: 0,\n  startAngle: 0,\n  endAngle: 0,\n  clockwise: false,\n  lineWidth: 1,\n  startArrow: false,\n  endArrow: false\n};\nUtil.extend(Arc, Shape);\nUtil.augment(Arc, {\n  canStroke: true,\n  type: 'arc',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      x: 0,\n      y: 0,\n      r: 0,\n      startAngle: 0,\n      endAngle: 0,\n      clockwise: false,\n      lineWidth: 1,\n      startArrow: false,\n      endArrow: false\n    };\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n    var x = attrs.x,\n        y = attrs.y,\n        r = attrs.r,\n        startAngle = attrs.startAngle,\n        endAngle = attrs.endAngle,\n        clockwise = attrs.clockwise;\n    var lineWidth = this.getHitLineWidth();\n    var halfWidth = lineWidth / 2;\n    var box = ArcMath.box(x, y, r, startAngle, endAngle, clockwise);\n    box.minX -= halfWidth;\n    box.minY -= halfWidth;\n    box.maxX += halfWidth;\n    box.maxY += halfWidth;\n    return box;\n  },\n  getStartTangent: function getStartTangent() {\n    var attrs = this._attrs;\n    var x = attrs.x,\n        y = attrs.y,\n        startAngle = attrs.startAngle,\n        r = attrs.r,\n        clockwise = attrs.clockwise;\n    var diff = Math.PI / 180;\n\n    if (clockwise) {\n      diff *= -1;\n    }\n\n    var result = [];\n\n    var x1 = _getArcX(x, r, startAngle + diff);\n\n    var y1 = _getArcY(y, r, startAngle + diff);\n\n    var x2 = _getArcX(x, r, startAngle);\n\n    var y2 = _getArcY(y, r, startAngle);\n\n    result.push([x1, y1]);\n    result.push([x2, y2]);\n    return result;\n  },\n  getEndTangent: function getEndTangent() {\n    var attrs = this._attrs;\n    var x = attrs.x,\n        y = attrs.y,\n        endAngle = attrs.endAngle,\n        r = attrs.r,\n        clockwise = attrs.clockwise;\n    var diff = Math.PI / 180;\n    var result = [];\n\n    if (clockwise) {\n      diff *= -1;\n    }\n\n    var x1 = _getArcX(x, r, endAngle + diff);\n\n    var y1 = _getArcY(y, r, endAngle + diff);\n\n    var x2 = _getArcX(x, r, endAngle);\n\n    var y2 = _getArcY(y, r, endAngle);\n\n    result.push([x2, y2]);\n    result.push([x1, y1]);\n    return result;\n  },\n  createPath: function createPath(context) {\n    var attrs = this._attrs;\n    var x = attrs.x,\n        y = attrs.y,\n        r = attrs.r,\n        startAngle = attrs.startAngle,\n        endAngle = attrs.endAngle,\n        clockwise = attrs.clockwise;\n    context = context || self.get('context');\n    context.beginPath();\n    context.arc(x, y, r, startAngle, endAngle, clockwise);\n  },\n  afterPath: function afterPath(context) {\n    var attrs = this._attrs;\n    context = context || this.get('context');\n\n    if (attrs.startArrow) {\n      var startPoints = this.getStartTangent();\n      Arrow.addStartArrow(context, attrs, startPoints[0][0], startPoints[0][1], startPoints[1][0], startPoints[1][1]);\n    }\n\n    if (attrs.endArrow) {\n      var endPoints = this.getEndTangent();\n      Arrow.addEndArrow(context, attrs, endPoints[0][0], endPoints[0][1], endPoints[1][0], endPoints[1][1]);\n    }\n  }\n});\nmodule.exports = Arc;\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Circle = function Circle(cfg) {\n  Circle.superclass.constructor.call(this, cfg);\n};\n\nCircle.ATTRS = {\n  x: 0,\n  y: 0,\n  r: 0,\n  lineWidth: 1\n};\nUtil.extend(Circle, Shape);\nUtil.augment(Circle, {\n  canFill: true,\n  canStroke: true,\n  type: 'circle',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1\n    };\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.r;\n    var lineWidth = this.getHitLineWidth();\n    var halfWidth = lineWidth / 2 + r;\n    return {\n      minX: cx - halfWidth,\n      minY: cy - halfWidth,\n      maxX: cx + halfWidth,\n      maxY: cy + halfWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var r = attrs.r;\n    context.beginPath();\n    context.arc(cx, cy, r, 0, Math.PI * 2, false);\n    context.closePath();\n  }\n});\nmodule.exports = Circle;\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Dom = function Dom(cfg) {\n  Dom.superclass.constructor.call(this, cfg);\n};\n\nUtil.extend(Dom, Shape);\nUtil.augment(Dom, {\n  canFill: true,\n  canStroke: true,\n  type: 'dom',\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var lineWidth = this.getHitLineWidth();\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: x - halfWidth,\n      minY: y - halfWidth,\n      maxX: x + width + halfWidth,\n      maxY: y + height + halfWidth\n    };\n  }\n});\nmodule.exports = Dom;\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Ellipse = function Ellipse(cfg) {\n  Ellipse.superclass.constructor.call(this, cfg);\n};\n\nEllipse.ATTRS = {\n  x: 0,\n  y: 0,\n  rx: 1,\n  ry: 1,\n  lineWidth: 1\n};\nUtil.extend(Ellipse, Shape);\nUtil.augment(Ellipse, {\n  canFill: true,\n  canStroke: true,\n  type: 'ellipse',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1\n    };\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rx = attrs.rx;\n    var ry = attrs.ry;\n    var lineWidth = this.getHitLineWidth();\n    var halfXWidth = rx + lineWidth / 2;\n    var halfYWidth = ry + lineWidth / 2;\n    return {\n      minX: cx - halfXWidth,\n      minY: cy - halfYWidth,\n      maxX: cx + halfXWidth,\n      maxY: cy + halfYWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rx = attrs.rx;\n    var ry = attrs.ry;\n    context = context || self.get('context');\n    var r = rx > ry ? rx : ry;\n    var scaleX = rx > ry ? 1 : rx / ry;\n    var scaleY = rx > ry ? ry / rx : 1;\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    Util.mat3.scale(m, m, [scaleX, scaleY]);\n    Util.mat3.translate(m, m, [cx, cy]);\n    context.beginPath();\n    context.save();\n    context.transform(m[0], m[1], m[3], m[4], m[6], m[7]);\n    context.arc(0, 0, r, 0, Math.PI * 2);\n    context.restore();\n    context.closePath();\n  }\n});\nmodule.exports = Ellipse;\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar ArcMath = __webpack_require__(37);\n\nvar Fan = function Fan(cfg) {\n  Fan.superclass.constructor.call(this, cfg);\n};\n\nFan.ATTRS = {\n  x: 0,\n  y: 0,\n  rs: 0,\n  re: 0,\n  startAngle: 0,\n  endAngle: 0,\n  clockwise: false,\n  lineWidth: 1\n};\nUtil.extend(Fan, Shape);\nUtil.augment(Fan, {\n  canFill: true,\n  canStroke: true,\n  type: 'fan',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      clockwise: false,\n      lineWidth: 1,\n      rs: 0,\n      re: 0\n    };\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rs = attrs.rs;\n    var re = attrs.re;\n    var startAngle = attrs.startAngle;\n    var endAngle = attrs.endAngle;\n    var clockwise = attrs.clockwise;\n    var lineWidth = this.getHitLineWidth();\n    var boxs = ArcMath.box(cx, cy, rs, startAngle, endAngle, clockwise);\n    var boxe = ArcMath.box(cx, cy, re, startAngle, endAngle, clockwise);\n    var minX = Math.min(boxs.minX, boxe.minX);\n    var minY = Math.min(boxs.minY, boxe.minY);\n    var maxX = Math.max(boxs.maxX, boxe.maxX);\n    var maxY = Math.max(boxs.maxY, boxe.maxY);\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: minX - halfWidth,\n      minY: minY - halfWidth,\n      maxX: maxX + halfWidth,\n      maxY: maxY + halfWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var attrs = this._attrs;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rs = attrs.rs;\n    var re = attrs.re;\n    var startAngle = attrs.startAngle;\n    var endAngle = attrs.endAngle;\n    var clockwise = attrs.clockwise;\n    var ssp = {\n      x: Math.cos(startAngle) * rs + cx,\n      y: Math.sin(startAngle) * rs + cy\n    };\n    var sep = {\n      x: Math.cos(startAngle) * re + cx,\n      y: Math.sin(startAngle) * re + cy\n    };\n    var esp = {\n      x: Math.cos(endAngle) * rs + cx,\n      y: Math.sin(endAngle) * rs + cy\n    };\n    context = context || self.get('context');\n    context.beginPath();\n    context.moveTo(ssp.x, ssp.y);\n    context.lineTo(sep.x, sep.y);\n    context.arc(cx, cy, re, startAngle, endAngle, clockwise);\n    context.lineTo(esp.x, esp.y);\n    context.arc(cx, cy, rs, endAngle, startAngle, !clockwise);\n    context.closePath();\n  }\n});\nmodule.exports = Fan;\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar CImage = function CImage(cfg) {\n  CImage.superclass.constructor.call(this, cfg);\n};\n\nCImage.ATTRS = {\n  x: 0,\n  y: 0,\n  img: undefined,\n  width: 0,\n  height: 0,\n  sx: null,\n  sy: null,\n  swidth: null,\n  sheight: null\n};\nUtil.extend(CImage, Shape);\nUtil.augment(CImage, {\n  type: 'image',\n  isHitBox: function isHitBox() {\n    return false;\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n\n    if (!this._cfg.attrs || this._cfg.attrs.img !== attrs.img) {\n      this._setAttrImg();\n    }\n\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    return {\n      minX: x,\n      minY: y,\n      maxX: x + width,\n      maxY: y + height\n    };\n  },\n  _beforeSetLoading: function _beforeSetLoading(loading) {\n    var canvas = this.get('canvas');\n\n    if (loading === false && this.get('toDraw') === true) {\n      this._cfg.loading = false;\n      canvas.draw();\n    }\n\n    return loading;\n  },\n  _setAttrImg: function _setAttrImg() {\n    var self = this;\n    var attrs = self._attrs;\n    var img = attrs.img;\n\n    if (Util.isString(img)) {\n      var image = new Image();\n\n      image.onload = function () {\n        if (self.get('destroyed')) return false;\n        self.attr('imgSrc', img);\n        self.attr('img', image);\n        var callback = self.get('callback');\n\n        if (callback) {\n          callback.call(self);\n        }\n\n        self.set('loading', false);\n      };\n\n      image.src = img;\n      image.crossOrigin = 'Anonymous';\n      self.set('loading', true);\n    } else if (img instanceof Image) {\n      if (!attrs.width) {\n        self.attr('width', img.width);\n      }\n\n      if (!attrs.height) {\n        self.attr('height', img.height);\n      }\n\n      return img;\n    } else if (img instanceof HTMLElement && Util.isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      if (!attrs.width) {\n        self.attr('width', Number(img.getAttribute('width')));\n      }\n\n      if (!attrs.height) {\n        self.attr('height', Number(img.getAttribute('height')));\n      }\n\n      return img;\n    } else if (img instanceof ImageData) {\n      if (!attrs.width) {\n        self.attr('width', img.width);\n      }\n\n      if (!attrs.height) {\n        self.attr('height', img.height);\n      }\n\n      return img;\n    } else {\n      return null;\n    }\n  },\n  drawInner: function drawInner(context) {\n    if (this._cfg.hasUpdate) {\n      this._setAttrImg();\n    }\n\n    if (this.get('loading')) {\n      this.set('toDraw', true);\n      return;\n    }\n\n    this._drawImage(context);\n\n    this._cfg.hasUpdate = false;\n  },\n  _drawImage: function _drawImage(context) {\n    var attrs = this._attrs;\n    var x = attrs.x;\n    var y = attrs.y;\n    var image = attrs.img;\n    var width = attrs.width;\n    var height = attrs.height;\n    var sx = attrs.sx;\n    var sy = attrs.sy;\n    var swidth = attrs.swidth;\n    var sheight = attrs.sheight;\n    this.set('toDraw', false);\n    var img = image;\n\n    if (img instanceof ImageData) {\n      img = new Image();\n      img.src = image;\n    }\n\n    if (img instanceof Image || img instanceof HTMLElement && Util.isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      if (Util.isNil(sx) || Util.isNil(sy) || Util.isNil(swidth) || Util.isNil(sheight)) {\n        context.drawImage(img, x, y, width, height);\n        return;\n      }\n\n      if (!Util.isNil(sx) && !Util.isNil(sy) && !Util.isNil(swidth) && !Util.isNil(sheight)) {\n        context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\n        return;\n      }\n    }\n\n    return;\n  }\n});\nmodule.exports = CImage;\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Arrow = __webpack_require__(38);\n\nvar LineMath = __webpack_require__(36);\n\nvar Line = function Line(cfg) {\n  Line.superclass.constructor.call(this, cfg);\n};\n\nLine.ATTRS = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  lineWidth: 1,\n  startArrow: false,\n  endArrow: false\n};\nUtil.extend(Line, Shape);\nUtil.augment(Line, {\n  canStroke: true,\n  type: 'line',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1,\n      startArrow: false,\n      endArrow: false\n    };\n  },\n  calculateBox: function calculateBox() {\n    var attrs = this._attrs;\n    var x1 = attrs.x1,\n        y1 = attrs.y1,\n        x2 = attrs.x2,\n        y2 = attrs.y2;\n    var lineWidth = this.getHitLineWidth();\n    return LineMath.box(x1, y1, x2, y2, lineWidth);\n  },\n  createPath: function createPath(context) {\n    var attrs = this._attrs;\n    var x1 = attrs.x1,\n        y1 = attrs.y1,\n        x2 = attrs.x2,\n        y2 = attrs.y2;\n    context = context || self.get('context');\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n  },\n  afterPath: function afterPath(context) {\n    var attrs = this._attrs;\n    var x1 = attrs.x1,\n        y1 = attrs.y1,\n        x2 = attrs.x2,\n        y2 = attrs.y2;\n    context = context || this.get('context');\n\n    if (attrs.startArrow) {\n      Arrow.addStartArrow(context, attrs, x2, y2, x1, y1);\n    }\n\n    if (attrs.endArrow) {\n      Arrow.addEndArrow(context, attrs, x1, y1, x2, y2);\n    }\n  },\n  getPoint: function getPoint(t) {\n    var attrs = this._attrs;\n    return {\n      x: LineMath.at(attrs.x1, attrs.x2, t),\n      y: LineMath.at(attrs.y1, attrs.y2, t)\n    };\n  }\n});\nmodule.exports = Line;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar PathSegment = __webpack_require__(39);\n\nvar Format = __webpack_require__(27);\n\nvar Arrow = __webpack_require__(38);\n\nvar PathUtil = __webpack_require__(57);\n\nvar CubicMath = __webpack_require__(55);\n\nvar Path = function Path(cfg) {\n  Path.superclass.constructor.call(this, cfg);\n};\n\nPath.ATTRS = {\n  path: null,\n  lineWidth: 1,\n  startArrow: false,\n  endArrow: false\n};\nUtil.extend(Path, Shape);\nUtil.augment(Path, {\n  canFill: true,\n  canStroke: true,\n  type: 'path',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1,\n      startArrow: false,\n      endArrow: false\n    };\n  },\n  _afterSetAttrPath: function _afterSetAttrPath(path) {\n    var self = this;\n\n    if (Util.isNil(path)) {\n      self.setSilent('segments', null);\n      self.setSilent('box', undefined);\n      return;\n    }\n\n    var pathArray = Format.parsePath(path);\n    var preSegment;\n    var segments = [];\n\n    if (!Util.isArray(pathArray) || pathArray.length === 0 || pathArray[0][0] !== 'M' && pathArray[0][0] !== 'm') {\n      return;\n    }\n\n    var count = pathArray.length;\n\n    for (var i = 0; i < pathArray.length; i++) {\n      var item = pathArray[i];\n      preSegment = new PathSegment(item, preSegment, i === count - 1);\n      segments.push(preSegment);\n    }\n\n    self.setSilent('segments', segments);\n    self.setSilent('tCache', null);\n    self.setSilent('box', null);\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var segments = self.get('segments');\n\n    if (!segments) {\n      return null;\n    }\n\n    var lineWidth = this.getHitLineWidth();\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    Util.each(segments, function (segment) {\n      segment.getBBox(lineWidth);\n      var box = segment.box;\n\n      if (box) {\n        if (box.minX < minX) {\n          minX = box.minX;\n        }\n\n        if (box.maxX > maxX) {\n          maxX = box.maxX;\n        }\n\n        if (box.minY < minY) {\n          minY = box.minY;\n        }\n\n        if (box.maxY > maxY) {\n          maxY = box.maxY;\n        }\n      }\n    });\n\n    if (minX === Infinity || minY === Infinity) {\n      return {\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n      };\n    }\n\n    return {\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    };\n  },\n  _setTcache: function _setTcache() {\n    var totalLength = 0;\n    var tempLength = 0;\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    var segmentN;\n    var l;\n    var curve = this._cfg.curve;\n\n    if (!curve) {\n      return;\n    }\n\n    Util.each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n\n      if (segmentN) {\n        totalLength += CubicMath.len(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]);\n      }\n    });\n    Util.each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n\n      if (segmentN) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = CubicMath.len(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this._cfg.tCache = tCache;\n  },\n  _calculateCurve: function _calculateCurve() {\n    var self = this;\n    var attrs = self._attrs;\n    var path = attrs.path;\n    this._cfg.curve = PathUtil.pathTocurve(path);\n  },\n  getStartTangent: function getStartTangent() {\n    var segments = this.get('segments');\n    var startPoint, endPoint, tangent, result;\n\n    if (segments.length > 1) {\n      startPoint = segments[0].endPoint;\n      endPoint = segments[1].endPoint;\n      tangent = segments[1].startTangent;\n      result = [];\n\n      if (Util.isFunction(tangent)) {\n        var v = tangent();\n        result.push([startPoint.x - v[0], startPoint.y - v[1]]);\n        result.push([startPoint.x, startPoint.y]);\n      } else {\n        result.push([endPoint.x, endPoint.y]);\n        result.push([startPoint.x, startPoint.y]);\n      }\n    }\n\n    return result;\n  },\n  getEndTangent: function getEndTangent() {\n    var segments = this.get('segments');\n    var segmentsLen = segments.length;\n    var startPoint, endPoint, tangent, result;\n\n    if (segmentsLen > 1) {\n      startPoint = segments[segmentsLen - 2].endPoint;\n      endPoint = segments[segmentsLen - 1].endPoint;\n      tangent = segments[segmentsLen - 1].endTangent;\n      result = [];\n\n      if (Util.isFunction(tangent)) {\n        var v = tangent();\n        result.push([endPoint.x - v[0], endPoint.y - v[1]]);\n        result.push([endPoint.x, endPoint.y]);\n      } else {\n        result.push([startPoint.x, startPoint.y]);\n        result.push([endPoint.x, endPoint.y]);\n      }\n    }\n\n    return result;\n  },\n  getPoint: function getPoint(t) {\n    var tCache = this._cfg.tCache;\n    var subt;\n    var index;\n\n    if (!tCache) {\n      this._calculateCurve();\n\n      this._setTcache();\n\n      tCache = this._cfg.tCache;\n    }\n\n    var curve = this._cfg.curve;\n\n    if (!tCache) {\n      if (curve) {\n        return {\n          x: curve[0][1],\n          y: curve[0][2]\n        };\n      }\n\n      return null;\n    }\n\n    Util.each(tCache, function (v, i) {\n      if (t >= v[0] && t <= v[1]) {\n        subt = (t - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    var seg = curve[index];\n\n    if (Util.isNil(seg) || Util.isNil(index)) {\n      return null;\n    }\n\n    var l = seg.length;\n    var nextSeg = curve[index + 1];\n    return {\n      x: CubicMath.at(seg[l - 2], nextSeg[1], nextSeg[3], nextSeg[5], 1 - subt),\n      y: CubicMath.at(seg[l - 1], nextSeg[2], nextSeg[4], nextSeg[6], 1 - subt)\n    };\n  },\n  createPath: function createPath(context) {\n    var self = this;\n    var segments = self.get('segments');\n\n    if (!Util.isArray(segments)) {\n      return;\n    }\n\n    context = context || self.get('context');\n    context.beginPath();\n    var segmentsLen = segments.length;\n\n    for (var i = 0; i < segmentsLen; i++) {\n      segments[i].draw(context);\n    }\n  },\n  afterPath: function afterPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var segments = self.get('segments');\n    var path = attrs.path;\n    context = context || self.get('context');\n\n    if (!Util.isArray(segments)) {\n      return;\n    }\n\n    if (segments.length === 1) {\n      return;\n    }\n\n    if (!attrs.startArrow && !attrs.endArrow) {\n      return;\n    }\n\n    if (path[path.length - 1] === 'z' || path[path.length - 1] === 'Z' || attrs.fill) {\n      // 闭合路径不绘制箭头\n      return;\n    }\n\n    var startPoints = self.getStartTangent();\n    Arrow.addStartArrow(context, attrs, startPoints[0][0], startPoints[0][1], startPoints[1][0], startPoints[1][1]);\n    var endPoints = self.getEndTangent();\n    Arrow.addEndArrow(context, attrs, endPoints[0][0], endPoints[0][1], endPoints[1][0], endPoints[1][1]);\n  }\n});\nmodule.exports = Path;\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Polygon = function Polygon(cfg) {\n  Polygon.superclass.constructor.call(this, cfg);\n};\n\nPolygon.ATTRS = {\n  points: null,\n  lineWidth: 1\n};\nUtil.extend(Polygon, Shape);\nUtil.augment(Polygon, {\n  canFill: true,\n  canStroke: true,\n  type: 'polygon',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1\n    };\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n    var lineWidth = this.getHitLineWidth();\n\n    if (!points || points.length === 0) {\n      return null;\n    }\n\n    var minX = Infinity;\n    var minY = Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    Util.each(points, function (point) {\n      var x = point[0];\n      var y = point[1];\n\n      if (x < minX) {\n        minX = x;\n      }\n\n      if (x > maxX) {\n        maxX = x;\n      }\n\n      if (y < minY) {\n        minY = y;\n      }\n\n      if (y > maxY) {\n        maxY = y;\n      }\n    });\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: minX - halfWidth,\n      minY: minY - halfWidth,\n      maxX: maxX + halfWidth,\n      maxY: maxY + halfWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return;\n    }\n\n    context = context || self.get('context');\n    context.beginPath();\n    Util.each(points, function (point, index) {\n      if (index === 0) {\n        context.moveTo(point[0], point[1]);\n      } else {\n        context.lineTo(point[0], point[1]);\n      }\n    });\n    context.closePath();\n  }\n});\nmodule.exports = Polygon;\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar Arrow = __webpack_require__(38);\n\nvar LineMath = __webpack_require__(36);\n\nvar Polyline = function Polyline(cfg) {\n  Polyline.superclass.constructor.call(this, cfg);\n};\n\nPolyline.ATTRS = {\n  points: null,\n  lineWidth: 1,\n  startArrow: false,\n  endArrow: false,\n  tCache: null\n};\nUtil.extend(Polyline, Shape);\nUtil.augment(Polyline, {\n  canStroke: true,\n  type: 'polyline',\n  tCache: null,\n  // 缓存各点的t\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1,\n      startArrow: false,\n      endArrow: false\n    };\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var lineWidth = this.getHitLineWidth();\n    var points = attrs.points;\n\n    if (!points || points.length === 0) {\n      return null;\n    }\n\n    var minX = Infinity;\n    var minY = Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    Util.each(points, function (point) {\n      var x = point[0];\n      var y = point[1];\n\n      if (x < minX) {\n        minX = x;\n      }\n\n      if (x > maxX) {\n        maxX = x;\n      }\n\n      if (y < minY) {\n        minY = y;\n      }\n\n      if (y > maxY) {\n        maxY = y;\n      }\n    });\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: minX - halfWidth,\n      minY: minY - halfWidth,\n      maxX: maxX + halfWidth,\n      maxY: maxY + halfWidth\n    };\n  },\n  _setTcache: function _setTcache() {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n    var totalLength = 0;\n    var tempLength = 0;\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n\n    if (!points || points.length === 0) {\n      return;\n    }\n\n    Util.each(points, function (p, i) {\n      if (points[i + 1]) {\n        totalLength += LineMath.len(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n      }\n    });\n\n    if (totalLength <= 0) {\n      return;\n    }\n\n    Util.each(points, function (p, i) {\n      if (points[i + 1]) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = LineMath.len(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.tCache = tCache;\n  },\n  createPath: function createPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n    var l;\n    var i;\n\n    if (points.length < 2) {\n      return;\n    }\n\n    context = context || self.get('context');\n    context.beginPath();\n    context.moveTo(points[0][0], points[0][1]);\n\n    for (i = 1, l = points.length - 1; i < l; i++) {\n      context.lineTo(points[i][0], points[i][1]);\n    }\n\n    context.lineTo(points[l][0], points[l][1]);\n  },\n  getStartTangent: function getStartTangent() {\n    var points = this.__attrs.points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  },\n  getEndTangent: function getEndTangent() {\n    var points = this.__attrs.points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  },\n  afterPath: function afterPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var points = attrs.points;\n    var l = points.length - 1;\n    context = context || self.get('context');\n\n    if (attrs.startArrow) {\n      Arrow.addStartArrow(context, attrs, points[1][0], points[1][1], points[0][0], points[0][1]);\n    }\n\n    if (attrs.endArrow) {\n      Arrow.addEndArrow(context, attrs, points[l - 1][0], points[l - 1][1], points[l][0], points[l][1]);\n    }\n  },\n  getPoint: function getPoint(t) {\n    var attrs = this._attrs;\n    var points = attrs.points;\n    var tCache = this.tCache;\n    var subt;\n    var index;\n\n    if (!tCache) {\n      this._setTcache();\n\n      tCache = this.tCache;\n    }\n\n    Util.each(tCache, function (v, i) {\n      if (t >= v[0] && t <= v[1]) {\n        subt = (t - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    return {\n      x: LineMath.at(points[index][0], points[index + 1][0], subt),\n      y: LineMath.at(points[index][1], points[index + 1][1], subt)\n    };\n  }\n});\nmodule.exports = Polyline;\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar _require = __webpack_require__(27),\n    parseRadius = _require.parseRadius;\n\nvar Shape = __webpack_require__(6);\n\nvar Rect = function Rect(cfg) {\n  Rect.superclass.constructor.call(this, cfg);\n};\n\nRect.ATTRS = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  radius: 0,\n  lineWidth: 1\n};\nUtil.extend(Rect, Shape);\nUtil.augment(Rect, {\n  canFill: true,\n  canStroke: true,\n  type: 'rect',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1,\n      radius: 0\n    };\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var lineWidth = this.getHitLineWidth();\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: x - halfWidth,\n      minY: y - halfWidth,\n      maxX: x + width + halfWidth,\n      maxY: y + height + halfWidth\n    };\n  },\n  createPath: function createPath(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    context = context || self.get('context');\n    context.beginPath();\n\n    if (radius === 0) {\n      // 改成原生的rect方法\n      context.rect(x, y, width, height);\n    } else {\n      var r = parseRadius(radius);\n      context.moveTo(x + r.r1, y);\n      context.lineTo(x + width - r.r2, y);\n      r.r2 !== 0 && context.arc(x + width - r.r2, y + r.r2, r.r2, -Math.PI / 2, 0);\n      context.lineTo(x + width, y + height - r.r3);\n      r.r3 !== 0 && context.arc(x + width - r.r3, y + height - r.r3, r.r3, 0, Math.PI / 2);\n      context.lineTo(x + r.r4, y + height);\n      r.r4 !== 0 && context.arc(x + r.r4, y + height - r.r4, r.r4, Math.PI / 2, Math.PI);\n      context.lineTo(x, y + r.r1);\n      r.r1 !== 0 && context.arc(x + r.r1, y + r.r1, r.r1, Math.PI, Math.PI * 1.5);\n      context.closePath();\n    }\n  }\n});\nmodule.exports = Rect;\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Shape = __webpack_require__(6);\n\nvar CText = function CText(cfg) {\n  CText.superclass.constructor.call(this, cfg);\n};\n\nCText.ATTRS = {\n  x: 0,\n  y: 0,\n  text: null,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  fontVariant: 'normal',\n  textAlign: 'start',\n  textBaseline: 'bottom',\n  lineHeight: null,\n  textArr: null\n};\nUtil.extend(CText, Shape);\nUtil.augment(CText, {\n  canFill: true,\n  canStroke: true,\n  type: 'text',\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {\n      lineWidth: 1,\n      lineCount: 1,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    };\n  },\n  initTransform: function initTransform() {\n    var fontSize = this._attrs.fontSize;\n\n    if (fontSize && +fontSize < 12) {\n      // 小于 12 像素的文本进行 scale 处理\n      this.transform([['t', -1 * this._attrs.x, -1 * this._attrs.y], ['s', +fontSize / 12, +fontSize / 12], ['t', this._attrs.x, this._attrs.y]]);\n    }\n  },\n  _assembleFont: function _assembleFont() {\n    // var self = this;\n    var attrs = this._attrs;\n    var fontSize = attrs.fontSize;\n    var fontFamily = attrs.fontFamily;\n    var fontWeight = attrs.fontWeight;\n    var fontStyle = attrs.fontStyle; // self.attr('fontStyle');\n\n    var fontVariant = attrs.fontVariant; // self.attr('fontVariant');\n    // self.attr('font', [fontStyle, fontVariant, fontWeight, fontSize + 'px', fontFamily].join(' '));\n\n    attrs.font = [fontStyle, fontVariant, fontWeight, fontSize + 'px', fontFamily].join(' ');\n  },\n  _setAttrText: function _setAttrText() {\n    var attrs = this._attrs;\n    var text = attrs.text;\n    var textArr = null;\n\n    if (Util.isString(text) && text.indexOf('\\n') !== -1) {\n      textArr = text.split('\\n');\n      var lineCount = textArr.length;\n      attrs.lineCount = lineCount;\n    }\n\n    attrs.textArr = textArr;\n  },\n  _getTextHeight: function _getTextHeight() {\n    var attrs = this._attrs;\n    var lineCount = attrs.lineCount;\n    var fontSize = attrs.fontSize * 1;\n\n    if (lineCount > 1) {\n      var spaceingY = this._getSpaceingY();\n\n      return fontSize * lineCount + spaceingY * (lineCount - 1);\n    }\n\n    return fontSize;\n  },\n  isHitBox: function isHitBox() {\n    return false;\n  },\n  calculateBox: function calculateBox() {\n    var self = this;\n    var attrs = self._attrs;\n    var cfg = this._cfg;\n\n    if (!cfg.attrs || cfg.hasUpdate) {\n      this._assembleFont();\n\n      this._setAttrText();\n    }\n\n    if (!attrs.textArr) {\n      this._setAttrText();\n    }\n\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = self.measureText(); // attrs.width\n\n    if (!width) {\n      // 如果width不存在，四点共其实点\n      return {\n        minX: x,\n        minY: y,\n        maxX: x,\n        maxY: y\n      };\n    }\n\n    var height = self._getTextHeight(); // attrs.height\n\n\n    var textAlign = attrs.textAlign;\n    var textBaseline = attrs.textBaseline;\n    var lineWidth = self.getHitLineWidth();\n    var point = {\n      x: x,\n      y: y - height\n    };\n\n    if (textAlign) {\n      if (textAlign === 'end' || textAlign === 'right') {\n        point.x -= width;\n      } else if (textAlign === 'center') {\n        point.x -= width / 2;\n      }\n    }\n\n    if (textBaseline) {\n      if (textBaseline === 'top') {\n        point.y += height;\n      } else if (textBaseline === 'middle') {\n        point.y += height / 2;\n      }\n    }\n\n    this.set('startPoint', point);\n    var halfWidth = lineWidth / 2;\n    return {\n      minX: point.x - halfWidth,\n      minY: point.y - halfWidth,\n      maxX: point.x + width + halfWidth,\n      maxY: point.y + height + halfWidth\n    };\n  },\n  _getSpaceingY: function _getSpaceingY() {\n    var attrs = this._attrs;\n    var lineHeight = attrs.lineHeight;\n    var fontSize = attrs.fontSize * 1;\n    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n  },\n  drawInner: function drawInner(context) {\n    var self = this;\n    var attrs = self._attrs;\n    var cfg = this._cfg;\n\n    if (!cfg.attrs || cfg.hasUpdate) {\n      this._assembleFont();\n\n      this._setAttrText();\n    }\n\n    context.font = attrs.font;\n    var text = attrs.text;\n\n    if (!text) {\n      return;\n    }\n\n    var textArr = attrs.textArr;\n    var x = attrs.x;\n    var y = attrs.y;\n    context.beginPath();\n\n    if (self.hasStroke()) {\n      var strokeOpacity = attrs.strokeOpacity;\n\n      if (!Util.isNil(strokeOpacity) && strokeOpacity !== 1) {\n        context.globalAlpha = strokeOpacity;\n      }\n\n      if (textArr) {\n        self._drawTextArr(context, false);\n      } else {\n        context.strokeText(text, x, y);\n      }\n\n      context.globalAlpha = 1;\n    }\n\n    if (self.hasFill()) {\n      var fillOpacity = attrs.fillOpacity;\n\n      if (!Util.isNil(fillOpacity) && fillOpacity !== 1) {\n        context.globalAlpha = fillOpacity;\n      }\n\n      if (textArr) {\n        self._drawTextArr(context, true);\n      } else {\n        context.fillText(text, x, y);\n      }\n    }\n\n    cfg.hasUpdate = false;\n  },\n  _drawTextArr: function _drawTextArr(context, fill) {\n    var textArr = this._attrs.textArr;\n    var textBaseline = this._attrs.textBaseline;\n    var fontSize = this._attrs.fontSize * 1;\n\n    var spaceingY = this._getSpaceingY();\n\n    var x = this._attrs.x;\n    var y = this._attrs.y;\n    var box = this.getBBox();\n    var height = box.maxY - box.minY;\n    var subY;\n    Util.each(textArr, function (subText, index) {\n      subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;\n\n      if (textBaseline === 'middle') subY += height - fontSize - (height - fontSize) / 2;\n      if (textBaseline === 'top') subY += height - fontSize;\n\n      if (fill) {\n        context.fillText(subText, x, subY);\n      } else {\n        context.strokeText(subText, x, subY);\n      }\n    });\n  },\n  measureText: function measureText() {\n    var self = this;\n    var attrs = self._attrs;\n    var text = attrs.text;\n    var font = attrs.font;\n    var textArr = attrs.textArr;\n    var measureWidth;\n    var width = 0;\n    if (Util.isNil(text)) return undefined;\n    var context = document.createElement('canvas').getContext('2d');\n    context.save();\n    context.font = font;\n\n    if (textArr) {\n      Util.each(textArr, function (subText) {\n        measureWidth = context.measureText(subText).width;\n\n        if (width < measureWidth) {\n          width = measureWidth;\n        }\n\n        context.restore();\n      });\n    } else {\n      width = context.measureText(text).width;\n      context.restore();\n    }\n\n    return width;\n  }\n});\nmodule.exports = CText;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_value__ = __webpack_require__(59);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolate\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_value__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_array__ = __webpack_require__(122);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateArray\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_array__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_basis__ = __webpack_require__(62);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateBasis\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_basis__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_basisClosed__ = __webpack_require__(120);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateBasisClosed\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_basisClosed__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_date__ = __webpack_require__(123);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateDate\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_date__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_number__ = __webpack_require__(40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateNumber\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_number__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_object__ = __webpack_require__(124);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateObject\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_object__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_round__ = __webpack_require__(205);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRound\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_round__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_string__ = __webpack_require__(125);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateString\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_string__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_transform_index__ = __webpack_require__(206);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateTransformCss\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_transform_index__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateTransformSvg\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_transform_index__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_zoom__ = __webpack_require__(209);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateZoom\", function() { return __WEBPACK_IMPORTED_MODULE_10__src_zoom__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_rgb__ = __webpack_require__(119);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgb\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgbBasis\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgbBasisClosed\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_hsl__ = __webpack_require__(210);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHsl\", function() { return __WEBPACK_IMPORTED_MODULE_12__src_hsl__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHslLong\", function() { return __WEBPACK_IMPORTED_MODULE_12__src_hsl__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_lab__ = __webpack_require__(211);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateLab\", function() { return __WEBPACK_IMPORTED_MODULE_13__src_lab__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_hcl__ = __webpack_require__(212);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHcl\", function() { return __WEBPACK_IMPORTED_MODULE_14__src_hcl__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHclLong\", function() { return __WEBPACK_IMPORTED_MODULE_14__src_hcl__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__ = __webpack_require__(213);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateCubehelix\", function() { return __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateCubehelixLong\", function() { return __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_quantize__ = __webpack_require__(214);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"quantize\", function() { return __WEBPACK_IMPORTED_MODULE_16__src_quantize__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return deg2rad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return rad2deg; });\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n/***/ }),\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return rgbBasis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return rgbBasisClosed; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__basis__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__basisClosed__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__color__ = __webpack_require__(28);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ((function rgbGamma(y) {\n  var color = Object(__WEBPACK_IMPORTED_MODULE_3__color__[\"b\" /* gamma */])(y);\n\n  function rgb(start, end) {\n    var r = color((start = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"f\" /* rgb */])(start)).r, (end = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"f\" /* rgb */])(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = Object(__WEBPACK_IMPORTED_MODULE_3__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1));\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"f\" /* rgb */])(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(__WEBPACK_IMPORTED_MODULE_1__basis__[\"b\" /* default */]);\nvar rgbBasisClosed = rgbSpline(__WEBPACK_IMPORTED_MODULE_2__basisClosed__[\"a\" /* default */]);\n\n/***/ }),\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__basis__ = __webpack_require__(62);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return Object(__WEBPACK_IMPORTED_MODULE_0__basis__[\"a\" /* basis */])((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n\n/***/ }),\n/* 121 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (x) {\n  return function () {\n    return x;\n  };\n});\n\n/***/ }),\n/* 122 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__value__ = __webpack_require__(59);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = Object(__WEBPACK_IMPORTED_MODULE_0__value__[\"a\" /* default */])(a[i], b[i]);\n\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function (t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\n    return c;\n  };\n});\n\n/***/ }),\n/* 123 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var d = new Date();\n  return a = +a, b -= a, function (t) {\n    return d.setTime(a + b * t), d;\n  };\n});\n\n/***/ }),\n/* 124 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__value__ = __webpack_require__(59);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var i = {},\n      c = {},\n      k;\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = Object(__WEBPACK_IMPORTED_MODULE_0__value__[\"a\" /* default */])(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function (t) {\n    for (k in i) c[k] = i[k](t);\n\n    return c;\n  };\n});\n\n/***/ }),\n/* 125 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(40);\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + \"\";\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\n    return s.join(\"\");\n  });\n});\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Default animation configuration for geoms\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar Action = __webpack_require__(290);\n\nvar defaultAnimationCfg = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut'\n  },\n  // 初始入场动画配置\n  update: {\n    duration: 450,\n    easing: 'easeQuadInOut'\n  },\n  // 更新时发生变更的动画配置\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n    delay: 100\n  },\n  // 更新时新增元素的入场动画配置\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn' // 更新时销毁动画配置\n\n  }\n};\nvar Animate = {\n  line: {\n    appear: function appear() {\n      return Action.appear.clipIn;\n    },\n    enter: function enter() {\n      return Action.enter.clipIn;\n    },\n    leave: function leave() {\n      return Action.leave.lineWidthOut;\n    }\n  },\n  path: {\n    appear: function appear() {\n      return Action.appear.clipIn;\n    },\n    enter: function enter() {\n      return Action.enter.clipIn;\n    },\n    leave: function leave() {\n      return Action.leave.lineWidthOut;\n    }\n  },\n  area: {\n    appear: function appear() {\n      return Action.appear.clipIn;\n    },\n    enter: function enter() {\n      return Action.enter.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    cfg: {\n      appear: {\n        duration: 500,\n        easing: 'easeQuadOut'\n      },\n      update: {\n        duration: 450,\n        easing: 'easeQuadInOut'\n      },\n      enter: {\n        duration: 600,\n        delay: 150,\n        easing: 'easeQuadInOut'\n      },\n      leave: {\n        easing: 'easeQuadOut',\n        duration: 350\n      }\n    }\n  },\n  polygon: {\n    appear: function appear() {\n      return Action.appear.zoomIn;\n    },\n    enter: function enter() {\n      return Action.enter.zoomIn;\n    },\n    leave: function leave() {\n      return Action.leave.zoomOut;\n    }\n  },\n  edge: {\n    appear: function appear() {\n      return Action.appear.pathIn;\n    },\n    enter: function enter() {\n      return Action.enter.pathIn;\n    },\n    leave: function leave() {\n      return Action.leave.pathOut;\n    }\n  },\n  interval: {\n    appear: function appear(coord) {\n      var result;\n\n      if (coord.isPolar) {\n        result = Action.appear.zoomIn;\n\n        if (coord.isTransposed || coord.type === 'theta') {\n          result = Action.appear.fanIn;\n        }\n      } else if (coord.isRect) {\n        result = coord.isTransposed ? Action.appear.scaleInX : Action.appear.scaleInY;\n      } else {\n        result = Action.appear.zoomIn;\n      }\n\n      return result;\n    },\n    enter: function enter(coord) {\n      if (coord.isRect || coord.isTransposed || coord.type === 'theta') {\n        return Action.enter.fadeIn;\n      }\n\n      return Action.enter.zoomIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    update: function update(coord) {\n      if (coord.type === 'theta') {\n        return Action.update.fanIn;\n      }\n    }\n  },\n  point: {\n    appear: function appear() {\n      return Action.appear.zoomIn;\n    },\n    enter: function enter() {\n      return Action.enter.zoomIn;\n    },\n    leave: function leave() {\n      return Action.leave.zoomOut;\n    }\n  },\n  schema: {\n    appear: function appear() {\n      return Action.appear.clipIn;\n    },\n    enter: function enter() {\n      return Action.enter.clipIn;\n    },\n    leave: function leave() {\n      return Action.leave.lineWidthOut;\n    }\n  },\n  contour: null,\n  heatmap: null,\n  label: {\n    appear: function appear() {\n      return Action.appear.fadeIn;\n    },\n    enter: function enter() {\n      return Action.enter.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    cfg: {\n      appear: {\n        duration: 900\n      }\n    }\n  },\n  'axis-label': {\n    enter: function enter() {\n      return Action.appear.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    update: function update(coord) {\n      if (coord.isPolar) {\n        return Action.appear.fadeIn;\n      }\n    }\n  },\n  'axis-ticks': {\n    enter: function enter() {\n      return Action.appear.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    update: function update(coord) {\n      if (coord.isPolar) {\n        return Action.appear.fadeIn;\n      }\n    }\n  },\n  'axis-grid': {\n    enter: function enter() {\n      return Action.appear.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    update: function update(coord) {\n      if (coord.isPolar) {\n        return Action.appear.fadeIn;\n      }\n    }\n  },\n  'axis-grid-rect': {\n    enter: function enter() {\n      return Action.appear.fadeIn;\n    },\n    leave: function leave() {\n      return Action.leave.fadeOut;\n    },\n    update: function update() {\n      return Action.leave.fadeIn;\n    }\n  },\n  labelLine: {\n    appear: function appear() {\n      return Action.appear.pathIn;\n    },\n    enter: function enter() {\n      return Action.enter.pathIn;\n    },\n    leave: function leave() {\n      return Action.leave.pathOut;\n    }\n  }\n};\nAnimate.Action = Action;\nAnimate.defaultCfg = defaultAnimationCfg; // 获取动画\n\nAnimate.getAnimation = function (geomType, coord, animationType) {\n  var geomAnimateCfg = this[geomType];\n\n  if (geomAnimateCfg) {\n    var animation = geomAnimateCfg[animationType];\n\n    if (Util.isFunction(animation)) {\n      return animation(coord);\n    }\n  }\n\n  return false;\n}; // 获取动画配置\n\n\nAnimate.getAnimateCfg = function (geomType, animationType) {\n  var defaultCfg = defaultAnimationCfg[animationType];\n\n  if (this[geomType] && this[geomType].cfg && this[geomType].cfg[animationType]) {\n    return Util.deepMix({}, defaultCfg, this[geomType].cfg[animationType]);\n  }\n\n  return defaultCfg;\n}; // 注册动画\n\n\nAnimate.registerAnimation = function (animationType, animationName, animationFun) {\n  if (!this.Action[animationType]) {\n    this.Action[animationType] = {};\n  }\n\n  this.Action[animationType][animationName] = animationFun;\n};\n\nmodule.exports = Animate;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar mix = __webpack_require__(8); // collections\n\n\nvar DOMUtil = __webpack_require__(228);\n\nvar arrayUtil = __webpack_require__(237);\n\nvar eventUtil = __webpack_require__(248);\n\nvar formatUtil = __webpack_require__(251);\n\nvar mathUtil = __webpack_require__(255);\n\nvar matrixUtil = __webpack_require__(43);\n\nvar objectUtil = __webpack_require__(264);\n\nvar pathUtil = __webpack_require__(268);\n\nvar stringUtil = __webpack_require__(274);\n\nvar typeUtil = __webpack_require__(278);\n\nvar util = {\n  // collections\n  DOMUtil: DOMUtil,\n  DomUtil: DOMUtil,\n  MatrixUtil: matrixUtil,\n  PathUtil: pathUtil,\n  arrayUtil: arrayUtil,\n  domUtil: DOMUtil,\n  eventUtil: eventUtil,\n  formatUtil: formatUtil,\n  mathUtil: mathUtil,\n  matrixUtil: matrixUtil,\n  objectUtil: objectUtil,\n  stringUtil: stringUtil,\n  pathUtil: pathUtil,\n  typeUtil: typeUtil,\n  // others\n  augment: __webpack_require__(89),\n  clone: __webpack_require__(46),\n  debounce: __webpack_require__(284),\n  deepMix: __webpack_require__(47),\n  each: each,\n  extend: __webpack_require__(88),\n  filter: __webpack_require__(63),\n  group: __webpack_require__(144),\n  groupBy: __webpack_require__(146),\n  groupToMap: __webpack_require__(145),\n  indexOf: __webpack_require__(285),\n  isEmpty: __webpack_require__(83),\n  isEqual: __webpack_require__(49),\n  isEqualWith: __webpack_require__(286),\n  map: __webpack_require__(287),\n  mix: mix,\n  pick: __webpack_require__(288),\n  throttle: __webpack_require__(289),\n  toArray: __webpack_require__(34),\n  toString: __webpack_require__(23),\n  uniqueId: __webpack_require__(86)\n};\neach([DOMUtil, arrayUtil, eventUtil, formatUtil, mathUtil, matrixUtil, objectUtil, pathUtil, stringUtil, typeUtil], function (collection) {\n  mix(util, collection);\n});\nmodule.exports = util;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar keys = __webpack_require__(129);\n\nvar isNil = __webpack_require__(5);\n\nfunction isMatch(obj, attrs) {\n  var _keys = keys(attrs);\n\n  var length = _keys.length;\n  if (isNil(obj)) return !length;\n\n  for (var i = 0; i < length; i += 1) {\n    var key = _keys[i];\n\n    if (attrs[key] !== obj[key] || !(key in obj)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isMatch;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isFunction = __webpack_require__(11);\n\nvar keys = Object.keys ? function (obj) {\n  return Object.keys(obj);\n} : function (obj) {\n  var result = [];\n  each(obj, function (value, key) {\n    if (!(isFunction(obj) && key === 'prototype')) {\n      result.push(key);\n    }\n  });\n  return result;\n};\nmodule.exports = keys;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(13);\n\nvar splice = Array.prototype.splice;\n\nvar pullAt = function pullAt(arr, indexes) {\n  if (!isArrayLike(arr)) {\n    return [];\n  }\n\n  var length = arr ? indexes.length : 0;\n  var last = length - 1;\n\n  while (length--) {\n    var previous = void 0;\n    var index = indexes[length];\n\n    if (length === last || index !== previous) {\n      previous = index;\n      splice.call(arr, index, 1);\n    }\n  }\n\n  return arr;\n};\n\nmodule.exports = pullAt;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar contains = __webpack_require__(41);\n\nvar uniq = function uniq(arr) {\n  var resultArr = [];\n  each(arr, function (item) {\n    if (!contains(resultArr, item)) {\n      resultArr.push(item);\n    }\n  });\n  return resultArr;\n};\n\nmodule.exports = uniq;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar isFunction = __webpack_require__(11);\n\nvar each = __webpack_require__(2);\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\n\n\nvar maxBy = function maxBy(arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n\n  var max = arr[0];\n  var maxData = void 0;\n\n  if (isFunction(fn)) {\n    maxData = fn(arr[0]);\n  } else {\n    maxData = arr[0][fn];\n  }\n\n  var data = void 0;\n  each(arr, function (val) {\n    if (isFunction(fn)) {\n      data = fn(val);\n    } else {\n      data = val[fn];\n    }\n\n    if (data > maxData) {\n      max = val;\n      maxData = data;\n    }\n  });\n  return max;\n};\n\nmodule.exports = maxBy;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\nmodule.exports = parseInt;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (obj, key) {\n  return obj.hasOwnProperty(key);\n};\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isFunction = __webpack_require__(11);\n\nvar values = Object.values ? function (obj) {\n  return Object.values(obj);\n} : function (obj) {\n  var result = [];\n  each(obj, function (value, key) {\n    if (!(isFunction(obj) && key === 'prototype')) {\n      result.push(value);\n    }\n  });\n  return result;\n};\nmodule.exports = values;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar parsePathArray = __webpack_require__(137);\n\nmodule.exports = function rectPath(x, y, w, h, r) {\n  if (r) {\n    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.parsePathArray = parsePathArray;\n  return res;\n};\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\nvar p2s = /,?([a-z]),?/gi;\n\nmodule.exports = function parsePathArray(path) {\n  return path.join(',').replace(p2s, '$1');\n};\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pathToAbsolute = __webpack_require__(139);\n\nvar a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  if (rx === ry) {\n    rx += 1;\n  }\n\n  var _120 = Math.PI * 120 / 180;\n\n  var rad = Math.PI / 180 * (+angle || 0);\n  var res = [];\n  var xy = void 0;\n  var f1 = void 0;\n  var f2 = void 0;\n  var cx = void 0;\n  var cy = void 0;\n\n  var rotate = function rotate(x, y, rad) {\n    var X = x * Math.cos(rad) - y * Math.sin(rad);\n    var Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  };\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    if (x1 === x2 && y1 === y2) {\n      // 若弧的起始点和终点重叠则错开一点\n      x2 += 1;\n      y2 += 1;\n    } // const cos = Math.cos(Math.PI / 180 * angle);\n    // const sin = Math.sin(Math.PI / 180 * angle);\n\n\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (Math.abs(df) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = Math.cos(f1);\n  var s1 = Math.sin(f1);\n  var c2 = Math.cos(f2);\n  var s2 = Math.sin(f2);\n  var t = Math.tan(df / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var m1 = [x1, y1];\n  var m2 = [x1 + hx * s1, y1 - hy * c1];\n  var m3 = [x2 + hx * s2, y2 - hy * c2];\n  var m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  }\n\n  res = [m2, m3, m4].concat(res).join().split(',');\n  var newres = [];\n\n  for (var i = 0, ii = res.length; i < ii; i++) {\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n  }\n\n  return newres;\n};\n\nvar l2c = function l2c(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\n\nvar q2c = function q2c(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3;\n\n  var _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\n\nmodule.exports = function pathTocurve(path, path2) {\n  var p = pathToAbsolute(path);\n  var p2 = path2 && pathToAbsolute(path2);\n  var attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var pcoms1 = []; // path commands of original path p\n\n  var pcoms2 = []; // path commands of original path p2\n\n  var pfirst = ''; // temporary holder for original path command\n\n  var pcom = ''; // holder for previous path command of original path\n\n  var ii = void 0;\n\n  var processPath = function processPath(path, d, pcom) {\n    var nx = void 0,\n        ny = void 0;\n\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case 'A':\n        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case 'S':\n        if (pcom === 'C' || pcom === 'S') {\n          // In \"S\" case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n\n      case 'T':\n        if (pcom === 'Q' || pcom === 'T') {\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case 'L':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n        break;\n\n      case 'H':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n        break;\n\n      case 'V':\n        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n        break;\n\n      case 'Z':\n        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n\n      default:\n        break;\n    }\n\n    return path;\n  };\n\n  var fixArc = function fixArc(pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n\n        p2 && (pcoms2[i] = 'A'); // the same as above\n\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  var fixM = function fixM(path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n\n  ii = Math.max(p.length, p2 && p2.length || 0);\n\n  for (var i = 0; i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst !== 'C') {\n      // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i];\n    var seg2 = p2 && p2[i];\n    var seglen = seg.length;\n    var seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n};\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar parsePathString = __webpack_require__(140);\n\nvar catmullRom2bezier = __webpack_require__(141);\n\nfunction ellipsePath(x, y, rx, ry, a) {\n  var res = [];\n\n  if (a === null && ry === null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a !== null) {\n    var rad = Math.PI / 180;\n    var x1 = x + rx * Math.cos(-ry * rad);\n    var x2 = x + rx * Math.cos(-a * rad);\n    var y1 = y + rx * Math.sin(-ry * rad);\n    var y2 = y + rx * Math.sin(-a * rad);\n    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n  }\n\n  return res;\n}\n\nmodule.exports = function pathToAbsolute(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [];\n  var x = 0;\n  var y = 0;\n  var mx = 0;\n  var my = 0;\n  var start = 0;\n  var pa0 = void 0;\n  var dots = void 0;\n\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 !== pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        // for lint\n\n        default:\n          for (var _j = 1, _jj = pa.length; _j < _jj; _j++) {\n            r[_j] = +pa[_j] + (_j % 2 ? x : y);\n          }\n\n      }\n    } else if (pa0 === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 === 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 === 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 !== 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n\n        case 'H':\n          x = r[1];\n          break;\n\n        case 'V':\n          y = r[1];\n          break;\n\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n          break;\n        // for lint\n\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar SPACES = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029';\nvar PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');\nvar PATH_VALUES = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig'); // Parses given path string into an array of arrays of path segments\n\nmodule.exports = function parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if ((typeof pathString === 'undefined' ? 'undefined' : _typeof(pathString)) === _typeof([])) {\n    return pathString;\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  };\n  var data = [];\n  String(pathString).replace(PATH_COMMAND, function (a, b, c) {\n    var params = [];\n    var name = b.toLowerCase();\n    c.replace(PATH_VALUES, function (a, b) {\n      b && params.push(+b);\n    });\n\n    if (name === 'm' && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = 'l';\n      b = b === 'm' ? 'l' : 'L';\n    }\n\n    if (name === 'o' && params.length === 1) {\n      data.push([b, params[0]]);\n    }\n\n    if (name === 'r') {\n      data.push([b].concat(params));\n    } else {\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    }\n  });\n  return data;\n};\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports) {\n\n// http://schepers.cc/getting-to-the-point\nmodule.exports = function catmullRom2bezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n\n  return d;\n};\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(23);\n\nvar lowerCase = function lowerCase(str) {\n  return toString(str).toLowerCase();\n};\n\nmodule.exports = lowerCase;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(23);\n\nvar upperCase = function upperCase(str) {\n  return toString(str).toUpperCase();\n};\n\nmodule.exports = upperCase;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar groupToMap = __webpack_require__(145);\n\nvar group = function group(data, condition) {\n  if (!condition) {\n    return [data];\n  }\n\n  var groups = groupToMap(data, condition);\n  var array = [];\n\n  for (var i in groups) {\n    array.push(groups[i]);\n  }\n\n  return array;\n};\n\nmodule.exports = group;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(11);\n\nvar isArray = __webpack_require__(4);\n\nvar groupBy = __webpack_require__(146);\n\nvar groupToMap = function groupToMap(data, condition) {\n  if (!condition) {\n    return {\n      0: data\n    };\n  }\n\n  if (!isFunction(condition)) {\n    var paramsCondition = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n\n    condition = function condition(row) {\n      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n\n      for (var i = 0, l = paramsCondition.length; i < l; i++) {\n        unique += row[paramsCondition[i]] && row[paramsCondition[i]].toString();\n      }\n\n      return unique;\n    };\n  }\n\n  var groups = groupBy(data, condition);\n  return groups;\n};\n\nmodule.exports = groupToMap;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isArray = __webpack_require__(4);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar groupBy = function groupBy(data, condition) {\n  if (!condition || !isArray(data)) {\n    return data;\n  }\n\n  var result = {};\n  var key = null;\n  each(data, function (item) {\n    key = condition(item);\n\n    if (hasOwnProperty.call(result, key)) {\n      result[key].push(item);\n    } else {\n      result[key] = [item];\n    }\n  });\n  return result;\n};\n\nmodule.exports = groupBy;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview G2 图表的入口文件\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar View = __webpack_require__(291);\n\nvar G = __webpack_require__(16);\n\nvar Canvas = G.Canvas;\nvar DomUtil = Util.DomUtil;\n\nvar Global = __webpack_require__(7);\n\nvar Plot = __webpack_require__(356);\n\nvar Controller = __webpack_require__(165);\n\nvar mergeBBox = __webpack_require__(167);\n\nvar bboxOfBackPlot = __webpack_require__(166);\n\nvar plotRange2BBox = __webpack_require__(168);\n\nvar AUTO_STR = 'auto';\n\nfunction _isScaleExist(scales, compareScale) {\n  var flag = false;\n  Util.each(scales, function (scale) {\n    var scaleValues = [].concat(scale.values);\n    var compareScaleValues = [].concat(compareScale.values);\n\n    if (scale.type === compareScale.type && scale.field === compareScale.field && scaleValues.sort().toString() === compareScaleValues.sort().toString()) {\n      flag = true;\n      return;\n    }\n  });\n  return flag;\n}\n\nfunction isEqualArray(arr1, arr2) {\n  return Util.isEqualWith(arr1, arr2, function (v1, v2) {\n    return v1 === v2;\n  });\n}\n/**\n * 图表的入口\n * @class Chart\n */\n\n\nvar Chart =\n/*#__PURE__*/\nfunction (_View) {\n  _inheritsLoose(Chart, _View);\n\n  function Chart() {\n    return _View.apply(this, arguments) || this;\n  }\n\n  var _proto = Chart.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var viewCfg = _View.prototype.getDefaultCfg.call(this);\n\n    return Util.mix(viewCfg, {\n      id: null,\n      forceFit: false,\n      container: null,\n      wrapperEl: null,\n      canvas: null,\n      width: 500,\n      height: 500,\n      pixelRatio: null,\n      backPlot: null,\n      frontPlot: null,\n      plotBackground: null,\n      padding: Global.plotCfg.padding,\n      background: null,\n      autoPaddingAppend: 5,\n      limitInPlot: false,\n      renderer: Global.renderer,\n      // renderer: 'svg',\n      views: []\n    });\n  };\n\n  _proto.init = function init() {\n    var self = this;\n    var viewTheme = self.get('viewTheme');\n\n    self._initCanvas();\n\n    self._initPlot();\n\n    self._initEvents();\n\n    _View.prototype.init.call(this);\n\n    var tooltipController = new Controller.Tooltip({\n      chart: self,\n      viewTheme: viewTheme,\n      options: {}\n    });\n    self.set('tooltipController', tooltipController);\n    var legendController = new Controller.Legend({\n      chart: self,\n      viewTheme: viewTheme\n    });\n    self.set('legendController', legendController);\n    self.set('_id', 'chart'); // 防止同用户设定的 id 同名\n\n    self.emit('afterinit'); // 初始化完毕\n  };\n\n  _proto._isAutoPadding = function _isAutoPadding() {\n    var padding = this.get('padding');\n\n    if (Util.isArray(padding)) {\n      return padding.indexOf(AUTO_STR) !== -1;\n    }\n\n    return padding === AUTO_STR;\n  };\n\n  _proto._getAutoPadding = function _getAutoPadding() {\n    var padding = this.get('padding'); // 图例在最前面的一层\n\n    var frontPlot = this.get('frontPlot');\n    var frontBBox = frontPlot.getBBox(); // 坐标轴在最后面的一层\n\n    var backPlot = this.get('backPlot');\n    var backBBox = bboxOfBackPlot(backPlot, plotRange2BBox(this.get('plotRange')));\n    var box = mergeBBox(frontBBox, backBBox);\n    var outter = [0 - box.minY, // 上面超出的部分\n    box.maxX - this.get('width'), // 右边超出的部分\n    box.maxY - this.get('height'), // 下边超出的部分\n    0 - box.minX]; // 如果原始的 padding 内部存在 'auto' 则替换对应的边\n\n    var autoPadding = Util.toAllPadding(padding);\n\n    for (var i = 0; i < autoPadding.length; i++) {\n      if (autoPadding[i] === AUTO_STR) {\n        var tmp = Math.max(0, outter[i]);\n        autoPadding[i] = tmp + this.get('autoPaddingAppend');\n      }\n    }\n\n    return autoPadding;\n  }; // 初始化画布\n\n\n  _proto._initCanvas = function _initCanvas() {\n    var container = this.get('container');\n    var id = this.get('id'); // 如果未设置 container 使用 ID, 兼容 2.x 版本\n\n    if (!container && id) {\n      container = id;\n      this.set('container', id);\n    }\n\n    var width = this.get('width');\n    var height = this.get('height');\n\n    if (Util.isString(container)) {\n      container = document.getElementById(container);\n\n      if (!container) {\n        throw new Error('Please specify the container for the chart!');\n      }\n\n      this.set('container', container);\n    }\n\n    var wrapperEl = DomUtil.createDom('<div style=\"position:relative;\"></div>');\n    container.appendChild(wrapperEl);\n    this.set('wrapperEl', wrapperEl);\n\n    if (this.get('forceFit')) {\n      width = DomUtil.getWidth(container, width);\n      this.set('width', width);\n    }\n\n    var renderer = this.get('renderer');\n    var canvas = new Canvas({\n      containerDOM: wrapperEl,\n      width: width,\n      height: height,\n      // NOTICE: 有问题找青湳\n      pixelRatio: renderer === 'svg' ? 1 : this.get('pixelRatio'),\n      renderer: renderer\n    });\n    this.set('canvas', canvas);\n  }; // 初始化绘图区间\n\n\n  _proto._initPlot = function _initPlot() {\n    var self = this;\n\n    self._initPlotBack(); // 最底层的是背景相关的 group\n\n\n    var canvas = self.get('canvas');\n    var backPlot = canvas.addGroup({\n      zIndex: 1\n    }); // 图表最后面的容器\n\n    var plotContainer = canvas.addGroup({\n      zIndex: 0\n    }); // 图表所在的容器\n\n    var frontPlot = canvas.addGroup({\n      zIndex: 3\n    }); // 图表前面的容器\n\n    self.set('backPlot', backPlot);\n    self.set('middlePlot', plotContainer);\n    self.set('frontPlot', frontPlot);\n  }; // 初始化背景\n\n\n  _proto._initPlotBack = function _initPlotBack() {\n    var self = this;\n    var canvas = self.get('canvas');\n    var viewTheme = self.get('viewTheme');\n    var plot = canvas.addGroup(Plot, {\n      padding: this.get('padding'),\n      plotBackground: Util.mix({}, viewTheme.plotBackground, self.get('plotBackground')),\n      background: Util.mix({}, viewTheme.background, self.get('background'))\n    });\n    self.set('plot', plot);\n    self.set('plotRange', plot.get('plotRange'));\n  };\n\n  _proto._initEvents = function _initEvents() {\n    if (this.get('forceFit')) {\n      window.addEventListener('resize', Util.wrapBehavior(this, '_initForceFitEvent'));\n    }\n  };\n\n  _proto._initForceFitEvent = function _initForceFitEvent() {\n    var timer = setTimeout(Util.wrapBehavior(this, 'forceFit'), 200);\n    clearTimeout(this.get('resizeTimer'));\n    this.set('resizeTimer', timer);\n  }; // 绘制图例\n\n\n  _proto._renderLegends = function _renderLegends() {\n    var options = this.get('options');\n    var legendOptions = options.legends;\n\n    if (Util.isNil(legendOptions) || legendOptions !== false) {\n      // 没有关闭图例\n      var legendController = this.get('legendController');\n      legendController.options = legendOptions || {};\n      legendController.plotRange = this.get('plotRange');\n\n      if (legendOptions && legendOptions.custom) {\n        // 用户自定义图例\n        legendController.addCustomLegend();\n      } else {\n        var geoms = this.getAllGeoms();\n        var scales = [];\n        Util.each(geoms, function (geom) {\n          var view = geom.get('view');\n          var attrs = geom.getAttrsForLegend();\n          Util.each(attrs, function (attr) {\n            var type = attr.type;\n            var scale = attr.getScale(type);\n\n            if (scale.field && scale.type !== 'identity' && !_isScaleExist(scales, scale)) {\n              scales.push(scale);\n              var filteredValues = view.getFilteredOutValues(scale.field);\n              legendController.addLegend(scale, attr, geom, filteredValues);\n            }\n          });\n        }); // 双轴的情况\n\n        var yScales = this.getYScales();\n\n        if (scales.length === 0 && yScales.length > 1) {\n          legendController.addMixedLegend(yScales, geoms);\n        }\n      }\n\n      legendController.alignLegends();\n    }\n  }; // 绘制 tooltip\n\n\n  _proto._renderTooltips = function _renderTooltips() {\n    var options = this.get('options');\n\n    if (Util.isNil(options.tooltip) || options.tooltip !== false) {\n      // 用户没有关闭 tooltip\n      var tooltipController = this.get('tooltipController');\n      tooltipController.options = options.tooltip || {};\n      tooltipController.renderTooltip();\n    }\n  };\n  /**\n   * 获取所有的几何标记\n   * @return {Array} 所有的几何标记\n   */\n\n\n  _proto.getAllGeoms = function getAllGeoms() {\n    var geoms = [];\n    geoms = geoms.concat(this.get('geoms'));\n    var views = this.get('views');\n    Util.each(views, function (view) {\n      geoms = geoms.concat(view.get('geoms'));\n    });\n    return geoms;\n  };\n  /**\n   * 自适应宽度\n   * @chainable\n   * @return {Chart} 图表对象\n   */\n\n\n  _proto.forceFit = function forceFit() {\n    var self = this;\n\n    if (!self || self.destroyed) {\n      return;\n    }\n\n    var container = self.get('container');\n    var oldWidth = self.get('width');\n    var width = DomUtil.getWidth(container, oldWidth);\n\n    if (width !== 0 && width !== oldWidth) {\n      var height = self.get('height');\n      self.changeSize(width, height);\n    }\n\n    return self;\n  };\n\n  _proto.resetPlot = function resetPlot() {\n    var plot = this.get('plot');\n    var padding = this.get('padding');\n\n    if (!isEqualArray(padding, plot.get('padding'))) {\n      // 重置 padding，仅当padding 发生更改\n      plot.set('padding', padding);\n      plot.repaint();\n    }\n  };\n  /**\n   * 改变大小\n   * @param  {Number} width  图表宽度\n   * @param  {Number} height 图表高度\n   * @return {Chart} 图表对象\n   */\n\n\n  _proto.changeSize = function changeSize(width, height) {\n    var self = this;\n    var canvas = self.get('canvas');\n    canvas.changeSize(width, height);\n    var plot = this.get('plot');\n    self.set('width', width);\n    self.set('height', height); // change size 时重新计算边框\n\n    plot.repaint(); // 保持边框不变，防止自动 padding 时绘制多遍\n\n    this.set('keepPadding', true);\n    self.repaint();\n    this.set('keepPadding', false);\n    this.emit('afterchangesize');\n    return self;\n  };\n  /**\n   * 改变宽度\n   * @param  {Number} width  图表宽度\n   * @return {Chart} 图表对象\n   */\n\n\n  _proto.changeWidth = function changeWidth(width) {\n    return this.changeSize(width, this.get('height'));\n  };\n  /**\n   * 改变宽度\n   * @param  {Number} height  图表高度\n   * @return {Chart} 图表对象\n   */\n\n\n  _proto.changeHeight = function changeHeight(height) {\n    return this.changeSize(this.get('width'), height);\n  };\n  /**\n   * 创建一个视图\n   * @param  {Object} cfg 视图的配置项\n   * @return {View} 视图对象\n   */\n\n\n  _proto.view = function view(cfg) {\n    cfg = cfg || {};\n    cfg.theme = this.get('theme');\n    cfg.parent = this;\n    cfg.backPlot = this.get('backPlot');\n    cfg.middlePlot = this.get('middlePlot');\n    cfg.frontPlot = this.get('frontPlot');\n    cfg.canvas = this.get('canvas');\n\n    if (Util.isNil(cfg.animate)) {\n      cfg.animate = this.get('animate');\n    }\n\n    cfg.options = Util.mix({}, this._getSharedOptions(), cfg.options);\n    var view = new View(cfg);\n    view.set('_id', 'view' + this.get('views').length); // 标识 ID，防止同用户设定的 id 重名\n\n    this.get('views').push(view);\n    this.emit('addview', {\n      view: view\n    });\n    return view;\n  }; // isShapeInView() {\n  //   return true;\n  // }\n\n\n  _proto.removeView = function removeView(view) {\n    var views = this.get('views');\n    Util.Array.remove(views, view);\n    view.destroy();\n  };\n\n  _proto._getSharedOptions = function _getSharedOptions() {\n    var options = this.get('options');\n    var sharedOptions = {};\n    Util.each(['scales', 'coord', 'axes'], function (name) {\n      sharedOptions[name] = Util.cloneDeep(options[name]);\n    });\n    return sharedOptions;\n  };\n  /**\n   * @override\n   * 当前chart 的范围\n   */\n\n\n  _proto.getViewRegion = function getViewRegion() {\n    var plotRange = this.get('plotRange');\n    return {\n      start: plotRange.bl,\n      end: plotRange.tr\n    };\n  };\n  /**\n   * 设置图例配置信息\n   * @param  {String|Object} field 字段名\n   * @param  {Object} [cfg] 图例的配置项\n   * @return {Chart} 当前的图表对象\n   */\n\n\n  _proto.legend = function legend(field, cfg) {\n    var options = this.get('options');\n\n    if (!options.legends) {\n      options.legends = {};\n    }\n\n    var legends = {};\n\n    if (field === false) {\n      options.legends = false;\n    } else if (Util.isObject(field)) {\n      legends = field;\n    } else if (Util.isString(field)) {\n      legends[field] = cfg;\n    } else {\n      legends = cfg;\n    }\n\n    Util.mix(options.legends, legends);\n    return this;\n  };\n  /**\n   * 设置提示信息\n   * @param  {String|Object} visible 是否可见\n   * @param  {Object} [cfg] 提示信息的配置项\n   * @return {Chart} 当前的图表对象\n   */\n\n\n  _proto.tooltip = function tooltip(visible, cfg) {\n    var options = this.get('options');\n\n    if (!options.tooltip) {\n      options.tooltip = {};\n    }\n\n    if (visible === false) {\n      options.tooltip = false;\n    } else if (Util.isObject(visible)) {\n      Util.mix(options.tooltip, visible);\n    } else {\n      Util.mix(options.tooltip, cfg);\n    }\n\n    return this;\n  };\n  /**\n   * 清空图表\n   * @return {Chart} 当前的图表对象\n   */\n\n\n  _proto.clear = function clear() {\n    this.emit('beforeclear');\n    var views = this.get('views');\n\n    while (views.length > 0) {\n      var view = views.shift();\n      view.destroy();\n    }\n\n    _View.prototype.clear.call(this);\n\n    var canvas = this.get('canvas');\n    this.resetPlot();\n    canvas.draw();\n    this.emit('afterclear');\n    return this;\n  };\n\n  _proto.clearInner = function clearInner() {\n    var views = this.get('views');\n    Util.each(views, function (view) {\n      view.clearInner();\n    });\n    var tooltipController = this.get('tooltipController');\n    tooltipController && tooltipController.clear();\n\n    if (!this.get('keepLegend')) {\n      var legendController = this.get('legendController');\n      legendController && legendController.clear();\n    }\n\n    _View.prototype.clearInner.call(this);\n  }; // chart 除了view 上绘制的组件外，还会绘制图例和 tooltip\n\n\n  _proto.drawComponents = function drawComponents() {\n    _View.prototype.drawComponents.call(this); // 一般是点击图例时，仅仅隐藏某些选项，而不销毁图例\n\n\n    if (!this.get('keepLegend')) {\n      this._renderLegends(); // 渲染图例\n\n    }\n  };\n  /**\n   * 绘制图表\n   * @override\n   */\n\n\n  _proto.render = function render() {\n    var self = this; // 需要自动计算边框，则重新设置\n\n    if (!self.get('keepPadding') && self._isAutoPadding()) {\n      self.beforeRender(); // 初始化各个 view 和 绘制\n\n      self.drawComponents();\n\n      var autoPadding = self._getAutoPadding();\n\n      var plot = self.get('plot'); // 在计算出来的边框不一致的情况，重新改变边框\n\n      if (!isEqualArray(plot.get('padding'), autoPadding)) {\n        plot.set('padding', autoPadding);\n        plot.repaint();\n      }\n    }\n\n    var middlePlot = self.get('middlePlot');\n\n    if (self.get('limitInPlot') && !middlePlot.attr('clip')) {\n      var clip = Util.getClipByRange(self.get('plotRange')); // TODO Polar coord\n\n      middlePlot.attr('clip', clip); // clip.attr('fill', 'grey');\n      // clip.attr('opacity', 0.5);\n      // middlePlot.add(clip);\n    }\n\n    _View.prototype.render.call(this);\n\n    self._renderTooltips(); // 渲染 tooltip\n\n  };\n\n  _proto.repaint = function repaint() {\n    // 重绘时需要判定当前的 padding 是否发生过改变，如果发生过改变进行调整\n    // 需要判定是否使用了自动 padding\n    if (!this.get('keepPadding')) {\n      this.resetPlot();\n    }\n\n    _View.prototype.repaint.call(this);\n  };\n  /**\n   * @override\n   * 显示或者隐藏\n   */\n\n\n  _proto.changeVisible = function changeVisible(visible) {\n    var wrapperEl = this.get('wrapperEl');\n    var visibleStr = visible ? '' : 'none';\n    wrapperEl.style.display = visibleStr;\n  };\n  /**\n   * 返回图表的 dataUrl 用于生成图片\n   * @return {String} dataUrl 路径\n   */\n\n\n  _proto.toDataURL = function toDataURL() {\n    var chart = this;\n    var canvas = chart.get('canvas');\n    var renderer = chart.get('renderer');\n    var canvasDom = canvas.get('el');\n    var dataURL = '';\n\n    if (renderer === 'svg') {\n      var clone = canvasDom.cloneNode(true);\n      var svgDocType = document.implementation.createDocumentType('svg', '-//W3C//DTD SVG 1.1//EN', 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd');\n      var svgDoc = document.implementation.createDocument('http://www.w3.org/2000/svg', 'svg', svgDocType);\n      svgDoc.replaceChild(clone, svgDoc.documentElement);\n      var svgData = new XMLSerializer().serializeToString(svgDoc);\n      dataURL = 'data:image/svg+xml;charset=utf8,' + encodeURIComponent(svgData);\n    } else if (renderer === 'canvas') {\n      dataURL = canvasDom.toDataURL('image/png');\n    }\n\n    return dataURL;\n  };\n  /**\n   * 图表导出功能\n   * @param  {String} [name] 图片的名称，默认为 chart(.png|.svg)\n   */\n\n\n  _proto.downloadImage = function downloadImage(name) {\n    var chart = this;\n    var link = document.createElement('a');\n    var renderer = chart.get('renderer');\n    var filename = (name || 'chart') + (renderer === 'svg' ? '.svg' : '.png');\n    var canvas = chart.get('canvas');\n    canvas.get('timeline').stopAllAnimations();\n    setTimeout(function () {\n      var dataURL = chart.toDataURL();\n\n      if (window.Blob && window.URL && renderer !== 'svg') {\n        var arr = dataURL.split(',');\n        var mime = arr[0].match(/:(.*?);/)[1];\n        var bstr = atob(arr[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blobObj = new Blob([u8arr], {\n          type: mime\n        });\n\n        if (window.navigator.msSaveBlob) {\n          window.navigator.msSaveBlob(blobObj, filename);\n        } else {\n          link.addEventListener('click', function () {\n            link.download = filename;\n            link.href = window.URL.createObjectURL(blobObj);\n          });\n        }\n      } else {\n        link.addEventListener('click', function () {\n          link.download = filename;\n          link.href = dataURL;\n        });\n      }\n\n      var e = document.createEvent('MouseEvents');\n      e.initEvent('click', false, false);\n      link.dispatchEvent(e);\n    }, 16);\n  };\n  /**\n   * 根据坐标点显示对应的 tooltip\n   * @param  {Object} point 画布上的点\n   * @return {Chart}       返回 chart 实例\n   */\n\n\n  _proto.showTooltip = function showTooltip(point) {\n    var views = this.getViewsByPoint(point);\n\n    if (views.length) {\n      var tooltipController = this.get('tooltipController');\n      tooltipController.showTooltip(point, views);\n    }\n\n    return this;\n  };\n  /**\n   * 隐藏 tooltip\n  * @return {Chart}       返回 chart 实例\n   */\n\n\n  _proto.hideTooltip = function hideTooltip() {\n    var tooltipController = this.get('tooltipController');\n    tooltipController.hideTooltip();\n    return this;\n  };\n  /**\n   * 根据传入的画布坐标，获取该处的 tooltip 上的记录信息\n   * @param  {Object} point 画布坐标点\n   * @return {Array}       返回结果\n   */\n\n\n  _proto.getTooltipItems = function getTooltipItems(point) {\n    var self = this;\n    var views = self.getViewsByPoint(point);\n    var rst = [];\n    Util.each(views, function (view) {\n      var geoms = view.get('geoms');\n      Util.each(geoms, function (geom) {\n        var dataArray = geom.get('dataArray');\n        var items = [];\n        Util.each(dataArray, function (data) {\n          var tmpPoint = geom.findPoint(point, data);\n\n          if (tmpPoint) {\n            var subItems = geom.getTipItems(tmpPoint);\n            items = items.concat(subItems);\n          }\n        });\n        rst = rst.concat(items);\n      });\n    });\n    return rst;\n  };\n  /**\n   * @override\n   * 销毁图表\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.emit('beforedestroy');\n    clearTimeout(this.get('resizeTimer'));\n    var canvas = this.get('canvas');\n    var wrapperEl = this.get('wrapperEl');\n    wrapperEl.parentNode.removeChild(wrapperEl);\n\n    _View.prototype.destroy.call(this);\n\n    canvas.destroy();\n    window.removeEventListener('resize', Util.getWrapBehavior(this, '_initForceFitEvent'));\n    this.emit('afterdestroy');\n  };\n\n  return Chart;\n}(View);\n\nmodule.exports = Chart;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview Chart、View、Geometry 的基类\n * @author dxq613@gmail.com\n */\nvar EventEmitter = __webpack_require__(53);\n\nvar Util = __webpack_require__(0);\n\nvar Base =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(Base, _EventEmitter);\n\n  var _proto = Base.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {};\n  };\n\n  function Base(cfg) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    var attrs = {\n      visible: true\n    };\n\n    var defaultCfg = _this.getDefaultCfg();\n\n    _this._attrs = attrs;\n    Util.assign(attrs, defaultCfg, cfg);\n    return _this;\n  }\n\n  _proto.get = function get(name) {\n    return this._attrs[name];\n  };\n\n  _proto.set = function set(name, value) {\n    this._attrs[name] = value;\n  };\n\n  _proto.show = function show() {\n    var visible = this.get('visible');\n\n    if (!visible) {\n      this.set('visible', true);\n      this.changeVisible(true);\n    }\n  };\n\n  _proto.hide = function hide() {\n    var visible = this.get('visible');\n\n    if (visible) {\n      this.set('visible', false);\n      this.changeVisible(false);\n    }\n  };\n  /**\n   * @protected\n   * @param {Boolean} visible 是否可见\n   * 显示、隐藏\n   */\n\n\n  _proto.changeVisible = function changeVisible()\n  /* visible */\n  {};\n\n  _proto.destroy = function destroy() {\n    this._attrs = {};\n    this.removeAllListeners();\n    this.destroyed = true;\n  };\n\n  return Base;\n}(EventEmitter);\n\nmodule.exports = Base;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 颜色计算的辅助方法\n * @author dxq613@gmail.com\n */\nvar isNumber = __webpack_require__(9);\n\nvar isString = __webpack_require__(10);\n\nvar each = __webpack_require__(2); // const RGB_REG = /rgb\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\n\n\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/; // 创建辅助 tag 取颜色\n\nfunction createTmp() {\n  var i = document.createElement('i');\n  i.title = 'Web Colour Picker';\n  i.style.display = 'none';\n  document.body.appendChild(i);\n  return i;\n} // 获取颜色之间的插值\n\n\nfunction getValue(start, end, percent, index) {\n  var value = start[index] + (end[index] - start[index]) * percent;\n  return value;\n} // 数组转换成颜色\n\n\nfunction arr2rgb(arr) {\n  return '#' + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);\n} // 将数值从 0-255 转换成16进制字符串\n\n\nfunction toHex(value) {\n  value = Math.round(value);\n  value = value.toString(16);\n\n  if (value.length === 1) {\n    value = '0' + value;\n  }\n\n  return value;\n}\n\nfunction calColor(colors, percent) {\n  if (isNaN(percent) || !isNumber(percent) || percent < 0) {\n    percent = 0;\n  }\n\n  if (percent > 1) {\n    percent = 1;\n  }\n\n  var steps = colors.length - 1;\n  var step = Math.floor(steps * percent);\n  var left = steps * percent - step;\n  var start = colors[step];\n  var end = step === steps ? start : colors[step + 1];\n  var rgb = arr2rgb([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);\n  return rgb;\n} // rgb 颜色转换成数组\n\n\nfunction rgb2arr(str) {\n  var arr = [];\n  arr.push(parseInt(str.substr(1, 2), 16));\n  arr.push(parseInt(str.substr(3, 2), 16));\n  arr.push(parseInt(str.substr(5, 2), 16));\n  return arr;\n}\n\nvar colorCache = {};\nvar iEl = null;\nvar ColorUtil = {\n  /**\n   * 将颜色转换到 rgb 的格式\n   * @param  {String} color 颜色\n   * @return {String} 将颜色转换到 '#ffffff' 的格式\n   */\n  toRGB: function toRGB(color) {\n    // 如果已经是 rgb的格式\n    if (color[0] === '#' && color.length === 7) {\n      return color;\n    }\n\n    if (!iEl) {\n      // 防止防止在页头报错\n      iEl = createTmp();\n    }\n\n    var rst;\n\n    if (colorCache[color]) {\n      rst = colorCache[color];\n    } else {\n      iEl.style.color = color;\n      rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n      var matchs = RGB_REG.exec(rst);\n      var cArray = matchs[1].split(/\\s*,\\s*/);\n      rst = arr2rgb(cArray);\n      colorCache[color] = rst;\n    }\n\n    return rst;\n  },\n  rgb2arr: rgb2arr,\n\n  /**\n   * 获取渐变函数\n   * @param  {Array} colors 多个颜色\n   * @return {String} 颜色值\n   */\n  gradient: function gradient(colors) {\n    var points = [];\n\n    if (isString(colors)) {\n      colors = colors.split('-');\n    }\n\n    each(colors, function (color) {\n      if (color.indexOf('#') === -1) {\n        color = ColorUtil.toRGB(color);\n      }\n\n      points.push(rgb2arr(color));\n    });\n    return function (percent) {\n      return calColor(points, percent);\n    };\n  }\n};\nmodule.exports = ColorUtil;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DEFAULT_Y = 0; // 默认的y的值\n\nvar each = __webpack_require__(2);\n\nvar ArrayUtil = {\n  values: __webpack_require__(64)\n};\nmodule.exports = {\n  /**\n   * 对应的维度是否可以调整\n   * @protected\n   * @param  {String}  dimName 可以调整的维度 x,y\n   * @return {Boolean} 是否可以调整\n   */\n  isAdjust: function isAdjust(dimName) {\n    return this.adjustNames.indexOf(dimName) >= 0;\n  },\n\n  /**\n   * @protected\n   * 获取可调整度量对应的值\n   * @param  {Frame} mergeData 数据\n   * @return {Object} 值的映射\n   */\n  _getDimValues: function _getDimValues(mergeData) {\n    var self = this;\n    var valuesMap = {};\n    var dims = [];\n\n    if (self.xField && self.isAdjust('x')) {\n      dims.push(self.xField);\n    }\n\n    if (self.yField && self.isAdjust('y')) {\n      dims.push(self.yField);\n    }\n\n    each(dims, function (dim) {\n      var values = ArrayUtil.values(mergeData, dim);\n      values.sort(function (v1, v2) {\n        return v1 - v2;\n      });\n      valuesMap[dim] = values;\n    });\n\n    if (!self.yField && self.isAdjust('y')) {\n      // 只有一维的情况下,同时调整y\n      var dim = 'y';\n      var values = [DEFAULT_Y, 1]; // 默认分布在y轴的 0.1 与 0.2 之间\n\n      valuesMap[dim] = values;\n    }\n\n    return valuesMap;\n  },\n  adjustData: function adjustData(dataArray, mergeData) {\n    var self = this;\n\n    var valuesMap = self._getDimValues(mergeData);\n\n    each(dataArray, function (data, index) {\n      // 遍历所有数据集合\n      each(valuesMap, function (values, dim) {\n        // 根据不同的度量分别调整位置\n        self.adjustDim(dim, values, data, dataArray.length, index);\n      });\n    });\n  },\n  getAdjustRange: function getAdjustRange(dim, key, values) {\n    var self = this;\n    var index = values.indexOf(key);\n    var length = values.length;\n    var pre;\n    var next;\n\n    if (!self.yField && self.isAdjust('y')) {\n      pre = 0;\n      next = 1;\n    } else if (length > 1) {\n      pre = index === 0 ? values[0] : values[index - 1];\n      next = index === length - 1 ? values[length - 1] : values[index + 1];\n\n      if (index !== 0) {\n        pre += (key - pre) / 2;\n      } else {\n        pre -= (next - key) / 2;\n      }\n\n      if (index !== length - 1) {\n        next -= (next - key) / 2;\n      } else {\n        next += (key - values[length - 2]) / 2;\n      }\n    } else {\n      pre = key === 0 ? 0 : key - 0.5;\n      next = key === 0 ? 1 : key + 0.5;\n    }\n\n    return {\n      pre: pre,\n      next: next\n    };\n  },\n\n  /**\n   * 对数据进行分组\n   * @param  {Array} data 数据\n   * @param  {String} dim 分组的字段\n   * @return {Object}  分组的键值对映射\n   */\n  groupData: function groupData(data, dim) {\n    var groups = {};\n    each(data, function (record) {\n      var value = record[dim];\n\n      if (value === undefined) {\n        value = record[dim] = DEFAULT_Y;\n      }\n\n      if (!groups[value]) {\n        groups[value] = [];\n      }\n\n      groups[value].push(record);\n    });\n    return groups;\n  }\n};\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Theme entry\n * @author sima.zhang\n */\nvar Theme = {\n  default: __webpack_require__(152),\n  dark: __webpack_require__(304)\n};\nmodule.exports = Theme;\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports) {\n\nvar _html, _tooltip;\n\n/**\n * @fileOverview G2 3.0 default theme\n * @author sima.zhang\n */\nvar DEFAULT_COLOR = '#1890FF';\nvar COLOR_PLATE_8 = ['#1890FF', '#2FC25B', '#FACC14', '#223273', '#8543E0', '#13C2C2', '#3436C7', '#F04864'];\nvar COLOR_PLATE_16 = ['#1890FF', '#41D9C7', '#2FC25B', '#FACC14', '#E6965C', '#223273', '#7564CC', '#8543E0', '#5C8EE6', '#13C2C2', '#5CA3E6', '#3436C7', '#B381E6', '#F04864', '#D598D9'];\nvar COLOR_PLATE_24 = ['#1890FF', '#66B5FF', '#41D9C7', '#2FC25B', '#6EDB8F', '#9AE65C', '#FACC14', '#E6965C', '#57AD71', '#223273', '#738AE6', '#7564CC', '#8543E0', '#A877ED', '#5C8EE6', '#13C2C2', '#70E0E0', '#5CA3E6', '#3436C7', '#8082FF', '#DD81E6', '#F04864', '#FA7D92', '#D598D9'];\nvar COLOR_PIE = ['#1890FF', '#13C2C2', '#2FC25B', '#FACC14', '#F04864', '#8543E0', '#3436C7', '#223273'];\nvar COLOR_PIE_16 = ['#1890FF', '#73C9E6', '#13C2C2', '#6CD9B3', '#2FC25B', '#9DD96C', '#FACC14', '#E6965C', '#F04864', '#D66BCA', '#8543E0', '#8E77ED', '#3436C7', '#737EE6', '#223273', '#7EA2E6'];\nvar FONT_FAMILY = '\"-apple-system\", BlinkMacSystemFont, \"Segoe UI\", Roboto,\"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\",SimSun, \"sans-serif\"'; // tooltip 相关 dom 的 css 类名\n\nvar TOOLTIP_CONTAINER_CLASS = 'g2-tooltip';\nvar TOOLTIP_TITLE_CLASS = 'g2-tooltip-title';\nvar TOOLTIP_LIST_CLASS = 'g2-tooltip-list';\nvar TOOLTIP_LIST_ITEM_CLASS = 'g2-tooltip-list-item';\nvar TOOLTIP_MARKER_CLASS = 'g2-tooltip-marker';\nvar TOOLTIP_VALUE_CLASS = 'g2-tooltip-value'; // html 渲染的 legend 相关 dom 的 css 类型\n\nvar LEGEND_CONTAINER_CLASS = 'g2-legend';\nvar LEGEND_TITLE_CLASS = 'g2-legend-title';\nvar LEGEND_LIST_CLASS = 'g2-legend-list';\nvar LEGEND_LIST_ITEM_CLASS = 'g2-legend-list-item';\nvar LEGEND_MARKER_CLASS = 'g2-legend-marker';\nvar Theme = {\n  defaultColor: DEFAULT_COLOR,\n  // 默认主题色\n  plotCfg: {\n    padding: [20, 20, 95, 80]\n  },\n  fontFamily: FONT_FAMILY,\n  defaultLegendPosition: 'bottom',\n  // 默认图例的展示位置\n  colors: COLOR_PLATE_8,\n  colors_16: COLOR_PLATE_16,\n  colors_24: COLOR_PLATE_24,\n  colors_pie: COLOR_PIE,\n  colors_pie_16: COLOR_PIE_16,\n  shapes: {\n    point: ['hollowCircle', 'hollowSquare', 'hollowDiamond', 'hollowBowtie', 'hollowTriangle', 'hollowHexagon', 'cross', 'tick', 'plus', 'hyphen', 'line'],\n    line: ['line', 'dash', 'dot'],\n    area: ['area']\n  },\n  sizes: [1, 10],\n  opacities: [0.1, 0.9],\n  axis: {\n    top: {\n      // zIndex: 1, // 默认上下方向的坐标轴位于左右坐标轴的上方\n      position: 'top',\n      title: null,\n      label: {\n        offset: 16,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 16,\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        },\n        autoRotate: true\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4,\n        alignWithLabel: true\n      }\n    },\n    bottom: {\n      position: 'bottom',\n      title: null,\n      label: {\n        offset: 16,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 16,\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4,\n        alignWithLabel: true\n      }\n    },\n    left: {\n      position: 'left',\n      title: null,\n      label: {\n        offset: 8,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 16,\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        }\n      },\n      line: null,\n      tickLine: null,\n      grid: {\n        zIndex: -1,\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [3, 3]\n        },\n        hideFirstLine: true\n      }\n    },\n    right: {\n      position: 'right',\n      title: null,\n      label: {\n        offset: 8,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 16,\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        }\n      },\n      line: null,\n      tickLine: null,\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [3, 3]\n        },\n        hideFirstLine: true\n      }\n    },\n    circle: {\n      zIndex: 1,\n      title: null,\n      label: {\n        offset: 8,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 16,\n          fontFamily: FONT_FAMILY\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4,\n        alignWithLabel: true\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [3, 3]\n        },\n        hideFirstLine: true\n      }\n    },\n    radius: {\n      zIndex: 0,\n      label: {\n        offset: 12,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          textBaseline: 'middle',\n          lineHeight: 16,\n          fontFamily: FONT_FAMILY\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4,\n        alignWithLabel: true\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [3, 3]\n        },\n        type: 'circle'\n      }\n    },\n    helix: {\n      grid: null,\n      label: null,\n      title: null,\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        length: 4,\n        stroke: '#BFBFBF',\n        alignWithLabel: true\n      }\n    }\n  },\n  label: {\n    offset: 20,\n    textStyle: {\n      fill: '#545454',\n      fontSize: 12,\n      textBaseline: 'middle',\n      fontFamily: FONT_FAMILY\n    }\n  },\n  treemapLabels: {\n    offset: 10,\n    textStyle: {\n      fill: '#fff',\n      fontSize: 12,\n      textBaseline: 'top',\n      fontStyle: 'bold',\n      fontFamily: FONT_FAMILY\n    }\n  },\n  innerLabels: {\n    textStyle: {\n      fill: '#fff',\n      fontSize: 12,\n      textBaseline: 'middle',\n      fontFamily: FONT_FAMILY\n    }\n  },\n  // 在theta坐标系下的饼图文本内部的样式\n  thetaLabels: {\n    labelHeight: 14,\n    offset: 30 // 在theta坐标系下的饼图文本的样式\n\n  },\n  legend: {\n    right: {\n      position: 'right',\n      layout: 'vertical',\n      itemMarginBottom: 8,\n      // layout 为 vertical 时各个图例项的间距\n      width: 16,\n      height: 156,\n      title: null,\n      legendStyle: {\n        LIST_CLASS: {\n          textAlign: 'left'\n        }\n      },\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 0,\n        fontFamily: FONT_FAMILY\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    left: {\n      position: 'left',\n      layout: 'vertical',\n      itemMarginBottom: 8,\n      width: 16,\n      height: 156,\n      title: null,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20,\n        fontFamily: FONT_FAMILY\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    top: {\n      position: 'top',\n      offset: [0, 6],\n      layout: 'horizontal',\n      title: null,\n      itemGap: 10,\n      width: 156,\n      height: 16,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20,\n        fontFamily: FONT_FAMILY\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    bottom: {\n      position: 'bottom',\n      offset: [0, 6],\n      layout: 'horizontal',\n      title: null,\n      itemGap: 10,\n      width: 156,\n      height: 16,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20,\n        fontFamily: FONT_FAMILY\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    // 定义 html 渲染图例的样式\n    html: (_html = {}, _html[\"\" + LEGEND_CONTAINER_CLASS] = {\n      height: 'auto',\n      width: 'auto',\n      position: 'absolute',\n      overflow: 'auto',\n      fontSize: '12px',\n      fontFamily: FONT_FAMILY,\n      lineHeight: '20px',\n      color: '#8C8C8C'\n    }, _html[\"\" + LEGEND_TITLE_CLASS] = {\n      marginBottom: '4px'\n    }, _html[\"\" + LEGEND_LIST_CLASS] = {\n      listStyleType: 'none',\n      margin: 0,\n      padding: 0\n    }, _html[\"\" + LEGEND_LIST_ITEM_CLASS] = {\n      cursor: 'pointer',\n      marginBottom: '5px',\n      marginRight: '24px'\n    }, _html[\"\" + LEGEND_MARKER_CLASS] = {\n      width: '9px',\n      height: '9px',\n      borderRadius: '50%',\n      display: 'inline-block',\n      marginRight: '8px',\n      verticalAlign: 'middle'\n    }, _html),\n    // 不能滑动的连续图例样式\n    gradient: {\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'center',\n        textBaseline: 'middle',\n        lineHeight: 20,\n        fontFamily: FONT_FAMILY\n      },\n      // 图例项文本的样式\n      lineStyle: {\n        lineWidth: 1,\n        stroke: '#fff'\n      },\n      unCheckColor: '#bfbfbf'\n    },\n    margin: [0, 5, 24, 5],\n    // 图例跟四个边的坐标轴、绘图区域的间距\n    legendMargin: 24 // 图例之间的间距\n\n  },\n  tooltip: (_tooltip = {\n    useHtml: true,\n    crosshairs: false,\n    offset: 15\n  }, _tooltip[\"\" + TOOLTIP_CONTAINER_CLASS] = {\n    position: 'absolute',\n    visibility: 'hidden',\n    // @2018-07-25 by blue.lb 这里去掉浮动，火狐上存在样式错位\n    // whiteSpace: 'nowrap',\n    zIndex: 8,\n    transition: 'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), left 0.4s cubic-bezier(0.23, 1, 0.32, 1), top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    boxShadow: '0px 0px 10px #aeaeae',\n    borderRadius: '3px',\n    color: 'rgb(87, 87, 87)',\n    fontSize: '12px',\n    fontFamily: FONT_FAMILY,\n    lineHeight: '20px',\n    padding: '10px 10px 6px 10px'\n  }, _tooltip[\"\" + TOOLTIP_TITLE_CLASS] = {\n    marginBottom: '4px'\n  }, _tooltip[\"\" + TOOLTIP_LIST_CLASS] = {\n    margin: 0,\n    listStyleType: 'none',\n    padding: 0\n  }, _tooltip[\"\" + TOOLTIP_LIST_ITEM_CLASS] = {\n    marginBottom: '4px'\n  }, _tooltip[\"\" + TOOLTIP_MARKER_CLASS] = {\n    width: '5px',\n    height: '5px',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px'\n  }, _tooltip[\"\" + TOOLTIP_VALUE_CLASS] = {\n    display: 'inline-block',\n    float: 'right',\n    marginLeft: '30px'\n  }, _tooltip),\n  tooltipMarker: {\n    symbol: function symbol(x, y, r) {\n      return [['M', x, y], ['m', -r, 0], ['a', r, r, 0, 1, 0, r * 2, 0], ['a', r, r, 0, 1, 0, -r * 2, 0]];\n    },\n    stroke: '#fff',\n    shadowBlur: 10,\n    shadowOffsetX: 0,\n    shadowOffSetY: 0,\n    shadowColor: 'rgba(0,0,0,0.09)',\n    lineWidth: 2,\n    radius: 4\n  },\n  // 提示信息在折线图、区域图上形成点的样式\n  tooltipCrosshairsRect: {\n    type: 'rect',\n    rectStyle: {\n      fill: '#CCD6EC',\n      opacity: 0.3\n    }\n  },\n  // tooltip 辅助背景框样式\n  tooltipCrosshairsLine: {\n    lineStyle: {\n      stroke: 'rgba(0, 0, 0, 0.25)',\n      lineWidth: 1\n    }\n  },\n  shape: {\n    point: {\n      lineWidth: 1,\n      fill: DEFAULT_COLOR,\n      radius: 4\n    },\n    hollowPoint: {\n      fill: '#fff',\n      lineWidth: 1,\n      stroke: DEFAULT_COLOR,\n      radius: 3\n    },\n    interval: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 0.85\n    },\n    hollowInterval: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 2\n    },\n    area: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 0.6\n    },\n    polygon: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 1\n    },\n    hollowPolygon: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 2\n    },\n    hollowArea: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 2\n    },\n    line: {\n      stroke: DEFAULT_COLOR,\n      lineWidth: 2,\n      fill: null\n    },\n    edge: {\n      stroke: DEFAULT_COLOR,\n      lineWidth: 1,\n      fill: null\n    },\n    schema: {\n      stroke: DEFAULT_COLOR,\n      lineWidth: 1,\n      fill: null\n    }\n  },\n  guide: {\n    line: {\n      lineStyle: {\n        stroke: 'rgba(0, 0, 0, .65)',\n        lineDash: [2, 2],\n        lineWidth: 1\n      },\n      text: {\n        position: 'start',\n        autoRotate: true,\n        style: {\n          fill: 'rgba(0, 0, 0, .45)',\n          fontSize: 12,\n          textAlign: 'start',\n          fontFamily: FONT_FAMILY,\n          textBaseline: 'bottom'\n        }\n      }\n    },\n    text: {\n      style: {\n        fill: 'rgba(0,0,0,.5)',\n        fontSize: 12,\n        textBaseline: 'middle',\n        textAlign: 'start',\n        fontFamily: FONT_FAMILY\n      }\n    },\n    region: {\n      style: {\n        lineWidth: 0,\n        // 辅助框的边框宽度\n        fill: '#000',\n        // 辅助框填充的颜色\n        fillOpacity: 0.04 // 辅助框的背景透明度\n        // 辅助框的图形样式属性\n\n      }\n    },\n    html: {\n      alignX: 'middle',\n      alignY: 'middle'\n    },\n    dataRegion: {\n      style: {\n        region: {\n          lineWidth: 0,\n          fill: '#000000',\n          opacity: 0.04\n        },\n        text: {\n          textAlign: 'center',\n          textBaseline: 'bottom',\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, .65)'\n        }\n      }\n    },\n    dataMarker: {\n      top: true,\n      style: {\n        point: {\n          r: 3,\n          fill: '#FFFFFF',\n          stroke: '#1890FF',\n          lineWidth: 2\n        },\n        line: {\n          stroke: '#A3B1BF',\n          lineWidth: 1\n        },\n        text: {\n          fill: 'rgba(0, 0, 0, .65)',\n          opacity: 1,\n          fontSize: 12,\n          textAlign: 'start'\n        }\n      },\n      display: {\n        point: true,\n        line: true,\n        text: true\n      },\n      lineLength: 20,\n      direction: 'upward',\n      autoAdjust: true\n    }\n  },\n  pixelRatio: null\n};\nmodule.exports = Theme;\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar _require = __webpack_require__(25),\n    Group = _require.Group;\n\nvar Util = __webpack_require__(3);\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(Grid, _Group);\n\n  function Grid() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = Grid.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    // const cfg = super.getDefaultCfg();\n    return {\n      zIndex: 1,\n\n      /**\n       * 栅格线的类型\n       *  - line 不封闭的线\n       *  - polygon 封闭的多边形\n       * @type {String}\n       */\n      type: 'line',\n\n      /**\n       * 线的样式配置\n       * @type {Object}\n       */\n      lineStyle: null,\n\n      /**\n       * 线集合的配置\n       * @type {Array}\n       */\n      items: null,\n\n      /**\n       * 为网格设置交替的背景色，指定一个值则先渲染奇数层，两个值则交替渲染\n       * @type {String | Array}\n       */\n      alternateColor: null,\n      matrix: null,\n\n      /**\n       * 是否隐藏第一条网格线，默认为 false\n       * @type {Boolean}\n       */\n      hideFirstLine: false,\n\n      /**\n       * 是否隐藏最后一条网格线，默认为 false\n       * @type {Boolean}\n       */\n      hideLastLine: false,\n\n      /**\n       * 0基线不在轴线上时，是否强调0基线\n       * @type {Boolean}\n       */\n      hightLightZero: false,\n\n      /**\n       * 0基线样式\n       * @type {Object}\n       */\n      zeroLineStyle: {\n        stroke: '#595959',\n        lineDash: [0, 0]\n      }\n    };\n  };\n\n  _proto._renderUI = function _renderUI() {\n    _Group.prototype._renderUI.call(this);\n\n    this._drawLines();\n  };\n\n  _proto._drawLines = function _drawLines() {\n    var self = this;\n    var lineStyle = self.get('lineStyle');\n    var items = self.get('items');\n\n    if (items && items.length) {\n      self._precessItems(items);\n\n      self._drawGridLines(items, lineStyle);\n    }\n  };\n\n  _proto._precessItems = function _precessItems(items) {\n    var self = this;\n    var preItem;\n    Util.each(items, function (item, index) {\n      if (preItem && self.get('alternateColor')) {\n        self._drawAlternativeBg(item, preItem, index);\n      }\n\n      preItem = item;\n    });\n  };\n\n  _proto._drawGridLines = function _drawGridLines(items, lineStyle) {\n    var self = this;\n    var type = this.get('type');\n    var gridLine;\n    var path;\n    var cfg;\n    var points;\n    var itemsLength = items.length;\n\n    if (type === 'line' || type === 'polygon') {\n      Util.each(items, function (item, idx) {\n        if (self.get('hideFirstLine') && idx === 0) {\n          // 不展示第一条网格线\n          return;\n        }\n\n        if (self.get('hideLastLine') && idx === itemsLength - 1) {\n          // 不展示最后一条网格线\n          return;\n        }\n\n        points = item.points;\n        path = [];\n\n        if (type === 'line') {\n          path.push(['M', points[0].x, points[0].y]);\n          path.push(['L', points[points.length - 1].x, points[points.length - 1].y]);\n        } else {\n          Util.each(points, function (point, index) {\n            if (index === 0) {\n              path.push(['M', point.x, point.y]);\n            } else {\n              path.push(['L', point.x, point.y]);\n            }\n          });\n        }\n\n        if (self._drawZeroLine(type, idx)) {\n          cfg = Util.mix({}, self.get('zeroLineStyle'), {\n            path: path\n          });\n        } else {\n          cfg = Util.mix({}, lineStyle, {\n            path: path\n          });\n        }\n\n        gridLine = self.addShape('path', {\n          attrs: cfg\n        });\n        gridLine.name = 'axis-grid';\n        gridLine._id = item._id;\n        gridLine.set('coord', self.get('coord'));\n        self.get('appendInfo') && gridLine.setSilent('appendInfo', self.get('appendInfo'));\n      });\n    } else {\n      Util.each(items, function (item, idx) {\n        if (self.get('hideFirstLine') && idx === 0) {\n          // 不展示第一条网格线\n          return;\n        }\n\n        if (self.get('hideLastLine') && idx === itemsLength - 1) {\n          // 不展示最后一条网格线\n          return;\n        }\n\n        points = item.points;\n        path = [];\n        Util.each(points, function (point, index) {\n          var radius = point.radius;\n\n          if (index === 0) {\n            path.push(['M', point.x, point.y]);\n          } else {\n            path.push(['A', radius, radius, 0, 0, point.flag, point.x, point.y]);\n          }\n        });\n        cfg = Util.mix({}, lineStyle, {\n          path: path\n        });\n        gridLine = self.addShape('path', {\n          attrs: cfg\n        });\n        gridLine.name = 'axis-grid';\n        gridLine._id = item._id;\n        gridLine.set('coord', self.get('coord'));\n        self.get('appendInfo') && gridLine.setSilent('appendInfo', self.get('appendInfo'));\n      });\n    }\n  };\n\n  _proto._drawZeroLine = function _drawZeroLine(type, idx) {\n    var self = this;\n    var tickValues = self.get('tickValues');\n\n    if (type === 'line' && tickValues) {\n      if (tickValues[idx] === 0 && self.get('hightLightZero')) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  _proto._drawAlternativeBg = function _drawAlternativeBg(item, preItem, index) {\n    var self = this;\n    var alternateColor = self.get('alternateColor');\n    var attrs;\n    var oddColor;\n    var evenColor;\n\n    if (Util.isString(alternateColor)) {\n      oddColor = alternateColor;\n    } else if (Util.isArray(alternateColor)) {\n      oddColor = alternateColor[0];\n      evenColor = alternateColor[1];\n    }\n\n    if (index % 2 === 0) {\n      if (evenColor) {\n        attrs = self._getBackItem(preItem.points, item.points, evenColor);\n      }\n    } else if (oddColor) {\n      attrs = self._getBackItem(preItem.points, item.points, oddColor);\n    }\n\n    var shape = self.addShape('Path', {\n      attrs: attrs\n    });\n    shape.name = 'axis-grid-rect';\n    shape._id = item._id && item._id.replace('grid', 'grid-rect');\n    shape.set('coord', self.get('coord'));\n    self.get('appendInfo') && shape.setSilent('appendInfo', self.get('appendInfo'));\n  };\n\n  _proto._getBackItem = function _getBackItem(start, end, bgColor) {\n    var path = [];\n    var type = this.get('type');\n\n    if (type === 'line') {\n      path.push(['M', start[0].x, start[0].y]);\n      path.push(['L', start[start.length - 1].x, start[start.length - 1].y]);\n      path.push(['L', end[end.length - 1].x, end[end.length - 1].y]);\n      path.push(['L', end[0].x, end[0].y]);\n      path.push(['Z']);\n    } else if (type === 'polygon') {\n      Util.each(start, function (subItem, index) {\n        if (index === 0) {\n          path.push(['M', subItem.x, subItem.y]);\n        } else {\n          path.push(['L', subItem.x, subItem.y]);\n        }\n      });\n\n      for (var i = end.length - 1; i >= 0; i--) {\n        path.push(['L', end[i].x, end[i].y]);\n      }\n\n      path.push(['Z']);\n    } else {\n      var flag = start[0].flag;\n      Util.each(start, function (subItem, index) {\n        var radius = subItem.radius;\n\n        if (index === 0) {\n          path.push(['M', subItem.x, subItem.y]);\n        } else {\n          path.push(['A', radius, radius, 0, 0, subItem.flag, subItem.x, subItem.y]);\n        }\n      });\n\n      for (var j = end.length - 1; j >= 0; j--) {\n        var endSubItem = end[j];\n        var endRadius = endSubItem.radius;\n\n        if (j === end.length - 1) {\n          path.push(['M', endSubItem.x, endSubItem.y]);\n        } else {\n          path.push(['A', endRadius, endRadius, 0, 0, flag === 1 ? 0 : 1, endSubItem.x, endSubItem.y]);\n        }\n      }\n    }\n\n    return {\n      fill: bgColor,\n      path: path\n    };\n  };\n\n  return Grid;\n}(Group);\n\nmodule.exports = Grid;\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar DomUtil = Util.DomUtil;\n\nvar Component = __webpack_require__(32);\n\nvar positionAdjust = __webpack_require__(307);\n\nvar spirialAdjust = __webpack_require__(308);\n\nvar bboxAdjust = __webpack_require__(309);\n\nvar LAYOUTS = {\n  scatter: positionAdjust,\n  map: spirialAdjust,\n  treemap: bboxAdjust\n};\n\nvar Label =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Label, _Component);\n\n  function Label() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Label.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Component.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'label',\n\n      /**\n       * label类型\n       * @type {(String)}\n       */\n      type: 'default',\n\n      /**\n       * 默认文本样式\n       * @type {Array}\n       */\n      textStyle: null,\n\n      /**\n       * 文本显示格式化回调函数\n       * @type {Function}\n       */\n      formatter: null,\n\n      /**\n       * 显示的文本集合\n       * @type {Array}\n       */\n      items: null,\n\n      /**\n       * 是否使用html渲染label\n       * @type {String}\n       */\n      useHtml: false,\n\n      /**\n       * html 渲染时用的容器的模板，必须存在 class = \"g-labels\"\n       * @type {String}\n       */\n      containerTpl: '<div class=\"g-labels\" style=\"position:absolute;top:0;left:0;\"></div>',\n\n      /**\n       * html 渲染时单个 label 的模板，必须存在 class = \"g-label\"\n       * @type {String}\n       */\n      itemTpl: '<div class=\"g-label\" style=\"position:absolute;\">{text}</div>',\n\n      /**\n       * label牵引线定义\n       * @type {String || Object}\n       */\n      labelLine: false,\n\n      /**\n       * label牵引线容器\n       * @type Object\n       */\n      lineGroup: null,\n\n      /**\n       * 需添加label的shape\n       * @type Object\n       */\n      shapes: null,\n\n      /**\n       * 默认为true。为false时指定直接用items渲染文本，不进行config\n       * @type Object\n       */\n      config: true,\n\n      /**\n       * 是否进行拾取\n       * @type Object\n       */\n      capture: true\n    });\n  };\n  /*\n   * 清空label容器\n   */\n\n\n  _proto.clear = function clear() {\n    var group = this.get('group');\n    var container = this.get('container');\n\n    if (group && !group.get('destroyed')) {\n      group.clear();\n    }\n\n    if (container) {\n      container.innerHTML = '';\n    }\n\n    _Component.prototype.clear.call(this);\n  };\n  /**\n   * 销毁group\n   */\n\n\n  _proto.destroy = function destroy() {\n    var group = this.get('group');\n    var container = this.get('container');\n\n    if (!group.destroy) {\n      group.destroy();\n    }\n\n    if (container) {\n      container.innerHTML = '';\n    }\n  };\n  /**\n   * label绘制全过程\n   */\n\n\n  _proto.render = function render() {\n    this.clear();\n\n    this._init();\n\n    this.beforeDraw();\n    this.draw();\n    this.afterDraw();\n  };\n\n  _proto._dryDraw = function _dryDraw() {\n    var self = this;\n    var items = self.get('items');\n    var children = self.getLabels();\n    var count = children.length;\n    Util.each(items, function (item, index) {\n      if (index < count) {\n        var label = children[index];\n        self.changeLabel(label, item);\n      } else {\n        var labelShape = self._addLabel(item, index);\n\n        if (labelShape) {\n          labelShape._id = item._id;\n          labelShape.set('coord', item.coord);\n        }\n      }\n    });\n\n    for (var i = count - 1; i >= items.length; i--) {\n      children[i].remove();\n    }\n\n    self._adjustLabels();\n\n    if (self.get('labelLine') || !self.get('config')) {\n      self.drawLines();\n    }\n  };\n  /**\n   * 更新label\n   * 1. 将items与group中的children对比，更新/新增/删除labels\n   * 2. labels布局优化\n   * 3. 画label连接线\n   * 4. 绘制到画布\n   */\n\n\n  _proto.draw = function draw() {\n    this._dryDraw();\n\n    this.get('canvas').draw();\n  };\n  /*\n   * 更新label\n   * oldLabel shape或label dom\n   * newLabel label data\n   * index items中的下标\n   */\n\n\n  _proto.changeLabel = function changeLabel(oldLabel, newLabel) {\n    if (!oldLabel) {\n      return;\n    }\n\n    if (oldLabel.tagName) {\n      var node = this._createDom(newLabel);\n\n      oldLabel.innerHTML = node.innerHTML;\n\n      this._setCustomPosition(newLabel, oldLabel);\n    } else {\n      oldLabel._id = newLabel._id;\n      oldLabel.attr('text', newLabel.text);\n\n      if (oldLabel.attr('x') !== newLabel.x || oldLabel.attr('y') !== newLabel.y) {\n        oldLabel.resetMatrix();\n\n        if (newLabel.textStyle.rotate) {\n          oldLabel.rotateAtStart(newLabel.textStyle.rotate);\n          delete newLabel.textStyle.rotate;\n        }\n\n        oldLabel.attr(newLabel);\n      }\n    }\n  };\n  /**\n   * 显示label\n   */\n\n\n  _proto.show = function show() {\n    var group = this.get('group');\n    var container = this.get('container');\n\n    if (group) {\n      group.show();\n    }\n\n    if (container) {\n      container.style.opacity = 1;\n    }\n  };\n  /**\n   * 隐藏label\n   */\n\n\n  _proto.hide = function hide() {\n    var group = this.get('group');\n    var container = this.get('container');\n\n    if (group) {\n      group.hide();\n    }\n\n    if (container) {\n      container.style.opacity = 0;\n    }\n  };\n  /**\n   * 画label连接线\n   */\n\n\n  _proto.drawLines = function drawLines() {\n    var self = this;\n    var lineStyle = self.get('labelLine');\n\n    if (typeof lineStyle === 'boolean') {\n      self.set('labelLine', {});\n    }\n\n    var lineGroup = self.get('lineGroup');\n\n    if (!lineGroup || lineGroup.get('destroyed')) {\n      lineGroup = self.get('group').addGroup({\n        elCls: 'x-line-group'\n      });\n      self.set('lineGroup', lineGroup);\n    } else {\n      lineGroup.clear();\n    }\n\n    Util.each(self.get('items'), function (label) {\n      self.lineToLabel(label, lineGroup);\n    });\n  };\n\n  _proto.lineToLabel = function lineToLabel(label, lineGroup) {\n    var self = this;\n\n    if (!self.get('config') && !label.labelLine) {\n      return;\n    }\n\n    var lineStyle = label.labelLine || self.get('labelLine');\n    var capture = typeof label.capture === 'undefined' ? self.get('capture') : label.capture;\n    var path = lineStyle.path;\n\n    if (path && Util.isFunction(lineStyle.path)) {\n      path = lineStyle.path(label);\n    }\n\n    if (!path) {\n      var start = label.start || {\n        x: label.x - label._offset.x,\n        y: label.y - label._offset.y\n      };\n      path = [['M', start.x, start.y], ['L', label.x, label.y]];\n    }\n\n    var stroke = label.color;\n\n    if (!stroke) {\n      if (label.textStyle && label.textStyle.fill) {\n        stroke = label.textStyle.fill;\n      } else {\n        stroke = '#000';\n      }\n    }\n\n    var lineShape = lineGroup.addShape('path', {\n      attrs: Util.mix({\n        path: path,\n        fill: null,\n        stroke: stroke\n      }, lineStyle),\n      capture: capture\n    }); // label 对应线的动画关闭\n\n    lineShape.name = self.get('name'); // generate labelLine id according to label id\n\n    lineShape._id = label._id && label._id.replace('glabel', 'glabelline');\n    lineShape.set('coord', self.get('coord'));\n  }; // 根据type对label布局\n\n\n  _proto._adjustLabels = function _adjustLabels() {\n    var self = this;\n    var type = self.get('type');\n    var labels = self.getLabels();\n    var shapes = self.get('shapes');\n    var layout = LAYOUTS[type];\n\n    if (type === 'default' || !layout) {\n      return;\n    }\n\n    layout(labels, shapes);\n  };\n  /**\n   * 获取当前所有label实例\n   * @return {Array} 当前label实例\n   */\n\n\n  _proto.getLabels = function getLabels() {\n    var container = this.get('container');\n\n    if (container) {\n      return Util.toArray(container.childNodes);\n    }\n\n    return this.get('group').get('children');\n  }; // 先计算label的所有配置项，然后生成label实例\n\n\n  _proto._addLabel = function _addLabel(item, index) {\n    var cfg = item;\n\n    if (this.get('config')) {\n      cfg = this._getLabelCfg(item, index);\n    }\n\n    return this._createText(cfg);\n  };\n\n  _proto._getLabelCfg = function _getLabelCfg(item, index) {\n    var textStyle = this.get('textStyle') || {};\n    var formatter = this.get('formatter');\n    var htmlTemplate = this.get('htmlTemplate');\n\n    if (!Util.isObject(item)) {\n      var tmp = item;\n      item = {};\n      item.text = tmp;\n    }\n\n    if (Util.isFunction(textStyle)) {\n      textStyle = textStyle(item.text, item, index);\n    }\n\n    if (formatter) {\n      item.text = formatter(item.text, item, index);\n    }\n\n    if (htmlTemplate) {\n      item.useHtml = true;\n\n      if (Util.isFunction(htmlTemplate)) {\n        item.text = htmlTemplate(item.text, item, index);\n      }\n    }\n\n    if (Util.isNil(item.text)) {\n      item.text = '';\n    }\n\n    item.text = item.text + ''; // ? 为什么转换为字符串\n\n    var cfg = Util.mix({}, item, {\n      textStyle: textStyle\n    }, {\n      x: item.x || 0,\n      y: item.y || 0\n    });\n    return cfg;\n  };\n  /**\n   * label初始化，主要针对html容器\n   */\n\n\n  _proto._init = function _init() {\n    if (!this.get('group')) {\n      var group = this.get('canvas').addGroup({\n        id: 'label-group'\n      });\n      this.set('group', group);\n    }\n  };\n\n  _proto.initHtmlContainer = function initHtmlContainer() {\n    var container = this.get('container');\n\n    if (!container) {\n      var containerTpl = this.get('containerTpl');\n      var wrapper = this.get('canvas').get('el').parentNode;\n      container = DomUtil.createDom(containerTpl);\n      wrapper.style.position = 'relative';\n      wrapper.appendChild(container);\n      this.set('container', container);\n    } else if (Util.isString(container)) {\n      container = document.getElementById(container);\n\n      if (container) {\n        this.set('container', container);\n      }\n    }\n\n    return container;\n  }; // 分html dom和G shape两种情况生成label实例\n\n\n  _proto._createText = function _createText(cfg) {\n    var container = this.get('container');\n    var capture = typeof cfg.capture === 'undefined' ? this.get('capture') : cfg.capture;\n    var labelShape;\n\n    if (cfg.useHtml || cfg.htmlTemplate) {\n      if (!container) {\n        container = this.initHtmlContainer();\n      }\n\n      var node = this._createDom(cfg);\n\n      container.appendChild(node);\n\n      this._setCustomPosition(cfg, node);\n    } else {\n      var name = this.get('name');\n      var origin = cfg.point;\n      var group = this.get('group');\n      delete cfg.point; // 临时解决，否则影响动画\n\n      var rotate = cfg.rotate; // textStyle中的rotate虽然可以正常画出，但是在做动画的时候可能会导致动画异常。移出，在定义好shape后通过transform实现效果。\n\n      if (cfg.textStyle) {\n        if (cfg.textStyle.rotate) {\n          rotate = cfg.textStyle.rotate;\n          delete cfg.textStyle.rotate;\n        }\n\n        cfg = Util.mix({\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          text: cfg.text\n        }, cfg.textStyle);\n      }\n\n      labelShape = group.addShape('text', {\n        attrs: cfg,\n        capture: capture\n      });\n\n      if (rotate) {\n        // rotate是用角度定义的，转换为弧度\n        if (Math.abs(rotate) > Math.PI * 2) {\n          rotate = rotate / 180 * Math.PI;\n        }\n\n        labelShape.transform([['t', -cfg.x, -cfg.y], ['r', rotate], ['t', cfg.x, cfg.y]]);\n      }\n\n      labelShape.setSilent('origin', origin || cfg);\n      labelShape.name = name; // 用于事件标注\n\n      this.get('appendInfo') && labelShape.setSilent('appendInfo', this.get('appendInfo'));\n      return labelShape;\n    }\n  };\n\n  _proto._createDom = function _createDom(cfg) {\n    var itemTpl = this.get('itemTpl');\n    var str = Util.substitute(itemTpl, {\n      text: cfg.text\n    });\n    return DomUtil.createDom(str);\n  }; // 根据文本对齐方式确定dom位置\n\n\n  _proto._setCustomPosition = function _setCustomPosition(cfg, htmlDom) {\n    var textAlign = cfg.textAlign || 'left';\n    var top = cfg.y;\n    var left = cfg.x;\n    var width = DomUtil.getOuterWidth(htmlDom);\n    var height = DomUtil.getOuterHeight(htmlDom);\n    top = top - height / 2;\n\n    if (textAlign === 'center') {\n      left = left - width / 2;\n    } else if (textAlign === 'right') {\n      left = left - width;\n    }\n\n    htmlDom.style.top = parseInt(top, 10) + 'px';\n    htmlDom.style.left = parseInt(left, 10) + 'px';\n  };\n\n  return Label;\n}(Component);\n\nmodule.exports = Label;\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports) {\n\nvar Greedy =\n/*#__PURE__*/\nfunction () {\n  function Greedy() {\n    this.bitmap = [];\n  }\n\n  var _proto = Greedy.prototype;\n\n  _proto.hasGap = function hasGap(bbox) {\n    var hasGap = true;\n    var bitmap = this.bitmap;\n    var minX = Math.floor(bbox.minX);\n    var maxX = Math.ceil(bbox.maxX);\n    var minY = Math.floor(bbox.minY);\n    var maxY = Math.ceil(bbox.maxY) - 1;\n\n    for (var i = minX; i < maxX; i++) {\n      if (!bitmap[i]) {\n        bitmap[i] = [];\n        continue;\n      }\n\n      if (i === minX || i === maxX - 1) {\n        for (var j = minY; j <= maxY; j++) {\n          if (bitmap[i][j]) {\n            hasGap = false;\n            break;\n          }\n        }\n      } else {\n        if (bitmap[i][minY] || bitmap[i][maxY]) {\n          hasGap = false;\n          break;\n        }\n      }\n    }\n\n    return hasGap;\n  };\n\n  _proto.fillGap = function fillGap(bbox) {\n    var bitmap = this.bitmap;\n    var minX = Math.floor(bbox.minX);\n    var maxX = Math.ceil(bbox.maxX) - 1;\n    var minY = Math.floor(bbox.minY);\n    var maxY = Math.ceil(bbox.maxY) - 1;\n\n    for (var i = minX; i <= maxX; i++) {\n      for (var j = minY; j < maxY; j += 8) {\n        if (!bitmap[i]) {\n          bitmap[i] = [];\n        }\n\n        bitmap[i][j] = true;\n      }\n\n      bitmap[i][maxY] = true;\n    }\n\n    for (var _i = minY; _i <= maxY; _i++) {\n      bitmap[minX][_i] = true;\n      bitmap[maxX][_i] = true;\n    }\n  };\n\n  return Greedy;\n}();\n\nmodule.exports = Greedy;\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(3);\n\nmodule.exports = {\n  getFirstScale: function getFirstScale(scales) {\n    var firstScale;\n    Util.each(scales, function (scale) {\n      if (scale) {\n        firstScale = scale;\n        return false;\n      }\n    });\n    return firstScale;\n  }\n};\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Legend = __webpack_require__(158);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY; // const DomUtil = Util.DomUtil;\n\n\nvar Event = Util.Event;\nvar Group = Util.Group; // const Global = require('../../global');\n// const CONTAINER_CLASS = 'g2-legend';\n\nfunction findItem(items, refer) {\n  var rst = null;\n  var value = refer instanceof Group || refer.name === 'legendGroup' ? refer.get('value') : refer;\n  Util.each(items, function (item) {\n    if (item.value === value) {\n      rst = item;\n      return false;\n    }\n  });\n  return rst;\n}\n\nfunction findShapeByName(group, name) {\n  return group.findBy(function (node) {\n    return node.name === name;\n  });\n}\n\nvar Category =\n/*#__PURE__*/\nfunction (_Legend) {\n  _inheritsLoose(Category, _Legend);\n\n  function Category() {\n    return _Legend.apply(this, arguments) || this;\n  }\n\n  var _proto = Category.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Legend.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * type标识\n       * @type {String}\n       */\n      type: 'category-legend',\n\n      /**\n       * 子项集合\n       * @type {Array}\n       */\n      items: null,\n\n      /**\n       * TODO：rename\n       * 图例项水平方向的间距\n       * @type {Number}\n       */\n      itemGap: 5,\n\n      /**\n       * TODO：rename\n       * 图例项垂直方向的间距\n       * @type {Number}\n       */\n      itemMarginBottom: 8,\n\n      /**\n       * 图例项图组\n       * @type {Group}\n       */\n      itemsGroup: null,\n\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'horizontal',\n\n      /**\n       * 是否允许全部取消，默认 false，即必须保留一个被选中\n       * @type {Boolean}\n       */\n      allowAllCanceled: false,\n\n      /**\n       * 边框内边距\n       * @type {Array}\n       */\n      backPadding: [0, 0, 0, 0],\n\n      /**\n       * 图例项取消选中的颜色\n       * @type {String}\n       */\n      unCheckColor: '#ccc',\n\n      /**\n       * 图例背景层属性设置\n       * @type {Obejct}\n       */\n      background: {\n        fill: '#fff',\n        fillOpacity: 0\n      },\n\n      /**\n       * 图例项的宽度，当图例有很多图例项，并且用户想要这些图例项在同一平面内垂直对齐，此时这个属性可帮用户实现此效果\n       * @type {Number}\n       */\n      itemWidth: null,\n\n      /**\n       * 图例文字样式\n       * @type {ATTRS}\n       */\n      textStyle: {\n        fill: '#333',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        fontFamily: FONT_FAMILY\n      },\n\n      /**\n       * marker 和文字的距离\n       * @type {Number}\n       */\n      _wordSpaceing: 8,\n\n      /**\n       * 图例项是否可点击，默认为 true\n       * @type {Boolean}\n       */\n      clickable: true,\n\n      /**\n       * TODO: rename\n       * 图例项的选择模式，多选和单选 multiple、single\n       * @type {String}\n       */\n      selectedMode: 'multiple',\n\n      /**\n       * 图例项的顺序是否要逆序，默认为 false\n       * @type {Boolean}\n       */\n      reversed: false,\n\n      /**\n       * 是否自动换行\n       * @type {Boolean}\n       */\n      autoWrap: true,\n\n      /**\n       * 是否以增加 border 的方式高亮 hover 的 item。若为 false ，则降低其他 item 的透明度。\n       * @type {Boolean}\n       */\n      highlight: false,\n\n      /**\n       * 非highlight方式下，鼠标hover到legend样式\n       * @type {Number}\n       */\n      activeOpacity: 0.7,\n\n      /**\n       * 非highlight方式下，非鼠标hover到的legend样式\n       * @type {Number}\n       */\n      inactiveOpacity: 1\n    });\n  }; // rendering\n\n\n  _proto.render = function render() {\n    _Legend.prototype.render.call(this);\n\n    this._renderItems();\n\n    this.get('autoWrap') && this._adjustItems(); // 默认自动换行\n  }; // user iteraction\n\n\n  _proto._bindEvents = function _bindEvents() {\n    if (this.get('hoverable')) {\n      this.get('group').on('mousemove', Util.wrapBehavior(this, '_onMousemove'));\n      this.get('group').on('mouseleave', Util.wrapBehavior(this, '_onMouseleave'));\n    }\n\n    if (this.get('clickable')) {\n      this.get('group').on('click', Util.wrapBehavior(this, '_onClick'));\n    }\n  }; // return the target's parent legend object\n\n\n  _proto._getLegendItem = function _getLegendItem(target) {\n    var item = target.get('parent');\n\n    if (item && item.name === 'legendGroup') {\n      return item;\n    }\n\n    return null;\n  }; // activate an item by reduce the opacity of other items.\n  // it is reserved for bi-direction interaction between charts / graph and legend\n\n\n  _proto.activate = function activate(value) {\n    var _this = this;\n\n    var self = this;\n    var itemsGroup = self.get('itemsGroup');\n    var children = itemsGroup.get('children');\n    var markerItem = void 0;\n    children.forEach(function (child) {\n      markerItem = findShapeByName(child, 'legend-marker');\n      if (!markerItem) return;\n      var checked = child.get('checked');\n\n      if (_this.get('highlight')) {\n        // change stroke color\n        if (child.get('value') === value && checked) {\n          markerItem.attr('stroke', '#333');\n        } else {\n          markerItem.attr('stroke', null);\n        }\n      } else {\n        // change opacity\n        if (child.get('value') === value) {\n          markerItem.attr('fillOpacity', self.get('activeOpacity'));\n        }\n      }\n    });\n    this.get('canvas').draw();\n    return;\n  }; // restore the opacity of items\n  // it is reserved for bi-direction interaction between charts / graph and legend\n\n\n  _proto.deactivate = function deactivate() {\n    var _this2 = this;\n\n    var self = this;\n    var itemsGroup = self.get('itemsGroup');\n    var children = itemsGroup.get('children');\n    var markerItem = void 0;\n    var unCheckColor = this.get('unCheckColor');\n    children.forEach(function (child) {\n      markerItem = findShapeByName(child, 'legend-marker');\n      if (!markerItem) return;\n\n      if (_this2.get('highlight')) {\n        var oriStroke = markerItem.get('oriStroke');\n        var checked = child.get('checked');\n        if (oriStroke && !checked) oriStroke = unCheckColor;else oriStroke = '';\n        markerItem.attr('stroke', oriStroke);\n      } else {\n        markerItem.attr('fillOpacity', self.get('inactiveOpacity'));\n      }\n    });\n    this.get('canvas').draw();\n    return;\n  }; // mouse move listener of an item\n  // when mouse over an item, reduce the opacity of the other items.\n\n\n  _proto._onMousemove = function _onMousemove(ev) {\n    var item = this._getLegendItem(ev.currentTarget);\n\n    if (item && item.get('checked')) {\n      var items = this.get('items');\n      var itemhover = new Event('itemhover', ev, true, true);\n      itemhover.item = findItem(items, item);\n      itemhover.checked = item.get('checked');\n      itemhover.currentTarget = ev.currentTarget; // change the opacity of other items\n\n      this.deactivate();\n      this.activate(item.get('value'));\n      this.emit('itemhover', itemhover);\n    } else {\n      this.deactivate();\n      this.emit('itemunhover', ev);\n    }\n\n    this.get('canvas').draw();\n    return;\n  }; // mouse leave listener of an item\n\n\n  _proto._onMouseleave = function _onMouseleave(ev) {\n    this.deactivate();\n    this.get('canvas').draw();\n    this.emit('itemunhover', ev);\n    return;\n  }; // the click listener of an item\n\n\n  _proto._onClick = function _onClick(ev) {\n    var clickedItem = this._getLegendItem(ev.currentTarget);\n\n    var items = this.get('items');\n\n    if (clickedItem && !clickedItem.get('destroyed')) {\n      var checked = clickedItem.get('checked');\n      var mode = this.get('selectedMode');\n      var item = findItem(items, clickedItem);\n      var itemclick = new Event('itemclick', ev, true, true);\n      itemclick.item = item;\n      itemclick.currentTarget = clickedItem;\n      itemclick.appendInfo = ev.currentTarget.get('appendInfo');\n      itemclick.checked = mode === 'single' ? true : !checked;\n\n      if (!this.get('allowAllCanceled') && checked && this.getCheckedCount() === 1) {\n        this.emit('clicklastitem', itemclick);\n        return;\n      }\n\n      var unCheckColor = this.get('unCheckColor');\n      var checkColor = this.get('textStyle').fill;\n      var markerItem = void 0;\n      var textItem = void 0;\n      var legendItem = void 0;\n\n      if (mode === 'single') {\n        var itemsGroup = this.get('itemsGroup');\n        var children = itemsGroup.get('children');\n        Util.each(children, function (child) {\n          markerItem = findShapeByName(child, 'legend-marker');\n          textItem = findShapeByName(child, 'legend-text');\n          legendItem = findShapeByName(child, 'legend-item');\n\n          if (child !== clickedItem) {\n            if (markerItem.attr('fill')) {\n              markerItem.attr('fill', unCheckColor);\n            }\n\n            if (markerItem.attr('stroke')) {\n              markerItem.attr('stroke', unCheckColor);\n            }\n\n            textItem.attr('fill', unCheckColor);\n            markerItem.setSilent('checked', false);\n            textItem.setSilent('checked', false);\n            legendItem.setSilent('checked', false);\n            child.setSilent('checked', false);\n          } else {\n            if (markerItem.attr('fill')) {\n              item && item.marker && markerItem.attr('fill', item.marker.fill);\n            }\n\n            if (markerItem.attr('stroke')) {\n              item && item.marker && markerItem.attr('stroke', item.marker.stroke);\n            }\n\n            textItem.attr('fill', checkColor);\n            markerItem.setSilent('checked', true);\n            textItem.setSilent('checked', true);\n            legendItem.setSilent('checked', true);\n            child.setSilent('checked', true);\n          }\n        });\n      } else {\n        markerItem = findShapeByName(clickedItem, 'legend-marker');\n        textItem = findShapeByName(clickedItem, 'legend-text');\n        legendItem = findShapeByName(clickedItem, 'legend-item');\n\n        if (markerItem.attr('fill')) {\n          item && item.marker && markerItem.attr('fill', checked ? unCheckColor : item.marker.fill);\n        }\n\n        if (markerItem.attr('stroke')) {\n          item && item.marker && markerItem.attr('stroke', checked ? unCheckColor : item.marker.stroke);\n        }\n\n        textItem.attr('fill', checked ? unCheckColor : checkColor);\n        clickedItem.setSilent('checked', !checked);\n        markerItem.setSilent('checked', !checked);\n        textItem.setSilent('checked', !checked);\n        legendItem.setSilent('checked', !checked);\n      }\n\n      this.emit('itemclick', itemclick);\n    }\n\n    this.get('canvas').draw();\n    return;\n  }; // render the items\n\n\n  _proto._renderItems = function _renderItems() {\n    var _this3 = this;\n\n    var items = this.get('items');\n\n    if (this.get('reversed')) {\n      items.reverse();\n    }\n\n    Util.each(items, function (item, index) {\n      _this3._addItem(item, index);\n    });\n\n    if (this.get('highlight')) {\n      var itemsGroup = this.get('itemsGroup');\n      var children = itemsGroup.get('children');\n      var markerItem = void 0;\n      children.forEach(function (child) {\n        markerItem = findShapeByName(child, 'legend-marker');\n        var oriStroke = markerItem.get('oriStroke');\n\n        if (!oriStroke) {\n          if (markerItem.attr('stroke')) markerItem.set('oriStroke', markerItem.attr('stroke'));else markerItem.set('oriStroke', '');\n        }\n      });\n    }\n  }; // format the item value\n\n\n  _proto._formatItemValue = function _formatItemValue(value) {\n    var formatter = this.get('formatter') || this.get('itemFormatter');\n\n    if (formatter) {\n      value = formatter.call(this, value);\n    }\n\n    return value;\n  }; // find x of next item\n\n\n  _proto._getNextX = function _getNextX() {\n    var layout = this.get('layout');\n    var itemGap = this.get('itemGap');\n    var itemsGroup = this.get('itemsGroup');\n    var itemWidth = this.get('itemWidth');\n    var children = itemsGroup.get('children');\n    var nextX = 0;\n\n    if (layout === 'horizontal') {\n      // 水平布局\n      Util.each(children, function (v) {\n        nextX += (itemWidth ? itemWidth : v.getBBox().width) + itemGap;\n      });\n    }\n\n    return nextX;\n  }; // find y of next item\n\n\n  _proto._getNextY = function _getNextY() {\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var titleGap = this.get('titleShape') ? this.get('titleGap') : 0;\n    var layout = this.get('layout');\n    var itemsGroup = this.get('itemsGroup');\n    var titleShape = this.get('titleShape');\n    var children = itemsGroup.get('children');\n    var nextY = titleGap;\n\n    if (titleShape) {\n      nextY += titleShape.getBBox().height;\n    }\n\n    if (layout === 'vertical') {\n      // 竖直布局\n      Util.each(children, function (v) {\n        nextY += v.getBBox().height + itemMarginBottom;\n      });\n    }\n\n    return nextY;\n  }; // add an item to the canvas\n\n\n  _proto._addItem = function _addItem(item) {\n    var itemsGroup = this.get('itemsGroup');\n\n    var x = this._getNextX();\n\n    var y = this._getNextY();\n\n    var unCheckColor = this.get('unCheckColor');\n    var itemGroup = itemsGroup.addGroup({\n      x: x,\n      y: y,\n      value: item.value,\n      checked: item.checked\n    }); // @2018-10-20 by blue.lb 需要设置viewId，否则在emit的时候，parent获取不到viewId\n\n    itemGroup.set('viewId', this.get('viewId'));\n    var textStyle = this.get('textStyle');\n    var wordSpace = this.get('_wordSpaceing');\n    var startX = 0;\n\n    if (item.marker) {\n      // 如果有marker添加marker\n      var markerAttrs = Util.mix({}, item.marker, {\n        x: item.marker.radius + x,\n        y: y\n      });\n\n      if (!item.checked) {\n        if (markerAttrs.fill) {\n          markerAttrs.fill = unCheckColor;\n        }\n\n        if (markerAttrs.stroke) {\n          markerAttrs.stroke = unCheckColor;\n        }\n      }\n\n      var markerShape = itemGroup.addShape('marker', {\n        type: 'marker',\n        attrs: markerAttrs\n      });\n      markerShape.attr('cursor', 'pointer');\n      markerShape.name = 'legend-marker';\n      startX += markerShape.getBBox().width + wordSpace;\n    }\n\n    var textAttrs = Util.mix({}, {\n      fill: '#333',\n      fontSize: 12,\n      textAlign: 'start',\n      textBaseline: 'middle',\n      fontFamily: FONT_FAMILY\n    }, textStyle, {\n      x: startX + x,\n      y: y,\n      text: this._formatItemValue(item.value)\n    });\n\n    if (!item.checked) {\n      Util.mix(textAttrs, {\n        fill: unCheckColor\n      });\n    }\n\n    var textShape = itemGroup.addShape('text', {\n      attrs: textAttrs\n    });\n    textShape.attr('cursor', 'pointer');\n    textShape.name = 'legend-text';\n    this.get('appendInfo') && textShape.setSilent('appendInfo', this.get('appendInfo')); // 添加一个包围矩形，用于事件支持\n\n    var bbox = itemGroup.getBBox();\n    var itemWidth = this.get('itemWidth');\n    var wrapperShape = itemGroup.addShape('rect', {\n      attrs: {\n        x: x,\n        y: y - bbox.height / 2,\n        fill: '#fff',\n        fillOpacity: 0,\n        width: itemWidth || bbox.width,\n        height: bbox.height\n      }\n    });\n    wrapperShape.attr('cursor', 'pointer');\n    wrapperShape.setSilent('origin', item); // 保存图例项相关的数据，便于事件操作\n\n    wrapperShape.name = 'legend-item';\n    this.get('appendInfo') && wrapperShape.setSilent('appendInfo', this.get('appendInfo'));\n    itemGroup.name = 'legendGroup';\n    return itemGroup;\n  }; // auto break the line for horizontal layout\n\n\n  _proto._adjustHorizontal = function _adjustHorizontal() {\n    var itemsGroup = this.get('itemsGroup');\n    var children = itemsGroup.get('children');\n    var maxLength = this.get('maxLength');\n    var itemGap = this.get('itemGap');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var titleGap = this.get('titleShape') ? this.get('titleGap') : 0;\n    var row = 0;\n    var rowLength = 0;\n    var width = void 0;\n    var height = void 0;\n    var box = void 0;\n    var itemWidth = this.get('itemWidth');\n\n    if (itemsGroup.getBBox().width > maxLength) {\n      Util.each(children, function (child) {\n        box = child.getBBox();\n        width = itemWidth || box.width;\n        height = box.height + itemMarginBottom;\n\n        if (maxLength - rowLength < width) {\n          row++;\n          rowLength = 0;\n        }\n\n        child.move(rowLength, row * height + titleGap);\n        rowLength += width + itemGap;\n      });\n    }\n\n    return;\n  }; // auto break the column for vertical layout\n\n\n  _proto._adjustVertical = function _adjustVertical() {\n    var itemsGroup = this.get('itemsGroup');\n    var titleShape = this.get('titleShape');\n    var children = itemsGroup.get('children');\n    var maxLength = this.get('maxLength'); // 垂直布局，则 maxLength 代表容器的高度\n\n    var itemGap = this.get('itemGap');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var titleGap = this.get('titleGap');\n    var titleHeight = titleShape ? titleShape.getBBox().height + titleGap : 0;\n    var itemWidth = this.get('itemWidth');\n    var colLength = titleHeight;\n    var width = void 0;\n    var height = void 0;\n    var box = void 0;\n    var maxItemWidth = 0;\n    var totalLength = 0;\n\n    if (itemsGroup.getBBox().height > maxLength) {\n      Util.each(children, function (v) {\n        box = v.getBBox();\n        width = box.width;\n        height = box.height;\n\n        if (itemWidth) {\n          maxItemWidth = itemWidth + itemGap;\n        } else if (width > maxItemWidth) {\n          maxItemWidth = width + itemGap;\n        }\n\n        if (maxLength - colLength < height) {\n          colLength = titleHeight;\n          totalLength += maxItemWidth;\n          v.move(totalLength, titleHeight);\n        } else {\n          v.move(totalLength, colLength);\n        }\n\n        colLength += height + itemMarginBottom;\n      });\n    }\n\n    return;\n  }; // automatically break the line / column while the width / height exceeds maxLength\n\n\n  _proto._adjustItems = function _adjustItems() {\n    var layout = this.get('layout');\n\n    if (layout === 'horizontal') {\n      this._adjustHorizontal();\n    } else {\n      this._adjustVertical();\n    }\n  };\n\n  _proto.getWidth = function getWidth() {\n    return _Legend.prototype.getWidth.call(this);\n  };\n\n  _proto.getHeight = function getHeight() {\n    return _Legend.prototype.getHeight.call(this);\n  };\n\n  _proto.move = function move(x, y) {\n    _Legend.prototype.move.call(this, x, y);\n  };\n\n  return Category;\n}(Legend);\n\nmodule.exports = Category;\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Component = __webpack_require__(32);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Legend, _Component);\n\n  var _proto = Legend.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * Group 容器\n       * @type {Object}\n       */\n      container: null,\n\n      /**\n       * 图例标题配置\n       * @type {Object}\n       */\n      title: null,\n\n      /**\n       * 图例项文本格式化\n       * @type {Function}\n       */\n      formatter: null,\n\n      /**\n       * 鼠标 hover 到图例上的默认交互是否开启\n       * @type {Boolean}\n       */\n      hoverable: true,\n\n      /**\n       * TODO：rename\n       * 图例标题距离图例项的距离\n       * @type {Number}\n       */\n      titleGap: 15,\n\n      /**\n       * legend 相对于 container 的位置\n       * @type {Array}\n       */\n      position: [0, 0],\n\n      /**\n       * legend 在 position 位置上的偏移量\n       * @type {Array}\n       */\n      offset: [0, 0],\n\n      /**\n       * legend 在 position 位置上沿 x 轴的偏移量。若同时设置了 offset 和 offsetX， 以 offsetX 为准\n       * @type {Number}\n       */\n      offsetX: null,\n\n      /**\n       * legend 在 position 位置上沿 y 轴的偏移量。若同时设置了 offset 和 offsetY， 以 offsetY 为准\n       * @type {Number}\n       */\n      offsetY: null\n    };\n  };\n\n  function Legend(cfg) {\n    var _this;\n\n    _this = _Component.call(this, cfg) || this;\n\n    _this._init();\n\n    _this.beforeRender();\n\n    _this.render();\n\n    _this._adjustPositionOffset();\n\n    _this._bindEvents();\n\n    return _this;\n  }\n\n  _proto._init = function _init() {\n    var group = this.get('group');\n    var container = this.get('container');\n    this.set('canvas', container.get('canvas'));\n    var position = this.get('position');\n    if (!group) group = container.addGroup({\n      x: 0 - position[0],\n      y: 0 - position[1]\n    });\n    this.set('group', group);\n  };\n\n  _proto._adjustPositionOffset = function _adjustPositionOffset() {\n    var position = this.get('position');\n    var offset = this.get('offset');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n\n    if (!Util.isArray(offset)) {\n      var layout = this.get('layout');\n      offset = layout === 'vertical' ? [offset, 0] : [0, offset];\n    }\n\n    if (offsetX) offset[0] = offsetX;\n    if (offsetY) offset[1] = offsetY;\n    var bbox = this.get('group').getBBox();\n    this.move(-bbox.minX + position[0] + offset[0], -bbox.minY + position[1] + offset[1]);\n  };\n\n  _proto.beforeRender = function beforeRender() {\n    var group = this.get('group');\n    var itemsGroup = group.addGroup();\n    this.set('itemsGroup', itemsGroup);\n  };\n\n  _proto.render = function render() {\n    this._renderTitle();\n  }; // render the title of the legend\n\n\n  _proto._renderTitle = function _renderTitle() {\n    var title = this.get('title');\n    var titleGap = this.get('titleGap');\n    titleGap = titleGap || 0;\n\n    if (title && title.text) {\n      var group = this.get('group');\n      var titleShape = group.addShape('text', {\n        attrs: Util.mix({\n          x: 0,\n          y: 0 - titleGap,\n          fill: '#333',\n          textBaseline: 'middle',\n          fontFamily: FONT_FAMILY\n        }, title)\n      });\n      titleShape.name = 'legend-title';\n      this.get('appendInfo') && titleShape.setSilent('appendInfo', this.get('appendInfo'));\n      this.set('titleShape', titleShape);\n    }\n  }; // return the count of checked items\n\n\n  _proto.getCheckedCount = function getCheckedCount() {\n    var itemsGroup = this.get('itemsGroup');\n    var items = itemsGroup.get('children');\n    var checkedArr = Util.filter(items, function (item) {\n      return item.get('checked');\n    });\n    return checkedArr.length;\n  }; // set items for the legend\n\n\n  _proto.setItems = function setItems(items) {\n    this.set('items', items);\n    this.clear();\n    this.render();\n  }; // add an item into the legend\n\n\n  _proto.addItem = function addItem(item) {\n    var items = this.get('items');\n    items.push(item);\n    this.clear();\n    this.render();\n  }; // clear all the items of the legend\n\n\n  _proto.clear = function clear() {\n    var itemsGroup = this.get('itemsGroup');\n    itemsGroup.clear();\n    var group = this.get('group');\n    group.clear();\n    this.beforeRender();\n  }; // destroy the legend\n\n\n  _proto.destroy = function destroy() {\n    var group = this.get('group');\n    group.destroy();\n    this._attrs = {};\n    this.removeAllListeners();\n    this.destroyed = true;\n  }; // return the width of the legend\n\n\n  _proto.getWidth = function getWidth() {\n    var bbox = this.get('group').getBBox();\n    return bbox.width;\n  }; // return the height of the legend\n\n\n  _proto.getHeight = function getHeight() {\n    var bbox = this.get('group').getBBox();\n    return bbox.height;\n  };\n\n  _proto.move = function move(x, y) {\n    this.get('group').move(x, y);\n  };\n\n  _proto.draw = function draw() {\n    this.get('canvas').draw();\n  };\n\n  return Legend;\n}(Component);\n\nmodule.exports = Legend;\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Category = __webpack_require__(157);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar DomUtil = Util.DomUtil;\nvar Group = Util.Group;\nvar CONTAINER_CLASS = 'g2-legend';\nvar TITLE_CLASS = 'g2-legend-title';\nvar LIST_CLASS = 'g2-legend-list';\nvar ITEM_CLASS = 'g2-legend-list-item';\nvar TEXT_CLASS = 'g2-legend-text';\nvar MARKER_CLASS = 'g2-legend-marker'; // find a dom node from the chidren of the node with className.\n\nfunction findNodeByClass(node, className) {\n  return node.getElementsByClassName(className)[0];\n}\n\nfunction getParentNode(node, className) {\n  var nodeClass = node.className;\n\n  if (Util.isNil(nodeClass)) {\n    return node;\n  }\n\n  nodeClass = nodeClass.split(' ');\n\n  if (nodeClass.indexOf(className) > -1) {\n    return node;\n  }\n\n  if (node.parentNode) {\n    if (node.parentNode.className === CONTAINER_CLASS) {\n      return node.parentNode;\n    }\n\n    return getParentNode(node.parentNode, className);\n  }\n\n  return null;\n}\n\nfunction findItem(items, refer) {\n  var rst = null;\n  var value = refer instanceof Group ? refer.get('value') : refer;\n  Util.each(items, function (item) {\n    if (item.value === value) {\n      rst = item;\n      return false;\n    }\n  });\n  return rst;\n}\n\nvar CatHtml =\n/*#__PURE__*/\nfunction (_Category) {\n  _inheritsLoose(CatHtml, _Category);\n\n  function CatHtml() {\n    return _Category.apply(this, arguments) || this;\n  }\n\n  var _proto = CatHtml.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Category.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * type 标识\n       * @type {String}\n       */\n      type: 'category-legend',\n\n      /**\n       * html 容器\n       * @type {DOM}\n       */\n      container: null,\n\n      /**\n       * 使用html时的外层模板\n       * @type {String}\n       */\n      containerTpl: '<div class=\"' + CONTAINER_CLASS + '\">' + '<h4 class=\"' + TITLE_CLASS + '\"></h4>' + '<ul class=\"' + LIST_CLASS + '\"></ul>' + '</div>',\n\n      /**\n       * html 模板\n       * @type {String|Function}\n       */\n      itemTpl: '<li class=\"' + ITEM_CLASS + ' item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + '<i class=\"' + MARKER_CLASS + '\" style=\"background-color:{color};\"></i>' + '<span class=\"' + TEXT_CLASS + '\">{value}</span></li>',\n\n      /**\n       * html style\n       * @type {Attrs}\n       */\n      legendStyle: {},\n\n      /**\n       * 图例文字样式\n       * @type {ATTRS}\n       */\n      textStyle: {\n        fill: '#333',\n        fontSize: 12,\n        textAlign: 'middle',\n        textBaseline: 'top',\n        fontFamily: FONT_FAMILY\n      },\n\n      /**\n       * 当文本太长时是否进行缩略\n       * @type {Boolean}\n       */\n      abridgeText: false,\n\n      /**\n       * abridgeText 为 true 时，鼠标放置在 item 上时显示全称的悬浮 div 的 html 模板\n       * @type {String}\n       */\n      tipTpl: '<div class=\"textTip\"></div>',\n\n      /**\n       * abridgeText 为 true 时，鼠标放置在 item 上时显示全称的悬浮 div 的样式\n       * @type {Attrs}\n       */\n      tipStyle: {\n        display: 'none',\n        fontSize: '12px',\n        backgroundColor: '#fff',\n        position: 'absolute',\n        width: 'auto',\n        height: 'auto',\n        padding: '3px',\n        boxShadow: '2px 2px 5px #888'\n      },\n\n      /**\n       * useHtml 为 true 时生效，用于自动定位\n       * @type {[type]}\n       */\n      autoPosition: true\n    });\n  };\n\n  _proto._init = function _init() {\n    return;\n  };\n\n  _proto.beforeRender = function beforeRender() {\n    return;\n  };\n\n  _proto.render = function render() {\n    this._renderHTML();\n  }; // user interaction\n\n\n  _proto._bindEvents = function _bindEvents() {\n    var _this = this;\n\n    var legendWrapper = this.get('legendWrapper');\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS);\n\n    if (this.get('hoverable')) {\n      itemListDom.onmousemove = function (ev) {\n        return _this._onMousemove(ev);\n      };\n\n      itemListDom.onmouseout = function (ev) {\n        return _this._onMouseleave(ev);\n      };\n    }\n\n    if (this.get('clickable')) {\n      itemListDom.onclick = function (ev) {\n        return _this._onClick(ev);\n      };\n    }\n  }; // mouse move listener of an item\n  // when mouse over an item, reduce the opacity of the other items.\n\n\n  _proto._onMousemove = function _onMousemove(ev) {\n    var items = this.get('items');\n    var target = ev.target;\n    var targetClass = target.className;\n    targetClass = targetClass.split(' ');\n\n    if (targetClass.indexOf(CONTAINER_CLASS) > -1 || targetClass.indexOf(LIST_CLASS) > -1) {\n      return;\n    }\n\n    var parentDom = getParentNode(target, ITEM_CLASS);\n    var hoveredItem = findItem(items, parentDom.getAttribute('data-value'));\n\n    if (hoveredItem) {\n      // change the opacity of other items\n      this.deactivate();\n      this.activate(parentDom.getAttribute('data-value'));\n      this.emit('itemhover', {\n        item: hoveredItem,\n        currentTarget: parentDom,\n        checked: hoveredItem.checked\n      });\n    } else if (!hoveredItem) {\n      // restore the opacity of all the items\n      this.deactivate();\n      this.emit('itemunhover', ev);\n    }\n\n    return;\n  }; // mouse leave listener of an item\n\n\n  _proto._onMouseleave = function _onMouseleave(ev) {\n    // restore the opacity of all the items when mouse leave\n    this.deactivate();\n    this.emit('itemunhover', ev);\n    return;\n  }; // the click listener of an item\n\n\n  _proto._onClick = function _onClick(ev) {\n    var _this2 = this;\n\n    var legendWrapper = this.get('legendWrapper');\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS);\n    var unCheckedColor = this.get('unCheckColor');\n    var items = this.get('items');\n    var mode = this.get('selectedMode');\n    var childNodes = itemListDom.childNodes;\n    var target = ev.target;\n    var targetClass = target.className;\n    targetClass = targetClass.split(' ');\n\n    if (targetClass.indexOf(CONTAINER_CLASS) > -1 || targetClass.indexOf(LIST_CLASS) > -1) {\n      return;\n    }\n\n    var parentDom = getParentNode(target, ITEM_CLASS);\n    var textDom = findNodeByClass(parentDom, TEXT_CLASS);\n    var markerDom = findNodeByClass(parentDom, MARKER_CLASS);\n    var clickedItem = findItem(items, parentDom.getAttribute('data-value'));\n\n    if (!clickedItem) {\n      return;\n    }\n\n    var domClass = parentDom.className;\n    var originColor = parentDom.getAttribute('data-color');\n\n    if (mode === 'single') {\n      // 单选模式\n      // update checked status\n      clickedItem.checked = true; // 其他图例项全部置灰\n\n      Util.each(childNodes, function (child) {\n        if (child !== parentDom) {\n          var childMarkerDom = findNodeByClass(child, MARKER_CLASS);\n          childMarkerDom.style.backgroundColor = unCheckedColor;\n          child.className = child.className.replace('checked', 'unChecked');\n          child.style.color = unCheckedColor;\n          var childItem = findItem(items, child.getAttribute('data-value'));\n          childItem.checked = false;\n        } else {\n          if (textDom) {\n            textDom.style.color = _this2.get('textStyle').fill;\n          }\n\n          if (markerDom) {\n            markerDom.style.backgroundColor = originColor;\n          }\n\n          parentDom.className = domClass.replace('unChecked', 'checked');\n        }\n      });\n    } else {\n      // 混合模式\n      var clickedItemChecked = domClass.indexOf('checked') !== -1; // domClass.includes('checked');\n\n      var count = 0;\n      Util.each(childNodes, function (child) {\n        if (child.className.indexOf('checked') !== -1) {\n          // .includes('checked')\n          count++;\n        }\n      });\n\n      if (!this.get('allowAllCanceled') && clickedItemChecked && count === 1) {\n        this.emit('clicklastitem', {\n          item: clickedItem,\n          currentTarget: parentDom,\n          checked: mode === 'single' ? true : clickedItem.checked\n        });\n        return;\n      } // 在判断最后一个图例后再更新checked状态，防止点击最后一个图例item时图例样式没有变化但是checked状态改变了 fix #422\n\n\n      clickedItem.checked = !clickedItem.checked;\n\n      if (clickedItemChecked) {\n        if (markerDom) {\n          markerDom.style.backgroundColor = unCheckedColor;\n        }\n\n        parentDom.className = domClass.replace('checked', 'unChecked');\n        parentDom.style.color = unCheckedColor;\n      } else {\n        if (markerDom) {\n          markerDom.style.backgroundColor = originColor;\n        }\n\n        parentDom.className = domClass.replace('unChecked', 'checked');\n        parentDom.style.color = this.get('textStyle').fill;\n      }\n    }\n\n    this.emit('itemclick', {\n      item: clickedItem,\n      currentTarget: parentDom,\n      checked: mode === 'single' ? true : clickedItem.checked\n    });\n    return;\n  }; // activate an item by reduce the opacity of other items.\n  // it is reserved for bi-direction interaction between charts / graph and legend\n\n\n  _proto.activate = function activate(value) {\n    var _this3 = this;\n\n    var self = this;\n    var items = self.get('items');\n    var item = findItem(items, value);\n    var legendWrapper = self.get('legendWrapper');\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS);\n    var childNodes = itemListDom.childNodes;\n    childNodes.forEach(function (child) {\n      var childMarkerDom = findNodeByClass(child, MARKER_CLASS);\n      var childItem = findItem(items, child.getAttribute('data-value'));\n\n      if (_this3.get('highlight')) {\n        if (childItem === item && childItem.checked) {\n          childMarkerDom.style.border = '1px solid #333';\n          return;\n        }\n      } else {\n        if (childItem === item) {\n          childMarkerDom.style.opacity = self.get('activeOpacity');\n        } else {\n          if (childItem.checked) childMarkerDom.style.opacity = self.get('inactiveOpacity');\n        }\n      } // if (childItem !== item && childItem.checked) {\n      //   if (this.get('highlight')) {\n      //     childMarkerDom.style.border = '1px solid #fff';\n      //   } else childMarkerDom.style.opacity = 0.5;\n      // } else {\n      //   if (this.get('highlight')) {\n      //     childMarkerDom.style.border = '1px solid #333';\n      //   } else childMarkerDom.style.opacity = 1;\n      // }\n\n    });\n    return;\n  }; // restore the opacity of items\n  // it is reserved for bi-direction interaction between charts / graph and legend\n\n\n  _proto.deactivate = function deactivate() {\n    var _this4 = this;\n\n    var self = this;\n    var legendWrapper = self.get('legendWrapper');\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS);\n    var childNodes = itemListDom.childNodes;\n    childNodes.forEach(function (child) {\n      var childMarkerDom = findNodeByClass(child, MARKER_CLASS);\n\n      if (_this4.get('highlight')) {\n        childMarkerDom.style.border = '1px solid #fff';\n      } else {\n        childMarkerDom.style.opacity = self.get('inactiveOpacity');\n      }\n    });\n    return;\n  };\n\n  _proto._renderHTML = function _renderHTML() {\n    var _this5 = this; // const canvas = this.get('canvas');\n\n\n    var container = this.get('container'); // const outterNode = container.parentNode;\n\n    var title = this.get('title');\n    var containerTpl = this.get('containerTpl');\n    var legendWrapper = DomUtil.createDom(containerTpl);\n    var titleDom = findNodeByClass(legendWrapper, TITLE_CLASS);\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS); // ul\n\n    var unCheckedColor = this.get('unCheckColor');\n    var LEGEND_STYLE = Util.deepMix({}, {\n      CONTAINER_CLASS: {\n        height: 'auto',\n        width: 'auto',\n        position: 'absolute',\n        overflowY: 'auto',\n        fontSize: '12px',\n        fontFamily: FONT_FAMILY,\n        lineHeight: '20px',\n        color: '#8C8C8C'\n      },\n      TITLE_CLASS: {\n        marginBottom: this.get('titleGap') + 'px',\n        fontSize: '12px',\n        color: '#333',\n        // 默认样式\n        textBaseline: 'middle',\n        fontFamily: FONT_FAMILY\n      },\n      LIST_CLASS: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0,\n        textAlign: 'center'\n      },\n      LIST_ITEM_CLASS: {\n        cursor: 'pointer',\n        marginBottom: '5px',\n        marginRight: '24px'\n      },\n      MARKER_CLASS: {\n        width: '9px',\n        height: '9px',\n        borderRadius: '50%',\n        display: 'inline-block',\n        marginRight: '4px',\n        verticalAlign: 'middle'\n      }\n    }, this.get('legendStyle')); // fix：IE 9 兼容问题，先加入 legendWrapper\n    // let container = this.get('container');\n\n    if (/^\\#/.test(container) || typeof container === 'string' && container.constructor === String) {\n      // 如果传入 dom 节点的 id\n      var id = container.replace('#', '');\n      container = document.getElementById(id);\n      container.appendChild(legendWrapper);\n    } else {\n      var _position = this.get('position');\n\n      var rangeStyle = {};\n\n      if (_position === 'left' || _position === 'right') {\n        rangeStyle = {\n          maxHeight: (this.get('maxLength') || container.offsetHeight) + 'px'\n        };\n      } else {\n        rangeStyle = {\n          maxWidth: (this.get('maxLength') || container.offsetWidth) + 'px'\n        };\n      }\n\n      DomUtil.modifyCSS(legendWrapper, Util.mix({}, LEGEND_STYLE.CONTAINER_CLASS, rangeStyle, this.get(CONTAINER_CLASS)));\n      container.appendChild(legendWrapper);\n    }\n\n    DomUtil.modifyCSS(itemListDom, Util.mix({}, LEGEND_STYLE.LIST_CLASS, this.get(LIST_CLASS))); // render title\n\n    if (titleDom) {\n      if (title && title.text) {\n        titleDom.innerHTML = title.text;\n        DomUtil.modifyCSS(titleDom, Util.mix({}, LEGEND_STYLE.TITLE_CLASS, this.get(TITLE_CLASS), title));\n      } else {\n        legendWrapper.removeChild(titleDom);\n      }\n    } // 开始渲染图例项\n\n\n    var items = this.get('items');\n    var itemTpl = this.get('itemTpl');\n    var position = this.get('position');\n    var layout = this.get('layout');\n    var itemDisplay = position === 'right' || position === 'left' || layout === 'vertical' ? 'block' : 'inline-block';\n    var itemStyle = Util.mix({}, LEGEND_STYLE.LIST_ITEM_CLASS, {\n      display: itemDisplay\n    }, this.get(ITEM_CLASS));\n    var markerStyle = Util.mix({}, LEGEND_STYLE.MARKER_CLASS, this.get(MARKER_CLASS));\n    Util.each(items, function (item, index) {\n      var checked = item.checked;\n\n      var value = _this5._formatItemValue(item.value);\n\n      var markerColor = item.marker.fill || item.marker.stroke;\n      var color = checked ? markerColor : unCheckedColor;\n      var domStr;\n\n      if (Util.isFunction(itemTpl)) {\n        domStr = itemTpl(value, color, checked, index);\n      } else {\n        domStr = itemTpl;\n      }\n\n      var itemDiv = Util.substitute(domStr, Util.mix({}, item, {\n        index: index,\n        checked: checked ? 'checked' : 'unChecked',\n        value: value,\n        color: color,\n        originColor: markerColor,\n        // @2018-07-09 by blue.lb 修复如果legend值中存在双引号\"时, 导致的无法点击触发legend正常操作bug\n        originValue: item.value.replace(/\\\"/g, '&quot;')\n      })); // li\n\n      var itemDom = DomUtil.createDom(itemDiv);\n      itemDom.style.color = _this5.get('textStyle').fill;\n      var markerDom = findNodeByClass(itemDom, MARKER_CLASS);\n      var textDom = findNodeByClass(itemDom, TEXT_CLASS);\n      DomUtil.modifyCSS(itemDom, itemStyle);\n      markerDom && DomUtil.modifyCSS(markerDom, markerStyle); // textDom && DomUtil.modifyCSS(textDom, this.get('textStyle'));\n\n      if (!checked) {\n        itemDom.style.color = unCheckedColor;\n\n        if (markerDom) {\n          markerDom.style.backgroundColor = unCheckedColor;\n        }\n      }\n\n      itemListDom.appendChild(itemDom); // abridge the text if the width of the text exceeds the width of the item\n\n      if (_this5.get('abridgeText')) {\n        var text = value; // const itemWidth = parseFloat(this.get(ITEM_CLASS).width.substr(0, this.get(ITEM_CLASS).width.length - 2));\n\n        var itemWidth = itemDom.offsetWidth;\n\n        var fs = _this5.get('textStyle').fontSize;\n\n        if (isNaN(fs)) {\n          // 6.5pt = 6.5 * 1/72 * 96 = 8.6px\n          if (fs.indexOf('pt') !== -1) fs = parseFloat(fs.substr(0, fs.length - 2)) * 1 / 72 * 96;else if (fs.indexOf('px') !== -1) fs = parseFloat(fs.substr(0, fs.length - 2));\n        }\n\n        var textWidth = fs * text.length;\n        var letterNum = Math.floor(itemWidth / fs);\n\n        if (itemWidth < 2 * fs) {\n          // unable to contain '...'\n          text = '';\n        } else if (itemWidth < textWidth) {\n          // replace the tail as '...\n          if (letterNum > 1) text = text.substr(0, letterNum - 1) + '...';\n        }\n\n        textDom.innerText = text; // show the text tip while mouse hovering an item\n\n        itemDom.addEventListener('mouseover', function () {\n          var tipDom = findNodeByClass(legendWrapper.parentNode, 'textTip');\n          tipDom.style.display = 'block';\n          tipDom.style.left = itemDom.offsetLeft + itemDom.offsetWidth + 'px';\n          tipDom.style.top = itemDom.offsetTop + 15 + 'px';\n          tipDom.innerText = value;\n        }); // hide the text tip while mouse leave the item\n\n        itemDom.addEventListener('mouseout', function () {\n          var tipDom = findNodeByClass(legendWrapper.parentNode, 'textTip');\n          tipDom.style.display = 'none';\n        });\n      }\n    }); // append the tip div as a brother node of legend dom\n\n    if (this.get('abridgeText')) {\n      var tipTpl = this.get('tipTpl');\n      var tipDom = DomUtil.createDom(tipTpl);\n      var tipDomStyle = this.get('tipStyle');\n      DomUtil.modifyCSS(tipDom, tipDomStyle);\n      legendWrapper.parentNode.appendChild(tipDom); // hide the tip while mouse entering the tip dom\n\n      tipDom.addEventListener('mouseover', function () {\n        tipDom.style.display = 'none';\n      });\n    }\n\n    this.set('legendWrapper', legendWrapper);\n  };\n\n  _proto._adjustPositionOffset = function _adjustPositionOffset() {\n    var position = this.get('position');\n    var offset = this.get('offset');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n    if (offsetX) offset[0] = offsetX;\n    if (offsetY) offset[1] = offsetY;\n    var legendWrapper = this.get('legendWrapper');\n    legendWrapper.style.left = position[0] + 'px';\n    legendWrapper.style.top = position[1] + 'px';\n    legendWrapper.style.marginLeft = offset[0] + 'px';\n    legendWrapper.style.marginTop = offset[1] + 'px';\n  };\n\n  _proto.getWidth = function getWidth() {\n    return DomUtil.getOuterWidth(this.get('legendWrapper'));\n  };\n\n  _proto.getHeight = function getHeight() {\n    return DomUtil.getOuterHeight(this.get('legendWrapper'));\n  };\n\n  _proto.move = function move(x, y) {\n    if (!/^\\#/.test(this.get('container'))) {\n      DomUtil.modifyCSS(this.get('legendWrapper'), {\n        left: x + 'px',\n        top: y + 'px'\n      });\n      this.set('x', x);\n      this.set('y', y);\n    } else {\n      _Category.prototype.move.call(this, x, y);\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    var legendWrapper = this.get('legendWrapper');\n\n    if (legendWrapper && legendWrapper.parentNode) {\n      legendWrapper.parentNode.removeChild(legendWrapper);\n    }\n  };\n\n  return CatHtml;\n}(Category);\n\nmodule.exports = CatHtml;\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Component = __webpack_require__(32);\n\nvar Util = __webpack_require__(3);\n\nvar Crosshair =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Crosshair, _Component);\n\n  var _proto = Crosshair.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Component.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n        * crosshair的类型\n        * @type {String}\n        */\n      type: null,\n\n      /**\n       * 画在哪层视图\n       * @type {G-Element}\n       */\n      plot: null,\n\n      /**\n       * x轴上，移动到位置的偏移量\n       * @type {Number}\n       */\n      plotRange: null,\n\n      /**\n       * 默认rect crosshair样式\n       * @type {Object}\n       */\n      rectStyle: {\n        fill: '#CCD6EC',\n        opacity: 0.3\n      },\n\n      /**\n        * 默认line crosshair样式\n        * @type {Object}\n        */\n      lineStyle: {\n        stroke: 'rgba(0, 0, 0, 0.25)',\n        lineWidth: 1\n      },\n      isTransposed: false\n    });\n  };\n\n  function Crosshair(cfg) {\n    var _this;\n\n    _this = _Component.call(this, cfg) || this;\n\n    _this._init_();\n\n    _this.render();\n\n    return _this;\n  }\n\n  _proto._init_ = function _init_() {\n    var self = this;\n    var plot = self.get('plot');\n    var group;\n\n    if (self.type === 'rect') {\n      group = plot.addGroup({\n        zIndex: 0\n      });\n    } else {\n      group = plot.addGroup();\n    }\n\n    this.set('container', group);\n  };\n\n  _proto._addLineShape = function _addLineShape(attrs, type) {\n    var container = this.get('container');\n    var shape = container.addShape('line', {\n      capture: false,\n      attrs: attrs\n    }); // shape.hide();\n\n    this.set('crossLineShape' + type, shape);\n    return shape;\n  };\n\n  _proto._renderHorizontalLine = function _renderHorizontalLine(canvas, plotRange) {\n    var style = Util.mix(this.get('lineStyle'), this.get('style'));\n    var attrs = Util.mix({\n      x1: plotRange ? plotRange.bl.x : canvas.get('width'),\n      y1: 0,\n      x2: plotRange ? plotRange.br.x : 0,\n      y2: 0\n    }, style);\n\n    this._addLineShape(attrs, 'X');\n  };\n\n  _proto._renderVerticalLine = function _renderVerticalLine(canvas, plotRange) {\n    var style = Util.mix(this.get('lineStyle'), this.get('style'));\n    var attrs = Util.mix({\n      x1: 0,\n      y1: plotRange ? plotRange.bl.y : canvas.get('height'),\n      x2: 0,\n      y2: plotRange ? plotRange.tl.y : 0\n    }, style);\n\n    this._addLineShape(attrs, 'Y');\n  };\n\n  _proto._renderBackground = function _renderBackground(canvas, plotRange) {\n    var style = Util.mix(this.get('rectStyle'), this.get('style'));\n    var container = this.get('container');\n    var attrs = Util.mix({\n      x: plotRange ? plotRange.tl.x : 0,\n      y: plotRange ? plotRange.tl.y : canvas.get('height'),\n      width: plotRange ? plotRange.br.x - plotRange.bl.x : canvas.get('width'),\n      height: plotRange ? Math.abs(plotRange.tl.y - plotRange.bl.y) : canvas.get('height')\n    }, style);\n    var shape = container.addShape('rect', {\n      attrs: attrs,\n      capture: false\n    }); // shape.hide();\n\n    this.set('crosshairsRectShape', shape);\n    return shape;\n  };\n\n  _proto._updateRectShape = function _updateRectShape(items) {\n    var offset;\n    var crosshairsRectShape = this.get('crosshairsRectShape');\n    var isTransposed = this.get('isTransposed');\n    var firstItem = items[0];\n    var lastItem = items[items.length - 1];\n    var dim = isTransposed ? 'y' : 'x';\n    var attr = isTransposed ? 'height' : 'width';\n    var startDim = firstItem[dim];\n\n    if (items.length > 1 && firstItem[dim] > lastItem[dim]) {\n      startDim = lastItem[dim];\n    }\n\n    if (this.get('width')) {\n      // 用户定义了 width\n      crosshairsRectShape.attr(dim, startDim - this.get('crosshairs').width / 2);\n      crosshairsRectShape.attr(attr, this.get('width'));\n    } else {\n      if (Util.isArray(firstItem.point[dim]) && !firstItem.size) {\n        // 直方图\n        var width = firstItem.point[dim][1] - firstItem.point[dim][0];\n        crosshairsRectShape.attr(dim, firstItem.point[dim][0]);\n        crosshairsRectShape.attr(attr, width);\n      } else {\n        offset = 3 * firstItem.size / 4;\n        crosshairsRectShape.attr(dim, startDim - offset);\n\n        if (items.length === 1) {\n          crosshairsRectShape.attr(attr, 3 * firstItem.size / 2);\n        } else {\n          crosshairsRectShape.attr(attr, Math.abs(lastItem[dim] - firstItem[dim]) + 2 * offset);\n        }\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var canvas = this.get('canvas');\n    var plotRange = this.get('plotRange');\n    var isTransposed = this.get('isTransposed');\n    this.clear();\n\n    switch (this.get('type')) {\n      case 'x':\n        this._renderHorizontalLine(canvas, plotRange);\n\n        break;\n\n      case 'y':\n        this._renderVerticalLine(canvas, plotRange);\n\n        break;\n\n      case 'cross':\n        this._renderHorizontalLine(canvas, plotRange);\n\n        this._renderVerticalLine(canvas, plotRange);\n\n        break;\n\n      case 'rect':\n        this._renderBackground(canvas, plotRange);\n\n        break;\n\n      default:\n        isTransposed ? this._renderHorizontalLine(canvas, plotRange) : this._renderVerticalLine(canvas, plotRange);\n    }\n  };\n\n  _proto.show = function show() {\n    var container = this.get('container');\n\n    _Component.prototype.show.call(this);\n\n    container.show();\n  };\n\n  _proto.hide = function hide() {\n    var container = this.get('container');\n\n    _Component.prototype.hide.call(this);\n\n    container.hide();\n  };\n\n  _proto.clear = function clear() {\n    var container = this.get('container');\n    this.set('crossLineShapeX', null);\n    this.set('crossLineShapeY', null);\n    this.set('crosshairsRectShape', null);\n\n    _Component.prototype.clear.call(this);\n\n    container.clear();\n  };\n\n  _proto.destroy = function destroy() {\n    var container = this.get('container');\n\n    _Component.prototype.destroy.call(this);\n\n    container.remove();\n  };\n\n  _proto.setPosition = function setPosition(x, y, items) {\n    var crossLineShapeX = this.get('crossLineShapeX');\n    var crossLineShapeY = this.get('crossLineShapeY');\n    var crosshairsRectShape = this.get('crosshairsRectShape');\n\n    if (crossLineShapeY && !crossLineShapeY.get('destroyed')) {\n      // 第一次进入时，画布需要单独绘制，所以需要先设定corss的位置\n      crossLineShapeY.move(x, 0);\n    }\n\n    if (crossLineShapeX && !crossLineShapeX.get('destroyed')) {\n      crossLineShapeX.move(0, y);\n    }\n\n    if (crosshairsRectShape && !crosshairsRectShape.get('destroyed')) {\n      this._updateRectShape(items);\n    }\n  };\n\n  return Crosshair;\n}(Component);\n\nmodule.exports = Crosshair;\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports) {\n\nvar GAP = 20;\nvar PositionMixin = {\n  _calcTooltipPosition: function _calcTooltipPosition(x, y, position, containerWidth, containerHeight, target) {\n    var rectWidth = 0;\n    var rectHeight = 0;\n    var gap = 20;\n\n    if (target) {\n      var rect = target.getBBox();\n      rectWidth = rect.width;\n      rectHeight = rect.height;\n      x = rect.x;\n      y = rect.y;\n      gap = 5;\n    }\n\n    switch (position) {\n      case 'inside':\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'top':\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y - containerHeight - gap;\n        break;\n\n      case 'left':\n        x = x - containerWidth - gap;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'right':\n        x = x + rectWidth + gap;\n        y = y + rectHeight / 2 - containerHeight / 2;\n        break;\n\n      case 'bottom':\n      default:\n        x = x + rectWidth / 2 - containerWidth / 2;\n        y = y + rectHeight + gap;\n        break;\n    }\n\n    return [x, y];\n  },\n  _constraintPositionInBoundary: function _constraintPositionInBoundary(x, y, width, height, viewWidth, viewHeight) {\n    if (x + width + GAP > viewWidth) {\n      x -= width + GAP;\n      x = x < 0 ? 0 : x;\n    } else if (x + GAP < 0) {\n      x = GAP;\n    } else {\n      x += GAP;\n    }\n\n    if (y + height + GAP > viewHeight) {\n      y -= height + GAP;\n      y = y < 0 ? 0 : y;\n    } else if (y + GAP < 0) {\n      y = GAP;\n    } else {\n      y += GAP;\n    }\n\n    return [x, y];\n  },\n  _constraintPositionInPlot: function _constraintPositionInPlot(x, y, width, height, plotRange, onlyHorizontal) {\n    if (x + width > plotRange.tr.x) {\n      x -= width + 2 * GAP;\n    }\n\n    if (x < plotRange.tl.x) {\n      x = plotRange.tl.x;\n    }\n\n    if (!onlyHorizontal) {\n      if (y + height > plotRange.bl.y) {\n        y -= height + 2 * GAP;\n      }\n\n      if (y < plotRange.tl.y) {\n        y = plotRange.tl.y;\n      }\n    }\n\n    return [x, y];\n  }\n};\nmodule.exports = PositionMixin;\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(3);\n\nvar MarkerGroupMixin = {\n  setMarkers: function setMarkers(markerItems, markerCfg) {\n    var self = this;\n    var markerGroup = self.get('markerGroup');\n    var frontPlot = self.get('frontPlot');\n\n    if (!markerGroup) {\n      markerGroup = frontPlot.addGroup({\n        zIndex: 1,\n        capture: false // 不进行拾取\n\n      });\n      self.set('markerGroup', markerGroup);\n    } else {\n      markerGroup.clear();\n    }\n\n    Util.each(markerItems, function (item) {\n      markerGroup.addShape('marker', {\n        color: item.color,\n        attrs: Util.mix({\n          fill: item.color,\n          symbol: 'circle',\n          shadowColor: item.color\n        }, markerCfg, {\n          x: item.x,\n          y: item.y\n        })\n      });\n    });\n    this.set('markerItems', markerItems);\n  },\n  clearMarkers: function clearMarkers() {\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.clear();\n  }\n};\nmodule.exports = MarkerGroupMixin;\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar G = __webpack_require__(25);\n\nvar Crosshair = __webpack_require__(160);\n\nvar MarkerGroupMixin = __webpack_require__(162);\n\nvar PositionMixin = __webpack_require__(161);\n\nvar Tooltip = __webpack_require__(68);\n\nvar Util = __webpack_require__(3);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar DomUtil = Util.DomUtil;\nvar MatrixUtil = Util.MatrixUtil;\n\nvar CanvasTooltip =\n/*#__PURE__*/\nfunction (_Tooltip) {\n  _inheritsLoose(CanvasTooltip, _Tooltip);\n\n  var _proto = CanvasTooltip.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Tooltip.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 默认背景板样式\n       * @type {Object}\n       */\n      boardStyle: {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        fill: 'rgba(255, 255, 255, 0.9)',\n        radius: 4,\n        stroke: '#e2e2e2',\n        lineWidth: 1\n      },\n\n      /**\n       * 默认title样式\n       * @type {Object}\n       */\n      titleStyle: {\n        fontFamily: FONT_FAMILY,\n        text: '',\n        textBaseline: 'top',\n        fontSize: 12,\n        fill: 'rgb(87, 87, 87)',\n        lineHeight: 20,\n        padding: 20\n      },\n\n      /**\n       * 默认marker样式\n       * @type {Object}\n       */\n      markerStyle: {\n        radius: 4\n      },\n\n      /**\n       * 默认name样式\n       * @type {Object}\n       */\n      nameStyle: {\n        fontFamily: FONT_FAMILY,\n        fontSize: 12,\n        fill: 'rgb(87, 87, 87)',\n        textBaseline: 'middle',\n        textAlign: 'start',\n        padding: 8\n      },\n\n      /**\n       * 默认value样式\n       * @type {Object}\n       */\n      valueStyle: {\n        fontFamily: FONT_FAMILY,\n        fontSize: 12,\n        fill: 'rgb(87, 87, 87)',\n        textBaseline: 'middle',\n        textAlign: 'start',\n        padding: 30\n      },\n\n      /**\n       * 默认padding值\n       * @type {Object}\n       */\n      padding: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n\n      /**\n       * 默认item之间的gap\n       * @type {Number}\n       */\n      itemGap: 10,\n\n      /**\n       * 默认tooltip位置移动动画的时长\n       * @type {Number}\n       */\n      animationDuration: 200\n    });\n  };\n\n  function CanvasTooltip(cfg) {\n    var _this;\n\n    _this = _Tooltip.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), PositionMixin);\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), MarkerGroupMixin); // crosshair\n\n    var crosshair = _this.get('crosshairs');\n\n    if (crosshair) {\n      var plot = crosshair.type === 'rect' ? _this.get('backPlot') : _this.get('frontPlot');\n      var crosshairGroup = new Crosshair(Util.mix({\n        plot: plot,\n        plotRange: _this.get('plotRange'),\n        canvas: _this.get('canvas')\n      }, _this.get('crosshairs')));\n      crosshairGroup.hide();\n\n      _this.set('crosshairGroup', crosshairGroup);\n    }\n\n    _this._init_();\n\n    if (_this.get('items')) {\n      _this.render();\n    }\n\n    return _this;\n  }\n\n  _proto._init_ = function _init_() {\n    var self = this;\n    var padding = self.get('padding');\n    var parent = self.get('frontPlot'); // marker group\n\n    var markerGroup = parent.addGroup({\n      capture: false\n    });\n    self.set('markerGroup', markerGroup); // container\n\n    var container = parent.addGroup();\n    container.hide();\n    self.set('container', container); // board\n\n    var board = container.addShape('rect', {\n      attrs: Util.mix({}, self.get('boardStyle'))\n    });\n    self.set('board', board); // title\n\n    var titleStyle = self.get('titleStyle');\n\n    if (self.get('showTitle')) {\n      var titleShape = container.addShape('text', {\n        attrs: Util.mix({\n          x: padding.left,\n          y: padding.top\n        }, titleStyle)\n      });\n      self.set('titleShape', titleShape);\n      titleShape.name = 'tooltip-title';\n    } // items\n\n\n    var itemsGroup = container.addGroup();\n    itemsGroup.move(padding.left, padding.top + titleStyle.lineHeight + titleStyle.padding);\n    self.set('itemsGroup', itemsGroup);\n  };\n\n  _proto.render = function render() {\n    var self = this;\n    self.clear();\n    var container = self.get('container');\n    var board = self.get('board');\n    var showTitle = self.get('showTitle');\n    var titleContent = self.get('titleContent');\n    var titleShape = this.get('titleShape');\n    var itemsGroup = this.get('itemsGroup');\n    var items = self.get('items');\n    var padding = self.get('padding');\n\n    if (titleShape && showTitle) {\n      titleShape.attr('text', titleContent);\n    }\n\n    if (itemsGroup) {\n      var itemGap = self.get('itemGap');\n      var x = 0;\n      var y = 0;\n      Util.each(items, function (item) {\n        var itemGroup = self._addItem(item);\n\n        itemGroup.move(x, y);\n        itemsGroup.add(itemGroup);\n        var itemHeight = itemGroup.getBBox().height;\n        y += itemHeight + itemGap;\n      });\n    } // update board based on bbox\n\n\n    var bbox = container.getBBox();\n    var width = bbox.width + padding.right;\n    var height = bbox.height + padding.bottom;\n    board.attr('width', width);\n    board.attr('height', height); // align value text to right\n\n    self._alignToRight(width);\n  };\n\n  _proto.clear = function clear() {\n    var titleShape = this.get('titleShape');\n    var itemsGroup = this.get('itemsGroup');\n    var board = this.get('board');\n    titleShape.text = '';\n    itemsGroup.clear();\n    board.attr('width', 0);\n    board.attr('height', 0);\n  };\n\n  _proto.show = function show() {\n    var container = this.get('container');\n    container.show();\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.show();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.show();\n\n    _Tooltip.prototype.show.call(this);\n\n    this.get('canvas').draw();\n  };\n\n  _proto.hide = function hide() {\n    var container = this.get('container');\n    container.hide();\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.hide();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.hide();\n\n    _Tooltip.prototype.hide.call(this);\n\n    this.get('canvas').draw();\n  };\n\n  _proto.destroy = function destroy() {\n    var container = this.get('container');\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.destroy();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.remove();\n\n    _Tooltip.prototype.destroy.call(this);\n\n    container.remove();\n  };\n\n  _proto.setPosition = function setPosition(x, y, target) {\n    var container = this.get('container');\n    var outterNode = this.get('canvas').get('el');\n    var viewWidth = DomUtil.getWidth(outterNode);\n    var viewHeight = DomUtil.getHeight(outterNode);\n    var bbox = container.getBBox();\n    var containerWidth = bbox.width;\n    var containerHeight = bbox.height;\n    var endx = x;\n    var endy = y;\n    var position;\n\n    if (this.get('position')) {\n      var _containerWidth = bbox.width;\n      var _containerHeight = bbox.height;\n      position = this._calcTooltipPosition(x, y, this.get('position'), _containerWidth, _containerHeight, target);\n      x = position[0];\n      y = position[1];\n    } else {\n      position = this._constraintPositionInBoundary(x, y, containerWidth, containerHeight, viewWidth, viewHeight);\n      x = position[0];\n      y = position[1];\n    }\n\n    if (this.get('inPlot')) {\n      // tooltip 必须限制在绘图区域内\n      var plotRange = this.get('plotRange');\n      position = this._constraintPositionInPlot(x, y, containerWidth, containerHeight, plotRange, this.get('enterable'));\n      x = position[0];\n      y = position[1];\n    }\n\n    var markerItems = this.get('markerItems');\n\n    if (!Util.isEmpty(markerItems)) {\n      endx = markerItems[0].x;\n      endy = markerItems[0].y;\n    }\n\n    var ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var mat = MatrixUtil.transform(ulMatrix, [['t', x, y]]);\n    container.stopAnimate();\n    container.animate({\n      matrix: mat\n    }, this.get('animationDuration'));\n    var crosshairGroup = this.get('crosshairGroup');\n\n    if (crosshairGroup) {\n      var items = this.get('items');\n      crosshairGroup.setPosition(endx, endy, items);\n    }\n\n    _Tooltip.prototype.setPosition.call(this, x, y);\n  };\n\n  _proto._addItem = function _addItem(item) {\n    var group = new G.Group();\n    var markerRadius = this.get('markerStyle').radius; // marker\n\n    if (item.marker) {\n      var markerAttrs = Util.mix({}, item.marker, {\n        x: item.marker.radius / 2,\n        y: 0\n      });\n      group.addShape('marker', {\n        attrs: markerAttrs\n      });\n      markerRadius = item.marker.radius;\n    } // name\n\n\n    var nameStyle = this.get('nameStyle');\n    group.addShape('text', {\n      attrs: Util.mix({\n        x: markerRadius + nameStyle.padding,\n        y: 0,\n        text: item.name\n      }, nameStyle)\n    }); // value\n\n    var valueStyle = this.get('valueStyle');\n    group.addShape('text', {\n      attrs: Util.mix({\n        x: group.getBBox().width + valueStyle.padding,\n        y: 0,\n        text: item.value\n      }, valueStyle)\n    });\n    return group;\n  };\n\n  _proto._alignToRight = function _alignToRight(width) {\n    var _this2 = this;\n\n    var itemsGroup = this.get('itemsGroup');\n    var groups = itemsGroup.get('children');\n    Util.each(groups, function (g) {\n      var children = g.get('children');\n      var valueText = children[2];\n      var w = valueText.getBBox().width;\n      var x = width - w - _this2.get('padding').right * 2;\n      valueText.attr('x', x);\n    });\n  };\n\n  return CanvasTooltip;\n}(Tooltip);\n\nmodule.exports = CanvasTooltip;\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Labels = __webpack_require__(65);\n\nvar PathUtil = __webpack_require__(22);\n\nvar Util = __webpack_require__(0);\n\nvar PolarLabels =\n/*#__PURE__*/\nfunction (_Labels) {\n  _inheritsLoose(PolarLabels, _Labels);\n\n  function PolarLabels() {\n    return _Labels.apply(this, arguments) || this;\n  }\n\n  var _proto = PolarLabels.prototype;\n\n  _proto.getPointRauis = function getPointRauis(coord, point) {\n    return PathUtil.getPointRadius(coord, point);\n  };\n\n  _proto.getCirclePoint = function getCirclePoint(angle, offset, point) {\n    var self = this;\n    var coord = self.get('coord');\n    var center = coord.getCenter();\n\n    var labelEmit = self._isEmitLabels();\n\n    var r = self.getPointRauis(coord, point);\n\n    if (r === 0) {\n      return null;\n    }\n\n    if (coord.isTransposed && r > offset && !labelEmit) {\n      var appendAngle = Math.asin(offset / (2 * r));\n      angle = angle + appendAngle * 2;\n    } else {\n      r = r + offset;\n    }\n\n    return {\n      x: center.x + r * Math.cos(angle),\n      y: center.y + r * Math.sin(angle),\n      angle: angle,\n      r: r\n    };\n  };\n\n  _proto.getArcPoint = function getArcPoint(point, index) {\n    var self = this;\n    var outerPoint; // 圆弧上的中点\n    // var coord = self.get('coord');\n\n    index = index || 0;\n\n    if (Util.isArray(point.x) || Util.isArray(point.y)) {\n      outerPoint = {\n        x: Util.isArray(point.x) ? point.x[index] : point.x,\n        y: Util.isArray(point.y) ? point.y[index] : point.y\n      };\n    } else {\n      outerPoint = point;\n    }\n\n    self.transLabelPoint(outerPoint);\n    return outerPoint;\n  }; // 获取点所在的角度\n\n\n  _proto.getPointAngle = function getPointAngle(point) {\n    var self = this;\n    var coord = self.get('coord');\n    return PathUtil.getPointAngle(coord, point);\n  }; // 获取中心的位置\n\n\n  _proto.getMiddlePoint = function getMiddlePoint(points) {\n    var self = this;\n    var coord = self.get('coord');\n    var count = points.length;\n    var middlePoint = {\n      x: 0,\n      y: 0\n    };\n    Util.each(points, function (point) {\n      middlePoint.x += point.x;\n      middlePoint.y += point.y;\n    });\n    middlePoint.x /= count;\n    middlePoint.y /= count;\n    middlePoint = coord.convert(middlePoint);\n    return middlePoint;\n  }; // 是否居中\n\n\n  _proto._isToMiddle = function _isToMiddle(point) {\n    return point.x.length > 2;\n  };\n  /**\n   * @protected\n   * 获取文本的位置信息\n   * @param {Array} label labels\n   * @param {Object} point point\n   * @param {Number} index index\n   * @return {Object} point\n   */\n\n\n  _proto.getLabelPoint = function getLabelPoint(label, point, index) {\n    var self = this;\n    var text = label.text[index];\n    var factor = 1;\n    var arcPoint;\n\n    if (self._isToMiddle(point)) {\n      arcPoint = self.getMiddlePoint(point.points);\n    } else {\n      if (label.text.length === 1 && index === 0) {\n        index = 1;\n      } else if (index === 0) {\n        factor = -1;\n      }\n\n      arcPoint = self.getArcPoint(point, index);\n    }\n\n    var offset = self.getDefaultOffset(label);\n    offset = offset * factor;\n    var middleAngle = self.getPointAngle(arcPoint);\n    var labelPoint = self.getCirclePoint(middleAngle, offset, arcPoint);\n\n    if (!labelPoint) {\n      labelPoint = {\n        text: ''\n      };\n    } else {\n      labelPoint.text = text;\n      labelPoint.angle = middleAngle;\n      labelPoint.color = point.color;\n    }\n\n    if (label.autoRotate || typeof label.autoRotate === 'undefined') {\n      var rotate = labelPoint.textStyle ? labelPoint.textStyle.rotate : null;\n\n      if (!rotate) {\n        rotate = labelPoint.rotate || self.getLabelRotate(middleAngle, offset, point);\n      }\n\n      labelPoint.rotate = rotate;\n    }\n\n    labelPoint.start = {\n      x: arcPoint.x,\n      y: arcPoint.y\n    };\n    return labelPoint;\n  };\n\n  _proto._isEmitLabels = function _isEmitLabels() {\n    var labels = this.get('label');\n    return labels.labelEmit;\n  };\n  /**\n   * @protected\n   * 获取文本旋转的方向\n   * @param {Number} angle angle\n   * @return {Number} angle\n   */\n\n\n  _proto.getLabelRotate = function getLabelRotate(angle) {\n    var self = this;\n    var rotate;\n    rotate = angle * 180 / Math.PI;\n    rotate += 90;\n\n    if (self._isEmitLabels()) {\n      rotate -= 90;\n    }\n\n    if (rotate) {\n      if (rotate > 90) {\n        rotate = rotate - 180;\n      } else if (rotate < -90) {\n        rotate = rotate + 180;\n      }\n    }\n\n    return rotate / 180 * Math.PI;\n  }; // override\n\n\n  _proto.getLabelAlign = function getLabelAlign(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var align;\n\n    if (self._isEmitLabels()) {\n      if (point.angle <= Math.PI / 2 && point.angle > -Math.PI / 2) {\n        align = 'left';\n      } else {\n        align = 'right';\n      }\n    } else if (!coord.isTransposed) {\n      align = 'center';\n    } else {\n      var center = coord.getCenter();\n      var offset = self.getDefaultOffset(point);\n\n      if (Math.abs(point.x - center.x) < 1) {\n        align = 'center';\n      } else if (point.angle > Math.PI || point.angle <= 0) {\n        if (offset > 0) {\n          align = 'left';\n        } else {\n          align = 'right';\n        }\n      } else {\n        if (offset > 0) {\n          align = 'right';\n        } else {\n          align = 'left';\n        }\n      }\n    }\n\n    return align;\n  };\n\n  return PolarLabels;\n}(Labels);\n\nmodule.exports = PolarLabels;\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Scale: __webpack_require__(341),\n  Coord: __webpack_require__(342),\n  Axis: __webpack_require__(347),\n  Guide: __webpack_require__(348),\n  Legend: __webpack_require__(351),\n  Tooltip: __webpack_require__(353),\n  Event: __webpack_require__(354)\n};\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar G = __webpack_require__(16);\n\nvar Util = __webpack_require__(0);\n\nvar mergeBBox = __webpack_require__(167);\n\nfunction applyMatrix(point, matrix, tag) {\n  if (tag === void 0) {\n    tag = 1;\n  }\n\n  var vector = [point.x, point.y, tag];\n  Util.vec3.transformMat3(vector, vector, matrix);\n  return {\n    x: vector[0],\n    y: vector[1]\n  };\n}\n\nfunction getTitleBBox(title) {\n  var bbox = title.getBBox();\n  var leftTop = {\n    x: bbox.minX,\n    y: bbox.minY\n  };\n  var rightBottom = {\n    x: bbox.maxX,\n    y: bbox.maxY\n  };\n  var matrix = title.attr('matrix');\n  leftTop = applyMatrix(leftTop, matrix);\n  rightBottom = applyMatrix(rightBottom, matrix);\n  return {\n    minX: leftTop.x,\n    minY: leftTop.y,\n    maxX: rightBottom.x,\n    maxY: rightBottom.y\n  };\n}\n\nmodule.exports = function BBoxOfBackPlot(backPlot, defaultBBox) {\n  var bbox = defaultBBox;\n  Util.each(backPlot.get('children'), function (element) {\n    if (element instanceof G.Group || element instanceof G.Path) {\n      bbox = mergeBBox(bbox, element.getBBox());\n    } else if (element instanceof G.Text) {\n      // title\n      var elementBBox = getTitleBBox(element);\n      var dx = Math.abs(elementBBox.maxX - elementBBox.minX);\n      var dy = Math.abs(elementBBox.maxY - elementBBox.minY);\n\n      if (dx < dy) {\n        bbox = mergeBBox(bbox, Util.mix(bbox, {\n          minX: bbox.minX - dx,\n          maxX: bbox.maxX + dx\n        }));\n      } else {\n        bbox = mergeBBox(bbox, Util.mix(bbox, {\n          minY: bbox.minY - dy,\n          maxY: bbox.maxY + dy\n        }));\n      }\n    }\n  });\n  return bbox;\n};\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports) {\n\nmodule.exports = function mergeBBox(box1, box2) {\n  return {\n    minX: Math.min(box1.minX, box2.minX),\n    minY: Math.min(box1.minY, box2.minY),\n    maxX: Math.max(box1.maxX, box2.maxX),\n    maxY: Math.max(box1.maxY, box2.maxY)\n  };\n};\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\nmodule.exports = function plotRange2BBox(plotRange) {\n  return {\n    minX: plotRange.tl.x,\n    minY: plotRange.tl.y,\n    maxX: plotRange.br.x,\n    maxY: plotRange.br.y\n  };\n};\n\n/***/ }),\n/* 169 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Transition;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = transition;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = newId;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__attr__ = __webpack_require__(441);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__attrTween__ = __webpack_require__(442);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__delay__ = __webpack_require__(443);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__duration__ = __webpack_require__(444);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ease__ = __webpack_require__(445);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__filter__ = __webpack_require__(446);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__merge__ = __webpack_require__(447);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__on__ = __webpack_require__(448);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__remove__ = __webpack_require__(449);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__select__ = __webpack_require__(450);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__selectAll__ = __webpack_require__(451);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__selection__ = __webpack_require__(452);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__style__ = __webpack_require__(453);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__styleTween__ = __webpack_require__(454);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__text__ = __webpack_require__(455);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__transition__ = __webpack_require__(456);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__tween__ = __webpack_require__(362);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar id = 0;\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nfunction transition(name) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selection\"])().transition(name);\n}\nfunction newId() {\n  return ++id;\n}\nvar selection_prototype = __WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selection\"].prototype;\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: __WEBPACK_IMPORTED_MODULE_10__select__[\"a\" /* default */],\n  selectAll: __WEBPACK_IMPORTED_MODULE_11__selectAll__[\"a\" /* default */],\n  filter: __WEBPACK_IMPORTED_MODULE_6__filter__[\"a\" /* default */],\n  merge: __WEBPACK_IMPORTED_MODULE_7__merge__[\"a\" /* default */],\n  selection: __WEBPACK_IMPORTED_MODULE_12__selection__[\"a\" /* default */],\n  transition: __WEBPACK_IMPORTED_MODULE_16__transition__[\"a\" /* default */],\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: __WEBPACK_IMPORTED_MODULE_8__on__[\"a\" /* default */],\n  attr: __WEBPACK_IMPORTED_MODULE_1__attr__[\"a\" /* default */],\n  attrTween: __WEBPACK_IMPORTED_MODULE_2__attrTween__[\"a\" /* default */],\n  style: __WEBPACK_IMPORTED_MODULE_13__style__[\"a\" /* default */],\n  styleTween: __WEBPACK_IMPORTED_MODULE_14__styleTween__[\"a\" /* default */],\n  text: __WEBPACK_IMPORTED_MODULE_15__text__[\"a\" /* default */],\n  remove: __WEBPACK_IMPORTED_MODULE_9__remove__[\"a\" /* default */],\n  tween: __WEBPACK_IMPORTED_MODULE_17__tween__[\"a\" /* default */],\n  delay: __WEBPACK_IMPORTED_MODULE_3__delay__[\"a\" /* default */],\n  duration: __WEBPACK_IMPORTED_MODULE_4__duration__[\"a\" /* default */],\n  ease: __WEBPACK_IMPORTED_MODULE_5__ease__[\"a\" /* default */]\n};\n\n/***/ }),\n/* 170 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_timer__ = __webpack_require__(58);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"now\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timer\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timerFlush\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_timeout__ = __webpack_require__(191);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timeout\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_timeout__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_interval__ = __webpack_require__(192);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interval\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_interval__[\"a\"]; });\n\n\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nvar DomUtil = Util.DomUtil;\nvar EVENT_TYPES = ['start', 'process', 'end', 'reset'];\n\nvar Interaction =\n/*#__PURE__*/\nfunction () {\n  var _proto = Interaction.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      startEvent: 'mousedown',\n      processEvent: 'mousemove',\n      endEvent: 'mouseup',\n      resetEvent: 'dblclick'\n    };\n  };\n\n  _proto._start = function _start(ev) {\n    var me = this;\n    me.preStart && me.preStart(ev);\n    me.start(ev);\n    me.onStart && me.onStart(ev);\n  };\n\n  _proto._process = function _process(ev) {\n    var me = this;\n    me.preProcess && me.preProcess(ev);\n    me.process(ev);\n    me.onProcess && me.onProcess(ev);\n  };\n\n  _proto._end = function _end(ev) {\n    var me = this;\n    me.preEnd && me.preEnd(ev);\n    me.end(ev);\n    me.onEnd && me.onEnd(ev);\n  };\n\n  _proto._reset = function _reset(ev) {\n    var me = this;\n    me.preReset && me.preReset(ev);\n    me.reset(ev);\n    me.onReset && me.onReset(ev);\n  };\n\n  _proto.start = function start() {// TODO override\n  };\n\n  _proto.process = function process() {// TODO override\n  };\n\n  _proto.end = function end() {// TODO override\n  };\n\n  _proto.reset = function reset() {// TODO override\n  };\n\n  function Interaction(cfg, view) {\n    var me = this;\n    var defaultCfg = me.getDefaultCfg();\n    Util.assign(me, defaultCfg, cfg);\n    me.view = me.chart = view;\n    me.canvas = view.get('canvas');\n\n    me._bindEvents();\n  }\n\n  _proto._bindEvents = function _bindEvents() {\n    var me = this;\n    var canvas = me.canvas;\n    var canvasDOM = canvas.get('canvasDOM');\n\n    me._clearEvents();\n\n    Util.each(EVENT_TYPES, function (type) {\n      var ucType = Util.upperFirst(type);\n      me[\"_on\" + ucType + \"Listener\"] = DomUtil.addEventListener(canvasDOM, me[type + \"Event\"], Util.wrapBehavior(me, \"_\" + type));\n    });\n  };\n\n  _proto._clearEvents = function _clearEvents() {\n    var me = this;\n    Util.each(EVENT_TYPES, function (type) {\n      var listenerName = \"_on\" + Util.upperFirst(type) + \"Listener\";\n      me[listenerName] && me[listenerName].remove();\n    });\n  };\n\n  _proto.destroy = function destroy() {\n    this._clearEvents();\n  };\n\n  return Interaction;\n}();\n\nmodule.exports = Interaction;\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Scale = __webpack_require__(74);\n\nvar G = __webpack_require__(16);\n\nvar Animate = __webpack_require__(126);\n\nvar Chart = __webpack_require__(147);\n\nvar Global = __webpack_require__(7);\n\nvar Shape = __webpack_require__(18);\n\nvar Util = __webpack_require__(0);\n\nvar G2 = {\n  // version\n  version: Global.version,\n  // visual encoding\n  Animate: Animate,\n  Chart: Chart,\n  Global: Global,\n  Scale: Scale,\n  Shape: Shape,\n  Util: Util,\n  // render engine\n  G: G,\n  DomUtil: Util.DomUtil,\n  MatrixUtil: Util.MatrixUtil,\n  PathUtil: Util.PathUtil\n}; // G2.track = function(enable) {\n//   Global.trackable = enable;\n// };\n// require('./track');\n\nG2.track = function () {\n  console.warn('G2 tracks nothing ;-)');\n}; // 保证两个版本共存\n\n\nif (typeof window !== 'undefined') {\n  if (window.G2) {\n    console.warn(\"There are multiple versions of G2. Version \" + G2.version + \"'s reference is 'window.G2_3'\");\n  } else {\n    window.G2 = G2;\n  }\n}\n\nmodule.exports = G2;\n\n/***/ }),\n/* 173 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_linear__ = __webpack_require__(193);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeLinear\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_linear__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_quad__ = __webpack_require__(194);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeQuad\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_quad__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeQuadIn\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_quad__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeQuadOut\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_quad__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeQuadInOut\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_quad__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_cubic__ = __webpack_require__(195);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCubic\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubic__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCubicIn\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubic__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCubicOut\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubic__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCubicInOut\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubic__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_poly__ = __webpack_require__(196);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easePoly\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_poly__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easePolyIn\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_poly__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easePolyOut\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_poly__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easePolyInOut\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_poly__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_sin__ = __webpack_require__(197);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeSin\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_sin__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeSinIn\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_sin__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeSinOut\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_sin__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeSinInOut\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_sin__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_exp__ = __webpack_require__(198);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeExp\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_exp__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeExpIn\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_exp__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeExpOut\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_exp__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeExpInOut\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_exp__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_circle__ = __webpack_require__(199);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCircle\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_circle__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCircleIn\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_circle__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCircleOut\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_circle__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeCircleInOut\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_circle__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_bounce__ = __webpack_require__(200);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBounce\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_bounce__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBounceIn\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_bounce__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBounceOut\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_bounce__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBounceInOut\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_bounce__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_back__ = __webpack_require__(201);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBack\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_back__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBackIn\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_back__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBackOut\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_back__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeBackInOut\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_back__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_elastic__ = __webpack_require__(202);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeElastic\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_elastic__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeElasticIn\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_elastic__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeElasticOut\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_elastic__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"easeElasticInOut\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_elastic__[\"b\"]; });\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 自动计算数字坐标轴\n * @author dxq613@gmail.com\n */\nvar isNil = __webpack_require__(5);\n\nvar isNumber = __webpack_require__(9);\n\nvar AutoUtil = __webpack_require__(76);\n\nvar MIN_COUNT = 5;\nvar MAX_COUNT = 7;\nvar SNAP_COUNT_ARRAY = [0, 1, 1.2, 1.5, 1.6, 2, 2.2, 2.4, 2.5, 3, 4, 5, 6, 7.5, 8, 10];\nvar SNAP_ARRAY = [0, 1, 2, 4, 5, 10];\n\nmodule.exports = function (info) {\n  var min = info.min;\n  var max = info.max;\n  var interval = info.interval;\n  var minTickInterval = info.minTickInterval;\n  var ticks = [];\n  var minCount = info.minCount || MIN_COUNT;\n  var maxCount = info.maxCount || MAX_COUNT;\n  var isFixedCount = minCount === maxCount; // 是否限定死了个数\n\n  var minLimit = isNil(info.minLimit) ? -Infinity : info.minLimit; // 限定的最小值\n\n  var maxLimit = isNil(info.maxLimit) ? Infinity : info.maxLimit; // 限定最大值\n\n  var avgCount = (minCount + maxCount) / 2;\n  var count = avgCount; // 用户传入的逼近数组\n\n  var snapArray = info.snapArray ? info.snapArray : isFixedCount ? SNAP_COUNT_ARRAY : SNAP_ARRAY; // 如果限定大小范围，同时大小范围等于用户传入的范围，同时限定了个数，interval 按照个数均分\n\n  if (min === minLimit && max === maxLimit && isFixedCount) {\n    interval = (max - min) / (count - 1);\n  }\n\n  if (isNil(min)) {\n    min = 0;\n  }\n\n  if (isNil(max)) {\n    max = 0;\n  }\n\n  if (max === min) {\n    if (min === 0) {\n      max = 1;\n    } else {\n      if (min > 0) {\n        min = 0;\n      } else {\n        max = 0;\n      }\n    }\n\n    if (max - min < 5 && !interval && max - min >= 1) {\n      interval = 1;\n    }\n  }\n\n  if (isNil(interval)) {\n    // 计算间距\n    var temp = (max - min) / (avgCount - 1);\n    interval = AutoUtil.snapFactorTo(temp, snapArray, 'ceil');\n\n    if (maxCount !== minCount) {\n      count = parseInt((max - min) / interval, 10);\n\n      if (count > maxCount) {\n        count = maxCount;\n      }\n\n      if (count < minCount) {\n        count = minCount;\n      } // 不确定tick的个数时，使得tick偏小\n\n\n      interval = AutoUtil.snapFactorTo((max - min) / (count - 1), snapArray, 'floor');\n    }\n  } // interval should not be less than minTickInterval\n\n\n  if (isNumber(minTickInterval) && interval < minTickInterval) {\n    interval = minTickInterval;\n  }\n\n  if (info.interval || maxCount !== minCount) {\n    // 校正 max 和 min\n    max = Math.min(AutoUtil.snapMultiple(max, interval, 'ceil'), maxLimit); // 向上逼近\n\n    min = Math.max(AutoUtil.snapMultiple(min, interval, 'floor'), minLimit); // 向下逼近\n\n    count = Math.round((max - min) / interval);\n    min = AutoUtil.fixedBase(min, interval);\n    max = AutoUtil.fixedBase(max, interval);\n  } else {\n    avgCount = parseInt(avgCount, 10); // 取整\n\n    var avg = (max + min) / 2;\n    var avgTick = AutoUtil.snapMultiple(avg, interval, 'ceil');\n    var sideCount = Math.floor((avgCount - 2) / 2);\n    var maxTick = avgTick + sideCount * interval;\n    var minTick;\n\n    if (avgCount % 2 === 0) {\n      minTick = avgTick - sideCount * interval;\n    } else {\n      minTick = avgTick - (sideCount + 1) * interval;\n    }\n\n    if (maxTick < max) {\n      maxTick = maxTick + interval;\n    }\n\n    if (minTick > min) {\n      minTick = minTick - interval;\n    }\n\n    max = AutoUtil.fixedBase(maxTick, interval);\n    min = AutoUtil.fixedBase(minTick, interval);\n  }\n\n  max = Math.min(max, maxLimit);\n  min = Math.max(min, minLimit);\n  ticks.push(min);\n\n  for (var i = 1; i < count; i++) {\n    var tickValue = AutoUtil.fixedBase(interval * i + min, interval);\n\n    if (tickValue < max) {\n      ticks.push(tickValue);\n    }\n  }\n\n  if (ticks[ticks.length - 1] < max) {\n    ticks.push(max);\n  }\n\n  return {\n    min: min,\n    max: max,\n    interval: interval,\n    count: count,\n    ticks: ticks\n  };\n};\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(17);\n\nvar isNumber = __webpack_require__(9);\n\nvar Identity =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Identity, _Base);\n\n  function Identity() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Identity.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    this.isIdentity = true;\n    this.type = 'identity';\n    /**\n     * 常量值\n     * @type {*}\n     */\n\n    this.value = null;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.getText = function getText() {\n    return this.value.toString();\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    if (this.value !== value && isNumber(value)) {\n      return value;\n    }\n\n    return this.range[0];\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.invert = function invert() {\n    return this.value;\n  };\n\n  return Identity;\n}(Base);\n\nBase.Identity = Identity;\nmodule.exports = Identity;\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The measurement of linear data scale function\n * @author dxq613@gmail.com\n */\n\n\nvar fecha = __webpack_require__(79);\n\nvar each = __webpack_require__(2);\n\nvar isNil = __webpack_require__(5);\n\nvar isString = __webpack_require__(10);\n\nvar Base = __webpack_require__(17);\n\nvar Linear = __webpack_require__(33);\n\nvar timeAuto = __webpack_require__(177);\n\nvar TimeUtil = __webpack_require__(71);\n/**\n * 时间度量的构造函数\n * @class Scale.Time\n */\n\n\nvar Time =\n/*#__PURE__*/\nfunction (_Linear) {\n  _inheritsLoose(Time, _Linear);\n\n  function Time() {\n    return _Linear.apply(this, arguments) || this;\n  }\n\n  var _proto = Time.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Linear.prototype._initDefaultCfg.call(this);\n\n    this.type = 'time';\n    this.mask = 'YYYY-MM-DD';\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.init = function init() {\n    var self = this;\n    var values = self.values;\n\n    if (values && values.length) {\n      // 重新计算最大最小值\n      var timeStamps = [];\n      var min = Infinity; // 最小值\n\n      var secondMin = min; // 次小值\n\n      var max = 0; // 使用一个循环，计算min,max,secondMin\n\n      each(values, function (v) {\n        var timeStamp = self._toTimeStamp(v);\n\n        if (isNaN(timeStamp)) {\n          throw new TypeError(\"Invalid Time: \" + v);\n        }\n\n        if (min > timeStamp) {\n          secondMin = min;\n          min = timeStamp;\n        } else if (secondMin > timeStamp) {\n          secondMin = timeStamp;\n        }\n\n        if (max < timeStamp) {\n          max = timeStamp;\n        }\n\n        timeStamps.push(timeStamp);\n      }); // 存在多个值时，设置最小间距\n\n      if (values.length > 1) {\n        self.minTickInterval = secondMin - min;\n      }\n\n      if (isNil(self.min) || self._toTimeStamp(self.min) > min) {\n        self.min = min;\n      }\n\n      if (isNil(self.max) || self._toTimeStamp(self.max) < max) {\n        self.max = max;\n      }\n    }\n\n    _Linear.prototype.init.call(this);\n  };\n\n  _proto.calculateTicks = function calculateTicks() {\n    var self = this;\n    var min = self.min;\n    var max = self.max;\n    var count = self.tickCount;\n    var interval = self.tickInterval;\n    var tmp = timeAuto({\n      min: min,\n      max: max,\n      minCount: count,\n      maxCount: count,\n      interval: interval,\n      minInterval: self.minTickInterval\n    });\n    return tmp.ticks;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.getText = function getText(value) {\n    var formatter = this.formatter;\n    value = this.translate(value);\n    value = formatter ? formatter(value) : fecha.format(value, this.mask);\n    return value;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    if (isString(value)) {\n      value = this.translate(value);\n    }\n\n    return _Linear.prototype.scale.call(this, value);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.translate = function translate(value) {\n    return this._toTimeStamp(value);\n  }; // 将时间转换为时间戳\n\n\n  _proto._toTimeStamp = function _toTimeStamp(value) {\n    return TimeUtil.toTimeStamp(value);\n  };\n\n  return Time;\n}(Linear);\n\nBase.Time = Time;\nmodule.exports = Time;\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 计算时间坐标轴\n * @author dxq613@gmail.com\n */\nvar AutoUtil = __webpack_require__(76);\n\nvar isNil = __webpack_require__(5);\n\nvar MAX_COUNT = 6;\nvar SNAP_ARRAY = [1, 2, 4, 6, 8, 12];\nvar MINUTE_MS = 60 * 1000;\nvar HOUR_MS = 3600 * 1000;\nvar DAY_MS = 24 * 3600 * 1000;\n\nfunction getYear(date) {\n  return new Date(date).getFullYear();\n}\n\nfunction createYear(year) {\n  return new Date(year, 0, 1).getTime();\n}\n\nfunction getMonth(date) {\n  return new Date(date).getMonth();\n}\n\nfunction diffMonth(min, max) {\n  var minYear = getYear(min);\n  var maxYear = getYear(max);\n  var minMonth = getMonth(min);\n  var maxMonth = getMonth(max);\n  return (maxYear - minYear) * 12 + (maxMonth - minMonth) % 12;\n}\n\nfunction creatMonth(year, month) {\n  return new Date(year, month, 1).getTime();\n}\n\nfunction diffDay(min, max) {\n  return Math.ceil((max - min) / DAY_MS);\n}\n\nfunction diffHour(min, max) {\n  return Math.ceil((max - min) / HOUR_MS);\n}\n\nfunction diffMinus(min, max) {\n  return Math.ceil((max - min) / (60 * 1000));\n}\n\nmodule.exports = function (info) {\n  var minInterval = info.minInterval;\n  var ticks = [];\n  var min = info.min;\n  var max = info.max;\n  var interval = info.interval;\n  var count; // 如果最大值和最小值相等，则设置最大值大于最小值一天\n\n  if (max === min) {\n    max = min + DAY_MS;\n  } // 计算间距\n\n\n  if (isNil(interval)) {\n    var innerTime = max - min;\n    var dms = DAY_MS; // 天代表的秒\n\n    var yms = 365 * dms; // 年代表的秒\n\n    interval = parseInt(innerTime / (info.maxCount || MAX_COUNT), 10);\n\n    if (minInterval && minInterval > interval) {\n      interval = minInterval;\n    }\n\n    var yfactor = interval / yms;\n    var minYear = getYear(min); // 大于半年\n\n    if (yfactor > 0.51) {\n      var year = Math.ceil(yfactor); // interval = year * yms;\n\n      var maxYear = getYear(max);\n\n      for (var i = minYear; i <= maxYear + year; i = i + year) {\n        ticks.push(createYear(i));\n      }\n\n      interval = null;\n    } else if (yfactor > 0.0834) {\n      // 大于一个月\n      var month = Math.ceil(yfactor / 0.0834);\n      var mmMoth = getMonth(min);\n      var dMonths = diffMonth(min, max);\n\n      for (var _i = 0; _i <= dMonths + month; _i = _i + month) {\n        ticks.push(creatMonth(minYear, _i + mmMoth));\n      }\n\n      interval = null;\n    } else if (interval > dms * 0.5) {\n      // 大于一天\n      var date = new Date(min);\n\n      var _year = date.getFullYear();\n\n      var _month = date.getMonth(min);\n\n      var mday = date.getDate();\n      var day = Math.ceil(interval / dms);\n      var ddays = diffDay(min, max);\n      interval = day * dms;\n\n      for (var _i2 = 0; _i2 < ddays + day; _i2 = _i2 + day) {\n        ticks.push(new Date(_year, _month, mday + _i2).getTime());\n      }\n    } else if (interval > HOUR_MS) {\n      // 大于一个小时\n      var _date = new Date(min);\n\n      var _year2 = _date.getFullYear();\n\n      var _month2 = _date.getMonth(min);\n\n      var _day = _date.getDate();\n\n      var hour = _date.getHours();\n\n      var hours = AutoUtil.snapTo(SNAP_ARRAY, Math.ceil(interval / HOUR_MS));\n      var dHours = diffHour(min, max);\n      interval = hours * HOUR_MS;\n\n      for (var _i3 = 0; _i3 <= dHours + hours; _i3 = _i3 + hours) {\n        ticks.push(new Date(_year2, _month2, _day, hour + _i3).getTime());\n      }\n    } else if (interval > MINUTE_MS) {\n      // 最小单位是分钟\n      var dMinus = diffMinus(min, max);\n      var minutes = Math.ceil(interval / MINUTE_MS);\n      interval = minutes * MINUTE_MS;\n\n      for (var _i4 = 0; _i4 <= dMinus + minutes; _i4 = _i4 + minutes) {\n        ticks.push(min + _i4 * MINUTE_MS);\n      }\n    } else {\n      if (interval < 1000) {\n        interval = 1000;\n      }\n\n      min = Math.floor(min / 1000) * 1000;\n      var dSeconds = Math.ceil((max - min) / 1000);\n      var seconds = Math.ceil(interval / 1000);\n      interval = seconds * 1000;\n\n      for (var _i5 = 0; _i5 < dSeconds + seconds; _i5 = _i5 + seconds) {\n        ticks.push(min + _i5 * 1000);\n      }\n    }\n  }\n\n  if (!ticks.length) {\n    min = Math.floor(min / 1000) * 1000;\n    max = Math.ceil(max / 1000) * 1000;\n    count = (max - min) / interval;\n\n    for (var _i6 = 0; _i6 <= count; _i6++) {\n      ticks.push(AutoUtil.fixedBase(interval * _i6 + min, interval));\n    }\n  }\n\n  return {\n    max: max,\n    min: min,\n    interval: interval,\n    ticks: ticks,\n    count: ticks.length\n  };\n};\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview 时间数据作为分类类型\n * @author dxq613@gmail.com\n */\n\n\nvar Base = __webpack_require__(17);\n\nvar Category = __webpack_require__(77);\n\nvar fecha = __webpack_require__(79);\n\nvar catAuto = __webpack_require__(78);\n\nvar TimeUtil = __webpack_require__(71);\n\nvar each = __webpack_require__(2);\n\nvar isNumber = __webpack_require__(9);\n\nvar isObject = __webpack_require__(24);\n\nvar isString = __webpack_require__(10);\n/**\n * 度量的构造函数\n * @class Scale.TimeCategory\n */\n\n\nvar TimeCategory =\n/*#__PURE__*/\nfunction (_Category) {\n  _inheritsLoose(TimeCategory, _Category);\n\n  function TimeCategory() {\n    return _Category.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeCategory.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Category.prototype._initDefaultCfg.call(this);\n\n    this.type = 'timeCat';\n    /**\n     * 是否需要排序，默认进行排序\n     * @type {Boolean}\n     */\n\n    this.sortable = true;\n    this.tickCount = 5;\n    /**\n     * 时间格式化\n     * @type {String}\n     */\n\n    this.mask = 'YYYY-MM-DD';\n  };\n\n  _proto.init = function init() {\n    var self = this;\n    var values = this.values; // 针对时间分类类型，会将时间统一转换为时间戳\n\n    each(values, function (v, i) {\n      values[i] = self._toTimeStamp(v);\n    });\n\n    if (this.sortable) {\n      // 允许排序\n      values.sort(function (v1, v2) {\n        return v1 - v2;\n      });\n    }\n\n    if (!self.ticks) {\n      self.ticks = this.calculateTicks();\n    }\n  };\n  /**\n   * 计算 ticks\n   * @return {array} 返回 ticks 数组\n   */\n\n\n  _proto.calculateTicks = function calculateTicks() {\n    var self = this;\n    var count = self.tickCount;\n    var ticks;\n\n    if (count) {\n      var temp = catAuto({\n        maxCount: count,\n        data: self.values,\n        isRounding: self.isRounding\n      });\n      ticks = temp.ticks;\n    } else {\n      ticks = self.values;\n    }\n\n    return ticks;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.translate = function translate(value) {\n    value = this._toTimeStamp(value);\n    var index = this.values.indexOf(value);\n\n    if (index === -1) {\n      if (isNumber(value) && value < this.values.length) {\n        index = value;\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    var index = this.translate(value);\n    var percent;\n\n    if (this.values.length === 1 || isNaN(index)) {\n      // is index is NAN should not be set as 0\n      percent = index;\n    } else if (index > -1) {\n      percent = index / (this.values.length - 1);\n    } else {\n      percent = 0;\n    }\n\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.getText = function getText(value) {\n    var result = '';\n    var index = this.translate(value);\n\n    if (index > -1) {\n      result = this.values[index];\n    } else {\n      result = value;\n    }\n\n    var formatter = this.formatter;\n    result = parseInt(result, 10);\n    result = formatter ? formatter(result) : fecha.format(result, this.mask);\n    return result;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.getTicks = function getTicks() {\n    var self = this;\n    var ticks = this.ticks;\n    var rst = [];\n    each(ticks, function (tick) {\n      var obj;\n\n      if (isObject(tick)) {\n        obj = tick;\n      } else {\n        obj = {\n          text: isString(tick) ? tick : self.getText(tick),\n          value: self.scale(tick),\n          tickValue: tick // 用于坐标轴上文本动画时确定前后帧的对应关系\n\n        };\n      }\n\n      rst.push(obj);\n    });\n    return rst;\n  }; // 将时间转换为时间戳\n\n\n  _proto._toTimeStamp = function _toTimeStamp(value) {\n    return TimeUtil.toTimeStamp(value);\n  };\n\n  return TimeCategory;\n}(Category);\n\nBase.TimeCat = TimeCategory;\nmodule.exports = TimeCategory;\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview 使用度量，进行log转换\n * @author dxq613@gmail.com\n */\n\n\nvar each = __webpack_require__(2);\n\nvar Base = __webpack_require__(17);\n\nvar Linear = __webpack_require__(33); // 计算log\n\n\nfunction log(a, b) {\n  if (a === 1) {\n    return 1;\n  }\n\n  return Math.log(b) / Math.log(a);\n}\n/**\n * 度量的log计算\n * @class Scale.Log\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction (_Linear) {\n  _inheritsLoose(Log, _Linear);\n\n  function Log() {\n    return _Linear.apply(this, arguments) || this;\n  }\n\n  var _proto = Log.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Linear.prototype._initDefaultCfg.call(this);\n\n    this.type = 'log';\n    /**\n     * @override\n     * log 的坐标点的个数控制在10个以下\n     * @type {Number}\n     */\n\n    this.tickCount = 10;\n    /**\n     * 进行log计算的基数\n     * @type {Number}\n     */\n\n    this.base = 2; // 最小的tick，仅内部使用\n\n    this._minTick = null;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.calculateTicks = function calculateTicks() {\n    var self = this;\n    var base = self.base;\n    var minTick;\n\n    if (self.min < 0) {\n      throw new Error('The minimum value must be greater than zero!');\n    }\n\n    var maxTick = log(base, self.max);\n\n    if (self.min > 0) {\n      minTick = Math.floor(log(base, self.min));\n    } else {\n      var values = self.values;\n      var positiveMin = self.max; // 查找大于0的第一个值, 如果都小于0，默认为1\n\n      each(values, function (value) {\n        if (value > 0 && value < positiveMin) {\n          positiveMin = value;\n        }\n      });\n\n      if (positiveMin === self.max) {\n        positiveMin = self.max / base;\n      }\n\n      if (positiveMin > 1) {\n        positiveMin = 1;\n      }\n\n      minTick = Math.floor(log(base, positiveMin));\n      self._minTick = minTick;\n      self.positiveMin = positiveMin;\n    }\n\n    var count = maxTick - minTick;\n    var tickCount = self.tickCount;\n    var avg = Math.ceil(count / tickCount);\n    var ticks = [];\n\n    for (var i = minTick; i < maxTick + avg; i = i + avg) {\n      ticks.push(Math.pow(base, i));\n    }\n\n    if (self.min === 0) {\n      ticks.unshift(0);\n    }\n\n    return ticks;\n  }; // 获取度量计算时，value占的定义域百分比\n\n\n  _proto._getScalePercent = function _getScalePercent(value) {\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    } // 如果值小于等于0，则按照0处理\n\n\n    if (value <= 0) {\n      return 0;\n    }\n\n    var base = this.base;\n    var positiveMin = this.positiveMin; // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n\n    if (positiveMin) {\n      min = positiveMin * 1 / base;\n    }\n\n    var percent; // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n\n    if (value < positiveMin) {\n      percent = value / positiveMin / (log(base, max) - log(base, min));\n    } else {\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n    }\n\n    return percent;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    var percent = this._getScalePercent(value);\n\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.invert = function invert(value) {\n    var base = this.base;\n    var max = log(base, this.max);\n    var rangeMin = this.rangeMin();\n    var range = this.rangeMax() - rangeMin;\n    var min;\n    var positiveMin = this.positiveMin;\n\n    if (positiveMin) {\n      if (value === 0) {\n        return 0;\n      }\n\n      min = log(base, positiveMin / base);\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\n\n      if (value < appendPercent) {\n        // 落到 0 - positiveMin 之间\n        return value / appendPercent * positiveMin;\n      }\n    } else {\n      min = log(base, this.min);\n    }\n\n    var percent = (value - rangeMin) / range;\n    var tmp = percent * (max - min) + min;\n    return Math.pow(base, tmp);\n  };\n\n  return Log;\n}(Linear);\n\nBase.Log = Log;\nmodule.exports = Log;\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview 使用pow进行度量计算\n * @author dxq613@gmail.com\n */\n\n\nvar Base = __webpack_require__(17);\n\nvar Linear = __webpack_require__(33); // 求以a为次幂，结果为b的基数，如 x^^a = b;求x\n\n\nfunction calBase(a, b) {\n  var e = Math.E;\n  var value = Math.pow(e, Math.log(b) / a); // 使用换底公式求底\n\n  return value;\n}\n/**\n * 度量的Pow计算\n * @class Scale.Log\n */\n\n\nvar Pow =\n/*#__PURE__*/\nfunction (_Linear) {\n  _inheritsLoose(Pow, _Linear);\n\n  function Pow() {\n    return _Linear.apply(this, arguments) || this;\n  }\n\n  var _proto = Pow.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Linear.prototype._initDefaultCfg.call(this);\n\n    this.type = 'pow';\n    /**\n     * @override\n     * pow 的坐标点的个数控制在10个以下\n     * @type {Number}\n     */\n\n    this.tickCount = 10;\n    /**\n     * 进行pow计算的基数\n     * @type {Number}\n     */\n\n    this.exponent = 2;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.calculateTicks = function calculateTicks() {\n    var self = this;\n    var exponent = self.exponent;\n    var min;\n    var max = Math.ceil(calBase(exponent, self.max));\n\n    if (self.min >= 0) {\n      min = Math.floor(calBase(exponent, self.min));\n    } else {\n      min = 0;\n    }\n\n    if (min > max) {\n      var tmp = max;\n      max = min;\n      min = tmp;\n    }\n\n    var count = max - min;\n    var tickCount = self.tickCount;\n    var avg = Math.ceil(count / tickCount);\n    var ticks = [];\n\n    for (var i = min; i < max + avg; i = i + avg) {\n      ticks.push(Math.pow(i, exponent));\n    }\n\n    return ticks;\n  }; // 获取度量计算时，value占的定义域百分比\n\n\n  _proto._getScalePercent = function _getScalePercent(value) {\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    }\n\n    var exponent = this.exponent;\n    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n    return percent;\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.scale = function scale(value) {\n    var percent = this._getScalePercent(value);\n\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  /**\n   * @override\n   */\n\n\n  _proto.invert = function invert(value) {\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n    var exponent = this.exponent;\n    var max = calBase(exponent, this.max);\n    var min = calBase(exponent, this.min);\n    var tmp = percent * (max - min) + min;\n    return Math.pow(tmp, exponent);\n  };\n\n  return Pow;\n}(Linear);\n\nBase.Pow = Pow;\nmodule.exports = Pow;\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Event = __webpack_require__(100);\n\nvar Group = __webpack_require__(101);\n\nvar Timeline = __webpack_require__(190);\n\nvar renderers = __webpack_require__(215);\n\nvar Canvas = function Canvas(cfg) {\n  Canvas.superclass.constructor.call(this, cfg);\n};\n\nCanvas.CFG = {\n  eventEnable: true,\n\n  /**\n   * 像素宽度\n   * @type {Number}\n   */\n  width: null,\n\n  /**\n   * 像素高度\n   * @type {Number}\n   */\n  height: null,\n\n  /**\n   * 画布宽度\n   * @type {Number}\n   */\n  widthCanvas: null,\n\n  /**\n   * 画布高度\n   * @type {Number}\n   */\n  heightCanvas: null,\n\n  /**\n   * CSS宽\n   * @type {String}\n   */\n  widthStyle: null,\n\n  /**\n   * CSS高\n   * @type {String}\n   */\n  heightStyle: null,\n\n  /**\n   * 容器DOM\n   * @type {Object}\n   */\n  containerDOM: null,\n\n  /**\n   * 当前Canvas的DOM\n   * @type {Object}\n   */\n  canvasDOM: null,\n\n  /**\n   * 屏幕像素比\n   * @type {Number}\n   */\n  pixelRatio: null,\n\n  /**\n   * 渲染器，默认是canvas\n   * @type {String}\n   */\n  renderer: 'canvas'\n};\nUtil.extend(Canvas, Group);\nUtil.augment(Canvas, {\n  init: function init() {\n    Canvas.superclass.init.call(this);\n\n    this._setGlobalParam();\n\n    this._setContainer();\n\n    this._initPainter();\n\n    this._scale();\n\n    if (this.get('eventEnable')) {\n      this._registEvents();\n    }\n  },\n  getEmitter: function getEmitter(element, event) {\n    if (element) {\n      if (Util.isEmpty(element._getEvents())) {\n        var parent = element.get('parent');\n\n        if (parent && !event.propagationStopped) {\n          return this.getEmitter(parent, event);\n        }\n      } else {\n        return element;\n      }\n    }\n  },\n  _getEventObj: function _getEventObj(type, e, point, target) {\n    var event = new Event(type, e, true, true);\n    event.x = point.x;\n    event.y = point.y;\n    event.clientX = e.clientX;\n    event.clientY = e.clientY;\n    event.currentTarget = target;\n    event.target = target;\n    return event;\n  },\n  _triggerEvent: function _triggerEvent(type, e) {\n    var point = this.getPointByClient(e.clientX, e.clientY);\n    var shape = this.getShape(point.x, point.y, e);\n    var el = this.get('el');\n    var emitObj;\n\n    if (type === 'mousemove') {\n      var preShape = this.get('preShape');\n\n      if (preShape && preShape !== shape) {\n        var mouseleave = this._getEventObj('mouseleave', e, point, preShape);\n\n        emitObj = this.getEmitter(preShape, e);\n        emitObj && emitObj.emit('mouseleave', mouseleave);\n        el.style.cursor = 'default';\n      }\n\n      if (shape) {\n        var mousemove = this._getEventObj('mousemove', e, point, shape);\n\n        emitObj = this.getEmitter(shape, e);\n        emitObj && emitObj.emit('mousemove', mousemove);\n\n        if (preShape !== shape) {\n          var mouseenter = this._getEventObj('mouseenter', e, point, shape);\n\n          emitObj && emitObj.emit('mouseenter', mouseenter, e);\n        }\n      } else {\n        var canvasmousemove = this._getEventObj('mousemove', e, point, this);\n\n        this.emit('mousemove', canvasmousemove);\n      }\n\n      this.set('preShape', shape);\n    } else {\n      var event = this._getEventObj(type, e, point, shape || this);\n\n      emitObj = this.getEmitter(shape, e);\n\n      if (emitObj && emitObj !== this) {\n        emitObj.emit(type, event);\n      }\n\n      this.emit(type, event);\n    }\n\n    if (shape && !shape.get('destroyed')) {\n      el.style.cursor = shape.attr('cursor') || 'default';\n    }\n  },\n  _registEvents: function _registEvents() {\n    var self = this;\n    var el = self.get('el');\n    var events = ['mouseout', 'mouseover', 'mousemove', 'mousedown', 'mouseleave', 'mouseup', 'click', 'dblclick'];\n    Util.each(events, function (event) {\n      el.addEventListener(event, function (e) {\n        self._triggerEvent(event, e);\n      }, false);\n    }); // special cases\n\n    el.addEventListener('touchstart', function (e) {\n      if (!Util.isEmpty(e.touches)) {\n        self._triggerEvent('touchstart', e.touches[0]);\n      }\n    }, false);\n    el.addEventListener('touchmove', function (e) {\n      if (!Util.isEmpty(e.touches)) {\n        self._triggerEvent('touchmove', e.touches[0]);\n      }\n    }, false);\n    el.addEventListener('touchend', function (e) {\n      if (!Util.isEmpty(e.changedTouches)) {\n        self._triggerEvent('touchend', e.changedTouches[0]);\n      }\n    }, false);\n  },\n  _scale: function _scale() {\n    if (this._cfg.renderType !== 'svg') {\n      var pixelRatio = this.get('pixelRatio');\n      this.scale(pixelRatio, pixelRatio);\n    }\n  },\n  _setGlobalParam: function _setGlobalParam() {\n    var renderType = this.get('renderer') || 'canvas';\n\n    if (renderType === 'svg') {\n      this.set('pixelRatio', 1);\n    } else if (!this.get('pixelRatio')) {\n      this.set('pixelRatio', Util.getRatio());\n    }\n\n    this._cfg.renderType = renderType;\n    var renderer = renderers[renderType];\n    this._cfg.renderer = renderer;\n    this._cfg.canvas = this;\n    var timeline = new Timeline(this);\n    this._cfg.timeline = timeline;\n  },\n  _setContainer: function _setContainer() {\n    var containerId = this.get('containerId');\n    var containerDOM = this.get('containerDOM');\n\n    if (!containerDOM) {\n      containerDOM = document.getElementById(containerId);\n      this.set('containerDOM', containerDOM);\n    }\n\n    Util.modifyCSS(containerDOM, {\n      position: 'relative'\n    });\n  },\n  _initPainter: function _initPainter() {\n    var containerDOM = this.get('containerDOM');\n    var painter = new this._cfg.renderer.painter(containerDOM);\n    this._cfg.painter = painter;\n    this._cfg.canvasDOM = this._cfg.el = painter.canvas;\n    this.changeSize(this.get('width'), this.get('height'));\n  },\n  _resize: function _resize() {\n    var canvasDOM = this.get('canvasDOM');\n    var widthCanvas = this.get('widthCanvas');\n    var heightCanvas = this.get('heightCanvas');\n    var widthStyle = this.get('widthStyle');\n    var heightStyle = this.get('heightStyle');\n    canvasDOM.style.width = widthStyle;\n    canvasDOM.style.height = heightStyle;\n    canvasDOM.setAttribute('width', widthCanvas);\n    canvasDOM.setAttribute('height', heightCanvas);\n  },\n  getWidth: function getWidth() {\n    var pixelRatio = this.get('pixelRatio');\n    var width = this.get('width');\n    return width * pixelRatio;\n  },\n  getHeight: function getHeight() {\n    var pixelRatio = this.get('pixelRatio');\n    var height = this.get('height');\n    return height * pixelRatio;\n  },\n  changeSize: function changeSize(width, height) {\n    var pixelRatio = this.get('pixelRatio');\n    var widthCanvas = width * pixelRatio;\n    var heightCanvas = height * pixelRatio;\n    this.set('widthCanvas', widthCanvas);\n    this.set('heightCanvas', heightCanvas);\n    this.set('widthStyle', width + 'px');\n    this.set('heightStyle', height + 'px');\n    this.set('width', width);\n    this.set('height', height);\n\n    this._resize();\n  },\n\n  /**\n   * 将窗口坐标转变成 canvas 坐标\n   * @param  {Number} clientX 窗口x坐标\n   * @param  {Number} clientY 窗口y坐标\n   * @return {Object} canvas坐标\n   */\n  getPointByClient: function getPointByClient(clientX, clientY) {\n    var el = this.get('el');\n    var pixelRatio = this.get('pixelRatio') || 1;\n    var bbox = el.getBoundingClientRect();\n    return {\n      x: (clientX - bbox.left) * pixelRatio,\n      y: (clientY - bbox.top) * pixelRatio\n    };\n  },\n  getClientByPoint: function getClientByPoint(x, y) {\n    var el = this.get('el');\n    var bbox = el.getBoundingClientRect();\n    var pixelRatio = this.get('pixelRatio') || 1;\n    return {\n      clientX: x / pixelRatio + bbox.left,\n      clientY: y / pixelRatio + bbox.top\n    };\n  },\n  draw: function draw() {\n    this._cfg.painter.draw(this);\n  },\n  getShape: function getShape(x, y, e) {\n    if (arguments.length === 3 && this._cfg.renderer.getShape) {\n      return this._cfg.renderer.getShape.call(this, x, y, e);\n    }\n\n    return Canvas.superclass.getShape.call(this, x, y);\n  },\n  getRenderer: function getRenderer() {\n    return this._cfg.renderType;\n  },\n  _drawSync: function _drawSync() {\n    this._cfg.painter.drawSync(this);\n  },\n  destroy: function destroy() {\n    var cfg = this._cfg;\n    var containerDOM = cfg.containerDOM;\n    var canvasDOM = cfg.canvasDOM;\n\n    if (canvasDOM && containerDOM) {\n      containerDOM.removeChild(canvasDOM);\n    }\n\n    cfg.timeline.stop();\n    Canvas.superclass.destroy.call(this);\n  }\n});\nmodule.exports = Canvas;\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(52);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n;\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\n\nvar mul = exports.mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(52);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\n\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\n\nvar len = exports.len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = exports.sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = exports.mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = exports.div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = exports.dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = exports.sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = exports.sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = exports.forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(52);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\n\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\n\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\n\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\n\nvar sub = exports.sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul = exports.mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div = exports.div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist = exports.dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist = exports.sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len = exports.len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen = exports.sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = exports.forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nmodule.exports = {\n  canFill: false,\n  canStroke: false,\n  initAttrs: function initAttrs(attrs) {\n    this._attrs = {\n      opacity: 1,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      matrix: [1, 0, 0, 0, 1, 0, 0, 0, 1]\n    };\n    this.attr(Util.assign(this.getDefaultAttrs(), attrs));\n    return this;\n  },\n  getDefaultAttrs: function getDefaultAttrs() {\n    return {};\n  },\n\n  /**\n   * 设置或者设置属性，有以下 4 种情形：\n   *   - name 不存在, 则返回属性集合\n   *   - name 为字符串，value 为空，获取属性值\n   *   - name 为字符串，value 不为空，设置属性值，返回 this\n   *   - name 为键值对，value 为空，设置属性值\n   *\n   * @param  {String | Object} name  属性名\n   * @param  {*} value 属性值\n   * @return {*} 属性值\n   */\n  attr: function attr(name, value) {\n    var self = this;\n\n    if (arguments.length === 0) {\n      return self._attrs;\n    }\n\n    if (Util.isObject(name)) {\n      // self._attrs = Util.deepMix(self._attrs, name);\n      for (var k in name) {\n        this._setAttr(k, name[k]);\n      }\n\n      self.clearBBox();\n      this._cfg.hasUpdate = true;\n      return self;\n    }\n\n    if (arguments.length === 2) {\n      this._setAttr(name, value);\n\n      self.clearBBox();\n      this._cfg.hasUpdate = true;\n      return self;\n    }\n\n    return self._attrs[name];\n  },\n  _setAttr: function _setAttr(name, value) {\n    var self = this;\n    var attrs = this._attrs;\n    attrs[name] = value;\n\n    if (name === 'fill' || name === 'stroke') {\n      attrs[name + 'Style'] = value;\n      return;\n    }\n\n    if (name === 'opacity') {\n      attrs.globalAlpha = value;\n      return;\n    }\n\n    if (name === 'clip' && value) {\n      self._setClip(value);\n\n      return;\n    }\n\n    if (name === 'path' && self._afterSetAttrPath) {\n      self._afterSetAttrPath(value);\n\n      return;\n    }\n\n    if (name === 'transform') {\n      self.transform(value);\n      return;\n    }\n\n    if (name === 'rotate') {\n      self.rotateAtStart(value);\n    }\n  },\n  clearBBox: function clearBBox() {\n    this.setSilent('box', null);\n  },\n  hasFill: function hasFill() {\n    return this.canFill && this._attrs.fillStyle;\n  },\n  hasStroke: function hasStroke() {\n    return this.canStroke && this._attrs.strokeStyle;\n  },\n  _setClip: function _setClip(item) {\n    item._cfg.renderer = this._cfg.renderer;\n    item._cfg.canvas = this._cfg.canvas;\n    item._cfg.parent = this._cfg.parent;\n\n    item.hasFill = function () {\n      return true;\n    };\n  }\n};\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1); // 是否未改变\n\n\nfunction isUnchanged(m) {\n  return m[0] === 1 && m[1] === 0 && m[3] === 0 && m[4] === 1 && m[6] === 0 && m[7] === 0;\n} // 是否仅仅是scale\n\n\nfunction isScale(m) {\n  return m[1] === 0 && m[3] === 0 && m[6] === 0 && m[7] === 0;\n}\n\nfunction multiple(m1, m2) {\n  if (!isUnchanged(m2)) {\n    if (isScale(m2)) {\n      m1[0] *= m2[0];\n      m1[4] *= m2[4];\n    } else {\n      Util.mat3.multiply(m1, m1, m2);\n    }\n  }\n}\n\nmodule.exports = {\n  initTransform: function initTransform() {},\n  resetMatrix: function resetMatrix() {\n    this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n  },\n  translate: function translate(tx, ty) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.translate(matrix, matrix, [tx, ty]);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  rotate: function rotate(radian) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.rotate(matrix, matrix, radian);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  scale: function scale(s1, s2) {\n    var matrix = this._attrs.matrix;\n    Util.mat3.scale(matrix, matrix, [s1, s2]);\n    this.clearTotalMatrix();\n    this.attr('matrix', matrix);\n    return this;\n  },\n  rotateAtStart: function rotateAtStart(rotate) {\n    var x = this._attrs.x || this._cfg.attrs.x;\n    var y = this._attrs.y || this._cfg.attrs.y;\n\n    if (Math.abs(rotate) > Math.PI * 2) {\n      rotate = rotate / 180 * Math.PI;\n    }\n\n    return this.transform([['t', -x, -y], ['r', rotate], ['t', x, y]]);\n  },\n  move: function move(x, y) {\n    var cx = this.get('x') || 0; // 当前的x\n\n    var cy = this.get('y') || 0; // 当前的y\n\n    this.translate(x - cx, y - cy);\n    this.set('x', x);\n    this.set('y', y);\n    return this;\n  },\n  transform: function transform(ts) {\n    var self = this;\n    var matrix = this._attrs.matrix;\n    Util.each(ts, function (t) {\n      switch (t[0]) {\n        case 't':\n          self.translate(t[1], t[2]);\n          break;\n\n        case 's':\n          self.scale(t[1], t[2]);\n          break;\n\n        case 'r':\n          self.rotate(t[1]);\n          break;\n\n        case 'm':\n          self.attr('matrix', Util.mat3.multiply([], matrix, t[1]));\n          self.clearTotalMatrix();\n          break;\n\n        default:\n          break;\n      }\n    });\n    return self;\n  },\n  setTransform: function setTransform(ts) {\n    this.attr('matrix', [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    return this.transform(ts);\n  },\n  getMatrix: function getMatrix() {\n    return this.attr('matrix');\n  },\n  setMatrix: function setMatrix(m) {\n    this.attr('matrix', m);\n    this.clearTotalMatrix();\n    return this;\n  },\n  apply: function apply(v, root) {\n    var m;\n\n    if (root) {\n      m = this._getMatrixByRoot(root);\n    } else {\n      m = this.attr('matrix');\n    }\n\n    Util.vec3.transformMat3(v, v, m);\n    return this;\n  },\n  // 获取到达指定根节点的矩阵\n  _getMatrixByRoot: function _getMatrixByRoot(root) {\n    var self = this;\n    root = root || self;\n    var parent = self;\n    var parents = [];\n\n    while (parent !== root) {\n      parents.unshift(parent);\n      parent = parent.get('parent');\n    }\n\n    parents.unshift(parent);\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    Util.each(parents, function (child) {\n      Util.mat3.multiply(m, child.attr('matrix'), m);\n    });\n    return m;\n  },\n\n  /**\n   * 应用到当前元素上的总的矩阵\n   * @return {Matrix} 矩阵\n   */\n  getTotalMatrix: function getTotalMatrix() {\n    var m = this._cfg.totalMatrix;\n\n    if (!m) {\n      m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      var parent = this._cfg.parent;\n\n      if (parent) {\n        var pm = parent.getTotalMatrix();\n        multiple(m, pm);\n      }\n\n      multiple(m, this.attr('matrix'));\n      this._cfg.totalMatrix = m;\n    }\n\n    return m;\n  },\n  // 清除当前的矩阵\n  clearTotalMatrix: function clearTotalMatrix() {// this._cfg.totalMatrix = null;\n  },\n  invert: function invert(v) {\n    var m = this.getTotalMatrix(); // 单精屏幕下大多数矩阵没变化\n\n    if (isScale(m)) {\n      v[0] /= m[0];\n      v[1] /= m[4];\n    } else {\n      var inm = Util.mat3.invert([], m);\n\n      if (inm) {\n        Util.vec3.transformMat3(v, v, inm);\n      }\n    }\n\n    return this;\n  },\n  resetTransform: function resetTransform(context) {\n    var mo = this.attr('matrix'); // 不改变时\n\n    if (!isUnchanged(mo)) {\n      context.transform(mo[0], mo[1], mo[3], mo[4], mo[6], mo[7]);\n    }\n  }\n};\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar ReservedProps = {\n  delay: 'delay',\n  rotate: 'rotate'\n};\nvar colorRalaredProps = {\n  fill: 'fill',\n  stroke: 'stroke',\n  fillStyle: 'fillStyle',\n  strokeStyle: 'strokeStyle'\n};\n\nfunction getFromAttrs(toAttrs, shape) {\n  var rst = {};\n  var attrs = shape._attrs;\n\n  for (var k in toAttrs.attrs) {\n    rst[k] = attrs[k];\n  }\n\n  return rst;\n}\n\nfunction getFormatProps(props, shape) {\n  var rst = {\n    matrix: null,\n    attrs: {}\n  };\n  var attrs = shape._attrs;\n\n  for (var k in props) {\n    if (k === 'transform') {\n      rst.matrix = Util.transform(shape.getMatrix(), props[k]);\n    } else if (k === 'rotate') {\n      rst.matrix = Util.transform(shape.getMatrix(), [['r', props[k]]]);\n    } else if (k === 'matrix') {\n      rst.matrix = props[k];\n    } else if (colorRalaredProps[k] && /^[r,R,L,l]{1}[\\s]*\\(/.test(props[k])) {\n      // 渐变色不支持动画\n      continue;\n    } else if (!ReservedProps[k] && attrs[k] !== props[k]) {\n      rst.attrs[k] = props[k];\n    }\n  }\n\n  return rst;\n}\n\nfunction checkExistedAttrs(animators, animator) {\n  var delay = animator.delay;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  Util.each(animator.toAttrs, function (v, k) {\n    Util.each(animators, function (animator) {\n      if (delay < animator.startTime + animator.duration) {\n        if (hasOwnProperty.call(animator.toAttrs, k)) {\n          delete animator.toAttrs[k];\n          delete animator.fromAttrs[k];\n        }\n      }\n    });\n  });\n\n  if (animator.toMatrix) {\n    Util.each(animators, function (animator) {\n      if (delay < animator.startTime + animator.duration && animator.toMatrix) {\n        delete animator.toMatrix;\n      }\n    });\n  }\n\n  return animators;\n}\n\nmodule.exports = {\n  /**\n   * 执行动画\n   * @param  {Object}   toProps  动画最终状态\n   * @param  {Number}   duration 动画执行时间\n   * @param  {String}   easing   动画缓动效果\n   * @param  {Function} callback 动画执行后的回调\n   * @param  {Number}   delay    动画延迟时间\n   */\n  animate: function animate(toProps, duration, easing, callback, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    var self = this;\n    self.set('animating', true);\n    var timeline = self.get('timeline');\n\n    if (!timeline) {\n      timeline = self.get('canvas').get('timeline');\n      self.setSilent('timeline', timeline);\n    }\n\n    var animators = self.get('animators') || []; // 初始化tick\n\n    if (!timeline._timer) {\n      timeline.initTimer();\n    }\n\n    if (Util.isNumber(callback)) {\n      delay = callback;\n      callback = null;\n    }\n\n    if (Util.isFunction(easing)) {\n      callback = easing;\n      easing = 'easeLinear';\n    } else {\n      easing = easing ? easing : 'easeLinear';\n    }\n\n    var formatProps = getFormatProps(toProps, self); // 记录动画属性\n\n    var animator = {\n      fromAttrs: getFromAttrs(formatProps, self),\n      toAttrs: formatProps.attrs,\n      fromMatrix: Util.clone(self.getMatrix()),\n      toMatrix: formatProps.matrix,\n      duration: duration,\n      easing: easing,\n      callback: callback,\n      delay: delay,\n      startTime: timeline.getTime(),\n      id: Util.uniqueId()\n    }; // 如果动画队列中已经有这个图形了\n\n    if (animators.length > 0) {\n      // 先检查是否需要合并属性。若有相同的动画，将该属性从前一个动画中删除,直接用后一个动画中\n      animators = checkExistedAttrs(animators, animator);\n    } else {\n      // 否则将图形添加到队列\n      timeline.addAnimator(self);\n    }\n\n    animators.push(animator);\n    self.setSilent('animators', animators);\n    self.setSilent('pause', {\n      isPaused: false\n    });\n  },\n  stopAnimate: function stopAnimate() {\n    var _this = this;\n\n    var animators = this.get('animators'); // 将动画执行到最后一帧，执行回调\n\n    Util.each(animators, function (animator) {\n      _this.attr(animator.toAttrs);\n\n      if (animator.toMatrix) {\n        _this.attr('matrix', animator.toMatrix);\n      }\n\n      if (animator.callback) {\n        animator.callback();\n      }\n    });\n    this.setSilent('animating', false);\n    this.setSilent('animators', []);\n  },\n  pauseAnimate: function pauseAnimate() {\n    var self = this;\n    var timeline = self.get('timeline'); // 记录下是在什么时候暂停的\n\n    self.setSilent('pause', {\n      isPaused: true,\n      pauseTime: timeline.getTime()\n    });\n    return self;\n  },\n  resumeAnimate: function resumeAnimate() {\n    var self = this;\n    var timeline = self.get('timeline');\n    var current = timeline.getTime();\n    var animators = self.get('animators');\n    var pauseTime = self.get('pause').pauseTime; // 之后更新属性需要计算动画已经执行的时长，如果暂停了，就把初始时间调后\n\n    Util.each(animators, function (animator) {\n      animator.startTime = animator.startTime + (current - pauseTime);\n      animator._paused = false;\n      animator._pauseTime = null;\n    });\n    self.setSilent('pause', {\n      isPaused: false\n    });\n    self.setSilent('animators', animators);\n    return self;\n  }\n};\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Shape = __webpack_require__(6);\n\nShape.Arc = __webpack_require__(105);\nShape.Circle = __webpack_require__(106);\nShape.Dom = __webpack_require__(107);\nShape.Ellipse = __webpack_require__(108);\nShape.Fan = __webpack_require__(109);\nShape.Image = __webpack_require__(110);\nShape.Line = __webpack_require__(111);\nShape.Marker = __webpack_require__(56);\nShape.Path = __webpack_require__(112);\nShape.Polygon = __webpack_require__(113);\nShape.Polyline = __webpack_require__(114);\nShape.Rect = __webpack_require__(115);\nShape.Text = __webpack_require__(116);\nmodule.exports = Shape;\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar Inside = __webpack_require__(54);\n\nvar mathUtl = {\n  arc: __webpack_require__(37),\n  ellipse: __webpack_require__(104),\n  line: __webpack_require__(36)\n};\nvar canvas = Util.createDom('<canvas width=\"500\" height=\"500\"></canvas>');\nvar context = canvas.getContext('2d');\n\nfunction isPointInPathByContext(x, y, ctx) {\n  ctx.createPath(context);\n  return context.isPointInPath(x, y);\n}\n\nvar arc = function arc(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.r,\n      startAngle = attrs.startAngle,\n      endAngle = attrs.endAngle,\n      clockwise = attrs.clockwise;\n  var lineWidth = this.getHitLineWidth();\n\n  if (this.hasStroke()) {\n    return Inside.arcline(cx, cy, r, startAngle, endAngle, clockwise, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar circle = function circle(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.r;\n  var lineWidth = this.getHitLineWidth();\n  var fill = this.hasFill();\n  var stroke = this.hasStroke();\n\n  if (fill && stroke) {\n    return Inside.circle(cx, cy, r, x, y) || Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n  }\n\n  if (fill) {\n    return Inside.circle(cx, cy, r, x, y);\n  }\n\n  if (stroke) {\n    return Inside.arcline(cx, cy, r, 0, Math.PI * 2, false, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar ellipse = function ellipse(x, y) {\n  var attrs = this._attrs;\n  var fill = this.hasFill();\n  var stroke = this.hasStroke();\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var rx = attrs.rx;\n  var ry = attrs.ry;\n  var lineWidth = this.getHitLineWidth();\n  var r = rx > ry ? rx : ry;\n  var scaleX = rx > ry ? 1 : rx / ry;\n  var scaleY = rx > ry ? ry / rx : 1;\n  var p = [x, y, 1];\n  var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  Util.mat3.scale(m, m, [scaleX, scaleY]);\n  Util.mat3.translate(m, m, [cx, cy]);\n  var inm = Util.mat3.invert([], m);\n  Util.vec3.transformMat3(p, p, inm);\n\n  if (fill && stroke) {\n    return Inside.circle(0, 0, r, p[0], p[1]) || Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n  }\n\n  if (fill) {\n    return Inside.circle(0, 0, r, p[0], p[1]);\n  }\n\n  if (stroke) {\n    return Inside.arcline(0, 0, r, 0, Math.PI * 2, false, lineWidth, p[0], p[1]);\n  }\n\n  return false;\n};\n\nvar fan = function fan(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n  var attrs = self._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var rs = attrs.rs;\n  var re = attrs.re;\n  var startAngle = attrs.startAngle;\n  var endAngle = attrs.endAngle;\n  var clockwise = attrs.clockwise;\n  var v1 = [1, 0];\n  var subv = [x - cx, y - cy];\n  var angle = Util.vec2.angleTo(v1, subv);\n\n  function _isPointInFill() {\n    var angle1 = mathUtl.arc.nearAngle(angle, startAngle, endAngle, clockwise);\n\n    if (Util.isNumberEqual(angle, angle1)) {\n      var ls = Util.vec2.squaredLength(subv);\n\n      if (rs * rs <= ls && ls <= re * re) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function _isPointInStroke() {\n    var lineWidth = self.getHitLineWidth();\n    var ssp = {\n      x: Math.cos(startAngle) * rs + cx,\n      y: Math.sin(startAngle) * rs + cy\n    };\n    var sep = {\n      x: Math.cos(startAngle) * re + cx,\n      y: Math.sin(startAngle) * re + cy\n    };\n    var esp = {\n      x: Math.cos(endAngle) * rs + cx,\n      y: Math.sin(endAngle) * rs + cy\n    };\n    var eep = {\n      x: Math.cos(endAngle) * re + cx,\n      y: Math.sin(endAngle) * re + cy\n    };\n\n    if (Inside.line(ssp.x, ssp.y, sep.x, sep.y, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.line(esp.x, esp.y, eep.x, eep.y, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.arcline(cx, cy, rs, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n      return true;\n    }\n\n    if (Inside.arcline(cx, cy, re, startAngle, endAngle, clockwise, lineWidth, x, y)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (fill && stroke) {\n    return _isPointInFill() || _isPointInStroke();\n  }\n\n  if (fill) {\n    return _isPointInFill();\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar image = function image(x, y) {\n  var attrs = this._attrs;\n\n  if (this.get('toDraw') || !attrs.img) {\n    return false;\n  }\n\n  if (!this._cfg.attrs || this._cfg.attrs.img !== attrs.img) {\n    this._setAttrImg();\n  }\n\n  var rx = attrs.x;\n  var ry = attrs.y;\n  var width = attrs.width;\n  var height = attrs.height;\n  return Inside.rect(rx, ry, width, height, x, y);\n};\n\nvar line = function line(x, y) {\n  var attrs = this._attrs;\n  var x1 = attrs.x1,\n      y1 = attrs.y1,\n      x2 = attrs.x2,\n      y2 = attrs.y2;\n  var lineWidth = this.getHitLineWidth();\n\n  if (this.hasStroke()) {\n    return Inside.line(x1, y1, x2, y2, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar path = function path(x, y) {\n  var self = this;\n  var segments = self.get('segments');\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    if (!Util.isEmpty(segments)) {\n      var lineWidth = self.getHitLineWidth();\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        if (segments[i].isInside(x, y, lineWidth)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar polygon = function polygon(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    var attrs = self._attrs;\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return false;\n    }\n\n    var lineWidth = self.getHitLineWidth();\n    var outPoints = points.slice(0);\n\n    if (points.length >= 3) {\n      outPoints.push(points[0]);\n    }\n\n    return Inside.polyline(outPoints, lineWidth, x, y);\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar marker = function marker(x, y) {\n  var attrs = this._attrs;\n  var cx = attrs.x;\n  var cy = attrs.y;\n  var r = attrs.radius || attrs.r;\n  var lineWidth = this.getHitLineWidth();\n  return Inside.circle(cx, cy, r + lineWidth / 2, x, y);\n};\n\nvar polyline = function polyline(x, y) {\n  var self = this;\n  var attrs = self._attrs;\n\n  if (self.hasStroke()) {\n    var points = attrs.points;\n\n    if (points.length < 2) {\n      return false;\n    }\n\n    var lineWidth = attrs.lineWidth;\n    return Inside.polyline(points, lineWidth, x, y);\n  }\n\n  return false;\n};\n\nvar rect = function rect(x, y) {\n  var self = this;\n  var fill = self.hasFill();\n  var stroke = self.hasStroke();\n\n  function _isPointInStroke() {\n    var attrs = self._attrs;\n    var rx = attrs.x;\n    var ry = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    var lineWidth = self.getHitLineWidth();\n\n    if (radius === 0) {\n      var halfWidth = lineWidth / 2;\n      return Inside.line(rx - halfWidth, ry, rx + width + halfWidth, ry, lineWidth, x, y) || Inside.line(rx + width, ry - halfWidth, rx + width, ry + height + halfWidth, lineWidth, x, y) || Inside.line(rx + width + halfWidth, ry + height, rx - halfWidth, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height + halfWidth, rx, ry - halfWidth, lineWidth, x, y);\n    }\n\n    return Inside.line(rx + radius, ry, rx + width - radius, ry, lineWidth, x, y) || Inside.line(rx + width, ry + radius, rx + width, ry + height - radius, lineWidth, x, y) || Inside.line(rx + width - radius, ry + height, rx + radius, ry + height, lineWidth, x, y) || Inside.line(rx, ry + height - radius, rx, ry + radius, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + radius, radius, 1.5 * Math.PI, 2 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + width - radius, ry + height - radius, radius, 0, 0.5 * Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + height - radius, radius, 0.5 * Math.PI, Math.PI, false, lineWidth, x, y) || Inside.arcline(rx + radius, ry + radius, radius, Math.PI, 1.5 * Math.PI, false, lineWidth, x, y);\n  }\n\n  if (fill && stroke) {\n    return isPointInPathByContext(x, y, self) || _isPointInStroke();\n  }\n\n  if (fill) {\n    return isPointInPathByContext(x, y, self);\n  }\n\n  if (stroke) {\n    return _isPointInStroke();\n  }\n\n  return false;\n};\n\nvar text = function text(x, y) {\n  var self = this;\n  var box = self.getBBox();\n\n  if (self.hasFill() || self.hasStroke()) {\n    return Inside.box(box.minX, box.maxX, box.minY, box.maxY, x, y);\n  }\n};\n\nvar dom = function dom(x, y) {\n  if (!this._cfg.el) {\n    return false;\n  }\n\n  var box = this._cfg.el.getBBox();\n\n  return Inside.box(box.x, box.x + box.width, box.y, box.y + box.height, x, y);\n};\n\nvar shapes = {\n  arc: arc,\n  circle: circle,\n  dom: dom,\n  ellipse: ellipse,\n  fan: fan,\n  image: image,\n  line: line,\n  path: path,\n  marker: marker,\n  polygon: polygon,\n  polyline: polyline,\n  rect: rect,\n  text: text\n};\nmodule.exports = {\n  isPointInPath: function isPointInPath(x, y) {\n    var shape = shapes[this.type];\n\n    if (shape) {\n      return shape.call(this, x, y);\n    }\n\n    return false;\n  }\n};\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar PathUtil = __webpack_require__(57);\n\nvar d3Timer = __webpack_require__(170);\n\nvar d3Ease = __webpack_require__(173);\n\nvar _require = __webpack_require__(117),\n    interpolate = _require.interpolate,\n    interpolateArray = _require.interpolateArray; // 目前整体动画只需要数值和数组的差值计算\n\n\nvar Timeline = function Timeline(canvas) {\n  // 待执行动画的队列\n  this._animators = []; // 当前时间\n\n  this._current = 0; // 计时器实例\n\n  this._timer = null; // 画布\n\n  this.canvas = canvas;\n};\n\nfunction _update(self, animator, ratio) {\n  var cProps = {}; // 此刻属性\n\n  var toAttrs = animator.toAttrs;\n  var fromAttrs = animator.fromAttrs;\n  var toMatrix = animator.toMatrix;\n\n  if (self.get('destroyed')) {\n    return;\n  }\n\n  var interf; //  差值函数\n\n  for (var k in toAttrs) {\n    if (!Util.isEqual(fromAttrs[k], toAttrs[k])) {\n      if (k === 'path') {\n        var toPath = toAttrs[k];\n        var fromPath = fromAttrs[k];\n\n        if (toPath.length > fromPath.length) {\n          toPath = PathUtil.parsePathString(toAttrs[k]); // 终点状态\n\n          fromPath = PathUtil.parsePathString(fromAttrs[k]); // 起始状态\n\n          fromPath = PathUtil.fillPathByDiff(fromPath, toPath);\n          fromPath = PathUtil.formatPath(fromPath, toPath);\n          animator.fromAttrs.path = fromPath;\n          animator.toAttrs.path = toPath;\n        } else if (!animator.pathFormatted) {\n          toPath = PathUtil.parsePathString(toAttrs[k]);\n          fromPath = PathUtil.parsePathString(fromAttrs[k]);\n          fromPath = PathUtil.formatPath(fromPath, toPath);\n          animator.fromAttrs.path = fromPath;\n          animator.toAttrs.path = toPath;\n          animator.pathFormatted = true;\n        }\n\n        cProps[k] = [];\n\n        for (var i = 0; i < toPath.length; i++) {\n          var toPathPoint = toPath[i];\n          var fromPathPoint = fromPath[i];\n          var cPathPoint = [];\n\n          for (var j = 0; j < toPathPoint.length; j++) {\n            if (Util.isNumber(toPathPoint[j]) && fromPathPoint && Util.isNumber(fromPathPoint[j])) {\n              interf = interpolate(fromPathPoint[j], toPathPoint[j]);\n              cPathPoint.push(interf(ratio));\n            } else {\n              cPathPoint.push(toPathPoint[j]);\n            }\n          }\n\n          cProps[k].push(cPathPoint);\n        }\n      } else {\n        interf = interpolate(fromAttrs[k], toAttrs[k]);\n        cProps[k] = interf(ratio);\n      }\n    }\n  }\n\n  if (toMatrix) {\n    var mf = interpolateArray(animator.fromMatrix, toMatrix);\n    var cM = mf(ratio);\n    self.setMatrix(cM);\n  }\n\n  self.attr(cProps);\n}\n\nfunction update(shape, animator, elapsed) {\n  var startTime = animator.startTime; // 如果还没有开始执行或暂停，先不更新\n\n  if (elapsed < startTime + animator.delay || animator.isPaused) {\n    return false;\n  }\n\n  var ratio;\n  var duration = animator.duration;\n  var easing = animator.easing; // 已执行时间\n\n  elapsed = elapsed - startTime - animator.delay;\n\n  if (animator.toAttrs.repeat) {\n    ratio = elapsed % duration / duration;\n    ratio = d3Ease[easing](ratio);\n  } else {\n    ratio = elapsed / duration;\n\n    if (ratio < 1) {\n      ratio = d3Ease[easing](ratio);\n    } else {\n      shape.attr(animator.toAttrs);\n\n      if (animator.toMatrix) {\n        shape.setMatrix(animator.toMatrix);\n      }\n\n      return true;\n    }\n  }\n\n  _update(shape, animator, ratio);\n\n  return false;\n}\n\nUtil.augment(Timeline, {\n  initTimer: function initTimer() {\n    var _this = this;\n\n    var self = this;\n    var isFinished = false;\n    var shape, animators, animator;\n    self._timer = d3Timer.timer(function (elapsed) {\n      self._current = elapsed;\n\n      if (_this._animators.length > 0) {\n        for (var i = _this._animators.length - 1; i >= 0; i--) {\n          shape = _this._animators[i];\n\n          if (shape.get('destroyed')) {\n            // 如果已经被销毁，直接移出队列\n            self.removeAnimator(i);\n            continue;\n          }\n\n          if (!shape.get('pause').isPaused) {\n            animators = shape.get('animators');\n\n            for (var j = animators.length - 1; j >= 0; j--) {\n              animator = animators[j];\n              isFinished = update(shape, animator, elapsed);\n\n              if (isFinished) {\n                animators.splice(j, 1);\n                isFinished = false;\n\n                if (animator.callback) {\n                  animator.callback();\n                }\n              }\n            }\n          }\n\n          if (animators.length === 0) {\n            self.removeAnimator(i);\n          }\n        }\n\n        _this.canvas.draw();\n      }\n    });\n  },\n  addAnimator: function addAnimator(shape) {\n    this._animators.push(shape);\n  },\n  removeAnimator: function removeAnimator(index) {\n    this._animators.splice(index, 1);\n  },\n  isAnimating: function isAnimating() {\n    return !!this._animators.length;\n  },\n  stop: function stop() {\n    if (this._timer) {\n      this._timer.stop();\n    }\n  },\n  stopAllAnimations: function stopAllAnimations() {\n    this._animators.forEach(function (animator) {\n      animator.stopAnimate();\n    });\n\n    this._animators = [];\n    this.canvas.draw();\n  },\n  getTime: function getTime() {\n    return this._current;\n  }\n});\nmodule.exports = Timeline;\n\n/***/ }),\n/* 191 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timer__ = __webpack_require__(58);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (callback, delay, time) {\n  var t = new __WEBPACK_IMPORTED_MODULE_0__timer__[\"a\" /* Timer */]();\n  delay = delay == null ? 0 : +delay;\n  t.restart(function (elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n});\n\n/***/ }),\n/* 192 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timer__ = __webpack_require__(58);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (callback, delay, time) {\n  var t = new __WEBPACK_IMPORTED_MODULE_0__timer__[\"a\" /* Timer */](),\n      total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? Object(__WEBPACK_IMPORTED_MODULE_0__timer__[\"b\" /* now */])() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n});\n\n/***/ }),\n/* 193 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = linear;\nfunction linear(t) {\n  return +t;\n}\n\n/***/ }),\n/* 194 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = quadIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = quadOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = quadInOut;\nfunction quadIn(t) {\n  return t * t;\n}\nfunction quadOut(t) {\n  return t * (2 - t);\n}\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\n/***/ }),\n/* 195 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cubicIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = cubicOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = cubicInOut;\nfunction cubicIn(t) {\n  return t * t * t;\n}\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\n/***/ }),\n/* 196 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return polyIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return polyOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return polyInOut; });\nvar exponent = 3;\nvar polyIn = function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n  return polyIn;\n}(exponent);\nvar polyOut = function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n  return polyOut;\n}(exponent);\nvar polyInOut = function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n  return polyInOut;\n}(exponent);\n\n/***/ }),\n/* 197 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sinIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = sinOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = sinInOut;\nvar pi = Math.PI,\n    halfPi = pi / 2;\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\n/***/ }),\n/* 198 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = expIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = expOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = expInOut;\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\n/***/ }),\n/* 199 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = circleIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = circleOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = circleInOut;\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\n/***/ }),\n/* 200 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = bounceIn;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = bounceOut;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = bounceInOut;\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\n/***/ }),\n/* 201 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return backIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return backOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return backInOut; });\nvar overshoot = 1.70158;\nvar backIn = function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n  return backIn;\n}(overshoot);\nvar backOut = function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n  return backOut;\n}(overshoot);\nvar backInOut = function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n  return backInOut;\n}(overshoot);\n\n/***/ }),\n/* 202 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return elasticIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return elasticOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return elasticInOut; });\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\nvar elasticIn = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticIn.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticIn;\n}(amplitude, period);\nvar elasticOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticOut;\n}(amplitude, period);\nvar elasticInOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticInOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticInOut;\n}(amplitude, period);\n\n/***/ }),\n/* 203 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lab;\n/* unused harmony export Lab */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = hcl;\n/* unused harmony export Hcl */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(118);\n\n\n\nvar Kn = 18,\n    Xn = 0.950470,\n    // D65 standard referent\nYn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\n  if (o instanceof Hcl) {\n    var h = o.h * __WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* deg2rad */];\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n\n  if (!(o instanceof __WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* Rgb */])) o = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"h\" /* rgbConvert */])(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Lab, lab, Object(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* Color */], {\n  brighter: function (k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function (k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function () {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new __WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* Rgb */](xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), this.opacity);\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * __WEBPACK_IMPORTED_MODULE_2__math__[\"b\" /* rad2deg */];\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Hcl, hcl, Object(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* Color */], {\n  brighter: function (k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function (k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function () {\n    return labConvert(this).rgb();\n  }\n}));\n\n/***/ }),\n/* 204 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cubehelix;\n/* unused harmony export Cubehelix */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(118);\n\n\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof __WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* Rgb */])) o = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"h\" /* rgbConvert */])(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * __WEBPACK_IMPORTED_MODULE_2__math__[\"b\" /* rad2deg */] - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\nObject(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Cubehelix, cubehelix, Object(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* Color */], {\n  brighter: function (k) {\n    k = k == null ? __WEBPACK_IMPORTED_MODULE_1__color__[\"c\" /* brighter */] : Math.pow(__WEBPACK_IMPORTED_MODULE_1__color__[\"c\" /* brighter */], k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function (k) {\n    k = k == null ? __WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* darker */] : Math.pow(__WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* darker */], k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function () {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * __WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* deg2rad */],\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new __WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* Rgb */](255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));\n\n/***/ }),\n/* 205 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  return a = +a, b -= a, function (t) {\n    return Math.round(a + b * t);\n  };\n});\n\n/***/ }),\n/* 206 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return interpolateTransformCss; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return interpolateTransformSvg; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parse__ = __webpack_require__(207);\n\n\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({\n        i: i - 4,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(xa, xb)\n      }, {\n        i: i - 2,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(ya, yb)\n      });\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n      q.push({\n        i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(xa, xb)\n      }, {\n        i: i - 2,\n        x: Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(ya, yb)\n      });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function (a, b) {\n    var s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(__WEBPACK_IMPORTED_MODULE_1__parse__[\"a\" /* parseCss */], \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(__WEBPACK_IMPORTED_MODULE_1__parse__[\"b\" /* parseSvg */], \", \", \")\", \")\");\n\n/***/ }),\n/* 207 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parseCss;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = parseSvg;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__decompose__ = __webpack_require__(208);\n\nvar cssNode, cssRoot, cssView, svgNode;\nfunction parseCss(value) {\n  if (value === \"none\") return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"b\" /* identity */];\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return Object(__WEBPACK_IMPORTED_MODULE_0__decompose__[\"a\" /* default */])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\nfunction parseSvg(value) {\n  if (value == null) return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"b\" /* identity */];\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"b\" /* identity */];\n  value = value.matrix;\n  return Object(__WEBPACK_IMPORTED_MODULE_0__decompose__[\"a\" /* default */])(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\n/***/ }),\n/* 208 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return identity; });\nvar degrees = 180 / Math.PI;\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n});\n\n/***/ }),\n/* 209 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n} // p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (p0, p1) {\n  var ux0 = p0[0],\n      uy0 = p0[1],\n      w0 = p0[2],\n      ux1 = p1[0],\n      uy1 = p1[1],\n      w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S; // Special case for u0 ≅ u1.\n\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n\n    i = function (t) {\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n    };\n  } // General case.\n  else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n\n      i = function (t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n      };\n    }\n\n  i.duration = S * 1000;\n  return i;\n});\n\n/***/ }),\n/* 210 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hslLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(28);\n\n\n\nfunction hsl(hue) {\n  return function (start, end) {\n    var h = hue((start = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"d\" /* hsl */])(start)).h, (end = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"d\" /* hsl */])(end)).h),\n        s = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.s, end.s),\n        l = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n        opacity = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (hsl(__WEBPACK_IMPORTED_MODULE_1__color__[\"c\" /* hue */]));\nvar hslLong = hsl(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n/***/ }),\n/* 211 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lab;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(28);\n\n\nfunction lab(start, end) {\n  var l = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])((start = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"e\" /* lab */])(start)).l, (end = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"e\" /* lab */])(end)).l),\n      a = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.a, end.a),\n      b = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.b, end.b),\n      opacity = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n  return function (t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\n/***/ }),\n/* 212 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hclLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(28);\n\n\n\nfunction hcl(hue) {\n  return function (start, end) {\n    var h = hue((start = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"c\" /* hcl */])(start)).h, (end = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"c\" /* hcl */])(end)).h),\n        c = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.c, end.c),\n        l = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n        opacity = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (hcl(__WEBPACK_IMPORTED_MODULE_1__color__[\"c\" /* hue */]));\nvar hclLong = hcl(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n/***/ }),\n/* 213 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cubehelixLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(28);\n\n\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"b\" /* cubehelix */])(start)).h, (end = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"b\" /* cubehelix */])(end)).h),\n          s = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.s, end.s),\n          l = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n          opacity = Object(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (cubehelix(__WEBPACK_IMPORTED_MODULE_1__color__[\"c\" /* hue */]));\nvar cubehelixLong = cubehelix(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n/***/ }),\n/* 214 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (interpolator, n) {\n  var samples = new Array(n);\n\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\n  return samples;\n});\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  canvas: __webpack_require__(216),\n  svg: __webpack_require__(219)\n};\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  painter: __webpack_require__(217)\n};\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar renderUtil = __webpack_require__(218);\n\nvar SHAPE_ATTRS = ['fillStyle', 'font', 'globalAlpha', 'lineCap', 'lineWidth', 'lineJoin', 'miterLimit', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY', 'strokeStyle', 'textAlign', 'textBaseline', 'lineDash', 'lineDashOffset'];\n\nvar Painter =\n/*#__PURE__*/\nfunction () {\n  function Painter(dom) {\n    if (!dom) {\n      return null;\n    }\n\n    var canvasId = Util.uniqueId('canvas_');\n    var canvasDom = Util.createDom('<canvas id=\"' + canvasId + '\"></canvas>');\n    dom.appendChild(canvasDom);\n    this.type = 'canvas';\n    this.canvas = canvasDom;\n    this.context = canvasDom.getContext('2d');\n    this.toDraw = false;\n    return this;\n  }\n\n  var _proto = Painter.prototype;\n\n  _proto.beforeDraw = function beforeDraw() {\n    var el = this.canvas;\n    this.context && this.context.clearRect(0, 0, el.width, el.height);\n  };\n\n  _proto.draw = function draw(model) {\n    var self = this;\n\n    function drawInner() {\n      self.animateHandler = Util.requestAnimationFrame(function () {\n        self.animateHandler = undefined;\n\n        if (self.toDraw) {\n          drawInner();\n        }\n      });\n      self.beforeDraw();\n\n      try {\n        self._drawGroup(model);\n      } catch (ev) {\n        // 绘制时异常，中断重绘\n        console.warn('error in draw canvas, detail as:');\n        console.warn(ev);\n        self.toDraw = false;\n      }\n\n      self.toDraw = false;\n    }\n\n    if (self.animateHandler) {\n      self.toDraw = true;\n    } else {\n      drawInner();\n    }\n  };\n\n  _proto.drawSync = function drawSync(model) {\n    this.beforeDraw();\n\n    this._drawGroup(model);\n  };\n\n  _proto._drawGroup = function _drawGroup(group) {\n    if (group._cfg.removed || group._cfg.destroyed || !group._cfg.visible) {\n      return;\n    }\n\n    var self = this;\n    var children = group._cfg.children;\n    var child = null;\n    this.setContext(group);\n\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (children[i].isGroup) {\n        self._drawGroup(child);\n      } else {\n        self._drawShape(child);\n      }\n    }\n\n    this.restoreContext(group);\n  };\n\n  _proto._drawShape = function _drawShape(shape) {\n    if (shape._cfg.removed || shape._cfg.destroyed || !shape._cfg.visible) {\n      return;\n    }\n\n    this.setContext(shape);\n    shape.drawInner(this.context);\n    this.restoreContext(shape);\n    shape._cfg.attrs = shape._attrs;\n    shape._cfg.hasUpdate = false;\n  };\n\n  _proto.setContext = function setContext(shape) {\n    var context = this.context;\n    var clip = shape._attrs.clip;\n    context.save();\n\n    if (clip) {\n      // context.save();\n      clip.resetTransform(context);\n      clip.createPath(context);\n      context.clip(); // context.restore();\n    }\n\n    this.resetContext(shape);\n    shape.resetTransform(context);\n  };\n\n  _proto.restoreContext = function restoreContext() {\n    this.context.restore();\n  };\n\n  _proto.resetContext = function resetContext(shape) {\n    var context = this.context;\n    var elAttrs = shape._attrs; // var canvas = this.get('canvas');\n\n    if (!shape.isGroup) {\n      for (var k in elAttrs) {\n        if (SHAPE_ATTRS.indexOf(k) > -1) {\n          // 非canvas属性不附加\n          var v = elAttrs[k];\n\n          if (k === 'fillStyle') {\n            v = renderUtil.parseStyle(v, shape, context);\n          }\n\n          if (k === 'strokeStyle') {\n            v = renderUtil.parseStyle(v, shape, context);\n          }\n\n          if (k === 'lineDash' && context.setLineDash) {\n            if (Util.isArray(v)) {\n              context.setLineDash(v);\n            } else if (Util.isString(v)) {\n              context.setLineDash(v.split(' '));\n            }\n          } else {\n            context[k] = v;\n          }\n        }\n      }\n    }\n  };\n\n  return Painter;\n}();\n\nmodule.exports = Painter;\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/ig; // const numColorCache = {};\n\nfunction addStop(steps, gradient) {\n  var arr = steps.match(regexColorStop);\n  Util.each(arr, function (item) {\n    item = item.split(':');\n    gradient.addColorStop(item[0], item[1]);\n  });\n}\n\nfunction parseLineGradient(color, self, context) {\n  var arr = regexLG.exec(color);\n  var angle = Util.mod(Util.toRadian(parseFloat(arr[1])), Math.PI * 2);\n  var steps = arr[2];\n  var box = self.getBBox();\n  var start;\n  var end;\n\n  if (angle >= 0 && angle < 0.5 * Math.PI) {\n    start = {\n      x: box.minX,\n      y: box.minY\n    };\n    end = {\n      x: box.maxX,\n      y: box.maxY\n    };\n  } else if (0.5 * Math.PI <= angle && angle < Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.minY\n    };\n    end = {\n      x: box.minX,\n      y: box.maxY\n    };\n  } else if (Math.PI <= angle && angle < 1.5 * Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.maxY\n    };\n    end = {\n      x: box.minX,\n      y: box.minY\n    };\n  } else {\n    start = {\n      x: box.minX,\n      y: box.maxY\n    };\n    end = {\n      x: box.maxX,\n      y: box.minY\n    };\n  }\n\n  var tanTheta = Math.tan(angle);\n  var tanTheta2 = tanTheta * tanTheta;\n  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;\n  var gradient = context.createLinearGradient(start.x, start.y, x, y);\n  addStop(steps, gradient);\n  return gradient;\n}\n\nfunction parseRadialGradient(color, self, context) {\n  var arr = regexRG.exec(color);\n  var fx = parseFloat(arr[1]);\n  var fy = parseFloat(arr[2]);\n  var fr = parseFloat(arr[3]);\n  var steps = arr[4]; // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\n\n  if (fr === 0) {\n    var colors = steps.match(regexColorStop);\n    return colors[colors.length - 1].split(':')[1];\n  }\n\n  var box = self.getBBox();\n  var width = box.maxX - box.minX;\n  var height = box.maxY - box.minY;\n  var r = Math.sqrt(width * width + height * height) / 2;\n  var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, fr * r, box.minX + width / 2, box.minY + height / 2, r);\n  addStop(steps, gradient);\n  return gradient;\n}\n\nfunction parsePattern(color, self, context) {\n  if (self.get('patternSource') && self.get('patternSource') === color) {\n    return self.get('pattern');\n  }\n\n  var pattern;\n  var img;\n  var arr = regexPR.exec(color);\n  var repeat = arr[1];\n  var source = arr[2]; // Function to be called when pattern loads\n\n  function onload() {\n    // Create pattern\n    pattern = context.createPattern(img, repeat);\n    self.setSilent('pattern', pattern); // be a cache\n\n    self.setSilent('patternSource', color);\n  }\n\n  switch (repeat) {\n    case 'a':\n      repeat = 'repeat';\n      break;\n\n    case 'x':\n      repeat = 'repeat-x';\n      break;\n\n    case 'y':\n      repeat = 'repeat-y';\n      break;\n\n    case 'n':\n      repeat = 'no-repeat';\n      break;\n\n    default:\n      repeat = 'no-repeat';\n  }\n\n  img = new Image(); // If source URL is not a data URL\n\n  if (!source.match(/^data:/i)) {\n    // Set crossOrigin for this image\n    img.crossOrigin = 'Anonymous';\n  }\n\n  img.src = source;\n\n  if (img.complete) {\n    onload();\n  } else {\n    img.onload = onload; // Fix onload() bug in IE9\n\n    img.src = img.src;\n  }\n\n  return pattern;\n}\n\nmodule.exports = {\n  parsePath: function parsePath(path) {\n    path = path || [];\n\n    if (Util.isArray(path)) {\n      return path;\n    }\n\n    if (Util.isString(path)) {\n      path = path.match(regexTags);\n      Util.each(path, function (item, index) {\n        item = item.match(regexDot);\n\n        if (item[0].length > 1) {\n          var tag = item[0].charAt(0);\n          item.splice(1, 0, item[0].substr(1));\n          item[0] = tag;\n        }\n\n        Util.each(item, function (sub, i) {\n          if (!isNaN(sub)) {\n            item[i] = +sub;\n          }\n        });\n        path[index] = item;\n      });\n      return path;\n    }\n  },\n  parseStyle: function parseStyle(color, self, context) {\n    if (Util.isString(color)) {\n      if (color[1] === '(' || color[2] === '(') {\n        if (color[0] === 'l') {\n          // regexLG.test(color)\n          return parseLineGradient(color, self, context);\n        } else if (color[0] === 'r') {\n          // regexRG.test(color)\n          return parseRadialGradient(color, self, context);\n        } else if (color[0] === 'p') {\n          // regexPR.test(color)\n          return parsePattern(color, self, context);\n        }\n      }\n\n      return color;\n    }\n  }\n  /* ,\n  numberToColor(num) {\n    // 增加缓存\n    let color = numColorCache[num];\n    if (!color) {\n      let str = num.toString(16);\n      for (let i = str.length; i < 6; i++) {\n        str = '0' + str;\n      }\n      color = '#' + str;\n      numColorCache[num] = color;\n    }\n    return color;\n  }*/\n\n};\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  painter: __webpack_require__(220),\n  getShape: __webpack_require__(227)\n};\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(1);\n\nvar _require = __webpack_require__(27),\n    parseRadius = _require.parseRadius;\n\nvar Marker = __webpack_require__(56);\n\nvar Defs = __webpack_require__(221);\n\nvar SHAPE_TO_TAGS = {\n  rect: 'path',\n  circle: 'circle',\n  line: 'line',\n  path: 'path',\n  marker: 'path',\n  text: 'text',\n  polygon: 'polygon',\n  image: 'image',\n  ellipse: 'ellipse',\n  dom: 'foreignObject',\n  fan: 'path',\n  group: 'g'\n};\nvar LETTER_SPACING = 0.3;\nvar SVG_ATTR_MAP = {\n  opacity: 'opacity',\n  fillStyle: 'fill',\n  strokeOpacity: 'stroke-opacity',\n  fillOpacity: 'fill-opacity',\n  strokeStyle: 'stroke',\n  x: 'x',\n  y: 'y',\n  r: 'r',\n  width: 'width',\n  height: 'height',\n  x1: 'x1',\n  x2: 'x2',\n  y1: 'y1',\n  y2: 'y2',\n  lineCap: 'stroke-linecap',\n  lineJoin: 'stroke-linejoin',\n  lineWidth: 'stroke-width',\n  lineDash: 'stroke-dasharray',\n  lineDashOffset: 'stroke-dashoffset',\n  miterLimit: 'stroke-miterlimit',\n  font: 'font',\n  fontSize: 'font-size',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  fontFamily: 'font-family',\n  startArrow: 'marker-start',\n  endArrow: 'marker-end',\n  path: 'd',\n  class: 'class',\n  id: 'id',\n  style: 'style',\n  preserveAspectRatio: 'preserveAspectRatio'\n};\nvar BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging'\n};\nvar ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end'\n};\n\nvar Painter =\n/*#__PURE__*/\nfunction () {\n  function Painter(dom) {\n    if (!dom) {\n      return null;\n    }\n\n    var svgId = Util.uniqueId('canvas_');\n    var canvasDom = Util.createDom(\"<svg id=\\\"\" + svgId + \"\\\"></svg>\");\n    dom.appendChild(canvasDom);\n    this.type = 'svg';\n    this.canvas = canvasDom;\n    this.context = new Defs(canvasDom);\n    this.toDraw = false;\n    return this;\n  }\n\n  var _proto = Painter.prototype;\n\n  _proto.draw = function draw(model) {\n    var self = this;\n\n    function drawInner() {\n      self.animateHandler = Util.requestAnimationFrame(function () {\n        self.animateHandler = undefined;\n\n        if (self.toDraw) {\n          drawInner();\n        }\n      });\n\n      try {\n        self._drawChildren(model);\n      } catch (ev) {\n        // 绘制时异常，中断重绘\n        console.warn('error in draw canvas, detail as:');\n        console.warn(ev);\n        self.toDraw = false;\n      }\n\n      self.toDraw = false;\n    }\n\n    if (self.animateHandler) {\n      self.toDraw = true;\n    } else {\n      drawInner();\n    }\n  };\n\n  _proto.drawSync = function drawSync(model) {\n    this._drawChildren(model);\n  };\n\n  _proto._drawGroup = function _drawGroup(model, index) {\n    var cfg = model._cfg;\n\n    if (cfg.removed || cfg.destroyed) {\n      return;\n    }\n\n    if (cfg.tobeRemoved) {\n      Util.each(cfg.tobeRemoved, function (item) {\n        if (item.parentNode) {\n          item.parentNode.removeChild(item);\n        }\n      });\n      cfg.tobeRemoved = [];\n    }\n\n    this._drawShape(model, index);\n\n    if (cfg.children && cfg.children.length > 0) {\n      this._drawChildren(model);\n    }\n  };\n\n  _proto._drawChildren = function _drawChildren(parent) {\n    var self = this;\n    var children = parent._cfg.children;\n    var shape; // 防止在画children的时候，父group已经被destroy\n\n    if (!children) {\n      return;\n    }\n\n    for (var i = 0; i < children.length; i++) {\n      shape = children[i];\n\n      if (shape.isGroup) {\n        self._drawGroup(shape, i);\n      } else {\n        self._drawShape(shape, i);\n      }\n    }\n  };\n\n  _proto._drawShape = function _drawShape(model, index) {\n    var self = this;\n    var attrs = model._attrs;\n    var cfg = model._cfg;\n    var el = cfg.el; // 删除\n\n    if (cfg.removed || cfg.destroyed) {\n      if (el) {\n        el.parentNode.removeChild(cfg.el);\n      }\n\n      return;\n    } // 新增节点\n\n\n    if (!el && cfg.parent) {\n      self._createDom(model, index);\n\n      self._updateShape(model);\n    }\n\n    el = cfg.el;\n\n    if (cfg.visible === false) {\n      el.setAttribute('visibility', 'hidden');\n      return;\n    }\n\n    if (cfg.visible && el.hasAttribute('visibility')) {\n      el.removeAttribute('visibility');\n    } // 更新\n\n\n    if (cfg.hasUpdate) {\n      self._updateShape(model);\n    }\n\n    if (attrs.clip && attrs.clip._cfg.hasUpdate) {\n      self._updateShape(attrs.clip);\n    }\n  };\n\n  _proto._updateShape = function _updateShape(model) {\n    var self = this;\n    var attrs = model._attrs;\n    var formerAttrs = model._cfg.attrs;\n\n    if (!formerAttrs) {\n      return;\n    }\n\n    if (!model._cfg.el) {\n      self._createDom(model);\n    }\n\n    if ('clip' in attrs) {\n      this._setClip(model, attrs.clip);\n    }\n\n    if ('shadowOffsetX' in attrs || 'shadowOffsetY' in attrs || 'shadowBlur' in attrs || 'shadowColor' in attrs) {\n      this._setShadow(model);\n    }\n\n    if (model.type === 'text') {\n      self._updateText(model);\n\n      return;\n    }\n\n    if (model.type === 'fan') {\n      self._updateFan(model);\n    }\n\n    if (model.type === 'marker') {\n      model._cfg.el.setAttribute('d', self._assembleMarker(attrs));\n    }\n\n    if (model.type === 'rect') {\n      model._cfg.el.setAttribute('d', self._assembleRect(attrs));\n    }\n\n    for (var key in attrs) {\n      if (attrs[key] !== formerAttrs[key]) {\n        self._setAttribute(model, key, attrs[key]);\n      }\n    }\n\n    model._cfg.attrs = Util.deepMix({}, model._attrs);\n    model._cfg.hasUpdate = false;\n  };\n\n  _proto._setAttribute = function _setAttribute(model, name, value) {\n    var type = model.type;\n    var attrs = model._attrs;\n    var el = model._cfg.el;\n    var defs = this.context; // 计算marker路径\n\n    if ((type === 'marker' || type === 'rect') && ~['x', 'y', 'radius', 'r'].indexOf(name)) {\n      return;\n    } // 圆和椭圆不是x, y， 是cx, cy。 marker的x,y 用于计算marker的路径，不需要写到dom\n\n\n    if (~['circle', 'ellipse'].indexOf(type) && ~['x', 'y'].indexOf(name)) {\n      el.setAttribute('c' + name, parseInt(value, 10));\n      return;\n    } // 多边形\n\n\n    if (type === 'polygon' && name === 'points') {\n      if (!value || value.length === 0) {\n        value = '';\n      }\n\n      if (Util.isArray(value)) {\n        value = value.map(function (point) {\n          return point[0] + ',' + point[1];\n        });\n        value = value.join(' ');\n      }\n\n      el.setAttribute('points', value);\n      return;\n    } // 设置path\n\n\n    if (name === 'path' && Util.isArray(value)) {\n      el.setAttribute('d', this._formatPath(value));\n      return;\n    } // 设置图片\n\n\n    if (name === 'img') {\n      this._setImage(model, value);\n\n      return;\n    }\n\n    if (name === 'transform') {\n      if (!value) {\n        el.removeAttribute('transform');\n        return;\n      }\n\n      this._setTransform(model);\n\n      return;\n    }\n\n    if (name === 'rotate') {\n      if (!value) {\n        el.removeAttribute('transform');\n        return;\n      }\n\n      this._setTransform(model);\n\n      return;\n    }\n\n    if (name === 'matrix') {\n      this._setTransform(model);\n\n      return;\n    }\n\n    if (name === 'fillStyle' || name === 'strokeStyle') {\n      this._setColor(model, name, value);\n\n      return;\n    }\n\n    if (name === 'clip') {\n      return;\n    }\n\n    if (~name.indexOf('Arrow')) {\n      name = SVG_ATTR_MAP[name];\n\n      if (!value) {\n        model._cfg[name] = null;\n        el.removeAttribute(name);\n      } else {\n        var id = null;\n\n        if (typeof value === 'boolean') {\n          id = defs.getDefaultArrow(attrs, name);\n        } else {\n          id = defs.addArrow(attrs, name);\n        }\n\n        el.setAttribute(name, \"url(#\" + id + \")\");\n        model._cfg[name] = id;\n      }\n\n      return;\n    } // foreignObject\n\n\n    if (name === 'html') {\n      if (typeof value === 'string') {\n        el.innerHTML = value;\n      } else {\n        el.innerHTML = '';\n        el.appendChild(value);\n      }\n    }\n\n    if (SVG_ATTR_MAP[name]) {\n      el.setAttribute(SVG_ATTR_MAP[name], value);\n    }\n  };\n\n  _proto._createDom = function _createDom(model, index) {\n    var type = SHAPE_TO_TAGS[model.type];\n    var attrs = model._attrs;\n    var parent = model._cfg.parent;\n    var parentNode = parent._cfg.el;\n\n    if (!type) {\n      throw new Error('the type' + model.type + 'is not supported by svg');\n    }\n\n    var shape = document.createElementNS('http://www.w3.org/2000/svg', type);\n    model._cfg.el = shape;\n\n    if (parent) {\n      if (typeof index === 'undefined') {\n        parentNode.appendChild(shape);\n      } else {\n        var childNodes = parent._cfg.el.childNodes; // svg下天然有defs作为子节点，svg下子元素index需要+1\n\n        if (parentNode.tagName === 'svg') {\n          index += 1;\n        }\n\n        if (childNodes.length <= index) {\n          parentNode.appendChild(shape);\n        } else {\n          parentNode.insertBefore(shape, childNodes[index]);\n        }\n      }\n    }\n\n    model._cfg.attrs = {};\n\n    if (model.type === 'text') {\n      shape.setAttribute('paint-order', 'stroke');\n      shape.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n    } else {\n      if (!attrs.stroke && !attrs.strokeStyle) {\n        shape.setAttribute('stroke', 'none');\n      }\n\n      if (!attrs.fill && !attrs.fillStyle) {\n        shape.setAttribute('fill', 'none');\n      }\n    }\n\n    return shape;\n  };\n\n  _proto._assembleMarker = function _assembleMarker(attrs) {\n    var r = attrs.r;\n\n    if (typeof attrs.r === 'undefined') {\n      r = attrs.radius;\n    }\n\n    if (isNaN(Number(attrs.x)) || isNaN(Number(attrs.y)) || isNaN(Number(r))) {\n      return '';\n    }\n\n    var d = '';\n\n    if (typeof attrs.symbol === 'function') {\n      d = attrs.symbol(attrs.x, attrs.y, r);\n    } else {\n      d = Marker.Symbols[attrs.symbol || 'circle'](attrs.x, attrs.y, r);\n    }\n\n    if (Util.isArray(d)) {\n      d = d.map(function (path) {\n        return path.join(' ');\n      }).join('');\n    }\n\n    return d;\n  };\n\n  _proto._assembleRect = function _assembleRect(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    var radius = attrs.radius;\n\n    if (!radius) {\n      return \"M \" + x + \",\" + y + \" l \" + w + \",0 l 0,\" + h + \" l\" + -w + \" 0 z\";\n    }\n\n    var r = parseRadius(radius);\n\n    if (Util.isArray(radius)) {\n      if (radius.length === 1) {\n        r.r1 = r.r2 = r.r3 = r.r4 = radius[0];\n      } else if (radius.length === 2) {\n        r.r1 = r.r3 = radius[0];\n        r.r2 = r.r4 = radius[1];\n      } else if (radius.length === 3) {\n        r.r1 = radius[0];\n        r.r2 = r.r4 = radius[1];\n        r.r3 = radius[2];\n      } else {\n        r.r1 = radius[0];\n        r.r2 = radius[1];\n        r.r3 = radius[2];\n        r.r4 = radius[3];\n      }\n    } else {\n      r.r1 = r.r2 = r.r3 = r.r4 = radius;\n    }\n\n    var d = [[\"M \" + (x + r.r1) + \",\" + y], [\"l \" + (w - r.r1 - r.r2) + \",0\"], [\"a \" + r.r2 + \",\" + r.r2 + \",0,0,1,\" + r.r2 + \",\" + r.r2], [\"l 0,\" + (h - r.r2 - r.r3)], [\"a \" + r.r3 + \",\" + r.r3 + \",0,0,1,\" + -r.r3 + \",\" + r.r3], [\"l \" + (r.r3 + r.r4 - w) + \",0\"], [\"a \" + r.r4 + \",\" + r.r4 + \",0,0,1,\" + -r.r4 + \",\" + -r.r4], [\"l 0,\" + (r.r4 + r.r1 - h)], [\"a \" + r.r1 + \",\" + r.r1 + \",0,0,1,\" + r.r1 + \",\" + -r.r1], ['z']];\n    return d.join(' ');\n  };\n\n  _proto._formatPath = function _formatPath(value) {\n    value = value.map(function (path) {\n      return path.join(' ');\n    }).join('');\n\n    if (~value.indexOf('NaN')) {\n      return '';\n    }\n\n    return value;\n  };\n\n  _proto._setTransform = function _setTransform(model) {\n    var matrix = model._attrs.matrix;\n    var el = model._cfg.el;\n    var transform = [];\n\n    for (var i = 0; i < 9; i += 3) {\n      transform.push(matrix[i] + ',' + matrix[i + 1]);\n    }\n\n    transform = transform.join(',');\n\n    if (transform.indexOf('NaN') === -1) {\n      el.setAttribute('transform', \"matrix(\" + transform + \")\");\n    } else {\n      console.warn('invalid matrix:', matrix);\n    }\n  };\n\n  _proto._setImage = function _setImage(model, img) {\n    var attrs = model._attrs;\n    var el = model._cfg.el;\n\n    if (Util.isString(img)) {\n      el.setAttribute('href', img);\n    } else if (img instanceof Image) {\n      if (!attrs.width) {\n        el.setAttribute('width', img.width);\n        model._attrs.width = img.width;\n      }\n\n      if (!attrs.height) {\n        el.setAttribute('height', img.height);\n        model._attrs.height = img.height;\n      }\n\n      el.setAttribute('href', img.src);\n    } else if (img instanceof HTMLElement && Util.isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      el.setAttribute('href', img.toDataURL());\n    } else if (img instanceof ImageData) {\n      var canvas = document.createElement('canvas');\n      canvas.setAttribute('width', img.width);\n      canvas.setAttribute('height', img.height);\n      canvas.getContext('2d').putImageData(img, 0, 0);\n\n      if (!attrs.width) {\n        el.setAttribute('width', img.width);\n        model._attrs.width = img.width;\n      }\n\n      if (!attrs.height) {\n        el.setAttribute('height', img.height);\n        model._attrs.height = img.height;\n      }\n\n      el.setAttribute('href', canvas.toDataURL());\n    }\n  };\n\n  _proto._updateFan = function _updateFan(model) {\n    function getPoint(angle, radius, center) {\n      return {\n        x: radius * Math.cos(angle) + center.x,\n        y: radius * Math.sin(angle) + center.y\n      };\n    }\n\n    var attrs = model._attrs;\n    var cfg = model._cfg;\n    var center = {\n      x: attrs.x,\n      y: attrs.y\n    };\n    var d = [];\n    var startAngle = attrs.startAngle;\n    var endAngle = attrs.endAngle;\n\n    if (Util.isNumberEqual(endAngle - startAngle, Math.PI * 2)) {\n      endAngle -= 0.00001;\n    }\n\n    var outerStart = getPoint(startAngle, attrs.re, center);\n    var outerEnd = getPoint(endAngle, attrs.re, center);\n    var fa = endAngle > startAngle ? 1 : 0;\n    var fs = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n    var rs = attrs.rs;\n    var re = attrs.re;\n    var innerStart = getPoint(startAngle, attrs.rs, center);\n    var innerEnd = getPoint(endAngle, attrs.rs, center);\n\n    if (attrs.rs > 0) {\n      d.push(\"M \" + outerEnd.x + \",\" + outerEnd.y);\n      d.push(\"L \" + innerEnd.x + \",\" + innerEnd.y);\n      d.push(\"A \" + rs + \",\" + rs + \",0,\" + fs + \",\" + (fa === 1 ? 0 : 1) + \",\" + innerStart.x + \",\" + innerStart.y);\n      d.push(\"L \" + outerStart.x + \" \" + outerStart.y);\n    } else {\n      d.push(\"M \" + center.x + \",\" + center.y);\n      d.push(\"L \" + outerStart.x + \",\" + outerStart.y);\n    }\n\n    d.push(\"A \" + re + \",\" + re + \",0,\" + fs + \",\" + fa + \",\" + outerEnd.x + \",\" + outerEnd.y);\n\n    if (attrs.rs > 0) {\n      d.push(\"L \" + innerEnd.x + \",\" + innerEnd.y);\n    } else {\n      d.push('Z');\n    }\n\n    cfg.el.setAttribute('d', d.join(' '));\n  };\n\n  _proto._updateText = function _updateText(model) {\n    var self = this;\n    var attrs = model._attrs;\n    var formerAttrs = model._cfg.attrs;\n    var el = model._cfg.el;\n\n    this._setFont(model);\n\n    for (var attr in attrs) {\n      if (attrs[attr] !== formerAttrs[attr]) {\n        if (attr === 'text') {\n          self._setText(model, \"\" + attrs[attr]);\n\n          continue;\n        }\n\n        if (attr === 'fillStyle' || attr === 'strokeStyle') {\n          this._setColor(model, attr, attrs[attr]);\n\n          continue;\n        }\n\n        if (attr === 'matrix') {\n          this._setTransform(model);\n\n          continue;\n        }\n\n        if (SVG_ATTR_MAP[attr]) {\n          el.setAttribute(SVG_ATTR_MAP[attr], attrs[attr]);\n        }\n      }\n    }\n\n    model._cfg.attrs = Object.assign({}, model._attrs);\n    model._cfg.hasUpdate = false;\n  };\n\n  _proto._setFont = function _setFont(model) {\n    var el = model.get('el');\n    var attrs = model._attrs;\n    var fontSize = attrs.fontSize;\n    el.setAttribute('alignment-baseline', BASELINE_MAP[attrs.textBaseline] || 'baseline');\n    el.setAttribute('text-anchor', ANCHOR_MAP[attrs.textAlign] || 'left');\n\n    if (fontSize && +fontSize < 12) {\n      // 小于 12 像素的文本进行 scale 处理\n      attrs.matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      model.transform([['t', -attrs.x, -attrs.y], ['s', +fontSize / 12, +fontSize / 12], ['t', attrs.x, attrs.y]]);\n    }\n  };\n\n  _proto._setText = function _setText(model, text) {\n    var el = model._cfg.el;\n    var baseline = model._attrs.textBaseline || 'bottom';\n\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      var x = model._attrs.x;\n      var textArr = text.split('\\n');\n      var textLen = textArr.length - 1;\n      var arr = '';\n      Util.each(textArr, function (segment, i) {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'top') {\n            arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'middle') {\n            arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'bottom') {\n            arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'hanging') {\n            arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          }\n        } else {\n          arr += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n        }\n      });\n      el.innerHTML = arr;\n    } else {\n      el.innerHTML = text;\n    }\n  };\n\n  _proto._setClip = function _setClip(model, value) {\n    var el = model._cfg.el;\n\n    if (!value) {\n      el.removeAttribute('clip-path');\n      return;\n    }\n\n    if (!el.hasAttribute('clip-path')) {\n      this._createDom(value);\n\n      this._updateShape(value);\n\n      var id = this.context.addClip(value);\n      el.setAttribute('clip-path', \"url(#\" + id + \")\");\n    } else if (value._cfg.hasUpdate) {\n      this._updateShape(value);\n    }\n  };\n\n  _proto._setColor = function _setColor(model, name, value) {\n    var el = model._cfg.el;\n    var defs = this.context;\n\n    if (!value) {\n      el.setAttribute(SVG_ATTR_MAP[name], 'none');\n      return;\n    }\n\n    value = value.trim();\n\n    if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\n      var id = defs.find('gradient', value);\n\n      if (!id) {\n        id = defs.addGradient(value);\n      }\n\n      el.setAttribute(SVG_ATTR_MAP[name], \"url(#\" + id + \")\");\n    } else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\n      var _id = defs.find('pattern', value);\n\n      if (!_id) {\n        _id = defs.addPattern(value);\n      }\n\n      el.setAttribute(SVG_ATTR_MAP[name], \"url(#\" + _id + \")\");\n    } else {\n      el.setAttribute(SVG_ATTR_MAP[name], value);\n    }\n  };\n\n  _proto._setShadow = function _setShadow(model) {\n    var el = model._cfg.el;\n    var attrs = model._attrs;\n    var cfg = {\n      dx: attrs.shadowOffsetX,\n      dy: attrs.shadowOffsetY,\n      blur: attrs.shadowBlur,\n      color: attrs.shadowColor\n    };\n\n    if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {\n      el.removeAttribute('filter');\n    } else {\n      var id = this.context.find('filter', cfg);\n\n      if (!id) {\n        id = this.context.addShadow(cfg, this);\n      }\n\n      el.setAttribute('filter', \"url(#\" + id + \")\");\n    }\n  };\n\n  return Painter;\n}();\n\nmodule.exports = Painter;\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/9.\n */\nvar Util = __webpack_require__(1);\n\nvar Gradient = __webpack_require__(222);\n\nvar Shadow = __webpack_require__(223);\n\nvar Arrow = __webpack_require__(224);\n\nvar Clip = __webpack_require__(225);\n\nvar Pattern = __webpack_require__(226);\n\nvar Defs =\n/*#__PURE__*/\nfunction () {\n  function Defs(canvas) {\n    var el = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n    var id = Util.uniqueId('defs_');\n    el.id = id;\n    canvas.appendChild(el);\n    this.children = [];\n    this.defaultArrow = {};\n    this.el = el;\n    this.canvas = canvas;\n  }\n\n  var _proto = Defs.prototype;\n\n  _proto.find = function find(type, attr) {\n    var children = this.children;\n    var result = null;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].match(type, attr)) {\n        result = children[i].id;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  _proto.findById = function findById(id) {\n    var children = this.children;\n    var flag = null;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].id === id) {\n        flag = children[i];\n        break;\n      }\n    }\n\n    return flag;\n  };\n\n  _proto.add = function add(item) {\n    this.children.push(item);\n    item.canvas = this.canvas;\n    item.parent = this;\n  };\n\n  _proto.getDefaultArrow = function getDefaultArrow(attrs, name) {\n    var stroke = attrs.stroke || attrs.strokeStyle;\n\n    if (this.defaultArrow[stroke]) {\n      return this.defaultArrow[stroke].id;\n    }\n\n    var arrow = new Arrow(attrs, name);\n    this.defaultArrow[stroke] = arrow;\n    this.el.appendChild(arrow.el);\n    return arrow.id;\n  };\n\n  _proto.addGradient = function addGradient(cfg) {\n    var gradient = new Gradient(cfg);\n    this.el.appendChild(gradient.el);\n    this.add(gradient);\n    return gradient.id;\n  };\n\n  _proto.addArrow = function addArrow(attrs, name) {\n    var arrow = new Arrow(attrs, name);\n    this.el.appendChild(arrow.el);\n    return arrow.id;\n  };\n\n  _proto.addShadow = function addShadow(cfg) {\n    var shadow = new Shadow(cfg);\n    this.el.appendChild(shadow.el);\n    this.add(shadow);\n    return shadow.id;\n  };\n\n  _proto.addPattern = function addPattern(cfg) {\n    var pattern = new Pattern(cfg);\n    this.el.appendChild(pattern.el);\n    this.add(pattern);\n    return pattern.id;\n  };\n\n  _proto.addClip = function addClip(cfg) {\n    var clip = new Clip(cfg);\n    this.el.appendChild(clip.el);\n    this.add(clip);\n    return clip.id;\n  };\n\n  return Defs;\n}();\n\nmodule.exports = Defs;\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/9.\n */\nvar Util = __webpack_require__(1);\n\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/ig;\n\nfunction addStop(steps) {\n  var arr = steps.match(regexColorStop);\n\n  if (!arr) {\n    return '';\n  }\n\n  var stops = '';\n  arr.sort(function (a, b) {\n    a = a.split(':');\n    b = b.split(':');\n    return Number(a[0]) - Number(b[0]);\n  });\n  Util.each(arr, function (item) {\n    item = item.split(':');\n    stops += \"<stop offset=\\\"\" + item[0] + \"\\\" stop-color=\\\"\" + item[1] + \"\\\"></stop>\";\n  });\n  return stops;\n}\n\nfunction parseLineGradient(color, el) {\n  var arr = regexLG.exec(color);\n  var angle = Util.mod(Util.toRadian(parseFloat(arr[1])), Math.PI * 2);\n  var steps = arr[2];\n  var start;\n  var end;\n\n  if (angle >= 0 && angle < 0.5 * Math.PI) {\n    start = {\n      x: 0,\n      y: 0\n    };\n    end = {\n      x: 1,\n      y: 1\n    };\n  } else if (0.5 * Math.PI <= angle && angle < Math.PI) {\n    start = {\n      x: 1,\n      y: 0\n    };\n    end = {\n      x: 0,\n      y: 1\n    };\n  } else if (Math.PI <= angle && angle < 1.5 * Math.PI) {\n    start = {\n      x: 1,\n      y: 1\n    };\n    end = {\n      x: 0,\n      y: 0\n    };\n  } else {\n    start = {\n      x: 0,\n      y: 1\n    };\n    end = {\n      x: 1,\n      y: 0\n    };\n  }\n\n  var tanTheta = Math.tan(angle);\n  var tanTheta2 = tanTheta * tanTheta;\n  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;\n  el.setAttribute('x1', start.x);\n  el.setAttribute('y1', start.y);\n  el.setAttribute('x2', x);\n  el.setAttribute('y2', y);\n  el.innerHTML = addStop(steps);\n}\n\nfunction parseRadialGradient(color, self) {\n  var arr = regexRG.exec(color);\n  var cx = parseFloat(arr[1]);\n  var cy = parseFloat(arr[2]);\n  var r = parseFloat(arr[3]);\n  var steps = arr[4];\n  self.setAttribute('cx', cx);\n  self.setAttribute('cy', cy);\n  self.setAttribute('r', r);\n  self.innerHTML = addStop(steps);\n}\n\nvar Gradient =\n/*#__PURE__*/\nfunction () {\n  function Gradient(cfg) {\n    var el = null;\n    var id = Util.uniqueId('gradient_');\n\n    if (cfg.toLowerCase()[0] === 'l') {\n      el = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n      parseLineGradient(cfg, el);\n    } else {\n      el = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n      parseRadialGradient(cfg, el);\n    }\n\n    el.setAttribute('id', id);\n    this.el = el;\n    this.id = id;\n    this.cfg = cfg;\n    return this;\n  }\n\n  var _proto = Gradient.prototype;\n\n  _proto.match = function match(type, attr) {\n    return this.cfg === attr;\n  };\n\n  return Gradient;\n}();\n\nmodule.exports = Gradient;\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/10.\n */\nvar Util = __webpack_require__(1);\n\nvar ATTR_MAP = {\n  shadowColor: 'color',\n  shadowOpacity: 'opacity',\n  shadowBlur: 'blur',\n  shadowOffsetX: 'dx',\n  shadowOffsetY: 'dy'\n};\nvar SHADOW_DIMENSION = {\n  x: '-40%',\n  y: '-40%',\n  width: '200%',\n  height: '200%'\n};\n\nvar Shadow =\n/*#__PURE__*/\nfunction () {\n  function Shadow(cfg) {\n    this.type = 'filter';\n    var el = document.createElementNS('http://www.w3.org/2000/svg', 'filter'); // expand the filter region to fill in shadows\n\n    Util.each(SHADOW_DIMENSION, function (v, k) {\n      el.setAttribute(k, v);\n    });\n    this.el = el;\n    this.id = Util.uniqueId('filter_');\n    this.el.id = this.id;\n    this.cfg = cfg;\n\n    this._parseShadow(cfg, el);\n\n    return this;\n  }\n\n  var _proto = Shadow.prototype;\n\n  _proto.match = function match(type, cfg) {\n    if (this.type !== type) {\n      return false;\n    }\n\n    var flag = true;\n    var config = this.cfg;\n    Util.each(Object.keys(config), function (attr) {\n      if (config[attr] !== cfg[attr]) {\n        flag = false;\n        return false;\n      }\n    });\n    return flag;\n  };\n\n  _proto.update = function update(name, value) {\n    var config = this.cfg;\n    config[ATTR_MAP[name]] = value;\n\n    this._parseShadow(config, this.el);\n\n    return this;\n  };\n\n  _proto._parseShadow = function _parseShadow(config, el) {\n    var child = \"<feDropShadow \\n      dx=\\\"\" + (config.dx || 0) + \"\\\" \\n      dy=\\\"\" + (config.dy || 0) + \"\\\" \\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n    el.innerHTML = child;\n  };\n\n  return Shadow;\n}();\n\nmodule.exports = Shadow;\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/11.\n */\nvar Util = __webpack_require__(1);\n\nvar Arrow =\n/*#__PURE__*/\nfunction () {\n  function Arrow(attrs, type) {\n    var el = document.createElementNS('http://www.w3.org/2000/svg', 'marker');\n    var id = Util.uniqueId('marker_');\n    el.setAttribute('id', id);\n    var shape = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    shape.setAttribute('stroke', 'none');\n    shape.setAttribute('fill', attrs.stroke || '#000');\n    el.appendChild(shape);\n    el.setAttribute('overflow', 'visible');\n    el.setAttribute('orient', 'auto-start-reverse');\n    this.el = el;\n    this.child = shape;\n    this.id = id;\n    this.cfg = attrs[type === 'marker-start' ? 'startArrow' : 'endArrow'];\n    this.stroke = attrs.stroke || '#000';\n\n    if (this.cfg === true) {\n      this._setDefaultPath(type, shape);\n    } else {\n      this._setMarker(attrs.lineWidth, shape);\n    }\n\n    return this;\n  }\n\n  var _proto = Arrow.prototype;\n\n  _proto.match = function match() {\n    return false;\n  };\n\n  _proto._setDefaultPath = function _setDefaultPath(type, el) {\n    var parent = this.el;\n    el.setAttribute('d', 'M0,0 L6,3 L0,6 L3,3Z');\n    parent.setAttribute('refX', 3);\n    parent.setAttribute('refY', 3);\n  };\n\n  _proto._setMarker = function _setMarker(r, el) {\n    var parent = this.el;\n    var path = this.cfg.path;\n    var d = this.cfg.d;\n\n    if (Util.isArray(path)) {\n      path = path.map(function (segment) {\n        return segment.join(' ');\n      }).join('');\n    }\n\n    el.setAttribute('d', path);\n    parent.appendChild(el);\n\n    if (d) {\n      parent.setAttribute('refX', d / r);\n    }\n  };\n\n  _proto.update = function update(fill) {\n    var child = this.child;\n\n    if (child.attr) {\n      child.attr('fill', fill);\n    } else {\n      child.setAttribute('fill', fill);\n    }\n  };\n\n  return Arrow;\n}();\n\nmodule.exports = Arrow;\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/14.\n */\nvar Util = __webpack_require__(1);\n\nvar Clip =\n/*#__PURE__*/\nfunction () {\n  function Clip(cfg) {\n    this.type = 'clip';\n    var el = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n    this.el = el;\n    this.id = Util.uniqueId('clip_');\n    el.id = this.id;\n    var shapeEl = cfg._cfg.el; // just in case the clip shape is also a shape needs to be drawn\n\n    el.appendChild(shapeEl.cloneNode(true));\n    this.cfg = cfg;\n    return this;\n  }\n\n  var _proto = Clip.prototype;\n\n  _proto.match = function match() {\n    return false;\n  };\n\n  _proto.remove = function remove() {\n    var el = this.el;\n    el.parentNode.removeChild(el);\n  };\n\n  return Clip;\n}();\n\nmodule.exports = Clip;\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Created by Elaine on 2018/5/9.\n */\nvar Util = __webpack_require__(1);\n\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\n\nvar Pattern =\n/*#__PURE__*/\nfunction () {\n  function Pattern(cfg) {\n    var el = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n    el.setAttribute('patternUnits', 'userSpaceOnUse');\n    var child = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n    el.appendChild(child);\n    var id = Util.uniqueId('pattern_');\n    el.id = id;\n    this.el = el;\n    this.id = id;\n    this.cfg = cfg;\n    var arr = regexPR.exec(cfg);\n    var source = arr[2];\n    child.setAttribute('href', source);\n    var img = new Image();\n\n    if (!source.match(/^data:/i)) {\n      img.crossOrigin = 'Anonymous';\n    }\n\n    img.src = source;\n\n    function onload() {\n      console.log(img.width, img.height);\n      el.setAttribute('width', img.width);\n      el.setAttribute('height', img.height);\n    }\n\n    if (img.complete) {\n      onload();\n    } else {\n      img.onload = onload; // Fix onload() bug in IE9\n\n      img.src = img.src;\n    }\n\n    return this;\n  }\n\n  var _proto = Pattern.prototype;\n\n  _proto.match = function match(type, attr) {\n    return this.cfg === attr;\n  };\n\n  return Pattern;\n}();\n\nmodule.exports = Pattern;\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports) {\n\nvar TAG_MAP = {\n  svg: 'svg',\n  circle: 'circle',\n  rect: 'rect',\n  text: 'text',\n  path: 'path',\n  foreignObject: 'foreignObject',\n  polygon: 'polygon',\n  ellipse: 'ellipse',\n  image: 'image'\n};\n\nmodule.exports = function getShape(x, y, e) {\n  var target = e.target || e.srcElement;\n\n  if (!TAG_MAP[target.tagName]) {\n    var parent = target.parentNode;\n\n    while (parent && !TAG_MAP[parent.tagName]) {\n      parent = parent.parentNode;\n    }\n\n    target = parent;\n  }\n\n  if (this._cfg.el === target) {\n    return this;\n  }\n\n  return this.find(function (item) {\n    return item._cfg && item._cfg.el === target;\n  });\n};\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  addEventListener: __webpack_require__(229),\n  createDom: __webpack_require__(94),\n  getBoundingClientRect: __webpack_require__(230),\n  getHeight: __webpack_require__(231),\n  getOuterHeight: __webpack_require__(232),\n  getOuterWidth: __webpack_require__(233),\n  getRatio: __webpack_require__(234),\n  getStyle: __webpack_require__(235),\n  getWidth: __webpack_require__(236),\n  modifyCSS: __webpack_require__(95),\n  requestAnimationFrame: __webpack_require__(96)\n};\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports) {\n\n/**\n * 添加事件监听器\n * @param  {Object} target DOM对象\n * @param  {String} eventType 事件名\n * @param  {Funtion} callback 回调函数\n * @return {Object} 返回对象\n */\nmodule.exports = function addEventListener(target, eventType, callback) {\n  if (target) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  }\n};\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports) {\n\nmodule.exports = function getBoundingClientRect(node, defaultValue) {\n  if (node && node.getBoundingClientRect) {\n    var rect = node.getBoundingClientRect();\n    var top = document.documentElement.clientTop;\n    var left = document.documentElement.clientLeft;\n    return {\n      top: rect.top - top,\n      bottom: rect.bottom - top,\n      left: rect.left - left,\n      right: rect.right - left\n    };\n  }\n\n  return defaultValue || null;\n};\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports) {\n\n/**\n * 获取高度\n * @param  {HTMLElement} el dom节点\n * @param  {Number} defaultValue 默认值\n * @return {Number} 高度\n */\nmodule.exports = function getHeight(el, defaultValue) {\n  var height = this.getStyle(el, 'height', defaultValue);\n\n  if (height === 'auto') {\n    height = el.offsetHeight;\n  }\n\n  return parseFloat(height);\n};\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports) {\n\n/**\n * 获取外层高度\n * @param  {HTMLElement} el dom节点\n * @param  {Number} defaultValue 默认值\n * @return {Number} 高度\n */\nmodule.exports = function getOuterHeight(el, defaultValue) {\n  var height = this.getHeight(el, defaultValue);\n  var bTop = parseFloat(this.getStyle(el, 'borderTopWidth')) || 0;\n  var pTop = parseFloat(this.getStyle(el, 'paddingTop')) || 0;\n  var pBottom = parseFloat(this.getStyle(el, 'paddingBottom')) || 0;\n  var bBottom = parseFloat(this.getStyle(el, 'borderBottomWidth')) || 0;\n  return height + bTop + bBottom + pTop + pBottom;\n};\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports) {\n\n/**\n * 获取外层宽度\n * @param  {HTMLElement} el dom节点\n * @param  {Number} defaultValue 默认值\n * @return {Number} 宽度\n */\nmodule.exports = function getOuterWidth(el, defaultValue) {\n  var width = this.getWidth(el, defaultValue);\n  var bLeft = parseFloat(this.getStyle(el, 'borderLeftWidth')) || 0;\n  var pLeft = parseFloat(this.getStyle(el, 'paddingLeft')) || 0;\n  var pRight = parseFloat(this.getStyle(el, 'paddingRight')) || 0;\n  var bRight = parseFloat(this.getStyle(el, 'borderRightWidth')) || 0;\n  return width + bLeft + bRight + pLeft + pRight;\n};\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports) {\n\nmodule.exports = function getRatio() {\n  return window.devicePixelRatio ? window.devicePixelRatio : 2;\n};\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNil = __webpack_require__(5);\n/**\n * 获取样式\n * @param  {Object} dom DOM节点\n * @param  {String} name 样式名\n * @param  {Any} defaultValue 默认值\n * @return {String} 属性值\n */\n\n\nmodule.exports = function getStyle(dom, name, defaultValue) {\n  try {\n    if (window.getComputedStyle) {\n      return window.getComputedStyle(dom, null)[name];\n    }\n\n    return dom.currentStyle[name];\n  } catch (e) {\n    if (!isNil(defaultValue)) {\n      return defaultValue;\n    }\n\n    return null;\n  }\n};\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports) {\n\n/**\n * 获取宽度\n * @param  {HTMLElement} el  dom节点\n * @param  {Number} defaultValue 默认值\n * @return {Number} 宽度\n */\nmodule.exports = function getWidth(el, defaultValue) {\n  var width = this.getStyle(el, 'width', defaultValue);\n\n  if (width === 'auto') {\n    width = el.offsetWidth;\n  }\n\n  return parseFloat(width);\n};\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  contains: __webpack_require__(41),\n  difference: __webpack_require__(238),\n  find: __webpack_require__(239),\n  firstValue: __webpack_require__(240),\n  flatten: __webpack_require__(241),\n  flattenDeep: __webpack_require__(242),\n  getRange: __webpack_require__(243),\n  merge: __webpack_require__(42),\n  pull: __webpack_require__(90),\n  pullAt: __webpack_require__(130),\n  reduce: __webpack_require__(244),\n  remove: __webpack_require__(245),\n  sortBy: __webpack_require__(246),\n  union: __webpack_require__(247),\n  uniq: __webpack_require__(131),\n  valuesOfKey: __webpack_require__(64)\n};\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar filter = __webpack_require__(63);\n\nvar contains = __webpack_require__(41);\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to inspect.\n * @param {Array} values The values to exclude.\n * @return {Array} Returns the new array of filtered values.\n * @example\n * difference([2, 1], [2, 3]);  // => [1]\n */\n\n\nvar difference = function difference(arr) {\n  var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return filter(arr, function (value) {\n    return !contains(values, value);\n  });\n};\n\nmodule.exports = difference;\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(11);\n\nvar isPlainObject = __webpack_require__(26);\n\nvar isMatch = __webpack_require__(128);\n\nfunction find(arr, predicate) {\n  var _predicate = void 0;\n\n  if (isFunction(predicate)) {\n    _predicate = predicate;\n  }\n\n  if (isPlainObject(predicate)) {\n    _predicate = function _predicate(a) {\n      return isMatch(a, predicate);\n    };\n  }\n\n  if (_predicate) {\n    for (var i = 0; i < arr.length; i += 1) {\n      if (_predicate(arr[i])) {\n        return arr[i];\n      }\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = find;\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNil = __webpack_require__(5);\n\nvar isArray = __webpack_require__(4);\n\nvar firstValue = function firstValue(data, name) {\n  var rst = null;\n\n  for (var i = 0; i < data.length; i++) {\n    var obj = data[i];\n    var value = obj[name];\n\n    if (!isNil(value)) {\n      if (isArray(value)) {\n        rst = value[0];\n      } else {\n        rst = value;\n      }\n\n      break;\n    }\n  }\n\n  return rst;\n};\n\nmodule.exports = firstValue;\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar each = __webpack_require__(2);\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to flatten.\n * @return {Array} Returns the new flattened array.\n * @example\n *\n * flatten([1, [2, [3, [4]], 5]]);  // => [1, 2, [3, [4]], 5]\n */\n\n\nvar flatten = function flatten(arr) {\n  if (!isArray(arr)) {\n    return arr;\n  }\n\n  var result = [];\n  each(arr, function (item) {\n    if (isArray(item)) {\n      each(item, function (subItem) {\n        result.push(subItem);\n      });\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nmodule.exports = flatten;\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to flatten.\n * @param {Array} result The array to return.\n * @return {Array} Returns the new flattened array.\n * @example\n *\n * flattenDeep([1, [2, [3, [4]], 5]]);  // => [1, 2, 3, 4, 5]\n */\n\n\nvar flattenDeep = function flattenDeep(arr) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!isArray(arr)) {\n    result.push(arr);\n  } else {\n    for (var i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], result);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = flattenDeep;\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar filter = __webpack_require__(63);\n\nvar isArray = __webpack_require__(4);\n\nvar getRange = function getRange(values) {\n  // 存在 NaN 时，min,max 判定会出问题\n  values = filter(values, function (v) {\n    return !isNaN(v);\n  });\n\n  if (!values.length) {\n    // 如果没有数值则直接返回0\n    return {\n      min: 0,\n      max: 0\n    };\n  }\n\n  if (isArray(values[0])) {\n    var tmp = [];\n\n    for (var i = 0; i < values.length; i++) {\n      tmp = tmp.concat(values[i]);\n    }\n\n    values = tmp;\n  }\n\n  var max = Math.max.apply(null, values);\n  var min = Math.min.apply(null, values);\n  return {\n    min: min,\n    max: max\n  };\n};\n\nmodule.exports = getRange;\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar isPlainObject = __webpack_require__(26);\n\nvar each = __webpack_require__(2);\n\nvar reduce = function reduce(arr, fn, init) {\n  if (!isArray(arr) && !isPlainObject(arr)) {\n    return arr;\n  }\n\n  var result = init;\n  each(arr, function (data, i) {\n    result = fn(result, data, i);\n  });\n  return result;\n};\n\nmodule.exports = reduce;\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(13);\n\nvar pullAt = __webpack_require__(130);\n\nvar remove = function remove(arr, predicate) {\n  /**\n   * const arr = [1, 2, 3, 4]\n   * const evens = remove(arr, n => n % 2 == 0)\n   * console.log(arr) // => [1, 3]\n   * console.log(evens) // => [2, 4]\n   */\n  var result = [];\n\n  if (!isArrayLike(arr)) {\n    return result;\n  }\n\n  var i = -1;\n  var indexes = [];\n  var length = arr.length;\n\n  while (++i < length) {\n    var value = arr[i];\n\n    if (predicate(value, i, arr)) {\n      result.push(value);\n      indexes.push(i);\n    }\n  }\n\n  pullAt(arr, indexes);\n  return result;\n};\n\nmodule.exports = remove;\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isString = __webpack_require__(10);\n\nvar isFunction = __webpack_require__(11);\n\nvar isArray = __webpack_require__(4);\n\nfunction sortBy(arr, key) {\n  var comparer = void 0;\n\n  if (isFunction(key)) {\n    comparer = function comparer(a, b) {\n      return key(a) - key(b);\n    };\n  } else {\n    var keys = [];\n\n    if (isString(key)) {\n      keys.push(key);\n    } else if (isArray(key)) {\n      keys = key;\n    }\n\n    comparer = function comparer(a, b) {\n      for (var i = 0; i < keys.length; i += 1) {\n        var prop = keys[i];\n\n        if (a[prop] > b[prop]) {\n          return 1;\n        }\n\n        if (a[prop] < b[prop]) {\n          return -1;\n        }\n      }\n\n      return 0;\n    };\n  }\n\n  arr.sort(comparer);\n  return arr;\n}\n\nmodule.exports = sortBy;\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar toArray = __webpack_require__(34);\n\nvar uniq = __webpack_require__(131);\n\nvar union = function union() {\n  var result = [];\n  var sources = toArray(arguments);\n  each(sources, function (arr) {\n    result = result.concat(arr);\n  });\n  return uniq(result);\n};\n\nmodule.exports = union;\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  getWrapBehavior: __webpack_require__(249),\n  wrapBehavior: __webpack_require__(250)\n};\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports) {\n\n/**\n * 获取封装的事件\n * @protected\n * @param  {Object} obj   对象\n * @param  {String} action 事件名称\n * @return {Function}        返回事件处理函数\n */\nfunction getWrapBehavior(obj, action) {\n  return obj['_wrap_' + action];\n}\n\nmodule.exports = getWrapBehavior;\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports) {\n\n/**\n * 封装事件，便于使用上下文this,和便于解除事件时使用\n * @protected\n * @param  {Object} obj   对象\n * @param  {String} action 事件名称\n * @return {Function}        返回事件处理函数\n */\nfunction wrapBehavior(obj, action) {\n  if (obj['_wrap_' + action]) {\n    return obj['_wrap_' + action];\n  }\n\n  var method = function method(e) {\n    obj[action](e);\n  };\n\n  obj['_wrap_' + action] = method;\n  return method;\n}\n\nmodule.exports = wrapBehavior;\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar number2color = __webpack_require__(252);\n\nmodule.exports = {\n  number2color: number2color,\n  numberToColor: number2color,\n  parsePath: __webpack_require__(253),\n  parseRadius: __webpack_require__(254)\n};\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports) {\n\nvar numColorCache = {};\n\nmodule.exports = function numberToColor(num) {\n  // 增加缓存\n  var color = numColorCache[num];\n\n  if (!color) {\n    var str = num.toString(16);\n\n    for (var i = str.length; i < 6; i++) {\n      str = '0' + str;\n    }\n\n    color = '#' + str;\n    numColorCache[num] = color;\n  }\n\n  return color;\n};\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar isString = __webpack_require__(10);\n\nvar each = __webpack_require__(2);\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\n\nmodule.exports = function parsePath(path) {\n  path = path || [];\n\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, function (item, index) {\n      item = item.match(regexDot);\n\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0);\n        item.splice(1, 0, item[0].substr(1));\n        item[0] = tag;\n      }\n\n      each(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          item[i] = +sub;\n        }\n      });\n      path[index] = item;\n    });\n    return path;\n  }\n};\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nmodule.exports = function parseRadius(radius) {\n  var r1 = 0,\n      r2 = 0,\n      r3 = 0,\n      r4 = 0;\n\n  if (isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n\n  return {\n    r1: r1,\n    r2: r2,\n    r3: r3,\n    r4: r4\n  };\n};\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumberEqual = __webpack_require__(35);\n\nmodule.exports = {\n  clamp: __webpack_require__(50),\n  fixedBase: __webpack_require__(256),\n  isDecimal: __webpack_require__(257),\n  isEven: __webpack_require__(258),\n  isInteger: __webpack_require__(259),\n  isNegative: __webpack_require__(260),\n  isNumberEqual: isNumberEqual,\n  isOdd: __webpack_require__(261),\n  isPositive: __webpack_require__(262),\n  maxBy: __webpack_require__(132),\n  minBy: __webpack_require__(263),\n  mod: __webpack_require__(93),\n  snapEqual: isNumberEqual,\n  toDegree: __webpack_require__(92),\n  toInt: __webpack_require__(133),\n  toInteger: __webpack_require__(133),\n  toRadian: __webpack_require__(91)\n};\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports) {\n\nvar fixedBase = function fixedBase(v, base) {\n  var str = base.toString();\n  var index = str.indexOf('.');\n\n  if (index === -1) {\n    return Math.round(v);\n  }\n\n  var length = str.substr(index + 1).length;\n\n  if (length > 20) {\n    length = 20;\n  }\n\n  return parseFloat(v.toFixed(length));\n};\n\nmodule.exports = fixedBase;\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isDecimal = function isDecimal(num) {\n  return isNumber(num) && num % 1 !== 0;\n};\n\nmodule.exports = isDecimal;\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isEven = function isEven(num) {\n  return isNumber(num) && num % 2 === 0;\n};\n\nmodule.exports = isEven;\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isInteger = Number.isInteger ? Number.isInteger : function (num) {\n  return isNumber(num) && num % 1 === 0;\n};\nmodule.exports = isInteger;\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isNagative = function isNagative(num) {\n  return isNumber(num) && num < 0;\n};\n\nmodule.exports = isNagative;\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isOdd = function isOdd(num) {\n  return isNumber(num) && num % 2 !== 0;\n};\n\nmodule.exports = isOdd;\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNumber = __webpack_require__(9);\n\nvar isPositive = function isPositive(num) {\n  return isNumber(num) && num > 0;\n};\n\nmodule.exports = isPositive;\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar isFunction = __webpack_require__(11);\n\nvar each = __webpack_require__(2);\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * minBy(objects, 'n');\n * // => { 'n': 1 }\n */\n\n\nvar minBy = function minBy(arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n\n  var min = arr[0];\n  var minData = void 0;\n\n  if (isFunction(fn)) {\n    minData = fn(arr[0]);\n  } else {\n    minData = arr[0][fn];\n  }\n\n  var data = void 0;\n  each(arr, function (val) {\n    if (isFunction(fn)) {\n      data = fn(val);\n    } else {\n      data = val[fn];\n    }\n\n    if (data < minData) {\n      min = val;\n      minData = data;\n    }\n  });\n  return min;\n};\n\nmodule.exports = minBy;\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  forIn: __webpack_require__(265),\n  has: __webpack_require__(134),\n  hasKey: __webpack_require__(266),\n  hasValue: __webpack_require__(267),\n  keys: __webpack_require__(129),\n  isMatch: __webpack_require__(128),\n  values: __webpack_require__(135)\n};\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(134);\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar contains = __webpack_require__(41);\n\nvar values = __webpack_require__(135);\n\nmodule.exports = function (obj, value) {\n  return contains(values(obj), value);\n};\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pathIntersection = __webpack_require__(269);\n\nvar path2absolute = __webpack_require__(139);\n\nvar path2curve = __webpack_require__(138);\n\nvar catmullRom2Bezier = __webpack_require__(141);\n\nmodule.exports = {\n  catmullRom2Bezier: catmullRom2Bezier,\n  catmullRomToBezier: catmullRom2Bezier,\n  fillPath: __webpack_require__(270),\n  fillPathByDiff: __webpack_require__(271),\n  formatPath: __webpack_require__(273),\n  intersection: pathIntersection,\n  pathIntersection: pathIntersection,\n  parsePathArray: __webpack_require__(137),\n  parsePathString: __webpack_require__(140),\n  pathToAbsolute: path2absolute,\n  path2absolute: path2absolute,\n  pathTocurve: path2curve,\n  path2curve: path2curve,\n  rectPath: __webpack_require__(136)\n};\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(4);\n\nvar rectPath = __webpack_require__(136);\n\nvar pathTocurve = __webpack_require__(138);\n\nvar base3 = function base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\n\nvar bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z === null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n\n  return z2 * sum;\n};\n\nvar curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [];\n  var bounds = [[], []];\n  var a = void 0;\n  var b = void 0;\n  var c = void 0;\n  var t = void 0;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (t > 0 && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    var b2ac = b * b - 4 * c * a;\n    var sqrtb2ac = Math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    var t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (t1 > 0 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    var t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (t2 > 0 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length;\n  var jlen = j;\n  var mt = void 0;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n};\n\nvar intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator;\n  var py = ny / denominator;\n  var px2 = +px.toFixed(2);\n  var py2 = +py.toFixed(2);\n\n  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n};\n\nvar isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\n\nvar box = function box(x, y, width, height) {\n  if (x === null) {\n    x = y = width = height = 0;\n  }\n\n  if (y === null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: Math.min(width, height) / 2,\n    r2: Math.max(width, height) / 2,\n    r0: Math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n};\n\nvar isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\n\nvar bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!isArray(p1x)) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveDim.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\n\nvar findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t;\n  var t13 = Math.pow(t1, 3);\n  var t12 = Math.pow(t1, 2);\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  var ax = t1 * p1x + t * c1x;\n  var ay = t1 * p1y + t * c1y;\n  var cx = t1 * c2x + t * p2x;\n  var cy = t1 * c2y + t * p2y;\n  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);\n\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n};\n\nvar interHelper = function interHelper(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1);\n  var bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1);\n  var l2 = bezlen.apply(0, bez2);\n  var n1 = ~~(l1 / 8);\n  var n2 = ~~(l2 / 8);\n  var dots1 = [];\n  var dots2 = [];\n  var xy = {};\n  var res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: d.x,\n      y: d.y,\n      t: i / n1\n    });\n  }\n\n  for (var _i = 0; _i < n2 + 1; _i++) {\n    var _d = findDotsAtSegment.apply(0, bez2.concat(_i / n2));\n\n    dots2.push({\n      x: _d.x,\n      y: _d.y,\n      t: _i / n2\n    });\n  }\n\n  for (var _i2 = 0; _i2 < n1; _i2++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[_i2];\n      var di1 = dots1[_i2 + 1];\n      var dj = dots2[j];\n      var dj1 = dots2[j + 1];\n      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\n        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nvar interPathHelper = function interPathHelper(path1, path2, justCount) {\n  path1 = pathTocurve(path1);\n  path2 = pathTocurve(path2);\n  var x1 = void 0;\n  var y1 = void 0;\n  var x2 = void 0;\n  var y2 = void 0;\n  var x1m = void 0;\n  var y1m = void 0;\n  var x2m = void 0;\n  var y2m = void 0;\n  var bez1 = void 0;\n  var bez2 = void 0;\n  var res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] === 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] === 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] === 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] === 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = interHelper(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nmodule.exports = function pathIntersection(path1, path2) {\n  return interPathHelper(path1, path2);\n};\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports) {\n\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function recurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var middlePoints = [];\n\n      for (var i = 0; i < points.length - 1; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === points.length - 2) {\n          right.push(points[i + 1]);\n        }\n\n        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      recurse(middlePoints, t);\n    }\n  }\n\n  if (points.length) {\n    recurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n\nfunction splitCurve(start, end, count) {\n  var points = [[start[1], start[2]]];\n  count = count || 2;\n  var segments = [];\n\n  if (end[0] === 'A') {\n    points.push(end[6]);\n    points.push(end[7]);\n  } else if (end[0] === 'C') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n    points.push([end[5], end[6]]);\n  } else if (end[0] === 'S' || end[0] === 'Q') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n  } else {\n    points.push([end[1], end[2]]);\n  }\n\n  var leftSegments = points;\n  var t = 1 / count;\n\n  for (var i = 0; i < count - 1; i++) {\n    var rt = t / (1 - t * i);\n    var split = decasteljau(leftSegments, rt);\n    segments.push(split.left);\n    leftSegments = split.right;\n  }\n\n  segments.push(leftSegments);\n  var result = segments.map(function (segment) {\n    var cmd = [];\n\n    if (segment.length === 4) {\n      cmd.push('C');\n      cmd = cmd.concat(segment[2]);\n    }\n\n    if (segment.length >= 3) {\n      if (segment.length === 3) {\n        cmd.push('Q');\n      }\n\n      cmd = cmd.concat(segment[1]);\n    }\n\n    if (segment.length === 2) {\n      cmd.push('L');\n    }\n\n    cmd = cmd.concat(segment[segment.length - 1]);\n    return cmd;\n  });\n  return result;\n}\n\nfunction splitSegment(start, end, count) {\n  if (count === 1) {\n    return [[].concat(start)];\n  }\n\n  var segments = [];\n\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n    segments = segments.concat(splitCurve(start, end, count));\n  } else {\n    var temp = [].concat(start);\n\n    if (temp[0] === 'M') {\n      temp[0] = 'L';\n    }\n\n    for (var i = 0; i <= count - 1; i++) {\n      segments.push(temp);\n    }\n  }\n\n  return segments;\n}\n\nmodule.exports = function fillPath(source, target) {\n  if (source.length === 1) {\n    return source;\n  }\n\n  var sourceLen = source.length - 1;\n  var targetLen = target.length - 1;\n  var ratio = sourceLen / targetLen;\n  var segmentsToFill = [];\n\n  if (source.length === 1 && source[0][0] === 'M') {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      source.push(source[0]);\n    }\n\n    return source;\n  }\n\n  for (var _i = 0; _i < targetLen; _i++) {\n    var index = Math.floor(ratio * _i);\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n  }\n\n  var filled = segmentsToFill.reduce(function (filled, count, i) {\n    if (i === sourceLen) {\n      return filled.concat(source[sourceLen]);\n    }\n\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\n  }, []);\n  filled.unshift(source[0]);\n\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n    filled.push('Z');\n  }\n\n  return filled;\n};\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isEqual = __webpack_require__(272);\n\nfunction getMinDiff(del, add, modify) {\n  var type = null;\n  var min = modify;\n\n  if (add < min) {\n    min = add;\n    type = 'add';\n  }\n\n  if (del < min) {\n    min = del;\n    type = 'del';\n  }\n\n  return {\n    type: type,\n    min: min\n  };\n}\n/*\n * https://en.wikipedia.org/wiki/Levenshtein_distance\n * 计算两条path的编辑距离\n */\n\n\nvar levenshteinDistance = function levenshteinDistance(source, target) {\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var sourceSegment = void 0,\n      targetSegment = void 0;\n  var temp = 0;\n\n  if (sourceLen === 0 || targetLen === 0) {\n    return null;\n  }\n\n  var dist = [];\n\n  for (var i = 0; i <= sourceLen; i++) {\n    dist[i] = [];\n    dist[i][0] = {\n      min: i\n    };\n  }\n\n  for (var j = 0; j <= targetLen; j++) {\n    dist[0][j] = {\n      min: j\n    };\n  }\n\n  for (var _i = 1; _i <= sourceLen; _i++) {\n    sourceSegment = source[_i - 1];\n\n    for (var _j = 1; _j <= targetLen; _j++) {\n      targetSegment = target[_j - 1];\n\n      if (isEqual(sourceSegment, targetSegment)) {\n        temp = 0;\n      } else {\n        temp = 1;\n      }\n\n      var del = dist[_i - 1][_j].min + 1;\n      var add = dist[_i][_j - 1].min + 1;\n      var modify = dist[_i - 1][_j - 1].min + temp;\n      dist[_i][_j] = getMinDiff(del, add, modify);\n    }\n  }\n\n  return dist;\n};\n\nmodule.exports = function fillPathByDiff(source, target) {\n  var diffMatrix = levenshteinDistance(source, target);\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var changes = [];\n  var index = 1;\n  var minPos = 1; // 如果source和target不是完全不相等\n\n  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\n    // 获取从source到target所需改动\n    for (var i = 1; i <= sourceLen; i++) {\n      var min = diffMatrix[i][i].min;\n      minPos = i;\n\n      for (var j = index; j <= targetLen; j++) {\n        if (diffMatrix[i][j].min < min) {\n          min = diffMatrix[i][j].min;\n          minPos = j;\n        }\n      }\n\n      index = minPos;\n\n      if (diffMatrix[i][index].type) {\n        changes.push({\n          index: i - 1,\n          type: diffMatrix[i][index].type\n        });\n      }\n    } // 对source进行增删path\n\n\n    for (var _i2 = changes.length - 1; _i2 >= 0; _i2--) {\n      index = changes[_i2].index;\n\n      if (changes[_i2].type === 'add') {\n        source.splice(index, 0, [].concat(source[index]));\n      } else {\n        source.splice(index, 1);\n      }\n    }\n  } // source尾部补齐\n\n\n  sourceLen = source.length;\n\n  if (sourceLen < targetLen) {\n    for (var _i3 = 0; _i3 < targetLen - sourceLen; _i3++) {\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n      } else {\n        source.push(source[sourceLen - 1]);\n      }\n    }\n  }\n\n  return source;\n};\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nmodule.exports = function isEqual(obj1, obj2) {\n  if (obj1.length !== obj2.length) {\n    return false;\n  }\n\n  var result = true;\n  each(obj1, function (item, i) {\n    if (item !== obj2[i]) {\n      result = false;\n      return false;\n    }\n  });\n  return result;\n};\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports) {\n\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\nfunction _getSegmentPoints(segment) {\n  var points = [];\n\n  switch (segment[0]) {\n    case 'M':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'L':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'A':\n      points.push([segment[6], segment[7]]);\n      break;\n\n    case 'Q':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'T':\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'C':\n      points.push([segment[5], segment[6]]);\n      points.push([segment[1], segment[2]]);\n      points.push([segment[3], segment[4]]);\n      break;\n\n    case 'S':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n\n    case 'H':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    case 'V':\n      points.push([segment[1], segment[1]]);\n      break;\n\n    default:\n  }\n\n  return points;\n} // 将两个点均分成count个点\n\n\nfunction _splitPoints(points, former, count) {\n  var result = [].concat(points);\n  var index = void 0;\n  var t = 1 / (count + 1);\n\n  var formerEnd = _getSegmentPoints(former)[0];\n\n  for (var i = 1; i <= count; i++) {\n    t *= i;\n    index = Math.floor(points.length * t);\n\n    if (index === 0) {\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    } else {\n      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = function formatPath(fromPath, toPath) {\n  if (fromPath.length <= 1) {\n    return fromPath;\n  }\n\n  var points = void 0;\n\n  for (var i = 0; i < toPath.length; i++) {\n    if (fromPath[i][0] !== toPath[i][0]) {\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n      points = _getSegmentPoints(fromPath[i]);\n\n      switch (toPath[i][0]) {\n        case 'M':\n          fromPath[i] = ['M'].concat(points[0]);\n          break;\n\n        case 'L':\n          fromPath[i] = ['L'].concat(points[0]);\n          break;\n\n        case 'A':\n          fromPath[i] = [].concat(toPath[i]);\n          fromPath[i][6] = points[0][0];\n          fromPath[i][7] = points[0][1];\n          break;\n\n        case 'Q':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'T':\n          fromPath[i] = ['T'].concat(points[0]);\n          break;\n\n        case 'C':\n          if (points.length < 3) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 2);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        case 'S':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n\n          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n\n        default:\n          fromPath[i] = toPath[i];\n      }\n    }\n  }\n\n  return fromPath;\n};\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar strUtil = {\n  lc: __webpack_require__(275),\n  lowerCase: __webpack_require__(142),\n  lowerFirst: __webpack_require__(75),\n  substitute: __webpack_require__(276),\n  uc: __webpack_require__(277),\n  upperCase: __webpack_require__(143),\n  upperFirst: __webpack_require__(87)\n};\nmodule.exports = strUtil;\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(142);\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports) {\n\nvar substitute = function substitute(str, o) {\n  if (!str || !o) {\n    return str;\n  }\n\n  return str.replace(/\\\\?\\{([^{}]+)\\}/g, function (match, name) {\n    if (match.charAt(0) === '\\\\') {\n      return match.slice(1);\n    }\n\n    return o[name] === undefined ? '' : o[name];\n  });\n};\n\nmodule.exports = substitute;\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(143);\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isType = __webpack_require__(12);\n\nvar checkType = {\n  getType: __webpack_require__(84),\n  isArray: __webpack_require__(4),\n  isArrayLike: __webpack_require__(13),\n  isBoolean: __webpack_require__(82),\n  isFunction: __webpack_require__(11),\n  isNil: __webpack_require__(5),\n  isNull: __webpack_require__(279),\n  isNumber: __webpack_require__(9),\n  isObject: __webpack_require__(24),\n  isObjectLike: __webpack_require__(48),\n  isPlainObject: __webpack_require__(26),\n  isPrototype: __webpack_require__(85),\n  isType: isType,\n  isUndefined: __webpack_require__(280),\n  isString: __webpack_require__(10),\n  isRegExp: __webpack_require__(281),\n  isDate: __webpack_require__(80),\n  isArguments: __webpack_require__(282),\n  isError: __webpack_require__(283)\n};\nmodule.exports = checkType;\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports) {\n\nvar isNull = function isNull(value) {\n  return value === null;\n};\n\nmodule.exports = isNull;\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports) {\n\nvar isUndefined = function isUndefined(value) {\n  return value === undefined;\n};\n\nmodule.exports = isUndefined;\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isType = __webpack_require__(12);\n\nvar isRegExp = function isRegExp(str) {\n  return isType(str, 'RegExp');\n};\n\nmodule.exports = isRegExp;\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 是否是参数类型\n *\n * @param {Object} value 测试的值\n * @return {Boolean}\n */\nvar isType = __webpack_require__(12);\n\nvar isArguments = function isArguments(value) {\n  return isType(value, 'Arguments');\n};\n\nmodule.exports = isArguments;\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 是否是参数类型\n *\n * @param {Object} value 测试的值\n * @return {Boolean}\n */\nvar isType = __webpack_require__(12);\n\nvar isError = function isError(value) {\n  return isType(value, 'Error');\n};\n\nmodule.exports = isError;\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports) {\n\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\nmodule.exports = debounce;\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(13);\n\nvar indexOf = function indexOf(arr, obj) {\n  if (!isArrayLike(arr)) {\n    return -1;\n  }\n\n  var m = Array.prototype.indexOf;\n\n  if (m) {\n    return m.call(arr, obj);\n  }\n\n  var index = -1;\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] === obj) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n};\n\nmodule.exports = indexOf;\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(11);\n\nvar isEqual = __webpack_require__(49);\n/**\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [fn] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * isEqualWith(array, other, customizer);  // => true\n */\n\n\nvar isEqualWith = function isEqualWith(value, other, fn) {\n  if (!isFunction(fn)) {\n    return isEqual(value, other);\n  }\n\n  return !!fn(value, other);\n};\n\nmodule.exports = isEqualWith;\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isArrayLike = __webpack_require__(13);\n\nvar map = function map(arr, func) {\n  if (!isArrayLike(arr)) {\n    return arr;\n  }\n\n  var result = [];\n  each(arr, function (value, index) {\n    result.push(func(value, index));\n  });\n  return result;\n};\n\nmodule.exports = map;\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar each = __webpack_require__(2);\n\nvar isPlaineObject = __webpack_require__(26);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n * pick(object, ['a', 'c']);  // => { 'a': 1, 'c': 3 }\n */\n\nvar pick = function pick(object, keys) {\n  if (object === null || !isPlaineObject(object)) {\n    return {};\n  }\n\n  var result = {};\n  each(keys, function (key) {\n    if (hasOwnProperty.call(object, key)) {\n      result[key] = object[key];\n    }\n  });\n  return result;\n};\n\nmodule.exports = pick;\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports) {\n\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : Date.now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var now = Date.now();\n    if (!previous && options.leading === false) previous = now;\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nmodule.exports = throttle;\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Default animation funciton\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar G = __webpack_require__(16);\n\nvar PathUtil = Util.PathUtil;\n\nfunction getClip(coord) {\n  var start = coord.start;\n  var end = coord.end;\n  var width = coord.getWidth();\n  var height = coord.getHeight();\n  var margin = 200;\n  var startAngle;\n  var endAngle;\n  var center;\n  var radius;\n  var clip;\n\n  if (coord.isPolar) {\n    radius = coord.getRadius();\n    center = coord.getCenter();\n    startAngle = coord.startAngle;\n    endAngle = coord.endAngle;\n    clip = new G.Fan({\n      attrs: {\n        x: center.x,\n        y: center.y,\n        rs: 0,\n        re: radius + margin,\n        startAngle: startAngle,\n        endAngle: startAngle\n      }\n    });\n    clip.endState = {\n      endAngle: endAngle\n    };\n  } else {\n    clip = new G.Rect({\n      attrs: {\n        x: start.x - margin,\n        y: end.y - margin,\n        width: coord.isTransposed ? width + margin * 2 : 0,\n        height: coord.isTransposed ? 0 : height + margin * 2\n      }\n    });\n\n    if (coord.isTransposed) {\n      clip.endState = {\n        height: height + margin * 2\n      };\n    } else {\n      clip.endState = {\n        width: width + margin * 2\n      };\n    }\n  }\n\n  clip.isClip = true;\n  return clip;\n} // 获取图形的包围盒\n\n\nfunction getPointsBox(points) {\n  if (Util.isEmpty(points)) {\n    return null;\n  }\n\n  var minX = points[0].x;\n  var maxX = points[0].x;\n  var minY = points[0].y;\n  var maxY = points[0].y;\n  Util.each(points, function (point) {\n    minX = minX > point.x ? point.x : minX;\n    maxX = maxX < point.x ? point.x : maxX;\n    minY = minY > point.y ? point.y : minY;\n    maxY = maxY < point.y ? point.y : maxY;\n  });\n  return {\n    minX: minX,\n    maxX: maxX,\n    minY: minY,\n    maxY: maxY,\n    centerX: (minX + maxX) / 2,\n    centerY: (minY + maxY) / 2\n  };\n}\n\nfunction getAngle(shape, coord) {\n  var points = shape.points || shape.get('origin').points;\n  var box = getPointsBox(points);\n  var endAngle;\n  var startAngle;\n  var coordStartAngle = coord.startAngle;\n  var coordEndAngle = coord.endAngle;\n  var diffAngle = coordEndAngle - coordStartAngle;\n\n  if (coord.isTransposed) {\n    endAngle = box.maxY * diffAngle;\n    startAngle = box.minY * diffAngle;\n  } else {\n    endAngle = box.maxX * diffAngle;\n    startAngle = box.minX * diffAngle;\n  }\n\n  endAngle += coordStartAngle;\n  startAngle += coordStartAngle;\n  return {\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n}\n\nfunction getAnimateParam(animateCfg, index, id) {\n  var result = {};\n\n  if (animateCfg.delay) {\n    result.delay = Util.isFunction(animateCfg.delay) ? animateCfg.delay(index, id) : animateCfg.delay;\n  }\n\n  result.easing = Util.isFunction(animateCfg.easing) ? animateCfg.easing(index, id) : animateCfg.easing;\n  result.duration = Util.isFunction(animateCfg.duration) ? animateCfg.duration(index, id) : animateCfg.duration;\n  result.callback = animateCfg.callback;\n  return result;\n}\n\nfunction scaleInY(shape, animateCfg) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var box = shape.getBBox();\n  var points = shape.get('origin').points;\n  var x = (box.minX + box.maxX) / 2;\n  var y;\n\n  if (points[0].y - points[1].y <= 0) {\n    // 当顶点在零点之下\n    y = box.maxY;\n  } else {\n    y = box.minY;\n  }\n\n  var v = [x, y, 1];\n  shape.apply(v);\n  shape.attr('transform', [['t', -x, -y], ['s', 1, 0.01], ['t', x, y]]);\n  var endState = {\n    transform: [['t', -x, -y], ['s', 1, 100], ['t', x, y]]\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, animateParam.callback, animateParam.delay);\n}\n\nfunction scaleInX(shape, animateCfg) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var box = shape.getBBox();\n  var points = shape.get('origin').points;\n  var x;\n  var y = (box.minY + box.maxY) / 2;\n\n  if (points[0].y - points[1].y > 0) {\n    // 当顶点在零点之下\n    x = box.maxX;\n  } else {\n    x = box.minX;\n  }\n\n  var v = [x, y, 1];\n  shape.apply(v);\n  shape.attr({\n    transform: [['t', -x, -y], ['s', 0.01, 1], ['t', x, y]]\n  });\n  var endState = {\n    transform: [['t', -x, -y], ['s', 100, 1], ['t', x, y]]\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, animateParam.callback, animateParam.delay);\n}\n\nfunction lineWidthOut(shape, animateCfg) {\n  var endState = {\n    lineWidth: 0,\n    opacity: 0\n  };\n  var id = shape._id;\n  var index = shape.get('index');\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, function () {\n    shape.remove();\n  }, animateParam.delay);\n}\n\nfunction zoomIn(shape, animateCfg, coord) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var x;\n  var y;\n\n  if (coord.isPolar && shape.name !== 'point') {\n    x = coord.getCenter().x;\n    y = coord.getCenter().y;\n  } else {\n    var box = shape.getBBox();\n    x = (box.minX + box.maxX) / 2;\n    y = (box.minY + box.maxY) / 2;\n  }\n\n  var v = [x, y, 1];\n  shape.apply(v);\n  shape.attr({\n    transform: [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]\n  });\n  var endState = {\n    transform: [['t', -x, -y], ['s', 100, 100], ['t', x, y]]\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, animateParam.callback, animateParam.delay);\n}\n\nfunction zoomOut(shape, animateCfg, coord) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var x;\n  var y;\n\n  if (coord.isPolar && shape.name !== 'point') {\n    x = coord.getCenter().x;\n    y = coord.getCenter().y;\n  } else {\n    var box = shape.getBBox();\n    x = (box.minX + box.maxX) / 2;\n    y = (box.minY + box.maxY) / 2;\n  }\n\n  var v = [x, y, 1];\n  shape.apply(v);\n  var endState = {\n    transform: [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, function () {\n    shape.remove();\n  }, animateParam.delay);\n}\n\nfunction pathIn(shape, animateCfg) {\n  if (shape.get('type') !== 'path') return;\n  var id = shape._id;\n  var index = shape.get('index');\n  var path = PathUtil.pathToAbsolute(shape.attr('path'));\n  shape.attr('path', [path[0]]);\n  var endState = {\n    path: path\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, animateParam.callback, animateParam.delay);\n}\n\nfunction pathOut(shape, animateCfg) {\n  if (shape.get('type') !== 'path') return;\n  var id = shape._id;\n  var index = shape.get('index');\n  var path = PathUtil.pathToAbsolute(shape.attr('path'));\n  var endState = {\n    path: [path[0]]\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, function () {\n    shape.remove();\n  }, animateParam.delay);\n}\n\nfunction clipIn(shape, animateCfg, coord, startAngle, endAngle) {\n  var clip = getClip(coord);\n  var canvas = shape.get('canvas');\n  var id = shape._id;\n  var index = shape.get('index');\n  var endState;\n\n  if (startAngle) {\n    clip.attr('startAngle', startAngle);\n    clip.attr('endAngle', startAngle);\n    endState = {\n      endAngle: endAngle\n    };\n  } else {\n    endState = clip.endState;\n  }\n\n  clip.set('canvas', canvas);\n  shape.attr('clip', clip);\n  shape.setSilent('animating', true);\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  clip.animate(endState, animateParam.duration, animateParam.easing, function () {\n    if (shape && !shape.get('destroyed')) {\n      shape.attr('clip', null);\n      shape.setSilent('cacheShape', null);\n      shape.setSilent('animating', false);\n      clip.remove();\n    }\n  }, animateParam.delay);\n}\n\nfunction fadeIn(shape, animateCfg) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var fillOpacity = Util.isNil(shape.attr('fillOpacity')) ? 1 : shape.attr('fillOpacity');\n  var strokeOpacity = Util.isNil(shape.attr('strokeOpacity')) ? 1 : shape.attr('strokeOpacity');\n  shape.attr('fillOpacity', 0);\n  shape.attr('strokeOpacity', 0);\n  var endState = {\n    fillOpacity: fillOpacity,\n    strokeOpacity: strokeOpacity\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, animateParam.callback, animateParam.delay);\n}\n\nfunction fadeOut(shape, animateCfg) {\n  var id = shape._id;\n  var index = shape.get('index');\n  var endState = {\n    fillOpacity: 0,\n    strokeOpacity: 0\n  };\n  var animateParam = getAnimateParam(animateCfg, index, id, endState);\n  shape.animate(endState, animateParam.duration, animateParam.easing, function () {\n    shape.remove();\n  }, animateParam.delay);\n}\n\nfunction fanIn(shape, animateCfg, coord) {\n  var angle = getAngle(shape, coord);\n  var endAngle = angle.endAngle;\n  var startAngle = angle.startAngle;\n  clipIn(shape, animateCfg, coord, startAngle, endAngle);\n} // 默认动画库\n\n\nmodule.exports = {\n  enter: {\n    clipIn: clipIn,\n    zoomIn: zoomIn,\n    pathIn: pathIn,\n    scaleInY: scaleInY,\n    scaleInX: scaleInX,\n    fanIn: fanIn,\n    fadeIn: fadeIn\n  },\n  leave: {\n    lineWidthOut: lineWidthOut,\n    zoomOut: zoomOut,\n    pathOut: pathOut,\n    fadeOut: fadeOut\n  },\n  appear: {\n    clipIn: clipIn,\n    zoomIn: zoomIn,\n    pathIn: pathIn,\n    scaleInY: scaleInY,\n    scaleInX: scaleInX,\n    fanIn: fanIn,\n    fadeIn: fadeIn\n  },\n  update: {\n    fadeIn: fadeIn,\n    fanIn: fanIn\n  }\n};\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview view\n * @author dxq613@gmail.com\n */\nvar Base = __webpack_require__(148);\n\nvar Geom = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar Controller = __webpack_require__(165);\n\nvar Global = __webpack_require__(7);\n\nvar Theme = __webpack_require__(151);\n\nvar FIELD_ORIGIN = '_origin';\n\nvar Animate = __webpack_require__(355);\n\nfunction isFullCircle(coord) {\n  var startAngle = coord.startAngle;\n  var endAngle = coord.endAngle;\n\n  if (!Util.isNil(startAngle) && !Util.isNil(endAngle) && endAngle - startAngle < Math.PI * 2) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isBetween(value, start, end) {\n  var tmp = (value - start) / (end - start);\n  return tmp >= 0 && tmp <= 1;\n}\n\nfunction isPointInCoord(coord, point) {\n  var result = false;\n\n  if (coord) {\n    var type = coord.type;\n\n    if (type === 'theta') {\n      var start = coord.start;\n      var end = coord.end;\n      result = isBetween(point.x, start.x, end.x) && isBetween(point.y, start.y, end.y);\n    } else {\n      var invertPoint = coord.invert(point);\n      result = invertPoint.x >= 0 && invertPoint.y >= 0 && invertPoint.x <= 1 && invertPoint.y <= 1;\n    }\n  }\n\n  return result;\n}\n\nvar ViewGeoms = {};\nUtil.each(Geom, function (geomConstructor, className) {\n  var methodName = Util.lowerFirst(className);\n\n  ViewGeoms[methodName] = function (cfg) {\n    var geom = new geomConstructor(cfg);\n    this.addGeom(geom);\n    return geom;\n  };\n});\n/**\n * 图表中的视图\n * @class View\n */\n\nvar View =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(View, _Base);\n\n  var _proto = View.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      viewContainer: null,\n      coord: null,\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 1,\n        y: 1\n      },\n      geoms: [],\n      scales: {},\n      options: {},\n      scaleController: null,\n      padding: 0,\n      theme: null,\n      parent: null,\n      tooltipEnable: true,\n      // 是否展示 tooltip\n      animate: Global.animate,\n      visible: true\n    };\n  };\n\n  function View(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n    self._setTheme();\n\n    Util.each(Geom, function (GeomConstructor, className) {\n      var methodName = Util.lowerFirst(className);\n\n      self[methodName] = function (cfg) {\n        if (cfg === void 0) {\n          cfg = {};\n        }\n\n        cfg.viewTheme = self.get('viewTheme');\n        var geom = new GeomConstructor(cfg);\n        self.addGeom(geom);\n        return geom;\n      };\n    }); // Util.mix(this, ViewGeoms);\n\n    self.init();\n    return _this;\n  }\n\n  _proto._setTheme = function _setTheme() {\n    var self = this;\n    var theme = self.get('theme');\n    var viewTheme = {};\n    var newTheme = {};\n\n    if (Util.isObject(theme)) {\n      newTheme = theme;\n    } else if (Util.indexOf(Object.keys(Theme), theme) !== -1) {\n      newTheme = Theme[theme];\n    }\n\n    Util.deepMix(viewTheme, Global, newTheme);\n    self.set('viewTheme', viewTheme);\n  };\n  /**\n   * @protected\n   * 初始化\n   */\n\n\n  _proto.init = function init() {\n    this._initViewPlot(); // 先创建容器\n\n\n    if (this.get('data')) {\n      this._initData(this.get('data'));\n    }\n\n    this._initOptions();\n\n    this._initControllers();\n\n    this._bindEvents();\n  }; // 初始化配置项\n\n\n  _proto._initOptions = function _initOptions() {\n    var self = this;\n    var options = Util.mix({}, self.get('options')); // 防止修改原始值\n\n    if (!options.scales) {\n      options.scales = {};\n    }\n\n    if (!options.coord) {\n      options.coord = {};\n    }\n\n    if (options.animate === false) {\n      this.set('animate', false);\n    }\n\n    if (options.tooltip === false || Util.isNull(options.tooltip)) {\n      // 配置项方式关闭 tooltip\n      this.set('tooltipEnable', false);\n    }\n\n    if (options.geoms && options.geoms.length) {\n      Util.each(options.geoms, function (geomOption) {\n        self._createGeom(geomOption);\n      });\n    }\n\n    var scaleController = self.get('scaleController');\n\n    if (scaleController) {\n      scaleController.defs = options.scales;\n    }\n\n    var coordController = self.get('coordController');\n\n    if (coordController) {\n      coordController.reset(options.coord);\n    }\n\n    this.set('options', options);\n  };\n\n  _proto._createGeom = function _createGeom(cfg) {\n    var type = cfg.type;\n    var geom;\n\n    if (this[type]) {\n      geom = this[type]();\n      Util.each(cfg, function (v, k) {\n        if (geom[k]) {\n          if (Util.isObject(v) && v.field) {\n            // 配置项传入\n            if (v === 'label') {\n              geom[k](v.field, v.callback, v.cfg);\n            } else {\n              var _cfg;\n\n              Util.each(v, function (value, key) {\n                if (key !== 'field') {\n                  _cfg = value;\n                }\n              });\n              geom[k](v.field, _cfg);\n            }\n          } else {\n            geom[k](v);\n          }\n        }\n      });\n    }\n  }; // 初始化所有的控制器\n\n\n  _proto._initControllers = function _initControllers() {\n    var self = this;\n    var options = self.get('options');\n    var viewTheme = self.get('viewTheme');\n    var canvas = self.get('canvas');\n    var scaleController = new Controller.Scale({\n      viewTheme: viewTheme,\n      defs: options.scales\n    });\n    var coordController = new Controller.Coord(options.coord);\n    this.set('scaleController', scaleController);\n    this.set('coordController', coordController);\n    var axisController = new Controller.Axis({\n      canvas: canvas,\n      viewTheme: viewTheme\n    });\n    this.set('axisController', axisController);\n    var guideController = new Controller.Guide({\n      viewTheme: viewTheme,\n      options: options.guides || []\n    });\n    this.set('guideController', guideController);\n  };\n\n  _proto._initViewPlot = function _initViewPlot() {\n    if (!this.get('viewContainer')) {\n      // 用于 geom 的绘制\n      this.set('viewContainer', this.get('middlePlot'));\n    }\n  };\n\n  _proto._initGeoms = function _initGeoms() {\n    var geoms = this.get('geoms');\n    var filteredData = this.get('filteredData');\n    var coord = this.get('coord');\n    var viewId = this.get('_id');\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n      geom.set('data', filteredData);\n      geom.set('coord', coord);\n      geom.set('_id', viewId + '-geom' + i);\n      geom.set('keyFields', this.get('keyFields'));\n      geom.init();\n    }\n  };\n\n  _proto._clearGeoms = function _clearGeoms() {\n    var self = this;\n    var geoms = self.get('geoms');\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n      geom.clear();\n    }\n  };\n\n  _proto._removeGeoms = function _removeGeoms() {\n    var self = this;\n    var geoms = self.get('geoms');\n\n    while (geoms.length > 0) {\n      var geom = geoms.shift();\n      geom.destroy();\n    }\n  };\n\n  _proto._drawGeoms = function _drawGeoms() {\n    this.emit('beforedrawgeoms');\n    var geoms = this.get('geoms');\n    var coord = this.get('coord');\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n      geom.setCoord(coord);\n      geom.paint();\n    }\n\n    this.emit('afterdrawgeoms');\n  };\n\n  _proto.isShapeInView = function isShapeInView(shape) {\n    var id = this.get('_id');\n    var shapeId = shape._id;\n\n    if (!shapeId) {\n      return shape.get('parent').get('viewId') === id;\n    }\n\n    return shapeId.split('-')[0] === id;\n  };\n  /**\n   * View 所在的范围\n   * @protected\n   * @return {Object} View 所在的范围\n   */\n\n\n  _proto.getViewRegion = function getViewRegion() {\n    var self = this;\n    var parent = self.get('parent');\n    var start;\n    var end;\n\n    if (parent) {\n      var region = parent.getViewRegion();\n\n      var viewRegion = self._getViewRegion(region.start, region.end);\n\n      start = viewRegion.start;\n      end = viewRegion.end;\n    } else {\n      start = self.get('start');\n      end = self.get('end');\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }; // 获取 range 所在的范围\n\n\n  _proto._getViewRegion = function _getViewRegion(plotStart, plotEnd) {\n    var start = this.get('start');\n    var end = this.get('end');\n    var startX = start.x;\n    var startY = 1 - end.y;\n    var endX = end.x;\n    var endY = 1 - start.y;\n    var padding = this.get('padding'); // 转换成 上、右、下、左的模式\n\n    var allPadding = Util.toAllPadding(padding);\n    var top = allPadding[0];\n    var right = allPadding[1];\n    var bottom = allPadding[2];\n    var left = allPadding[3];\n    var startPoint = {\n      x: startX * (plotEnd.x - plotStart.x) + plotStart.x + left,\n      y: startY * (plotEnd.y - plotStart.y) + plotStart.y - bottom\n    };\n    var endPoint = {\n      x: endX * (plotEnd.x - plotStart.x) + plotStart.x - right,\n      y: endY * (plotEnd.y - plotStart.y) + plotStart.y + top\n    };\n    return {\n      start: startPoint,\n      end: endPoint\n    };\n  };\n\n  _proto._createCoord = function _createCoord() {\n    var coordController = this.get('coordController');\n    var region = this.getViewRegion();\n    var coord = coordController.createCoord(region.start, region.end);\n    this.set('coord', coord);\n  };\n\n  _proto._renderAxes = function _renderAxes() {\n    var options = this.get('options');\n    var axesOptions = options.axes;\n\n    if (axesOptions === false) {\n      // 不渲染坐标轴\n      return;\n    }\n\n    var axisController = this.get('axisController');\n    axisController.container = this.get('backPlot');\n    axisController.coord = this.get('coord');\n    axisController.options = axesOptions || {};\n    var xScale = this.getXScale();\n    var yScales = this.getYScales();\n    var viewId = this.get('_id');\n    axisController.createAxis(xScale, yScales, viewId);\n  };\n\n  _proto._renderGuides = function _renderGuides() {\n    var guideController = this.get('guideController');\n\n    if (!Util.isEmpty(guideController.options)) {\n      var coord = this.get('coord');\n      guideController.view = this;\n      guideController.backContainer = this.get('backPlot');\n      guideController.frontContainer = this.get('frontPlot');\n      guideController.xScales = this._getScales('x');\n      guideController.yScales = this._getScales('y');\n      guideController.render(coord);\n    }\n  }; // 注册事件\n\n\n  _proto._bindEvents = function _bindEvents() {\n    var eventController = new Controller.Event({\n      view: this,\n      canvas: this.get('canvas')\n    });\n    eventController.bindEvents();\n    this.set('eventController', eventController);\n  }; // 清理时间\n\n\n  _proto._clearEvents = function _clearEvents() {\n    var eventController = this.get('eventController');\n    eventController && eventController.clearEvents();\n  };\n\n  _proto._getScales = function _getScales(dimType) {\n    var geoms = this.get('geoms');\n    var result = {};\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n      var scale = dimType === 'x' ? geom.getXScale() : geom.getYScale();\n\n      if (scale && !result[scale.field]) {\n        result[scale.field] = scale;\n      }\n    }\n\n    return result;\n  };\n\n  _proto._adjustScale = function _adjustScale() {\n    this._setCatScalesRange();\n\n    var geoms = this.get('geoms');\n    var scaleController = this.get('scaleController');\n    var colDefs = scaleController.defs;\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n\n      if (geom.get('type') === 'interval') {\n        var yScale = geom.getYScale();\n        var field = yScale.field,\n            min = yScale.min,\n            max = yScale.max,\n            type = yScale.type;\n\n        if (!(colDefs[field] && colDefs[field].min) && type !== 'time') {\n          if (min > 0) {\n            yScale.change({\n              min: 0\n            });\n          } else if (max <= 0) {\n            // 当柱状图全为负值时也需要从 0 开始生长\n            yScale.change({\n              max: 0\n            });\n          }\n        }\n      }\n    }\n  };\n\n  _proto._setCatScalesRange = function _setCatScalesRange() {\n    var self = this;\n    var coord = self.get('coord');\n    var viewTheme = self.get('viewTheme');\n    var xScale = self.getXScale();\n    var yScales = self.getYScales();\n    var scales = [];\n    xScale && scales.push(xScale);\n    scales = scales.concat(yScales);\n    var inFullCircle = coord.isPolar && isFullCircle(coord);\n    var scaleController = self.get('scaleController');\n    var colDefs = scaleController.defs;\n    Util.each(scales, function (scale) {\n      if ((scale.isCategory || scale.isIdentity) && scale.values && !(colDefs[scale.field] && colDefs[scale.field].range)) {\n        var count = scale.values.length;\n        var range;\n\n        if (count === 1) {\n          range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5]的状态\n        } else {\n          var widthRatio = 1;\n          var offset = 0;\n\n          if (inFullCircle) {\n            if (!coord.isTransposed) {\n              range = [0, 1 - 1 / count];\n            } else {\n              widthRatio = viewTheme.widthRatio.multiplePie;\n              offset = 1 / count * widthRatio;\n              range = [offset / 2, 1 - offset / 2];\n            }\n          } else {\n            offset = 1 / count * 1 / 2; // 两边留下分类空间的一半\n\n            range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n          }\n        }\n\n        scale.range = range;\n      }\n    });\n  };\n\n  _proto.getXScale = function getXScale() {\n    var geoms = this.get('geoms'); // 如果进行过滤，那么 geom 默认隐藏时会出现不一致\n    // 默认隐藏时坐标轴不绘制，但是调用了 geom.show() 后，则图形显示了，坐标轴依然不见\n\n    /* .filter(function(geom) {\n      return geom.get('visible');\n    }); */\n\n    var xScale = null;\n\n    if (!Util.isEmpty(geoms)) {\n      xScale = geoms[0].getXScale();\n    }\n\n    return xScale;\n  };\n\n  _proto.getYScales = function getYScales() {\n    var geoms = this.get('geoms');\n    /* .filter(function(geom) {\n      return geom.get('visible');\n    }); */\n\n    var rst = [];\n\n    for (var i = 0; i < geoms.length; i++) {\n      var geom = geoms[i];\n      var yScale = geom.getYScale();\n\n      if (yScale && Util.indexOf(rst, yScale) === -1) {\n        rst.push(yScale);\n      }\n    }\n\n    return rst;\n  };\n  /**\n   * 获取数据对应在画布空间的坐标\n   * @param  {Object} item 原始数据\n   * @return {Object}      返回对应的画布上的坐标点\n   */\n\n\n  _proto.getXY = function getXY(item) {\n    var self = this;\n    var coord = self.get('coord');\n\n    var xScales = self._getScales('x');\n\n    var yScales = self._getScales('y');\n\n    var x;\n    var y;\n\n    for (var field in item) {\n      if (xScales[field]) {\n        x = xScales[field].scale(item[field]);\n      }\n\n      if (yScales[field]) {\n        y = yScales[field].scale(item[field]);\n      }\n    }\n\n    if (!Util.isNil(x) && !Util.isNil(y)) {\n      return coord.convert({\n        x: x,\n        y: y\n      });\n    }\n\n    return null;\n  };\n  /**\n   * 获取逼近的点的数据集合\n   * @param  {Object} point 画布上的像素点\n   * @return {Array} 数据\n   */\n\n\n  _proto.getSnapRecords = function getSnapRecords(point) {\n    var self = this;\n    var geoms = self.get('geoms');\n    var rst = [];\n    Util.each(geoms, function (geom) {\n      var dataArray = geom.get('dataArray');\n      var record;\n      Util.each(dataArray, function (data) {\n        record = geom.findPoint(point, data);\n        record && rst.push(record);\n      });\n    });\n    return rst;\n  };\n  /**\n   * @protected\n   * 添加几何标记\n   * @param {Geom} geom 几何标记\n   */\n\n\n  _proto.addGeom = function addGeom(geom) {\n    var self = this;\n    var geoms = self.get('geoms');\n    geoms.push(geom);\n    geom.set('view', self);\n    var container = self.get('viewContainer');\n    geom.set('container', container);\n    geom.set('animate', self.get('animate'));\n    geom.bindEvents();\n  };\n  /**\n   * @protected\n   * 移除几何标记\n   * @param {Geom} geom 几何标记\n   */\n\n\n  _proto.removeGeom = function removeGeom(geom) {\n    var geoms = this.get('geoms');\n    Util.Array.remove(geoms, geom);\n    geom.destroy();\n  };\n\n  _proto.createScale = function createScale(field, data) {\n    var scales = this.get('scales');\n    var parent = this.get('parent');\n    var scale = scales[field]; // const filters = this._getFilters();\n\n    if (!data) {\n      var filteredData = this.get('filteredData');\n\n      var legendFields = this._getFieldsForLegend(); // 过滤导致数据为空时，需要使用全局数据\n      // 参与过滤的字段的度量也根据全局数据来生成\n\n\n      if (filteredData.length && legendFields.indexOf(field) === -1) {\n        data = filteredData;\n      } else {\n        data = this.get('data');\n      }\n    }\n\n    var scaleController = this.get('scaleController');\n\n    if (!scale) {\n      scale = scaleController.createScale(field, data);\n\n      if (scale.sync && parent) {\n        var parentScale = parent.createScale(field, data);\n        scale = this._getSyncScale(parentScale, scale);\n      }\n\n      scales[field] = scale;\n    } else if (scale.sync) {\n      // 防止 view 内部创建的scale，Chart 上的scale 范围更大\n      var newScale = scaleController.createScale(field, data);\n\n      this._syncScale(scale, newScale);\n    }\n\n    return scale;\n  };\n\n  _proto._getFieldsForLegend = function _getFieldsForLegend() {\n    var fields = [];\n    var geoms = this.get('geoms');\n    Util.each(geoms, function (geom) {\n      var geomFields = geom.getFieldsForLegend();\n      fields = fields.concat(geomFields);\n    });\n    return Util.uniq(fields);\n  }; // 如果需要同步度量，则使得 values,min,max的范围最大\n\n\n  _proto._getSyncScale = function _getSyncScale(parentScale, scale) {\n    if (parentScale.type !== scale.type) {\n      return scale;\n    }\n\n    this._syncScale(parentScale, scale);\n\n    return parentScale;\n  };\n\n  _proto._syncScale = function _syncScale(distScale, sourceScale) {\n    var mergeValues = Util.union(distScale.values, sourceScale.values);\n\n    if (sourceScale.isLinear) {\n      var max = Math.max(distScale.max, sourceScale.max);\n      var min = Math.min(distScale.min, sourceScale.min);\n\n      if (distScale.max !== max || distScale.min !== min) {\n        distScale.change({\n          min: min,\n          max: max,\n          values: mergeValues\n        });\n      }\n    }\n\n    if (mergeValues.length !== distScale.values.length) {\n      distScale.change({\n        values: mergeValues\n      });\n    }\n  };\n  /**\n   * @protected\n   * 获取过滤后的值（需要显示的值）\n   * @param {String} field 度量\n   * @return {Array.<String>} 滤后的值\n   */\n\n\n  _proto.getFilteredValues = function getFilteredValues(field) {\n    var scale = this.get('scales')[field];\n    var values = scale.values;\n\n    var filters = this._getFilters();\n\n    var rst;\n\n    if (filters && filters[field]) {\n      rst = values.filter(filters[field]);\n    } else {\n      rst = values.slice(0);\n    }\n\n    return rst;\n  };\n  /**\n   * @protected\n   * 获取被过滤的值（不需显示的值）\n   * @param {String} field 度量\n   * @return {Array.<String>} 滤出的值\n   */\n\n\n  _proto.getFilteredOutValues = function getFilteredOutValues(field) {\n    var scale = this.get('scales')[field];\n    var values = scale.values;\n\n    var filters = this._getFilters();\n\n    var rst;\n\n    if (filters && filters[field]) {\n      rst = values.filter(function (v) {\n        return !filters[field](v);\n      });\n    } else {\n      rst = [];\n    }\n\n    return rst;\n  };\n\n  _proto.filter = function filter(field, condition) {\n    var options = this.get('options');\n\n    if (!options.filters) {\n      options.filters = {};\n    }\n\n    options.filters[field] = condition;\n    this.get('scaleController').filters = options.filters;\n  }; // 获取 filters\n\n\n  _proto._getFilters = function _getFilters() {\n    var options = this.get('options');\n    return options.filters;\n  }; // 执行 filter 数据\n\n\n  _proto.execFilter = function execFilter(data) {\n    var self = this;\n\n    var filters = self._getFilters();\n\n    if (filters) {\n      data = data.filter(function (obj) {\n        var rst = true;\n        Util.each(filters, function (fn, k) {\n          if (fn) {\n            rst = fn(obj[k], obj);\n\n            if (!rst) {\n              return false;\n            }\n          }\n        });\n        return rst;\n      });\n    }\n\n    return data;\n  };\n\n  _proto.axis = function axis(field, cfg) {\n    var options = this.get('options');\n\n    if (field === false) {\n      options.axes = false;\n    } else {\n      if (!options.axes) {\n        options.axes = {};\n      }\n\n      var axisOptions = options.axes;\n      axisOptions[field] = cfg;\n    }\n\n    return this;\n  };\n\n  _proto.guide = function guide() {\n    return this.get('guideController');\n  };\n\n  _proto._getKeyFields = function _getKeyFields(scaleDefs) {\n    var keyFields = [];\n    Util.each(scaleDefs, function (def, field) {\n      if (def.key) {\n        keyFields.push(field);\n      }\n    });\n    this.set('keyFields', keyFields);\n  };\n\n  _proto.scale = function scale(field, cfg) {\n    var options = this.get('options');\n    var scaleDefs = options.scales;\n\n    if (Util.isObject(field)) {\n      Util.mix(scaleDefs, field);\n    } else {\n      scaleDefs[field] = cfg;\n    }\n\n    this._getKeyFields(scaleDefs);\n\n    return this;\n  };\n\n  _proto.tooltip = function tooltip(visible) {\n    this.set('tooltipEnable', visible);\n    return this;\n  };\n\n  _proto.animate = function animate(enable) {\n    var options = this.get('options');\n    options.animate = enable;\n    this.set('animate', enable);\n    return this;\n  };\n\n  _proto.changeOptions = function changeOptions(options) {\n    this.set('options', options);\n\n    this._initOptions(options);\n\n    return this;\n  };\n  /**\n   * @internal 查找包含指定点的视图\n   * @param  {Object} point 点的位置\n   * @return {Array} 多个视图\n   */\n\n\n  _proto.getViewsByPoint = function getViewsByPoint(point) {\n    var rst = [];\n    var views = this.get('views');\n\n    if (isPointInCoord(this.get('coord'), point)) {\n      rst.push(this);\n    }\n\n    Util.each(views, function (view) {\n      if (view.get('visible') && isPointInCoord(view.get('coord'), point)) {\n        rst.push(view);\n      }\n    });\n    return rst;\n  };\n  /**\n   * 遍历所有的 shape ，用户更改 shape 后进行刷新\n   * @param  {Function} fn 回调函数包含参数：record,shape,geom,view\n   * @return {View} 当前视图\n   */\n\n\n  _proto.eachShape = function eachShape(fn) {\n    var self = this;\n    var views = self.get('views');\n    var canvas = self.get('canvas');\n    Util.each(views, function (view) {\n      view.eachShape(fn);\n    });\n    var geoms = this.get('geoms');\n    Util.each(geoms, function (geom) {\n      var shapes = geom.getShapes();\n      Util.each(shapes, function (shape) {\n        var origin = shape.get('origin');\n\n        if (Util.isArray(origin)) {\n          var arr = origin.map(function (subOrigin) {\n            return subOrigin[FIELD_ORIGIN];\n          });\n          fn(arr, shape, geom, self);\n        } else {\n          var obj = origin[FIELD_ORIGIN];\n          fn(obj, shape, geom, self);\n        }\n      });\n    });\n    canvas.draw();\n    return this;\n  };\n  /**\n   * 遍历所有的 shape ，回调函数中 true / false 控制图形是否显示\n   * @param  {Function} fn 回调函数包含参数：record,shape,geom,view\n   * @return {View} 当前视图\n   */\n\n\n  _proto.filterShape = function filterShape(fn) {\n    var callback = function callback(record, shape, geom, view) {\n      if (!fn(record, shape, geom, view)) {\n        shape.hide();\n      } else {\n        shape.show();\n      }\n    };\n\n    this.eachShape(callback);\n    return this;\n  };\n\n  _proto.clearInner = function clearInner() {\n    this.set('scales', {});\n    this.emit('beforeclearinner');\n    var options = this.get('options');\n    options.geoms = null;\n\n    this._clearGeoms(); // reset guide\n\n\n    this.get('guideController') && this.get('guideController').reset(); // clear axis\n\n    this.get('axisController') && this.get('axisController').clear();\n    this.emit('afterclearinner');\n  };\n  /**\n   * 清除视图内容，包括 geoms\n   * @return {View} 当前视图\n   */\n\n\n  _proto.clear = function clear() {\n    var options = this.get('options');\n    options.filters = null;\n\n    this._removeGeoms(); // const container = this.get('viewContainer');\n    // container.clear();\n\n\n    this.clearInner();\n    this.get('guideController') && this.get('guideController').clear();\n    this.set('isUpdate', false);\n    this.set('keyFields', []);\n    return this;\n  };\n  /**\n   * 设置坐标系信息\n   * @param  {String} type 类型\n   * @param  {Object} cfg  配置项\n   * @return {Object} coordController 坐标系的管理器\n   */\n\n\n  _proto.coord = function coord(type, cfg) {\n    var coordController = this.get('coordController');\n    coordController.reset({\n      type: type,\n      cfg: cfg\n    });\n    return coordController;\n  };\n  /**\n   * 当父元素边框发生改变时坐标系需要重新调整\n   * @protected\n   */\n\n\n  _proto.resetCoord = function resetCoord() {\n    this._createCoord();\n  };\n\n  _proto.source = function source(data, scales) {\n    this._initData(data);\n\n    if (scales) {\n      this.scale(scales);\n    }\n\n    this.emit('setdata');\n    return this;\n  };\n\n  _proto.changeData = function changeData(data) {\n    this.emit('beforechangedata');\n\n    this._initData(data);\n\n    this.emit('afterchangedata');\n    this.repaint();\n    return this;\n  };\n\n  _proto._initData = function _initData(data) {\n    var dataView = this.get('dataView');\n\n    if (dataView) {\n      dataView.off('change', Util.getWrapBehavior(this, '_onViewChange'));\n      this.set('dataView', null);\n    }\n\n    if (data && data.isDataView) {\n      data.on('change', Util.wrapBehavior(this, '_onViewChange'));\n      this.set('dataView', data);\n      data = data.rows;\n    }\n\n    this.set('data', data);\n  };\n\n  _proto._onViewChange = function _onViewChange() {\n    this.emit('beforechangedata');\n    var dataView = this.get('dataView');\n    var rows = dataView.rows;\n    this.set('data', rows);\n    this.emit('afterchangedata');\n    this.repaint();\n  }; // 初始化各个 view 和绘制辅助元素\n\n\n  _proto.beforeRender = function beforeRender() {\n    var views = this.get('views'); // 如果存在 views 则初始化子 view 的方法\n\n    Util.each(views, function (view) {\n      view.beforeRender();\n    });\n    this.initView();\n  }; // 绘制坐标轴、图例、辅助元素等图表组件\n\n\n  _proto.drawComponents = function drawComponents() {\n    var views = this.get('views'); // 如果存在 views 则初始化子 view 的方法\n\n    Util.each(views, function (view) {\n      view.drawComponents();\n    });\n\n    this._renderAxes();\n\n    this._renderGuides();\n  }; // 绘制图形\n\n\n  _proto.drawCanvas = function drawCanvas(stopDraw) {\n    if (!stopDraw) {\n      var views = this.get('views');\n      var backPlot = this.get('backPlot');\n      backPlot.sort();\n      var canvas = this.get('canvas');\n      var animate = this.get('animate');\n\n      if (animate) {\n        var isUpdate = this.get('isUpdate');\n        Util.each(views, function (view) {\n          Animate.execAnimation(view, isUpdate);\n        });\n        Animate.execAnimation(this, isUpdate);\n      } else {\n        canvas.draw();\n      }\n    }\n  };\n\n  _proto.render = function render(stopDraw) {\n    this.clearInner();\n    this.emit('beforerender');\n    this.beforeRender();\n    this.emit('beforepaint');\n    this.drawComponents();\n    this.paint();\n    this.emit('afterpaint');\n    this.drawCanvas(stopDraw);\n    this.emit('afterrender');\n    this.set('rendered', true);\n    return this;\n  };\n\n  _proto.initView = function initView() {\n    var data = this.get('data') || [];\n    var filteredData = this.execFilter(data);\n    this.set('filteredData', filteredData); // if (!Util.isEmpty(data)) {\n\n    this._createCoord(); // draw geometry 前绘制区域可能会发生改变\n\n\n    this.emit('beforeinitgeoms');\n\n    this._initGeoms();\n\n    this._adjustScale(); // }\n\n  };\n\n  _proto.paint = function paint() {\n    var views = this.get('views'); // 绘制\n\n    Util.each(views, function (view) {\n      view.paint();\n    });\n    var data = this.get('data');\n\n    if (!Util.isEmpty(data)) {\n      this._drawGeoms();\n    } // 如果 view 隐藏了，隐藏所有的图形和坐标轴\n\n\n    if (!this.get('visible')) {\n      this.changeVisible(false, true); // 隐藏所有的图形，但是不绘制\n    }\n  };\n\n  _proto.changeVisible = function changeVisible(visible, stopDraw) {\n    var geoms = this.get('geoms');\n    Util.each(geoms, function (geom) {\n      // if (geom.get('visible')) { // geom 隐藏时不受\n      geom.changeVisible(visible, true); // }\n    });\n    this.get('axisController') && this.get('axisController').changeVisible(visible);\n    this.get('guideController') && this.get('guideController').changeVisible(visible);\n\n    if (!stopDraw) {\n      var canvas = this.get('canvas');\n      canvas.draw();\n    }\n  };\n\n  _proto.repaint = function repaint() {\n    this.set('isUpdate', true);\n    this.clearInner();\n    this.render();\n  };\n\n  _proto.destroy = function destroy() {\n    this._clearEvents();\n\n    var dataView = this.get('dataView');\n    dataView && dataView.off('change', Util.getWrapBehavior(this, '_onViewChange'));\n    this.clear();\n\n    _Base.prototype.destroy.call(this);\n  };\n\n  return View;\n}(Base);\n\nmodule.exports = View;\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar isNil = __webpack_require__(5);\n\nvar isArray = __webpack_require__(4);\n\nvar each = __webpack_require__(2);\n\nvar Base = __webpack_require__(29);\n\nvar Position =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Position, _Base);\n\n  function Position(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.names = ['x', 'y'];\n    _this.type = 'position';\n    return _this;\n  }\n\n  var _proto = Position.prototype;\n\n  _proto.mapping = function mapping(x, y) {\n    var scales = this.scales;\n    var coord = this.coord;\n    var scaleX = scales[0];\n    var scaleY = scales[1];\n    var rstX;\n    var rstY;\n    var obj;\n\n    if (isNil(x) || isNil(y)) {\n      return [];\n    }\n\n    if (isArray(y) && isArray(x)) {\n      rstX = [];\n      rstY = [];\n\n      for (var i = 0, j = 0, xLen = x.length, yLen = y.length; i < xLen && j < yLen; i++, j++) {\n        obj = coord.convertPoint({\n          x: scaleX.scale(x[i]),\n          y: scaleY.scale(y[j])\n        });\n        rstX.push(obj.x);\n        rstY.push(obj.y);\n      }\n    } else if (isArray(y)) {\n      x = scaleX.scale(x);\n      rstY = [];\n      each(y, function (yVal) {\n        yVal = scaleY.scale(yVal);\n        obj = coord.convertPoint({\n          x: x,\n          y: yVal\n        });\n\n        if (rstX && rstX !== obj.x) {\n          if (!isArray(rstX)) {\n            rstX = [rstX];\n          }\n\n          rstX.push(obj.x);\n        } else {\n          rstX = obj.x;\n        }\n\n        rstY.push(obj.y);\n      });\n    } else if (isArray(x)) {\n      y = scaleY.scale(y);\n      rstX = [];\n      each(x, function (xVal) {\n        xVal = scaleX.scale(xVal);\n        obj = coord.convertPoint({\n          x: xVal,\n          y: y\n        });\n\n        if (rstY && rstY !== obj.y) {\n          if (!isArray(rstY)) {\n            rstY = [rstY];\n          }\n\n          rstY.push(obj.y);\n        } else {\n          rstY = obj.y;\n        }\n\n        rstX.push(obj.x);\n      });\n    } else {\n      x = scaleX.scale(x);\n      y = scaleY.scale(y);\n      var point = coord.convertPoint({\n        x: x,\n        y: y\n      });\n      rstX = point.x;\n      rstY = point.y;\n    }\n\n    return [rstX, rstY];\n  };\n\n  return Position;\n}(Base);\n\nmodule.exports = Position;\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar isString = __webpack_require__(10);\n\nvar ColorUtil = __webpack_require__(149);\n\nvar Base = __webpack_require__(29);\n\nvar Color =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Color, _Base);\n\n  function Color(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.names = ['color'];\n    _this.type = 'color';\n    _this.gradient = null;\n\n    if (isString(_this.values)) {\n      _this.linear = true;\n    }\n\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  var _proto = Color.prototype;\n\n  _proto.getLinearValue = function getLinearValue(percent) {\n    var gradient = this.gradient;\n\n    if (!gradient) {\n      var values = this.values;\n      gradient = ColorUtil.gradient(values);\n      this.gradient = gradient;\n    }\n\n    return gradient(percent);\n  };\n\n  return Color;\n}(Base);\n\nmodule.exports = Color;\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(29);\n\nvar Shape =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Shape, _Base);\n\n  function Shape(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.names = ['shape'];\n    _this.type = 'shape';\n    _this.gradient = null;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  var _proto = Shape.prototype;\n\n  _proto.getLinearValue = function getLinearValue(percent) {\n    var values = this.values;\n    var index = Math.round((values.length - 1) * percent);\n    return values[index];\n  };\n\n  return Shape;\n}(Base);\n\nmodule.exports = Shape;\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(29);\n\nvar Size =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Size, _Base);\n\n  function Size(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.names = ['size'];\n    _this.type = 'size';\n    _this.gradient = null;\n    return _this;\n  }\n\n  return Size;\n}(Base);\n\nmodule.exports = Size;\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(29);\n\nvar Opacity =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Opacity, _Base);\n\n  function Opacity(cfg) {\n    var _this;\n\n    _this = _Base.call(this, cfg) || this;\n    _this.names = ['opacity'];\n    _this.type = 'opacity';\n    _this.gradient = null;\n    return _this;\n  }\n\n  return Opacity;\n}(Base);\n\nmodule.exports = Opacity;\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 完整版下使用支持按照某个字段进行分组的 dodge\nvar mix = __webpack_require__(8);\n\nvar Adjust = __webpack_require__(30);\n\nvar Dodge = __webpack_require__(298);\n\nvar Stack = __webpack_require__(299);\n\nvar AdjustMixin = __webpack_require__(150);\n\nvar DodgeMixin = __webpack_require__(300);\n\nvar StackMixin = __webpack_require__(301);\n\nmix(Adjust.prototype, AdjustMixin);\nmix(Dodge.prototype, AdjustMixin, DodgeMixin);\nmix(Stack.prototype, StackMixin);\nAdjust.Jitter = __webpack_require__(302);\nAdjust.Symmetric = __webpack_require__(303);\nAdjust.Dodge = Dodge;\nAdjust.Stack = Stack;\nmodule.exports = Adjust;\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Adjust = __webpack_require__(30);\n\nvar each = __webpack_require__(2);\n\nvar MARGIN_RATIO = 1 / 2;\nvar DODGE_RATIO = 1 / 2;\n\nvar Dodge =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Dodge, _Adjust);\n\n  function Dodge() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Dodge.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    /**\n     * 调整过程中,2个数据的间距\n     * @type {Number}\n     */\n    this.marginRatio = MARGIN_RATIO;\n    /**\n     * 调整占单位宽度的比例,例如：占2个分类间距的 1/2\n     * @type {Number}\n     */\n\n    this.dodgeRatio = DODGE_RATIO;\n    this.adjustNames = ['x', 'y']; // 调整的维度，默认,x,y都做调整\n  };\n\n  _proto.getDodgeOffset = function getDodgeOffset(range, index, count) {\n    var self = this;\n    var pre = range.pre;\n    var next = range.next;\n    var tickLength = next - pre;\n    var width = tickLength * self.dodgeRatio / count;\n    var margin = self.marginRatio * width;\n    var offset = 1 / 2 * (tickLength - count * width - (count - 1) * margin) + ((index + 1) * width + index * margin) - 1 / 2 * width - 1 / 2 * tickLength;\n    return (pre + next) / 2 + offset;\n  };\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var count = dataArray.length;\n    var xField = self.xField;\n    each(dataArray, function (data, index) {\n      for (var i = 0, len = data.length; i < len; i++) {\n        var obj = data[i];\n        var value = obj[xField];\n        var range = {\n          pre: value - 0.5,\n          next: value + 0.5\n        };\n        var dodgeValue = self.getDodgeOffset(range, index, count);\n        obj[xField] = dodgeValue;\n      }\n    });\n  };\n\n  return Dodge;\n}(Adjust);\n\nAdjust.Dodge = Dodge;\nmodule.exports = Dodge;\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar isArray = __webpack_require__(4);\n\nvar isNil = __webpack_require__(5);\n\nvar Adjust = __webpack_require__(30);\n\nvar Stack =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Stack, _Adjust);\n\n  function Stack() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Stack.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n  };\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    this.processStack(dataArray);\n  };\n\n  _proto.processStack = function processStack(dataArray) {\n    var self = this;\n    var xField = self.xField;\n    var yField = self.yField;\n    var count = dataArray.length;\n    var stackCache = {\n      positive: {},\n      negative: {}\n    }; // 层叠顺序翻转\n\n    if (self.reverseOrder) {\n      dataArray = dataArray.slice(0).reverse();\n    }\n\n    for (var i = 0; i < count; i++) {\n      var data = dataArray[i];\n\n      for (var j = 0, len = data.length; j < len; j++) {\n        var item = data[j];\n        var x = item[xField] || 0;\n        var y = item[yField];\n        var xkey = x.toString();\n        y = isArray(y) ? y[1] : y;\n\n        if (!isNil(y)) {\n          var direction = y >= 0 ? 'positive' : 'negative';\n\n          if (!stackCache[direction][xkey]) {\n            stackCache[direction][xkey] = 0;\n          }\n\n          item[yField] = [stackCache[direction][xkey], y + stackCache[direction][xkey]];\n          stackCache[direction][xkey] += y;\n        }\n      }\n    }\n  };\n\n  return Stack;\n}(Adjust);\n\nAdjust.Stack = Stack;\nmodule.exports = Stack;\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ArrayUtil = {\n  merge: __webpack_require__(42),\n  values: __webpack_require__(64)\n};\n\nvar group = __webpack_require__(144);\n\nvar each = __webpack_require__(2);\n\nmodule.exports = {\n  /**\n   * @protected\n   * @override\n   */\n  processAdjust: function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    var dodgeDim = self.dodgeBy;\n    var adjDataArray = dataArray;\n\n    if (dodgeDim) {\n      // 如果指定了分组dim的字段\n      adjDataArray = group(mergeData, dodgeDim);\n    }\n\n    self.cacheMap = {};\n    self.adjDataArray = adjDataArray;\n    self.mergeData = mergeData;\n    self.adjustData(adjDataArray, mergeData);\n    self.adjDataArray = null;\n    self.mergeData = null;\n  },\n  getDistribution: function getDistribution(dim) {\n    var self = this;\n    var dataArray = self.adjDataArray;\n    var cacheMap = self.cacheMap;\n    var map = cacheMap[dim];\n\n    if (!map) {\n      map = {};\n      each(dataArray, function (data, index) {\n        var values = ArrayUtil.values(data, dim);\n\n        if (!values.length) {\n          values.push(0);\n        }\n\n        each(values, function (val) {\n          if (!map[val]) {\n            map[val] = [];\n          }\n\n          map[val].push(index);\n        });\n      });\n      cacheMap[dim] = map;\n    }\n\n    return map;\n  },\n  adjustDim: function adjustDim(dim, values, data, frameCount, frameIndex) {\n    var self = this;\n    var map = self.getDistribution(dim);\n    var groupData = self.groupData(data, dim); // 根据值分组\n\n    each(groupData, function (group, key) {\n      key = parseFloat(key);\n      var range;\n\n      if (values.length === 1) {\n        range = {\n          pre: values[0] - 1,\n          next: values[0] + 1\n        };\n      } else {\n        range = self.getAdjustRange(dim, key, values);\n      }\n\n      each(group, function (record) {\n        var value = record[dim];\n        var valueArr = map[value];\n        var valIndex = valueArr.indexOf(frameIndex);\n        record[dim] = self.getDodgeOffset(range, valIndex, valueArr.length);\n      });\n    });\n  }\n};\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  _initDefaultCfg: function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.height = null; // 仅有一个维度调整时，总的高度\n\n    this.size = 10; // 单个点的大小\n\n    this.reverseOrder = false; // 是否反序进行层叠\n\n    this.adjustNames = ['y']; // Only support stack y\n  },\n  processOneDimStack: function processOneDimStack(dataArray) {\n    var self = this;\n    var xField = self.xField;\n    var yField = self.yField || 'y';\n    var height = self.height;\n    var stackY = {}; // 如果层叠的顺序翻转\n\n    if (self.reverseOrder) {\n      dataArray = dataArray.slice(0).reverse();\n    }\n\n    for (var i = 0, len = dataArray.length; i < len; i++) {\n      var data = dataArray[i]; // cates\n\n      for (var j = 0, dataLen = data.length; j < dataLen; j++) {\n        var item = data[j];\n        var size = item.size || self.size;\n        var stackHeight = size * 2 / height;\n        var x = item[xField];\n\n        if (!stackY[x]) {\n          stackY[x] = stackHeight / 2;\n        }\n\n        item[yField] = stackY[x];\n        stackY[x] += stackHeight;\n      }\n    }\n  },\n  processAdjust: function processAdjust(dataArray) {\n    if (this.yField) {\n      this.processStack(dataArray);\n    } else {\n      this.processOneDimStack(dataArray);\n    }\n  }\n};\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar each = __webpack_require__(2);\n\nvar mix = __webpack_require__(8);\n\nvar ArrayUtil = {\n  merge: __webpack_require__(42)\n};\n\nvar Adjust = __webpack_require__(30);\n\nvar AdjustMixin = __webpack_require__(150);\n\nvar Jitter =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Jitter, _Adjust);\n\n  function Jitter() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Jitter.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.adjustNames = ['x', 'y']; // 指x,y\n\n    this.groupFields = null; // 参与分组的数据维度\n  };\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    self.adjDataArray = dataArray;\n    self.mergeData = mergeData;\n    self.adjustData(dataArray, mergeData);\n    self.adjFrames = null;\n    self.mergeData = null;\n  };\n\n  _proto.getAdjustOffset = function getAdjustOffset(pre, next) {\n    var r = Math.random(); // 随机位置，均匀分布\n\n    var avg = next - pre; // * length\n\n    var append = avg * 0.05;\n    return pre + append + avg * 0.9 * r;\n  }; // adjust group data\n\n\n  _proto._adjustGroup = function _adjustGroup(group, dim, key, values) {\n    var self = this;\n    var range = self.getAdjustRange(dim, key, values);\n    each(group, function (record) {\n      record[dim] = self.getAdjustOffset(range.pre, range.next); // 获取调整的位置\n    });\n  };\n\n  _proto.adjustDim = function adjustDim(dim, values, data) {\n    var self = this;\n    var groupData = self.groupData(data, dim);\n    each(groupData, function (group, key) {\n      key = parseFloat(key);\n\n      self._adjustGroup(group, dim, key, values);\n    });\n  };\n\n  return Jitter;\n}(Adjust);\n\nmix(Jitter.prototype, AdjustMixin);\nAdjust.Jitter = Jitter;\nmodule.exports = Jitter;\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar each = __webpack_require__(2);\n\nvar maxBy = __webpack_require__(132);\n\nvar isArray = __webpack_require__(4);\n\nvar ArrayUtil = {\n  merge: __webpack_require__(42)\n};\n\nvar Adjust = __webpack_require__(30);\n\nvar Symmetric =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Symmetric, _Adjust);\n\n  function Symmetric() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Symmetric.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.cacheMax = null; // 缓存的最大值\n\n    this.adjustNames = ['y']; // Only support stack y\n\n    this.groupFields = null; // 参与分组的数据维度\n  }; // 获取最大的y值\n\n\n  _proto._getMax = function _getMax(dim) {\n    var self = this;\n    var mergeData = self.mergeData;\n    var maxRecord = maxBy(mergeData, function (obj) {\n      var value = obj[dim];\n\n      if (isArray(value)) {\n        return Math.max.apply(null, value);\n      }\n\n      return value;\n    });\n    var maxValue = maxRecord[dim];\n    var max = isArray(maxValue) ? Math.max.apply(null, maxValue) : maxValue;\n    return max;\n  }; // 获取每个字段最大的值\n\n\n  _proto._getXValuesMax = function _getXValuesMax() {\n    var self = this;\n    var yField = self.yField;\n    var xField = self.xField;\n    var cache = {};\n    var mergeData = self.mergeData;\n    each(mergeData, function (obj) {\n      var xValue = obj[xField];\n      var yValue = obj[yField];\n      var max = isArray(yValue) ? Math.max.apply(null, yValue) : yValue;\n      cache[xValue] = cache[xValue] || 0;\n\n      if (cache[xValue] < max) {\n        cache[xValue] = max;\n      }\n    });\n    return cache;\n  }; // 入口函数\n\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    self.mergeData = mergeData;\n\n    self._processSymmetric(dataArray);\n\n    self.mergeData = null;\n  }; // 处理对称\n\n\n  _proto._processSymmetric = function _processSymmetric(dataArray) {\n    var self = this;\n    var xField = self.xField;\n    var yField = self.yField;\n\n    var max = self._getMax(yField);\n\n    var first = dataArray[0][0];\n    var cache;\n\n    if (first && isArray(first[yField])) {\n      cache = self._getXValuesMax();\n    }\n\n    each(dataArray, function (data) {\n      each(data, function (obj) {\n        var value = obj[yField];\n        var offset;\n\n        if (isArray(value)) {\n          var xValue = obj[xField];\n          var valueMax = cache[xValue];\n          offset = (max - valueMax) / 2;\n          var tmp = [];\n          /* eslint-disable no-loop-func */\n\n          each(value, function (subVal) {\n            // 多个字段\n            tmp.push(offset + subVal);\n          });\n          /* eslint-enable no-loop-func */\n\n          obj[yField] = tmp;\n        } else {\n          offset = (max - value) / 2;\n          obj[yField] = [offset, value + offset];\n        }\n      });\n    });\n  };\n\n  return Symmetric;\n}(Adjust);\n\nAdjust.Symmetric = Symmetric;\nmodule.exports = Symmetric;\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _html, _tooltip;\n\n/**\n * @fileOverview G2 3.0 dark theme\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar BasicTheme = __webpack_require__(152); // tooltip 相关 dom 的 css 类名\n\n\nvar TOOLTIP_CONTAINER_CLASS = 'g2-tooltip';\nvar LEGEND_CONTAINER_CLASS = 'g2-legend';\nvar DarkTheme = Util.deepMix({}, BasicTheme, {\n  background: {\n    fill: '#1F1F1F',\n    radius: 2\n  },\n  // 容器区域\n  plotBackground: {\n    fill: '#1F1F1F'\n  },\n  // 绘图区域\n  axis: {\n    top: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      line: {\n        stroke: '#737373'\n      },\n      tickLine: {\n        stroke: '#737373'\n      }\n    },\n    bottom: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      line: {\n        stroke: '#737373'\n      },\n      tickLine: {\n        stroke: '#737373'\n      }\n    },\n    left: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#404040'\n        }\n      }\n    },\n    right: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#404040'\n        }\n      }\n    },\n    circle: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      line: {\n        stroke: '#737373'\n      },\n      tickLine: {\n        stroke: '#737373'\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#404040'\n        }\n      }\n    },\n    radius: {\n      label: {\n        textStyle: {\n          fill: '#A6A6A6'\n        }\n      },\n      line: {\n        stroke: '#737373'\n      },\n      tickLine: {\n        stroke: '#737373'\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#404040'\n        }\n      }\n    },\n    helix: {\n      line: {\n        stroke: '#737373'\n      },\n      tickLine: {\n        stroke: '#737373'\n      }\n    }\n  },\n  label: {\n    textStyle: {\n      fill: '#A6A6A6'\n    }\n  },\n  legend: {\n    right: {\n      textStyle: {\n        fill: '#737373'\n      },\n      unCheckColor: '#bfbfbf'\n    },\n    left: {\n      textStyle: {\n        fill: '#737373'\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    top: {\n      textStyle: {\n        fill: '#737373'\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    bottom: {\n      textStyle: {\n        fill: '#737373'\n      },\n      // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    html: (_html = {}, _html[\"\" + LEGEND_CONTAINER_CLASS] = {\n      color: '#D9D9D9'\n    }, _html),\n    gradient: {\n      textStyle: {\n        fill: '#D9D9D9'\n      },\n      lineStyle: {\n        stroke: '#404040'\n      }\n    }\n  },\n  tooltip: (_tooltip = {}, _tooltip[\"\" + TOOLTIP_CONTAINER_CLASS] = {\n    color: '#D9D9D9',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    boxShadow: '0px 0px 2px #000'\n  }, _tooltip),\n  tooltipCrosshairsRect: {\n    type: 'rect',\n    rectStyle: {\n      fill: '#fff',\n      opacity: 0.1\n    }\n  },\n  // tooltip 辅助背景框样式\n  tooltipCrosshairsLine: {\n    lineStyle: {\n      stroke: 'rgba(255, 255, 255, 0.45)'\n    }\n  },\n  guide: {\n    line: {\n      text: {\n        style: {\n          fill: '#A6A6A6'\n        }\n      }\n    },\n    text: {\n      style: {\n        fill: '#A6A6A6'\n      }\n    },\n    region: {\n      // TODO\n      style: {\n        lineWidth: 0,\n        // 辅助框的边框宽度\n        fill: '#000',\n        // 辅助框填充的颜色\n        fillOpacity: 0.04 // 辅助框的背景透明度\n        // 辅助框的图形样式属性\n\n      }\n    }\n  }\n});\nmodule.exports = DarkTheme;\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar GeomLabels = __webpack_require__(65);\n\nvar PolarLabels = __webpack_require__(164);\n\nvar PieLabels = __webpack_require__(335);\n\nvar IntervalLabels = __webpack_require__(336);\n\nvar Labels = {\n  getLabelsClass: function getLabelsClass(coordType, type) {\n    var rst = GeomLabels;\n\n    if (coordType === 'polar') {\n      rst = PolarLabels;\n    } else if (coordType === 'theta') {\n      // pie chart\n      rst = PieLabels;\n    } else if (type === 'interval' || type === 'polygon') {\n      // bar\n      rst = IntervalLabels;\n    }\n\n    return rst;\n  }\n};\nmodule.exports = Labels;\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Axis = __webpack_require__(31);\n\nAxis.Base = Axis;\nAxis.Circle = __webpack_require__(310);\nAxis.Grid = __webpack_require__(153);\nAxis.Helix = __webpack_require__(311);\nAxis.Line = __webpack_require__(312);\nAxis.Polyline = __webpack_require__(313);\nmodule.exports = Axis;\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Greedy = __webpack_require__(155);\n/*\n   *  根据如下规则尝试放置label\n   *                5\n   *        ------------------\n   *        |    1   |   0   |\n   *    8   —————————4————————   7\n   *        |    2   |   3   |\n   *        ——————————————————\n   *                 6\n   */\n\n\nfunction adjustLabelPosition(label, x, y, index) {\n  var bbox = label.getBBox();\n  var width = bbox.width;\n  var height = bbox.height;\n  var attrs = {\n    x: x,\n    y: y,\n    textAlign: 'center'\n  };\n\n  switch (index) {\n    case 0:\n      attrs.y -= height / 2;\n      attrs.textAlign = 'left';\n      break;\n\n    case 1:\n      attrs.y -= height / 2;\n      attrs.textAlign = 'right';\n      break;\n\n    case 2:\n      attrs.y += height / 2;\n      attrs.textAlign = 'right';\n      break;\n\n    case 3:\n      attrs.y += height / 2;\n      attrs.textAlign = 'left';\n      break;\n\n    case 5:\n      attrs.y -= height / 2;\n      break;\n\n    case 6:\n      attrs.y += height / 2;\n      break;\n\n    case 7:\n      attrs.x += width / 2;\n      attrs.textAlign = 'left';\n      break;\n\n    case 8:\n      attrs.x -= width / 2;\n      attrs.textAlign = 'right';\n      break;\n\n    default:\n      break;\n  }\n\n  label.attr(attrs);\n  return label.getBBox();\n}\n\nmodule.exports = function (labels) {\n  var greedy = new Greedy();\n  var toBeRemoved = [];\n  var bbox, label, x, y, canFill;\n\n  for (var i = 0; i < labels.length; i++) {\n    label = labels[i];\n    x = label.attr('x');\n    y = label.attr('y');\n    canFill = false;\n\n    for (var _i = 0; _i < 8; _i++) {\n      bbox = adjustLabelPosition(label, x, y, _i);\n\n      if (greedy.hasGap(bbox)) {\n        greedy.fillGap(bbox);\n        canFill = true;\n        break;\n      }\n    }\n\n    if (!canFill) {\n      toBeRemoved.push(label);\n    }\n  }\n\n  for (var _i2 = 0; _i2 < toBeRemoved.length; _i2++) {\n    toBeRemoved[_i2].remove();\n  }\n\n  return canFill;\n};\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Greedy = __webpack_require__(155);\n\nvar MAX_TIMES = 20;\n\nfunction spiralFill(label, greedy) {\n  var dt = -1;\n  var x = label.attr('x'),\n      y = label.attr('y');\n  var bbox = label.getBBox();\n  var maxDelta = Math.sqrt(bbox.width * bbox.width + bbox.height * bbox.height);\n  var dxdy,\n      t = -dt,\n      dx = 0,\n      dy = 0;\n\n  var f = function f(t) {\n    return [(t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n\n  if (greedy.hasGap(bbox)) {\n    greedy.fillGap(bbox);\n    return true;\n  }\n\n  var canFill = false,\n      times = 0;\n\n  while (Math.min(Math.abs(dx), Math.abs(dy)) < maxDelta && times < MAX_TIMES) {\n    dxdy = f(t += dt);\n    dx = ~~dxdy[0];\n    dy = ~~dxdy[1];\n    label.attr({\n      x: x + dx,\n      y: y + dy\n    });\n    times++;\n\n    if (greedy.hasGap(label.getBBox())) {\n      greedy.fillGap(bbox);\n      canFill = true;\n      break;\n    }\n  }\n\n  return canFill;\n}\n\nmodule.exports = function (labels) {\n  var label;\n  var greedy = new Greedy();\n  var toBeRemoved = [];\n\n  for (var i = 0; i < labels.length; i++) {\n    label = labels[i];\n\n    if (!spiralFill(label, greedy)) {\n      toBeRemoved.push(label);\n    }\n  }\n\n  for (var _i = 0; _i < toBeRemoved.length; _i++) {\n    toBeRemoved[_i].remove();\n  }\n};\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports) {\n\nmodule.exports = function bboxAdjust(labels, shapes) {\n  var labelBBox, shapeBBox;\n  var toBeRemoved = [];\n\n  for (var i = 0; i < labels.length; i++) {\n    labelBBox = labels[i].getBBox();\n    shapeBBox = shapes[i].getBBox();\n\n    if (labelBBox.width > shapeBBox.width || labelBBox.height > shapeBBox.height) {\n      toBeRemoved.push(labels[i]);\n    } else if (labelBBox.width * labelBBox.height > shapeBBox.width * shapeBBox.height) {\n      toBeRemoved.push(labels[i]);\n    }\n  }\n\n  for (var _i = 0; _i < toBeRemoved.length; _i++) {\n    toBeRemoved[_i].remove();\n  }\n};\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Base = __webpack_require__(31);\n\nvar vec2 = Util.MatrixUtil.vec2;\n\nvar Circle =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Circle, _Base);\n\n  function Circle() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Circle.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 坐标轴的类型\n       * @type {String}\n       */\n      type: 'circle',\n\n      /**\n       * 指定刻度之间的间距\n       * @type {Number}\n       */\n      tickInterval: null,\n\n      /**\n       * 开始弧度\n       * @type {Number}\n       */\n      startAngle: -Math.PI / 2,\n\n      /**\n       * 结束弧度\n       * @type {Number}\n       */\n      endAngle: Math.PI * 3 / 2,\n      line: {\n        // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n        lineWidth: 1,\n        stroke: '#C0D0E0'\n      },\n      tickLine: {\n        // @type {Attrs} 标注坐标线的图形属性\n        lineWidth: 1,\n        stroke: '#C0D0E0',\n        length: 5\n      },\n\n      /**\n       * 默认文本距离轴线的距离\n       * @type {Number}\n       */\n      _labelOffset: 5\n    });\n  };\n\n  _proto.parseTick = function parseTick(tick, index, length) {\n    return {\n      text: tick,\n      value: index / length\n    };\n  };\n\n  _proto._getCirclePoint = function _getCirclePoint(angle, radius) {\n    var self = this;\n    var center = self.get('center');\n    radius = radius || self.get('radius');\n    return {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius\n    };\n  };\n\n  _proto.getTickPoint = function getTickPoint(value) {\n    var self = this;\n    var startAngle = self.get('startAngle');\n    var endAngle = self.get('endAngle');\n    var angle = startAngle + (endAngle - startAngle) * value;\n    return self._getCirclePoint(angle);\n  };\n\n  _proto.getSideVector = function getSideVector(offset, point) {\n    var self = this;\n    var center = self.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n\n    if (!Util.isNil(offset)) {\n      var vecLen = vec2.length(vector);\n      vec2.scale(vector, vector, offset / vecLen);\n    }\n\n    return vector;\n  };\n\n  _proto.getSidePoint = function getSidePoint(point, offset) {\n    var self = this;\n    var vector = self.getSideVector(offset, point);\n    return {\n      x: point.x + vector[0],\n      y: point.y + vector[1]\n    };\n  };\n\n  _proto.getTickEnd = function getTickEnd(start, length) {\n    var self = this;\n    var tickLine = self.get('tickLine');\n    length = length ? length : tickLine.length;\n    return self.getSidePoint(start, length);\n  };\n\n  _proto.getTextAnchor = function getTextAnchor(vector) {\n    var align;\n\n    if (Util.snapEqual(vector[0], 0)) {\n      align = 'center';\n    } else if (vector[0] > 0) {\n      align = 'left';\n    } else if (vector[0] < 0) {\n      align = 'right';\n    }\n\n    return align;\n  };\n\n  _proto.getLinePath = function getLinePath() {\n    var self = this;\n    var center = self.get('center');\n    var x = center.x;\n    var y = center.y;\n    var rx = self.get('radius');\n    var ry = rx;\n    var startAngle = self.get('startAngle');\n    var endAngle = self.get('endAngle');\n    var inner = self.get('inner');\n    var path = [];\n\n    if (Math.abs(endAngle - startAngle) === Math.PI * 2) {\n      path = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n    } else {\n      var startPoint = self._getCirclePoint(startAngle);\n\n      var endPoint = self._getCirclePoint(endAngle);\n\n      var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n      var sweep = startAngle > endAngle ? 0 : 1;\n\n      if (!inner) {\n        path = [['M', x, y], ['L', startPoint.x, startPoint.y], ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y], ['L', x, y]];\n      } else {\n        var innerStartVector = self.getSideVector(inner * rx, startPoint);\n        var innerEndVector = self.getSideVector(inner * rx, endPoint);\n        var innerStartPoint = {\n          x: innerStartVector[0] + x,\n          y: innerStartVector[1] + y\n        };\n        var innerEndPoint = {\n          x: innerEndVector[0] + x,\n          y: innerEndVector[1] + y\n        };\n        path = [['M', innerStartPoint.x, innerStartPoint.y], ['L', startPoint.x, startPoint.y], ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y], ['L', innerEndPoint.x, innerEndPoint.y], ['A', rx * inner, ry * inner, 0, large, Math.abs(sweep - 1), innerStartPoint.x, innerStartPoint.y]];\n      }\n    }\n\n    return path;\n  };\n\n  _proto.addLabel = function addLabel(tick, point, index) {\n    var self = this;\n    var offset = self.get('label').offset || self.get('_labelOffset') || 0.001;\n    point = self.getSidePoint(point, offset);\n\n    _Base.prototype.addLabel.call(this, tick, point, index);\n  };\n\n  _proto.autoRotateLabels = function autoRotateLabels() {\n    var self = this;\n    var ticks = self.get('ticks');\n    var labelRenderer = self.get('labelRenderer');\n\n    if (labelRenderer && ticks.length > 12) {\n      // 小于12个文本时文本不旋转\n      var radius = self.get('radius');\n      var startAngle = self.get('startAngle');\n      var endAngle = self.get('endAngle');\n      var totalAngle = endAngle - startAngle;\n      var avgAngle = totalAngle / (ticks.length - 1);\n      var avgWidth = Math.sin(avgAngle / 2) * radius * 2;\n      var maxLength = self.getMaxLabelWidth(labelRenderer);\n      Util.each(labelRenderer.get('group').get('children'), function (label, index) {\n        var tick = ticks[index];\n        var angle = tick.value * totalAngle + startAngle;\n        var mode = angle % (Math.PI * 2);\n\n        if (maxLength < avgWidth) {\n          // 文本的最大宽度大于\n          if (mode <= 0) {\n            angle = angle + Math.PI;\n          }\n\n          if (mode > Math.PI) {\n            angle = angle - Math.PI;\n          }\n\n          angle = angle - Math.PI / 2;\n          label.attr('textAlign', 'center');\n        } else {\n          if (mode > Math.PI / 2) {\n            angle = angle - Math.PI;\n          } else if (mode < Math.PI / 2 * -1) {\n            angle = angle + Math.PI;\n          }\n        }\n\n        label.rotateAtStart(angle);\n      });\n    }\n  };\n\n  return Circle;\n}(Base);\n\nmodule.exports = Circle;\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Base = __webpack_require__(31);\n\nvar MatrixUtil = Util.MatrixUtil,\n    PathUtil = Util.PathUtil;\nvar vec2 = MatrixUtil.vec2;\n\nvar Helix =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Helix, _Base);\n\n  function Helix() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Helix.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      inner: 0,\n      type: 'helix',\n      line: {\n        // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n        lineWidth: 1,\n        stroke: '#C0D0E0'\n      },\n      tickLine: {\n        // @type {Attrs} 标注坐标线的图形属性\n        lineWidth: 1,\n        stroke: '#C0D0E0',\n        length: 5\n      },\n      startAngle: 1.25 * Math.PI,\n      endAngle: 7.25 * Math.PI,\n      // 螺旋系数\n      a: 0,\n      // 画布中心坐标\n      center: null,\n      // 坐标轴绘制起点\n      axisStart: null,\n      // 坐标轴的n个坐标点\n      crp: []\n    });\n  };\n\n  _proto.getLinePath = function getLinePath() {\n    var self = this;\n    var crp = self.get('crp');\n    var axisStart = self.get('axisStart');\n    var path = PathUtil.catmullRomToBezier(crp);\n    path.unshift(['M', axisStart.x, axisStart.y]);\n    return path;\n  };\n\n  _proto.getTickPoint = function getTickPoint(value) {\n    var self = this;\n    var startAngle = self.get('startAngle');\n    var endAngle = self.get('endAngle');\n    var angle = startAngle + (endAngle - startAngle) * value;\n    return self._getHelixPoint(angle);\n  };\n\n  _proto._getHelixPoint = function _getHelixPoint(angle) {\n    var self = this;\n    var center = self.get('center');\n    var a = self.get('a'); // 螺线系数\n\n    var radius = a * angle + self.get('inner'); // 螺线方程\n\n    return {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius\n    };\n  };\n\n  _proto.getSideVector = function getSideVector(offset, point) {\n    var self = this;\n    var center = self.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n\n    if (offset) {\n      var vecLen = vec2.length(vector);\n      vec2.scale(vector, vector, offset / vecLen);\n    }\n\n    return vector;\n  };\n\n  _proto.getSidePoint = function getSidePoint(point, offset) {\n    var self = this;\n    var vector = self.getSideVector(offset, point);\n    return {\n      x: point.x + vector[0],\n      y: point.y + vector[1]\n    };\n  };\n\n  _proto.getTickEnd = function getTickEnd(start, length) {\n    var self = this;\n    var tickLine = self.get('tickLine');\n    length = length ? length : tickLine.length;\n    return self.getSidePoint(start, length);\n  };\n\n  return Helix;\n}(Base);\n\nmodule.exports = Helix;\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = __webpack_require__(31);\n\nvar Util = __webpack_require__(3);\n\nvar MatrixUtil = Util.MatrixUtil;\nvar vec2 = MatrixUtil.vec2;\n\nvar Line =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Line, _Base);\n\n  function Line() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Line.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      x: null,\n      // @type {Number} 距离初始位置的x轴偏移量,仅对于左侧、右侧的纵向坐标有效\n      y: null,\n      // @type {Number} 距离初始位置的y轴偏移量，仅对顶部、底部的横向坐标轴有效\n      line: {\n        // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n        lineWidth: 1,\n        stroke: '#C0D0E0'\n      },\n      tickLine: {\n        // @type {Attrs} 标注坐标线的图形属性\n        lineWidth: 1,\n        stroke: '#C0D0E0',\n        length: 5\n      },\n      isVertical: false,\n      start: null,\n      // @type {Object} 起点\n      end: null // @type {Object} 终点\n\n    });\n  };\n\n  _proto._getAvgLabelLength = function _getAvgLabelLength(labelRenderer) {\n    var labels = labelRenderer.get('group').get('children');\n    return labels[1].attr('x') - labels[0].attr('x');\n  };\n\n  _proto._getAvgLabelHeightSpace = function _getAvgLabelHeightSpace(labelRenderer) {\n    var labels = labelRenderer.get('group').get('children');\n    return labels[1].attr('y') - labels[0].attr('y');\n  };\n  /**\n   * 获取距离坐标轴的向量\n   * @override\n   * @param  {Number} offset 偏移值\n   * @return {Array}        返回二维向量\n   */\n\n\n  _proto.getSideVector = function getSideVector(offset) {\n    var self = this;\n    var isVertical = self.get('isVertical');\n    var factor = self.get('factor'); // if (Util.isArray(offset)) {\n    //   return offset.map(value => value * factor);\n    // }\n\n    if (!Util.isNumber(offset)) {\n      return [0, 0];\n    }\n\n    var start = self.get('start');\n    var end = self.get('end');\n    var axisVector = self.getAxisVector();\n    var normal = vec2.normalize([], axisVector);\n    var direction = false;\n\n    if (isVertical && start.y < end.y || !isVertical && start.x > end.x) {\n      direction = true;\n    }\n\n    var verticalVector = vec2.vertical([], normal, direction);\n    return vec2.scale([], verticalVector, offset * factor);\n  };\n\n  _proto.getAxisVector = function getAxisVector() {\n    var start = this.get('start');\n    var end = this.get('end');\n    return [end.x - start.x, end.y - start.y];\n  };\n\n  _proto.getLinePath = function getLinePath() {\n    var self = this;\n    var start = self.get('start');\n    var end = self.get('end');\n    var path = [];\n    path.push(['M', start.x, start.y]);\n    path.push(['L', end.x, end.y]);\n    return path;\n  };\n\n  _proto.getTickEnd = function getTickEnd(start, value) {\n    var self = this;\n    var offsetVector = self.getSideVector(value);\n    return {\n      x: start.x + offsetVector[0],\n      y: start.y + offsetVector[1]\n    };\n  };\n\n  _proto.getTickPoint = function getTickPoint(tickValue) {\n    var self = this;\n    var start = self.get('start');\n    var end = self.get('end');\n    var rangeX = end.x - start.x;\n    var rangeY = end.y - start.y;\n    return {\n      x: start.x + rangeX * tickValue,\n      y: start.y + rangeY * tickValue\n    };\n  };\n\n  _proto.renderTitle = function renderTitle() {\n    var self = this;\n    var title = self.get('title');\n    var offsetPoint = self.getTickPoint(0.5);\n    var titleOffset = title.offset;\n\n    if (Util.isNil(titleOffset)) {\n      // 没有指定 offset 则自动计算\n      titleOffset = 20;\n      var labelsGroup = self.get('labelsGroup');\n\n      if (labelsGroup) {\n        var labelLength = self.getMaxLabelWidth(labelsGroup);\n        var labelOffset = self.get('label').offset || self.get('_labelOffset');\n        titleOffset += labelLength + labelOffset;\n      }\n    }\n\n    var textStyle = title.textStyle;\n    var cfg = Util.mix({}, textStyle);\n\n    if (title.text) {\n      var vector = self.getAxisVector(); // 坐标轴方向的向量\n\n      if (title.autoRotate && Util.isNil(textStyle.rotate)) {\n        // 自动旋转并且用户没有指定标题的旋转角度\n        var angle = 0;\n\n        if (!Util.snapEqual(vector[1], 0)) {\n          // 所有水平坐标轴，文本不转置\n          var v1 = [1, 0];\n          var v2 = [vector[0], vector[1]];\n          angle = vec2.angleTo(v2, v1, true);\n        }\n\n        cfg.rotate = angle * (180 / Math.PI);\n      } else if (!Util.isNil(textStyle.rotate)) {\n        // 用户设置了旋转角度就以用户设置的为准\n        cfg.rotate = textStyle.rotate / 180 * Math.PI; // 将角度转换为弧度\n      }\n\n      var sideVector = self.getSideVector(titleOffset);\n      var point;\n      var position = title.position;\n\n      if (position === 'start') {\n        point = {\n          x: this.get('start').x + sideVector[0],\n          y: this.get('start').y + sideVector[1]\n        };\n      } else if (position === 'end') {\n        point = {\n          x: this.get('end').x + sideVector[0],\n          y: this.get('end').y + sideVector[1]\n        };\n      } else {\n        point = {\n          x: offsetPoint.x + sideVector[0],\n          y: offsetPoint.y + sideVector[1]\n        };\n      }\n\n      cfg.x = point.x;\n      cfg.y = point.y;\n      cfg.text = title.text;\n      var group = self.get('group');\n      var titleShape = group.addShape('Text', {\n        zIndex: 2,\n        attrs: cfg\n      });\n      titleShape.name = 'axis-title';\n      self.get('appendInfo') && titleShape.setSilent('appendInfo', self.get('appendInfo'));\n    }\n  };\n\n  _proto.autoRotateLabels = function autoRotateLabels() {\n    var self = this;\n    var labelRenderer = self.get('labelRenderer');\n    var title = self.get('title');\n\n    if (labelRenderer) {\n      var labelGroup = labelRenderer.get('group');\n      var labels = labelGroup.get('children');\n      var offset = self.get('label').offset;\n      var append = 12;\n      var titleOffset = title ? title.offset : 48;\n\n      if (titleOffset < 0) {\n        // 如果是负的的话就不旋转\n        return;\n      }\n\n      var vector = self.getAxisVector(); // 坐标轴的向量，仅处理水平或者垂直的场景\n\n      var angle;\n      var maxWidth;\n\n      if (Util.snapEqual(vector[0], 0) && title && title.text) {\n        // 坐标轴垂直，由于不知道边距，只能防止跟title重合，如果title不存在，则不自动旋转\n        maxWidth = self.getMaxLabelWidth(labelRenderer);\n\n        if (maxWidth > titleOffset - offset - append) {\n          angle = Math.acos((titleOffset - offset - append) / maxWidth) * -1;\n        }\n      } else if (Util.snapEqual(vector[1], 0) && labels.length > 1) {\n        // 坐标轴水平，不考虑边距，根据最长的和平均值进行翻转\n        var avgWidth = Math.abs(self._getAvgLabelLength(labelRenderer));\n        maxWidth = self.getMaxLabelWidth(labelRenderer);\n\n        if (maxWidth > avgWidth) {\n          angle = Math.asin((titleOffset - offset - append) * 1.25 / maxWidth);\n        }\n      }\n\n      if (angle) {\n        var factor = self.get('factor');\n        Util.each(labels, function (label) {\n          label.rotateAtStart(angle);\n\n          if (Util.snapEqual(vector[1], 0)) {\n            if (factor > 0) {\n              label.attr('textAlign', 'left');\n            } else {\n              label.attr('textAlign', 'right');\n            }\n          }\n        });\n      }\n    }\n  };\n\n  _proto.autoHideLabels = function autoHideLabels() {\n    var self = this;\n    var labelRenderer = self.get('labelRenderer');\n    var labelSpace;\n    var tickStep;\n    var append = 8;\n\n    if (labelRenderer) {\n      var labelGroup = labelRenderer.get('group');\n      var labels = labelGroup.get('children');\n      var vector = self.getAxisVector(); // 坐标轴的向量，仅处理水平或者垂直的场景\n\n      if (labels.length < 2) {\n        return;\n      }\n\n      if (Util.snapEqual(vector[0], 0)) {\n        // 坐标轴垂直\n        var maxHeight = self.getMaxLabelHeight(labelRenderer) + append;\n        var avgHeight = Math.abs(self._getAvgLabelHeightSpace(labelRenderer));\n\n        if (maxHeight > avgHeight) {\n          labelSpace = maxHeight;\n          tickStep = avgHeight;\n        }\n      } else if (Util.snapEqual(vector[1], 0) && labels.length > 1) {\n        // 坐标轴水平\n        var maxWidth = self.getMaxLabelWidth(labelRenderer) + append;\n        var avgWidth = Math.abs(self._getAvgLabelLength(labelRenderer));\n\n        if (maxWidth > avgWidth) {\n          labelSpace = maxWidth;\n          tickStep = avgWidth;\n        }\n      }\n\n      if (labelSpace && tickStep) {\n        var ratio = Math.ceil(labelSpace / tickStep);\n        Util.each(labels, function (label, i) {\n          if (i % ratio !== 0) {\n            label.attr('text', '');\n          }\n        });\n      }\n    }\n  };\n\n  return Line;\n}(Base);\n\nmodule.exports = Line;\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Base = __webpack_require__(31);\n\nvar MatrixUtil = Util.MatrixUtil,\n    PathUtil = Util.PathUtil;\nvar vec2 = MatrixUtil.vec2;\n\nvar Polyline =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Polyline, _Base);\n\n  function Polyline() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Polyline.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      type: 'polyline'\n    });\n  };\n\n  _proto.getLinePath = function getLinePath() {\n    var self = this;\n    var tickPoints = self.get('tickPoints');\n    var start = self.get('start');\n    var end = self.get('end');\n    var points = [];\n    points.push(start.x);\n    points.push(start.y);\n    Util.each(tickPoints, function (tick) {\n      points.push(tick.x);\n      points.push(tick.y);\n    });\n    points.push(end.x);\n    points.push(end.y);\n    var path = PathUtil.catmullRomToBezier(points);\n    path.unshift(['M', start.x, start.y]);\n    return path;\n  };\n\n  _proto.getTickPoint = function getTickPoint(value, index) {\n    var tickPoints = this.get('tickPoints');\n    return tickPoints[index];\n  };\n\n  _proto.getTickEnd = function getTickEnd(start, value, index) {\n    var self = this;\n    var lineAttrs = self.get('tickLine');\n    var tickLength = value ? value : lineAttrs.length;\n    var offsetVector = self.getSideVector(tickLength, start, index);\n    return {\n      x: start.x + offsetVector[0],\n      y: start.y + offsetVector[1]\n    };\n  };\n\n  _proto.getSideVector = function getSideVector(offset, point, index) {\n    var self = this;\n    var preTickPoint;\n\n    if (index === 0) {\n      preTickPoint = self.get('start');\n\n      if (preTickPoint.x === point.x && preTickPoint.y === point.y) {\n        return [0, 0];\n      }\n    } else {\n      var tickPoints = self.get('tickPoints');\n      preTickPoint = tickPoints[index - 1];\n    }\n\n    var vector = [point.x - preTickPoint.x, point.y - preTickPoint.y];\n    var normal = vec2.normalize([], vector);\n    var verticalVector = vec2.vertical([], normal, false);\n    return vec2.scale([], verticalVector, offset);\n  };\n\n  return Polyline;\n}(Base);\n\nmodule.exports = Polyline;\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Guide: __webpack_require__(15),\n  Arc: __webpack_require__(315),\n  DataMarker: __webpack_require__(316),\n  DataRegion: __webpack_require__(317),\n  Html: __webpack_require__(318),\n  Image: __webpack_require__(319),\n  Line: __webpack_require__(320),\n  Region: __webpack_require__(321),\n  Text: __webpack_require__(322)\n};\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar PI = Math.PI;\nvar atan = Math.atan;\n\nfunction calculateAngle(point, center) {\n  var x = point.x - center.x;\n  var y = point.y - center.y;\n  var deg;\n\n  if (y === 0) {\n    if (x < 0) {\n      deg = PI / 2;\n    } else {\n      deg = 270 * PI / 180;\n    }\n  } else if (x >= 0 && y > 0) {\n    deg = PI * 2 - atan(x / y);\n  } else if (x <= 0 && y < 0) {\n    deg = PI - atan(x / y);\n  } else if (x > 0 && y < 0) {\n    deg = PI + atan(-x / y);\n  } else if (x < 0 && y > 0) {\n    deg = atan(x / -y);\n  }\n\n  return deg;\n}\n\nvar Arc =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Arc, _Guide);\n\n  function Arc() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Arc.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 辅助元素类型\n       * @type {String}\n       */\n      name: 'arc',\n\n      /**\n       * 辅助弧线的起始点\n       * @type {Object | Function | Array}\n       */\n      start: null,\n\n      /**\n       * 辅助弧线的终止点\n       * @type {Object | Function | Array}\n       */\n      end: null,\n\n      /**\n       * 辅助文本的样式配置\n       * @type {Object}\n       */\n      style: {\n        stroke: '#999',\n        lineWidth: 1\n      }\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var start = self.parsePoint(coord, self.get('start'));\n    var end = self.parsePoint(coord, self.get('end'));\n    var coordCenter = coord.getCenter();\n    var radius = Math.sqrt((start.x - coordCenter.x) * (start.x - coordCenter.x) + (start.y - coordCenter.y) * (start.y - coordCenter.y));\n    var path; // 处理整圆的情况\n\n    var startAngle = calculateAngle(start, coordCenter);\n    var endAngle = calculateAngle(end, coordCenter);\n\n    if (endAngle < startAngle) {\n      endAngle += PI * 2;\n    }\n\n    if (Util.isNumberEqual(start.x, end.x) && Util.isNumberEqual(start.y, end.y) && (self.get('start')[0] !== self.get('end')[0] || self.get('start')[1] !== self.get('end')[1])) {\n      path = [['M', start.x, start.y], ['A', radius, radius, 0, 1, 1, 2 * coordCenter.x - start.x, 2 * coordCenter.y - start.y], ['A', radius, radius, 0, 1, 1, start.x, start.y]];\n    } else {\n      var dAngle = (endAngle - startAngle) % (PI * 2);\n      var largeArc = dAngle > PI ? 1 : 0;\n      path = [['M', start.x, start.y], ['A', radius, radius, 0, largeArc, 1, end.x, end.y]];\n    }\n\n    var arcShape = group.addShape('path', {\n      zIndex: self.get('zIndex'),\n      attrs: Util.mix({\n        path: path\n      }, self.get('style'))\n    });\n    arcShape.name = 'guide-arc';\n    self.get('appendInfo') && arcShape.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', arcShape);\n  };\n\n  return Arc;\n}(Guide);\n\nmodule.exports = Arc;\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar DataMarker =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(DataMarker, _Guide);\n\n  function DataMarker() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = DataMarker.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'dataMarker',\n      zIndex: 1,\n      top: true,\n      position: null,\n      style: {\n        point: {\n          r: 3,\n          fill: '#FFFFFF',\n          stroke: '#1890FF',\n          lineWidth: 2\n        },\n        line: {\n          stroke: '#A3B1BF',\n          lineWidth: 1\n        },\n        text: {\n          fill: '#000000',\n          opacity: 0.65,\n          fontSize: 12,\n          textAlign: 'start'\n        }\n      },\n      // end of style\n      display: {\n        point: true,\n        line: true,\n        text: true\n      },\n      lineLength: 20,\n      direction: 'upward',\n      autoAdjust: true\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var point = self.parsePoint(coord, self.get('position')); // container\n\n    var markerGroup = group.addGroup();\n    markerGroup.name = 'guide-data-marker'; // markerGroup.translate(point.x, point.y);\n\n    var positions = self._getElementPosition(point);\n\n    var display = self.get('display');\n    var lineShape;\n    var textShape; // add line\n\n    if (display.line) {\n      var lineData = positions.line;\n      lineShape = self._drawLine(lineData, markerGroup);\n    } // add text\n\n\n    if (display.text && self.get('content')) {\n      var textPosition = positions.text;\n      textShape = self._drawText(textPosition, markerGroup);\n    } // add circle\n\n\n    if (display.point) {\n      var pointPoisition = positions.point;\n\n      self._drawPoint(pointPoisition, markerGroup);\n    }\n\n    if (self.get('autoAdjust')) {\n      var bbox = markerGroup.getBBox();\n      var minX = bbox.minX,\n          minY = bbox.minY,\n          maxX = bbox.maxX,\n          maxY = bbox.maxY;\n      var start = coord.start,\n          end = coord.end;\n\n      if (textShape) {\n        if (minX <= start.x) {\n          // 左侧超出\n          textShape.attr('textAlign', 'start');\n        }\n\n        if (maxX >= end.x) {\n          // 右侧超出\n          textShape.attr('textAlign', 'end');\n        }\n\n        var direction = self.get('direction');\n\n        if (direction === 'upward' && minY <= end.y || direction !== 'upward' && maxY >= start.y) {\n          // 上方或者下方超出\n          var textBaseline;\n          var dir;\n\n          if (direction === 'upward' && minY <= end.y) {\n            textBaseline = 'top';\n            dir = 1;\n          } else {\n            textBaseline = 'bottom';\n            dir = -1;\n          }\n\n          textShape.attr('textBaseline', textBaseline);\n          var lineLength = 0;\n\n          if (self.get('display').line) {\n            lineLength = self.get('lineLength');\n            var linePath = [['M', point.x, point.y], ['L', point.x, point.y + lineLength * dir]];\n            lineShape.attr('path', linePath);\n          }\n\n          var newY = point.y + (lineLength + 2) * dir;\n          textShape.attr('y', newY);\n        }\n      }\n    }\n\n    self.get('appendInfo') && markerGroup.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', markerGroup);\n  };\n\n  _proto._getElementPosition = function _getElementPosition(position) {\n    var self = this;\n    var x = position.x,\n        y = position.y;\n    var lineLength = self.get('display').line ? self.get('lineLength') : 0;\n    var direction = self.get('direction');\n    var textStyle = self.get('style').text;\n    textStyle.textBaseline = direction === 'upward' ? 'bottom' : 'top';\n    var dir = direction === 'upward' ? -1 : 1;\n    var pointPoisition = {\n      x: x,\n      y: y\n    };\n    var lineStart = {\n      x: x,\n      y: y\n    };\n    var lineEnd = {\n      x: x,\n      y: lineLength * dir + y\n    };\n    var textPosition = {\n      x: x,\n      y: (lineLength + 2) * dir + y\n    };\n    return {\n      point: pointPoisition,\n      line: [lineStart, lineEnd],\n      text: textPosition\n    };\n  };\n\n  _proto._drawLine = function _drawLine(lineData, g) {\n    var self = this;\n    var lineStyle = self.get('style').line;\n    var linePath = [['M', lineData[0].x, lineData[0].y], ['L', lineData[1].x, lineData[1].y]];\n    var lineShape = g.addShape('path', {\n      attrs: Util.mix({\n        path: linePath\n      }, lineStyle)\n    });\n    return lineShape;\n  };\n\n  _proto._drawText = function _drawText(position, g) {\n    var self = this;\n    var textStyle = this.get('style').text;\n    var textShape = g.addShape('text', {\n      attrs: Util.mix({\n        text: self.get('content')\n      }, textStyle, position)\n    });\n    return textShape;\n  };\n\n  _proto._drawPoint = function _drawPoint(position, g) {\n    var self = this;\n    var pointStyle = self.get('style').point;\n    var pointShape = g.addShape('circle', {\n      attrs: Util.mix({}, pointStyle, position)\n    });\n    return pointShape;\n  };\n\n  return DataMarker;\n}(Guide);\n\nmodule.exports = DataMarker;\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Helper = __webpack_require__(156);\n\nvar Guide = __webpack_require__(15);\n\nvar DataRegion =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(DataRegion, _Guide);\n\n  function DataRegion() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = DataRegion.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'dataRegion',\n      start: null,\n      // 只支持数值\n      end: null,\n      // 只支持数值\n      content: '',\n      // 文本内容\n      style: {\n        region: {\n          lineWidth: 0,\n          fill: '#000000',\n          opacity: 0.04\n        },\n        text: {\n          textAlign: 'center',\n          textBaseline: 'bottom',\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, .65)'\n        }\n      }\n    });\n  };\n\n  _proto.render = function render(coord, group, data) {\n    var self = this; // draw region\n\n    var lineLength = self.get('lineLength') || 0; // TODO: 如何命名\n\n    var regionData = self._getRegionData(coord, data);\n\n    if (!regionData.length) return;\n\n    var regionBBox = self._getBBox(regionData);\n\n    var path = [];\n    path.push(['M', regionData[0].x, regionBBox.yMin - lineLength]);\n\n    for (var i = 0, len = regionData.length; i < len; i++) {\n      var p = ['L', regionData[i].x, regionData[i].y];\n      path.push(p);\n    }\n\n    path.push(['L', regionData[regionData.length - 1].x, regionBBox.yMin - lineLength]); // draw\n\n    var style = self.get('style');\n    var regionStyle = style.region; // 兼容之前的写法\n\n    var textStyle = style.text;\n    var regionGroup = group.addGroup();\n    regionGroup.name = 'guide-data-region';\n    regionGroup.addShape('path', {\n      attrs: Util.mix({\n        path: path\n      }, regionStyle)\n    });\n    var content = self.get('content');\n\n    if (content) {\n      regionGroup.addShape('Text', {\n        attrs: Util.mix({\n          x: (regionBBox.xMin + regionBBox.xMax) / 2,\n          y: regionBBox.yMin - lineLength,\n          text: content\n        }, textStyle)\n      });\n    }\n\n    self.get('appendInfo') && regionGroup.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', regionGroup);\n  };\n\n  _proto._getRegionData = function _getRegionData(coord, data) {\n    var self = this;\n    var start = self.get('start');\n    var end = self.get('end');\n    var xField = Helper.getFirstScale(self.get('xScales')).field;\n    var yField = Helper.getFirstScale(self.get('yScales')).field;\n    var startXValue = Util.isArray(start) ? start[0] : start[xField];\n    var endXValue = Util.isArray(end) ? end[0] : end[xField];\n    var startIndex;\n    var arr = [];\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item[xField] === startXValue) {\n        startIndex = i;\n      }\n\n      if (i >= startIndex) {\n        arr.push(self.parsePoint(coord, [item[xField], item[yField]]));\n      }\n\n      if (item[xField] === endXValue) {\n        break;\n      }\n    }\n\n    return arr;\n  };\n\n  _proto._getBBox = function _getBBox(data) {\n    var xs = [];\n    var ys = [];\n\n    for (var i = 0; i < data.length; i++) {\n      xs.push(data[i].x);\n      ys.push(data[i].y);\n    }\n\n    var xRange = Util.arrayUtil.getRange(xs);\n    var yRange = Util.arrayUtil.getRange(ys);\n    return {\n      xMin: xRange.min,\n      xMax: xRange.max,\n      yMin: yRange.min,\n      yMax: yRange.max\n    };\n  };\n\n  return DataRegion;\n}(Guide);\n\nmodule.exports = DataRegion;\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar DomUtil = Util.DomUtil;\n\nvar Guide = __webpack_require__(15);\n\nvar Html =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Html, _Guide);\n\n  function Html() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Html.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'html',\n      zIndex: 7,\n      position: null,\n\n      /**\n       * Horizontal alignment, can be 'left'、'middle'、'right'\n       * @type {String}\n       */\n      alignX: 'middle',\n\n      /**\n       * vertical alignment, can be 'top'、'middle'、'bottom'\n       * @type {String}\n       */\n      alignY: 'middle',\n\n      /**\n       * Horizontal offset\n       * @type {Number}\n       */\n      offsetX: null,\n\n      /**\n       * Vertical offset\n       * @type {Number}\n       */\n      offsetY: null,\n\n      /**\n      * html content\n      *@type {String | Function}\n      */\n      html: null\n    });\n  };\n  /**\n   * render Html Guide\n   * @override\n   * @param {Coordinate} coord the instance of Coordinate class\n   * @param {Container} container the container which contain the guide component\n   */\n\n\n  _proto.render = function render(coord, container) {\n    var self = this;\n    var position = self.parsePoint(coord, self.get('position'));\n    var parentNode = container.get('canvas').get('el').parentNode;\n    var wrapperNode = DomUtil.createDom('<div class=\"g-guide\"></div>');\n    parentNode.appendChild(wrapperNode);\n    var html = self.get('htmlContent') || self.get('html');\n\n    if (Util.isFunction(html)) {\n      var xScales = self.get('xScales');\n      var yScales = self.get('yScales');\n      html = html(xScales, yScales);\n    }\n\n    var htmlNode = DomUtil.createDom(html);\n    wrapperNode.appendChild(htmlNode);\n    DomUtil.modifyCSS(wrapperNode, {\n      position: 'absolute' // to fix dom in the document stream to get the true width\n\n    });\n\n    self._setDomPosition(wrapperNode, htmlNode, position);\n\n    self.set('el', wrapperNode);\n  };\n\n  _proto._setDomPosition = function _setDomPosition(parentDom, childDom, point) {\n    var self = this;\n    var alignX = self.get('alignX');\n    var alignY = self.get('alignY');\n    var domWidth = DomUtil.getOuterWidth(childDom);\n    var domHeight = DomUtil.getOuterHeight(childDom);\n    var position = {\n      x: point.x,\n      y: point.y\n    };\n\n    if (alignX === 'middle' && alignY === 'top') {\n      position.x -= Math.round(domWidth / 2);\n    } else if (alignX === 'middle' && alignY === 'bottom') {\n      position.x -= Math.round(domWidth / 2);\n      position.y -= Math.round(domHeight);\n    } else if (alignX === 'left' && alignY === 'bottom') {\n      position.y -= Math.round(domHeight);\n    } else if (alignX === 'left' && alignY === 'middle') {\n      position.y -= Math.round(domHeight / 2);\n    } else if (alignX === 'left' && alignY === 'top') {\n      position.x = point.x;\n      position.y = point.y;\n    } else if (alignX === 'right' && alignY === 'bottom') {\n      position.x -= Math.round(domWidth);\n      position.y -= Math.round(domHeight);\n    } else if (alignX === 'right' && alignY === 'middle') {\n      position.x -= Math.round(domWidth);\n      position.y -= Math.round(domHeight / 2);\n    } else if (alignX === 'right' && alignY === 'top') {\n      position.x -= Math.round(domWidth);\n    } else {\n      // 默认位于中心点\n      position.x -= Math.round(domWidth / 2);\n      position.y -= Math.round(domHeight / 2);\n    }\n\n    var offsetX = self.get('offsetX');\n\n    if (offsetX) {\n      position.x += offsetX;\n    }\n\n    var offsetY = self.get('offsetY');\n\n    if (offsetY) {\n      position.y += offsetY;\n    }\n\n    DomUtil.modifyCSS(parentDom, {\n      top: Math.round(position.y) + 'px',\n      left: Math.round(position.x) + 'px',\n      visibility: 'visible',\n      zIndex: self.get('zIndex')\n    });\n  };\n  /**\n   * clear html guide\n   * @override\n   */\n\n\n  _proto.clear = function clear() {\n    var self = this;\n    var el = self.get('el');\n    el && el.parentNode && el.parentNode.removeChild(el);\n  };\n\n  return Html;\n}(Guide);\n\nmodule.exports = Html;\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar Image =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Image, _Guide);\n\n  function Image() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      type: 'image',\n\n      /**\n       * the start of image\n       * @type {Object | Function | Array}\n       */\n      start: null,\n\n      /**\n       * the end of image\n       * @type {Object | Function | Array}\n       */\n      end: null,\n\n      /**\n       * image url\n       * @type {String}\n       */\n      src: null,\n\n      /**\n       * Horizontal offset\n       * @type {Number}\n       */\n      offsetX: null,\n\n      /**\n       * Vertical offset\n       * @type {Number}\n       */\n      offsetY: null\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var start = self.parsePoint(coord, self.get('start'));\n    var cfg = {\n      x: start.x,\n      y: start.y\n    };\n    cfg.img = self.get('src');\n\n    if (!self.get('end')) {\n      // 如果咩有指定结束点，则 start 为图片的左上角坐标\n      cfg.width = self.get('width') || 32;\n      cfg.height = self.get('height') || 32;\n    } else {\n      var end = self.parsePoint(coord, self.get('end')); // cfg.width = Math.abs(end.x - start.x);\n      // cfg.height = Math.abs(end.y - start.y);\n\n      cfg.width = end.x - start.x;\n      cfg.height = end.y - start.y;\n    }\n\n    if (self.get('offsetX')) {\n      cfg.x += self.get('offsetX');\n    }\n\n    if (self.get('offsetY')) {\n      cfg.y += self.get('offsetY');\n    }\n\n    var imgGuide = group.addShape('Image', {\n      zIndex: 1,\n      attrs: cfg\n    });\n    imgGuide.name = 'guide-image';\n    self.get('appendInfo') && imgGuide.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', imgGuide);\n  };\n\n  return Image;\n}(Guide);\n\nmodule.exports = Image;\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar vec2 = Util.MatrixUtil.vec2;\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar Line =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Line, _Guide);\n\n  function Line() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Line.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 辅助元素类型\n       * @type {String}\n       */\n      name: 'line',\n\n      /**\n       * 辅助线的起点位置\n       * @type {Object | Function | Array}\n       */\n      start: null,\n\n      /**\n       * 辅助线的终点位置\n       * @type {Object | Function | Array}\n       */\n      end: null,\n\n      /**\n       * 辅助线的图形样式\n       * @type {Object}\n       */\n      lineStyle: {\n        stroke: '#000',\n        lineWidth: 1\n      },\n\n      /**\n       * 辅助文本配置\n       * @type {Object}\n       */\n      text: {\n        position: 'end',\n        // 文本的显示位置： start / center / end / 百分比\n        autoRotate: true,\n        // 文本是否沿着辅助线的方向自动旋转\n        style: {\n          fill: '#999',\n          fontSize: 12,\n          fontWeight: 500,\n          fontFamily: FONT_FAMILY\n        },\n        // 辅助文本的样式\n        content: null // 辅助文本的文字\n\n      }\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var start = self.parsePoint(coord, self.get('start'));\n    var end = self.parsePoint(coord, self.get('end'));\n    var guideLineGroup = group.addGroup({\n      viewId: group.get('viewId')\n    });\n\n    self._drawLines(start, end, guideLineGroup);\n\n    var text = self.get('text');\n\n    if (text && text.content) {\n      self._drawText(start, end, guideLineGroup);\n    }\n\n    self.set('el', guideLineGroup);\n  };\n\n  _proto._drawLines = function _drawLines(start, end, group) {\n    var path = [['M', start.x, start.y], ['L', end.x, end.y]];\n    var guideLine = group.addShape('Path', {\n      attrs: Util.mix({\n        path: path\n      }, this.get('lineStyle'))\n    });\n    guideLine.name = 'guide-line';\n    this.get('appendInfo') && guideLine.setSilent('appendInfo', this.get('appendInfo'));\n  };\n\n  _proto._drawText = function _drawText(start, end, group) {\n    var textCfg = this.get('text');\n    var position = textCfg.position;\n    var textStyle = textCfg.style || {};\n    var percent;\n\n    if (position === 'start') {\n      percent = 0;\n    } else if (position === 'center') {\n      percent = 0.5;\n    } else if (Util.isString(position) && position.indexOf('%') !== -1) {\n      percent = parseInt(position, 10) / 100;\n    } else if (Util.isNumber(position)) {\n      percent = position;\n    } else {\n      percent = 1;\n    }\n\n    if (percent > 1 || percent < 0) {\n      percent = 1;\n    }\n\n    var cfg = {\n      x: start.x + (end.x - start.x) * percent,\n      y: start.y + (end.y - start.y) * percent\n    };\n\n    if (textCfg.offsetX) {\n      // 设置了偏移量\n      cfg.x += textCfg.offsetX;\n    }\n\n    if (textCfg.offsetY) {\n      // 设置了偏移量\n      cfg.y += textCfg.offsetY;\n    }\n\n    cfg.text = textCfg.content;\n    cfg = Util.mix({}, cfg, textStyle);\n\n    if (textCfg.autoRotate && Util.isNil(textStyle.rotate)) {\n      // 自动旋转且用户没有设置旋转角度\n      var angle = vec2.angleTo([end.x - start.x, end.y - start.y], [1, 0], 1);\n      cfg.rotate = angle;\n    } else if (!Util.isNil(textStyle.rotate)) {\n      // 用户设置了旋转角度\n      cfg.rotate = textStyle.rotate * Math.PI / 180;\n    }\n\n    var shape = group.addShape('Text', {\n      attrs: cfg\n    });\n    shape.name = 'guide-line-text';\n    this.get('appendInfo') && shape.setSilent('appendInfo', this.get('appendInfo'));\n  };\n\n  return Line;\n}(Guide);\n\nmodule.exports = Line;\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar Region =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Region, _Guide);\n\n  function Region() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Region.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'region',\n      zIndex: 1,\n      start: null,\n      end: null,\n      style: {\n        lineWidth: 0,\n        fill: '#CCD7EB',\n        opacity: 0.4\n      }\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var rectStyle = self.get('style');\n\n    var path = self._getPath(coord);\n\n    var regionGroup = group.addShape('path', {\n      zIndex: self.get('zIndex'),\n      attrs: Util.mix({\n        path: path\n      }, rectStyle)\n    });\n    regionGroup.name = 'guide-region';\n    self.get('appendInfo') && regionGroup.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', regionGroup);\n  };\n\n  _proto._getPath = function _getPath(coord) {\n    var self = this;\n    var start = self.parsePoint(coord, self.get('start'));\n    var end = self.parsePoint(coord, self.get('end'));\n    var path = [['M', start.x, start.y], ['L', end.x, start.y], ['L', end.x, end.y], ['L', start.x, end.y], ['z']];\n    return path;\n  };\n\n  return Region;\n}(Guide);\n\nmodule.exports = Region;\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar Guide = __webpack_require__(15);\n\nvar Text =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(Text, _Guide);\n\n  function Text() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = Text.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 辅助元素类型\n       * @type {String}\n       */\n      name: 'text',\n\n      /**\n       * 辅助文本的位置\n       * @type {Object | Function | Array}\n       */\n      position: null,\n\n      /**\n       * 辅助文本的显示文字\n       * @type {String}\n       */\n      content: null,\n\n      /**\n       * 辅助文本的样式配置\n       * @type {Object}\n       */\n      style: {\n        fill: '#999',\n        fontSize: 12,\n        fontWeight: 500,\n        textAlign: 'center'\n      },\n\n      /**\n       * x 方向的偏移量\n       * @type {Number}\n       */\n      offsetX: null,\n\n      /**\n       * y 方向的偏移量\n       * @type {Number}\n       */\n      offsetY: null,\n      top: true\n    });\n  };\n\n  _proto.render = function render(coord, group) {\n    var self = this;\n    var point = self.parsePoint(coord, self.get('position'));\n    var textStyle = Util.mix({}, self.get('style'));\n    var offsetX = self.get('offsetX');\n    var offsetY = self.get('offsetY');\n\n    if (offsetX) {\n      point.x += offsetX;\n    }\n\n    if (offsetY) {\n      point.y += offsetY;\n    }\n\n    if (textStyle.rotate) {\n      textStyle.rotate = textStyle.rotate * Math.PI / 180; // 将角度转换为弧度\n    }\n\n    var guideText = group.addShape('Text', {\n      zIndex: self.get('zIndex'),\n      attrs: Util.mix({\n        text: self.get('content')\n      }, textStyle, point)\n    });\n    guideText.name = 'guide-text';\n    self.get('appendInfo') && guideText.setSilent('appendInfo', self.get('appendInfo'));\n    self.set('el', guideText);\n  };\n\n  return Text;\n}(Guide);\n\nmodule.exports = Text;\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Label = __webpack_require__(154);\n\nmodule.exports = Label;\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The entry of legend\n * @author sima.zhang\n */\nmodule.exports = {\n  Category: __webpack_require__(157),\n  // 分类图例\n  CatHtml: __webpack_require__(159),\n  // 分类图例\n  CatPageHtml: __webpack_require__(325),\n  // 分类图例\n  // Tail: require('./tail'), // 尾部跟随图例\n  Color: __webpack_require__(326),\n  // 颜色图例\n  Size: __webpack_require__(328),\n  // 大小图例（适用于除映射点大小以外的其他大小）\n  CircleSize: __webpack_require__(329) // 点大小图例\n\n};\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar CatHtml = __webpack_require__(159);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar DomUtil = Util.DomUtil;\nvar LIST_CLASS = 'g2-legend-list';\nvar CONTAINER_CLASS = 'g2-legend';\nvar SLIP_CLASS = 'g2-slip';\nvar CARET_UP_CLASS = 'g2-caret-up';\nvar CARET_DOWN_CLASS = 'g2-caret-down';\nvar ENABLED_CARET_COLOR = 'rgba(0,0,0,0.65)';\nvar DISABLED_CARET_COLOR = 'rgba(0,0,0,0.25)';\n\nfunction findNodeByClass(node, className) {\n  return node.getElementsByClassName(className)[0];\n}\n\nvar CatPageHtml =\n/*#__PURE__*/\nfunction (_CatHtml) {\n  _inheritsLoose(CatPageHtml, _CatHtml);\n\n  function CatPageHtml() {\n    return _CatHtml.apply(this, arguments) || this;\n  }\n\n  var _proto = CatPageHtml.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _CatHtml.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * type标识\n       * @type {String}\n       */\n      type: 'category-page-legend',\n\n      /**\n       * html 容器\n       * @type {DOM}\n       */\n      container: null,\n\n      /**\n       * 向上 / 下翻页图标的样式\n       * @type {ATTRS}\n       */\n      caretStyle: {\n        fill: 'rgba(0,0,0,0.65)'\n      },\n\n      /**\n       * 页码文字的样式\n       * @type {ATTRS}\n       */\n      pageNumStyle: {\n        display: 'inline-block',\n        fontSize: '12px',\n        fontFamily: FONT_FAMILY,\n        cursor: 'default'\n      },\n\n      /**\n       * 翻页块 DOM 的样式\n       * @type {ATTRS}\n       */\n      slipDomStyle: {\n        width: 'auto',\n        height: 'auto',\n        position: 'absolute'\n      },\n\n      /**\n       * 翻页块 DOM\n       * @type {String}\n       */\n      slipTpl: '<div class=\"' + SLIP_CLASS + '\" >' + '<svg viewBox=\"64 64 896 896\" class=\"g2-caret-up\" data-icon=\"left\" width=\"1em\" height=\"1em\" aria-hidden=\"true\">' + '<path d=\"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 0 0 0 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\"></path>' + '</svg>' + '<p class=\"cur-pagenum\" style = \"display:inline-block;\">1</p>' + '<p class=\"next-pagenum\" style = \"display:inline-block;\">/2</p>' + '<svg viewBox=\"64 64 896 896\" class=\"g2-caret-down\" data-icon=\"right\" width=\"1em\" height=\"1em\" aria-hidden=\"true\">' + '<path d=\"M765.7 486.8L314.9 134.7A7.97 7.97 0 0 0 302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 0 0 0-50.4z\"></path>' + '</svg>' + '</div>',\n\n      /**\n       * 翻页块的宽度，用于设置翻页块相对于 legend 的位置\n       * @type {Number}\n       */\n      slipWidth: 65,\n\n      /**\n       * legend 内容超出容器的处理方式\n       * @type {String}\n       */\n      legendOverflow: 'unset'\n    });\n  };\n\n  _proto.render = function render() {\n    _CatHtml.prototype._renderHTML.call(this);\n\n    this._renderFlipPage();\n  };\n\n  _proto._renderFlipPage = function _renderFlipPage() {\n    var legendWrapper = document.getElementsByClassName(CONTAINER_CLASS)[0]; // ul\n\n    var itemListDom = findNodeByClass(legendWrapper, LIST_CLASS);\n    var position = this.get('position');\n    var layout = this.get('layout');\n    var itemDisplay = position === 'right' || position === 'left' || layout === 'vertical' ? 'block' : 'inline-block'; // 翻页\n\n    if (legendWrapper.scrollHeight > legendWrapper.offsetHeight) {\n      // append a slip div\n      var slipTpl = this.get('slipTpl');\n      var slipDom = DomUtil.createDom(slipTpl);\n      var caretUpDom = findNodeByClass(slipDom, CARET_UP_CLASS);\n      var caretDownDom = findNodeByClass(slipDom, CARET_DOWN_CLASS);\n      DomUtil.modifyCSS(caretUpDom, this.get('caretStyle'));\n      DomUtil.modifyCSS(caretUpDom, {\n        fill: 'rgba(0,0,0,0.25)'\n      });\n      DomUtil.modifyCSS(caretDownDom, this.get('caretStyle'));\n      var curPageNumDom = findNodeByClass(slipDom, 'cur-pagenum');\n      var totalPageNumDom = findNodeByClass(slipDom, 'next-pagenum');\n      var pageNumStyle = this.get('pageNumStyle');\n      DomUtil.modifyCSS(curPageNumDom, Util.mix({}, pageNumStyle, {\n        paddingLeft: '10px'\n      }));\n      DomUtil.modifyCSS(totalPageNumDom, Util.mix({}, pageNumStyle, {\n        opacity: 0.3,\n        paddingRight: '10px'\n      })); // layout at the center-bottom of the legendWrapper\n\n      DomUtil.modifyCSS(slipDom, Util.mix({}, this.get('slipDomStyle'), {\n        top: legendWrapper.offsetHeight + 'px'\n      }));\n      legendWrapper.style.overflow = this.get('legendOverflow');\n      legendWrapper.appendChild(slipDom);\n      var li = itemListDom.childNodes;\n      var curHeight = 0; // find the total page number\n\n      var pages = 1;\n      var blockLi = [];\n\n      for (var i = 0; i < li.length; i++) {\n        li[i].style.display = itemDisplay;\n        curHeight = li[i].offsetTop + li[i].offsetHeight;\n\n        if (curHeight >= legendWrapper.offsetHeight) {\n          pages++;\n          blockLi.forEach(function (bl) {\n            bl.style.display = 'none';\n          });\n          blockLi = [];\n        }\n\n        blockLi.push(li[i]);\n      }\n\n      totalPageNumDom.innerText = '/' + pages; // initialize the page\n\n      li.forEach(function (l) {\n        l.style.display = itemDisplay;\n        curHeight = l.offsetTop + l.offsetHeight;\n\n        if (curHeight > legendWrapper.offsetHeight) {\n          l.style.display = 'none';\n        }\n      }); // 上翻事件\n\n      caretUpDom.addEventListener('click', function () {\n        // it is the 1st page\n        if (li[0].style.display === itemDisplay) return; // otherwise\n\n        var firstDisplayItemIdx = -1;\n        li.forEach(function (l, i) {\n          if (l.style.display === itemDisplay) {\n            firstDisplayItemIdx = firstDisplayItemIdx === -1 ? i : firstDisplayItemIdx;\n            l.style.display = 'none';\n          }\n        });\n\n        for (var _i = firstDisplayItemIdx - 1; _i >= 0; _i--) {\n          li[_i].style.display = itemDisplay;\n          curHeight = li[firstDisplayItemIdx - 1].offsetTop + li[firstDisplayItemIdx - 1].offsetHeight;\n          li[_i].style.display = 'none';\n\n          if (curHeight < legendWrapper.offsetHeight) {\n            li[_i].style.display = itemDisplay;\n          } else break;\n        } // change the page number\n\n\n        var currentPage = Number.parseInt(curPageNumDom.innerText, 10) - 1;\n\n        if (currentPage === 1) {\n          caretUpDom.style.fill = DISABLED_CARET_COLOR;\n        } else {\n          caretUpDom.style.fill = ENABLED_CARET_COLOR;\n        }\n\n        caretDownDom.style.fill = ENABLED_CARET_COLOR;\n        curPageNumDom.innerText = currentPage;\n      }); // 下翻事件\n\n      caretDownDom.addEventListener('click', function () {\n        // it is the last page\n        if (li[li.length - 1].style.display === itemDisplay) return; // otherwise\n\n        var lastDisplayItemIdx = -1;\n        li.forEach(function (l, i) {\n          if (l.style.display === itemDisplay) {\n            lastDisplayItemIdx = i;\n            l.style.display = 'none';\n          }\n        });\n\n        for (var _i2 = lastDisplayItemIdx + 1; _i2 < li.length; _i2++) {\n          li[_i2].style.display = itemDisplay;\n          curHeight = li[_i2].offsetTop + li[_i2].offsetHeight;\n          li[_i2].style.display = 'none';\n          if (curHeight < legendWrapper.offsetHeight) li[_i2].style.display = itemDisplay;else break;\n        } // change the page number\n\n\n        var currentPage = Number.parseInt(curPageNumDom.innerText, 10) + 1;\n\n        if (currentPage === itemDisplay) {\n          caretDownDom.style.fill = DISABLED_CARET_COLOR;\n        } else {\n          caretDownDom.style.fill = ENABLED_CARET_COLOR;\n        }\n\n        caretUpDom.style.fill = ENABLED_CARET_COLOR;\n        curPageNumDom.innerText = currentPage;\n      });\n      this.set('slipDom', slipDom);\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    _CatHtml.prototype.destroy.call(this);\n\n    var slipDom = this.get('slipDom');\n\n    if (slipDom && slipDom.parentNode) {\n      slipDom.parentNode.removeChild(slipDom);\n    }\n  };\n\n  return CatPageHtml;\n}(CatHtml);\n\nmodule.exports = CatPageHtml;\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The class of the gradient color legend\n * @author sima.zhang\n */\n\n\nvar _require = __webpack_require__(73),\n    ColorUtil = _require.ColorUtil; // TODO：ColorUtil 包需要从 attr 包中抽离\n\n\nvar Util = __webpack_require__(3);\n\nvar Continuous = __webpack_require__(67);\n\nvar Color =\n/*#__PURE__*/\nfunction (_Continuous) {\n  _inheritsLoose(Color, _Continuous);\n\n  function Color() {\n    return _Continuous.apply(this, arguments) || this;\n  }\n\n  var _proto = Color.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Continuous.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'color-legend',\n\n      /**\n       * 布局方式\n       * horizontal 水平\n       * vertical 垂直\n       * @type {String}\n       */\n      layout: 'vertical',\n\n      /**\n       * 两头滑块的样式\n       * @type {object}\n       */\n      triggerAttr: {\n        fill: '#fff',\n        shadowOffsetX: -2,\n        shadowOffsetY: 2,\n        shadowBlur: 10,\n        shadowColor: '#ccc',\n        radius: 3\n      },\n\n      /**\n       * 同一分段是否使用相同颜色而不使用渐变色，在 slidable = false 时生效\n       * @type {boolean}\n       */\n      isSegment: false\n    });\n  };\n\n  _proto._setPercentage = function _setPercentage() {\n    var items = this.get('items');\n    if (items[0].percentage) return;\n    var min = items[0].value;\n    var max = items[items.length - 1].value;\n    Util.each(items, function (it) {\n      it.percentage = (it.value - min) / (max - min);\n    });\n    return;\n  }; // render the slider while slidable === true\n\n\n  _proto._renderSliderShape = function _renderSliderShape() {\n    this._setPercentage();\n\n    var slider = this.get('slider');\n    var backgroundElement = slider.get('backgroundElement');\n    var width = this.get('width');\n    var height = this.get('height');\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var fill = '';\n    var rgbColor; // gradient color distributed according to the percentage\n\n    if (layout === 'vertical') {\n      fill += 'l (90) ';\n      Util.each(items, function (v) {\n        rgbColor = ColorUtil.toRGB(v.color);\n        fill += 1 - v.percentage + ':' + rgbColor + ' ';\n      });\n    } else {\n      fill += 'l (0) ';\n      Util.each(items, function (v) {\n        rgbColor = ColorUtil.toRGB(v.color);\n        fill += v.percentage + ':' + rgbColor + ' ';\n      });\n    }\n\n    return this._addMiddleBar(backgroundElement, 'Rect', {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      fill: fill,\n      strokeOpacity: 0\n    });\n  }; // render the silder while slidable === false\n\n\n  _proto._renderUnslidable = function _renderUnslidable() {\n    this._setPercentage();\n\n    var titleShape = this.get('titleShape');\n    var titleGap = this.get('titleGap');\n    titleGap = titleShape ? titleShape.getBBox().height + titleGap : titleGap;\n    var width = this.get('width');\n    var height = this.get('height');\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var fill = '';\n    var rgbColor;\n    var path = [];\n    var group = this.get('group');\n    var bgGroup = group.addGroup();\n    var isize = items.length; // gradient color distributed according to the percentage\n\n    if (layout === 'vertical') {\n      fill += 'l (90) ';\n\n      for (var i = 0; i < isize; i += 1) {\n        if (i !== 0 && i !== isize - 1) {\n          path.push(['M', 0, height - items[i].percentage * height]);\n          path.push(['L', width, height - items[i].percentage * height]);\n        }\n\n        rgbColor = ColorUtil.toRGB(items[i].color);\n        fill += 1 - items[i].percentage + ':' + rgbColor + ' ';\n\n        if (this.get('isSegment') && i > 0) {\n          // one color instead of gradient color for a block while isSegment === true\n          var preRgbColor = ColorUtil.toRGB(items[i - 1].color);\n          fill += 1 - items[i].percentage + ':' + preRgbColor + ' ';\n        }\n\n        bgGroup.addShape('text', {\n          attrs: Util.mix({}, {\n            x: width + this.get('textOffset') / 2,\n            y: height - items[i].percentage * height,\n            text: this._formatItemValue(items[i].value) + '' // 以字符串格式展示\n\n          }, this.get('textStyle'), {\n            textAlign: 'start'\n          })\n        });\n      }\n    } else {\n      // horizontal\n      fill += 'l (0) ';\n\n      for (var _i = 0; _i < isize; _i += 1) {\n        if (_i !== 0 && _i !== isize - 1) {\n          path.push(['M', items[_i].percentage * width, 0]);\n          path.push(['L', items[_i].percentage * width, height]);\n        }\n\n        rgbColor = ColorUtil.toRGB(items[_i].color);\n\n        if (this.get('isSegment') && _i > 0) {\n          var _preRgbColor = ColorUtil.toRGB(items[_i - 1].color);\n\n          fill += items[_i].percentage + ':' + _preRgbColor + ' ';\n        }\n\n        fill += items[_i].percentage + ':' + rgbColor + ' ';\n        bgGroup.addShape('text', {\n          attrs: Util.mix({}, {\n            x: items[_i].percentage * width,\n            y: height + 5 + this.get('textOffset'),\n            text: this._formatItemValue(items[_i].value) + '' // 以字符串格式展示\n\n          }, this.get('textStyle'))\n        });\n      }\n    }\n\n    bgGroup.addShape('rect', {\n      attrs: {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        fill: fill,\n        strokeOpacity: 0\n      }\n    }); // the white line segment to seperate color blocks\n\n    bgGroup.addShape('path', {\n      attrs: Util.mix({\n        path: path\n      }, this.get('lineStyle'))\n    });\n    bgGroup.move(0, titleGap);\n  };\n\n  return Color;\n}(Continuous);\n\nmodule.exports = Color;\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The class of slider\n * @author sima.zhang\n */\n\n\nvar Util = __webpack_require__(3);\n\nvar DomUtil = Util.DomUtil;\nvar Group = Util.Group;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(Slider, _Group);\n\n  function Slider() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = Slider.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * 范围\n       * @type {Array}\n       */\n      range: null,\n\n      /**\n       * 中滑块属性\n       * 透明的，用于用户交互\n       * @type {ATTRS}\n       */\n      middleAttr: {\n        fill: '#fff',\n        fillOpacity: 0\n      },\n\n      /**\n       * 背景\n       * @type {G-Element}\n       */\n      backgroundElement: null,\n\n      /**\n       * 下滑块\n       * @type {G-Element}\n       */\n      minHandleElement: null,\n\n      /**\n       * 上滑块\n       * @type {G-Element}\n       */\n      maxHandleElement: null,\n\n      /**\n       * 中块，\n       * 透明的，用于用户交互\n       * @type {G-Element}\n       */\n      middleHandleElement: null,\n\n      /**\n       * 当前的激活的元素\n       * @type {G-Element}\n       */\n      currentTarget: null,\n\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'vertical',\n\n      /**\n       * 宽\n       * @type {Number}\n       */\n      width: null,\n\n      /**\n       * 高\n       * @type {Number}\n       */\n      height: null,\n\n      /**\n       * 当前的PageX\n       * @type {Number}\n       */\n      pageX: null,\n\n      /**\n       * 当前的PageY\n       * @type {Number}\n       */\n      pageY: null\n    };\n  }; // arrange the zindex and cursors of each element\n\n\n  _proto._beforeRenderUI = function _beforeRenderUI() {\n    var layout = this.get('layout');\n    var backgroundElement = this.get('backgroundElement');\n    var minHandleElement = this.get('minHandleElement');\n    var maxHandleElement = this.get('maxHandleElement');\n    var middleHandleElement = this.addShape('rect', {\n      attrs: this.get('middleAttr')\n    });\n    var trigerCursor = layout === 'vertical' ? 'ns-resize' : 'ew-resize';\n    this.add([backgroundElement, minHandleElement, maxHandleElement]);\n    this.set('middleHandleElement', middleHandleElement);\n    backgroundElement.set('zIndex', 0);\n    middleHandleElement.set('zIndex', 1);\n    minHandleElement.set('zIndex', 2);\n    maxHandleElement.set('zIndex', 2);\n    middleHandleElement.attr('cursor', 'move');\n    minHandleElement.attr('cursor', trigerCursor);\n    maxHandleElement.attr('cursor', trigerCursor);\n    this.sort();\n  }; // rendering\n\n\n  _proto._renderUI = function _renderUI() {\n    if (this.get('layout') === 'horizontal') {\n      this._renderHorizontal();\n    } else {\n      this._renderVertical();\n    }\n  };\n\n  _proto._transform = function _transform(layout) {\n    var range = this.get('range');\n    var minRatio = range[0] / 100;\n    var maxRatio = range[1] / 100;\n    var width = this.get('width');\n    var height = this.get('height');\n    var minHandleElement = this.get('minHandleElement');\n    var maxHandleElement = this.get('maxHandleElement');\n    var middleHandleElement = this.get('middleHandleElement');\n    minHandleElement.resetMatrix();\n    maxHandleElement.resetMatrix();\n\n    if (layout === 'horizontal') {\n      middleHandleElement.attr({\n        x: width * minRatio,\n        y: 0,\n        width: (maxRatio - minRatio) * width,\n        height: height\n      });\n      minHandleElement.translate(minRatio * width, height);\n      maxHandleElement.translate(maxRatio * width, height);\n    } else {\n      middleHandleElement.attr({\n        x: 0,\n        y: height * (1 - maxRatio),\n        width: width,\n        height: (maxRatio - minRatio) * height\n      });\n      minHandleElement.translate(1, (1 - minRatio) * height);\n      maxHandleElement.translate(1, (1 - maxRatio) * height);\n    }\n  };\n\n  _proto._renderHorizontal = function _renderHorizontal() {\n    this._transform('horizontal');\n  };\n\n  _proto._renderVertical = function _renderVertical() {\n    this._transform('vertical');\n  };\n\n  _proto._bindUI = function _bindUI() {\n    this.on('mousedown', Util.wrapBehavior(this, '_onMouseDown'));\n  }; // if the target matches name\n\n\n  _proto._isElement = function _isElement(target, name) {\n    var element = this.get(name);\n\n    if (target === element) {\n      return true;\n    }\n\n    if (element.isGroup) {\n      var elementChildren = element.get('children');\n      return elementChildren.indexOf(target) > -1;\n    }\n\n    return false;\n  }; // get the result range after adding diff to range\n  // insure that the result out of the interval [0, 100]\n\n\n  _proto._getRange = function _getRange(diff, range) {\n    var rst = diff + range;\n    rst = rst > 100 ? 100 : rst;\n    rst = rst < 0 ? 0 : rst;\n    return rst;\n  };\n\n  _proto._updateStatus = function _updateStatus(dim, ev) {\n    var totalLength = dim === 'x' ? this.get('width') : this.get('height');\n    dim = Util.upperFirst(dim);\n    var range = this.get('range');\n    var page = this.get('page' + dim);\n    var currentTarget = this.get('currentTarget');\n    var rangeStash = this.get('rangeStash');\n    var layout = this.get('layout');\n    var sign = layout === 'vertical' ? -1 : 1;\n    var currentPage = ev['page' + dim]; // the distance of the mouse dragging\n\n    var diffPage = currentPage - page;\n    var diffRange = diffPage / totalLength * 100 * sign;\n    var diffStashRange; // the min and max trigger overlap, range[0] and range[1] change together\n\n    if (range[1] <= range[0]) {\n      if (this._isElement(currentTarget, 'minHandleElement') || this._isElement(currentTarget, 'maxHandleElement')) {\n        range[0] = this._getRange(diffRange, range[0]);\n        range[1] = this._getRange(diffRange, range[0]);\n      }\n    } else {\n      // user drags the min trigger\n      if (this._isElement(currentTarget, 'minHandleElement')) {\n        range[0] = this._getRange(diffRange, range[0]);\n      } // user drags the max trigger\n\n\n      if (this._isElement(currentTarget, 'maxHandleElement')) {\n        range[1] = this._getRange(diffRange, range[1]);\n      }\n    } // the user drags the middle bar\n\n\n    if (this._isElement(currentTarget, 'middleHandleElement')) {\n      // the diffrence between min and max trigger while mouse down\n      diffStashRange = rangeStash[1] - rangeStash[0];\n      range[0] = this._getRange(diffRange, range[0]); // keep the diffStashRange\n\n      range[1] = range[0] + diffStashRange;\n\n      if (range[1] > 100) {\n        range[1] = 100;\n        range[0] = range[1] - diffStashRange;\n      }\n    }\n\n    this.emit('sliderchange', {\n      range: range\n    });\n    this.set('page' + dim, currentPage);\n\n    this._renderUI();\n\n    this.get('canvas').draw(); // need delete\n\n    return;\n  }; // the listener of mouse down\n\n\n  _proto._onMouseDown = function _onMouseDown(ev) {\n    var currentTarget = ev.currentTarget;\n    var originEvent = ev.event;\n    var range = this.get('range');\n    originEvent.stopPropagation();\n    originEvent.preventDefault();\n    this.set('pageX', originEvent.pageX);\n    this.set('pageY', originEvent.pageY);\n    this.set('currentTarget', currentTarget); // stash the range\n\n    this.set('rangeStash', [range[0], range[1]]);\n\n    this._bindCanvasEvents();\n  };\n\n  _proto._bindCanvasEvents = function _bindCanvasEvents() {\n    var containerDOM = this.get('canvas').get('containerDOM'); // this.on('mousemove', Util.wrapBehavior(this, '_onCanvasMouseMove'));\n\n    this.onMouseMoveListener = DomUtil.addEventListener(containerDOM, 'mousemove', Util.wrapBehavior(this, '_onCanvasMouseMove'));\n    this.onMouseUpListener = DomUtil.addEventListener(containerDOM, 'mouseup', Util.wrapBehavior(this, '_onCanvasMouseUp'));\n    this.onMouseLeaveListener = DomUtil.addEventListener(containerDOM, 'mouseleave', Util.wrapBehavior(this, '_onCanvasMouseUp'));\n  }; // listener of mouse click and move = drag\n\n\n  _proto._onCanvasMouseMove = function _onCanvasMouseMove(ev) {\n    if (!this._mouseOutArea(ev)) {\n      var layout = this.get('layout');\n\n      if (layout === 'horizontal') {\n        this._updateStatus('x', ev);\n      } else {\n        this._updateStatus('y', ev);\n      }\n    }\n  }; // listener of mouse up\n\n\n  _proto._onCanvasMouseUp = function _onCanvasMouseUp() {\n    this._removeDocumentEvents();\n  }; // remove listeners\n\n\n  _proto._removeDocumentEvents = function _removeDocumentEvents() {\n    this.onMouseMoveListener.remove();\n    this.onMouseUpListener.remove();\n  }; // if the mouse is out of the area\n\n\n  _proto._mouseOutArea = function _mouseOutArea(ev) {\n    var el = this.get('canvas').get('el');\n    var el_bbox = el.getBoundingClientRect();\n    var parent = this.get('parent');\n    var bbox = parent.getBBox();\n    var left = parent.attr('matrix')[6];\n    var top = parent.attr('matrix')[7];\n    var right = left + bbox.width;\n    var bottom = top + bbox.height;\n    var mouseX = ev.clientX - el_bbox.x;\n    var mouseY = ev.clientY - el_bbox.y;\n\n    if (mouseX < left || mouseX > right || mouseY < top || mouseY > bottom) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return Slider;\n}(Group);\n\nmodule.exports = Slider;\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The class of the gradient color legend\n * @author sima.zhang\n */\n\n\nvar Util = __webpack_require__(3);\n\nvar Continuous = __webpack_require__(67);\n\nvar Size =\n/*#__PURE__*/\nfunction (_Continuous) {\n  _inheritsLoose(Size, _Continuous);\n\n  function Size() {\n    return _Continuous.apply(this, arguments) || this;\n  }\n\n  var _proto = Size.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Continuous.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'size-legend',\n      width: 100,\n      height: 200,\n\n      /**\n       * 不能滑动时圈的样式\n       * @type {ATTRS}\n       */\n      _unslidableElementStyle: {\n        fill: '#4E7CCC',\n        fillOpacity: 1\n      },\n\n      /**\n       * 中间 bar 的前景颜色\n       * @type {ATTRS}\n       */\n      frontMiddleBarStyle: {\n        fill: 'rgb(64, 141, 251)'\n      }\n    });\n  }; // render the slider shape\n\n\n  _proto._renderSliderShape = function _renderSliderShape() {\n    var slider = this.get('slider');\n    var backgroundElement = slider.get('backgroundElement');\n    var layout = this.get('layout');\n    var width = this.get('width');\n    var height = this.get('height'); // const x = minRadius;\n\n    var y = this.get('height') / 2;\n    var frontMiddleBarStyle = this.get('frontMiddleBarStyle'); // background of middle bar\n\n    var points = layout === 'vertical' ? [[0, 0], [width, 0], [width, height], [width - 4, height]] : [[0, y + height / 2], [0, y + height / 2 - 4], [width, y - height / 2], [width, y + height / 2]];\n    return this._addMiddleBar(backgroundElement, 'Polygon', Util.mix({\n      points: points\n    }, frontMiddleBarStyle));\n  }; // render the middle bar while slidable === false,\n  // there are no triggers for this situation\n\n\n  _proto._renderUnslidable = function _renderUnslidable() {\n    var layout = this.get('layout');\n    var width = this.get('width');\n    var height = this.get('height');\n    var frontMiddleBarStyle = this.get('frontMiddleBarStyle');\n    var points = layout === 'vertical' ? [[0, 0], [width, 0], [width, height], [width - 4, height]] : [[0, height], [0, height - 4], [width, 0], [width, height]];\n    var group = this.get('group');\n    var bgGroup = group.addGroup();\n    bgGroup.addShape('Polygon', {\n      attrs: Util.mix({\n        points: points\n      }, frontMiddleBarStyle)\n    });\n\n    var minText = this._formatItemValue(this.get('firstItem').value);\n\n    var maxText = this._formatItemValue(this.get('lastItem').value);\n\n    if (this.get('layout') === 'vertical') {\n      this._addText(width + 10, height - 3, minText); // min\n\n\n      this._addText(width + 10, 3, maxText); // max\n\n    } else {\n      this._addText(0, height, minText); // min\n\n\n      this._addText(width, height, maxText); // max\n\n    }\n  }; // add min and max text while slidable === false\n\n\n  _proto._addText = function _addText(x, y, text) {\n    var group = this.get('group');\n    var textGroup = group.addGroup();\n    var textStyle = this.get('textStyle');\n    var titleShape = this.get('titleShape');\n    var titleGap = this.get('titleGap');\n\n    if (titleShape) {\n      titleGap += titleShape.getBBox().height;\n    }\n\n    if (this.get('layout') === 'vertical') {\n      textGroup.addShape('text', {\n        attrs: Util.mix({\n          x: x + this.get('textOffset'),\n          y: y,\n          text: text === 0 ? '0' : text\n        }, textStyle)\n      });\n    } else {\n      y += titleGap + this.get('textOffset') - 20;\n      if (!titleShape) y += 10;\n      textGroup.addShape('text', {\n        attrs: Util.mix({\n          x: x,\n          y: y,\n          text: text === 0 ? '0' : text\n        }, textStyle)\n      });\n    }\n  };\n\n  return Size;\n}(Continuous);\n\nmodule.exports = Size;\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The class of the size legend\n * @author sima.zhang\n * @author ye liu\n */\n\n\nvar Util = __webpack_require__(3); // const Global = require('../../global');\n\n\nvar Continuous = __webpack_require__(67);\n\nvar SLIDER_HEIGHT = 2;\nvar CIRCLE_GAP = 16;\nvar MAX_SIZE = 16;\nvar MIN_SIZE = 5;\n\nvar CircleSize =\n/*#__PURE__*/\nfunction (_Continuous) {\n  _inheritsLoose(CircleSize, _Continuous);\n\n  function CircleSize() {\n    return _Continuous.apply(this, arguments) || this;\n  }\n\n  var _proto = CircleSize.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Continuous.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'size-circle-legend',\n      width: 100,\n      height: 200,\n\n      /**\n       * 不能滑动时圈的样式\n       * @type {ATTRS}\n       */\n      _unslidableCircleStyle: {\n        stroke: 'rgb(99, 161, 248)',\n        fill: 'rgb(99, 161, 248)',\n        fillOpacity: 0.3,\n        lineWidth: 1.5\n      },\n\n      /**\n       * 滑块的样式\n       * @type {ATTRS}\n       */\n      triggerAttr: {\n        fill: 'white',\n        shadowOffsetX: -2,\n        shadowOffsetY: 2,\n        shadowBlur: 10,\n        shadowColor: '#ccc'\n      },\n\n      /**\n       * 中间 bar 的前景颜色\n       * @type {ATTRS}\n       */\n      frontMiddleBarStyle: {\n        fill: 'rgb(64, 141, 251)'\n      }\n    });\n  }; // render the slider shape\n\n\n  _proto._renderSliderShape = function _renderSliderShape() {\n    var minRadius = MIN_SIZE;\n    var slider = this.get('slider');\n    var backgroundElement = slider.get('backgroundElement');\n    var layout = this.get('layout');\n    var width = layout === 'vertical' ? SLIDER_HEIGHT : this.get('width');\n    var height = layout === 'vertical' ? this.get('height') : SLIDER_HEIGHT;\n    var x = minRadius;\n    var y = this.get('height') / 2;\n    var frontMiddleBarStyle = this.get('frontMiddleBarStyle'); // background of middle bar\n\n    var points = layout === 'vertical' ? [[0, 0], [width, 0], [width, height], [0, height]] : [[0, y + height], [0, y - height], [x + width - 4, y - height], [x + width - 4, y + height]];\n    return this._addMiddleBar(backgroundElement, 'Polygon', Util.mix({\n      points: points\n    }, frontMiddleBarStyle));\n  }; // triggers while layout === horizontal\n\n\n  _proto._addHorizontalTrigger = function _addHorizontalTrigger(type, blockAttr, textAttr, radius) {\n    var slider = this.get('slider');\n    var trigger = slider.get(type + 'HandleElement');\n    var y = -this.get('height') / 2;\n    var button = trigger.addShape('circle', {\n      attrs: Util.mix({\n        x: 0,\n        y: y,\n        r: radius\n      }, blockAttr)\n    });\n    var text = trigger.addShape('text', {\n      attrs: Util.mix(textAttr, {\n        x: 0,\n        y: y + radius + 10,\n        textAlign: 'center',\n        textBaseline: 'middle'\n      })\n    });\n    var layout = this.get('layout');\n    var trigerCursor = layout === 'vertical' ? 'ns-resize' : 'ew-resize';\n    button.attr('cursor', trigerCursor);\n    text.attr('cursor', trigerCursor);\n    this.set(type + 'ButtonElement', button);\n    this.set(type + 'TextElement', text);\n  }; // triggers while layout === vertical\n\n\n  _proto._addVerticalTrigger = function _addVerticalTrigger(type, blockAttr, textAttr, radius) {\n    var slider = this.get('slider');\n    var trigger = slider.get(type + 'HandleElement');\n    var button = trigger.addShape('circle', {\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        r: radius\n      }, blockAttr)\n    });\n    var text = trigger.addShape('text', {\n      attrs: Util.mix(textAttr, {\n        x: radius + 10,\n        y: 0,\n        textAlign: 'start',\n        textBaseline: 'middle'\n      })\n    });\n    var layout = this.get('layout');\n    var trigerCursor = layout === 'vertical' ? 'ns-resize' : 'ew-resize';\n    button.attr('cursor', trigerCursor);\n    text.attr('cursor', trigerCursor);\n    this.set(type + 'ButtonElement', button);\n    this.set(type + 'TextElement', text);\n  }; // render the triggers\n\n\n  _proto._renderTrigger = function _renderTrigger() {\n    var min = this.get('firstItem');\n    var max = this.get('lastItem');\n    var layout = this.get('layout');\n    var textStyle = this.get('textStyle');\n    var triggerAttr = this.get('triggerAttr');\n    var minBlockAttr = Util.mix({}, triggerAttr);\n    var maxBlockAttr = Util.mix({}, triggerAttr);\n    var minRadius = MIN_SIZE;\n    var maxRadius = MAX_SIZE;\n    var minTextAttr = Util.mix({\n      text: this._formatItemValue(min.value) + ''\n    }, textStyle);\n    var maxTextAttr = Util.mix({\n      text: this._formatItemValue(max.value) + ''\n    }, textStyle);\n\n    if (layout === 'vertical') {\n      this._addVerticalTrigger('min', minBlockAttr, minTextAttr, minRadius);\n\n      this._addVerticalTrigger('max', maxBlockAttr, maxTextAttr, maxRadius);\n    } else {\n      this._addHorizontalTrigger('min', minBlockAttr, minTextAttr, minRadius);\n\n      this._addHorizontalTrigger('max', maxBlockAttr, maxTextAttr, maxRadius);\n    }\n  }; // user interactions\n\n\n  _proto._bindEvents = function _bindEvents() {\n    var _this = this;\n\n    if (this.get('slidable')) {\n      var slider = this.get('slider');\n      slider.on('sliderchange', function (ev) {\n        var range = ev.range;\n\n        var firstItemValue = _this.get('firstItem').value;\n\n        var lastItemValue = _this.get('lastItem').value;\n\n        var minValue = firstItemValue + range[0] / 100 * (lastItemValue - firstItemValue);\n        var maxValue = firstItemValue + range[1] / 100 * (lastItemValue - firstItemValue);\n        var minRadius = MIN_SIZE + range[0] / 100 * (MAX_SIZE - MIN_SIZE);\n        var maxRadius = MIN_SIZE + range[1] / 100 * (MAX_SIZE - MIN_SIZE);\n\n        _this._updateElement(minValue, maxValue, minRadius, maxRadius);\n\n        var itemFiltered = new Event('itemfilter', ev, true, true);\n        itemFiltered.range = [minValue, maxValue];\n\n        _this.emit('itemfilter', itemFiltered);\n      });\n    }\n  }; // update the triggers\n\n\n  _proto._updateElement = function _updateElement(min, max, minR, maxR) {\n    // update the text of the triggers\n    _Continuous.prototype._updateElement.call(this, min, max);\n\n    var minTextElement = this.get('minTextElement');\n    var maxTextElement = this.get('maxTextElement');\n    var minCircleElement = this.get('minButtonElement');\n    var maxCircleElement = this.get('maxButtonElement'); // update the radius of the triggers\n\n    minCircleElement.attr('r', minR);\n    maxCircleElement.attr('r', maxR); // update the text position of the triggers\n\n    var layout = this.get('layout');\n\n    if (layout === 'vertical') {\n      minTextElement.attr('x', minR + 10);\n      maxTextElement.attr('x', maxR + 10);\n    } else {\n      var y = -this.get('height') / 2;\n      minTextElement.attr('y', y + minR + 10);\n      maxTextElement.attr('y', y + maxR + 10);\n    }\n  }; // add a circle for slidable === false\n\n\n  _proto._addCircle = function _addCircle(x, y, r, text, maxWidth) {\n    var group = this.get('group');\n    var circleGroup = group.addGroup();\n    var circleStyle = this.get('_unslidableCircleStyle');\n    var textStyle = this.get('textStyle');\n    var titleShape = this.get('titleShape');\n    var titleGap = this.get('titleGap');\n\n    if (titleShape) {\n      titleGap += titleShape.getBBox().height;\n    }\n\n    circleGroup.addShape('circle', {\n      attrs: Util.mix({\n        x: x,\n        y: y + titleGap,\n        r: r === 0 ? 1 : r\n      }, circleStyle)\n    });\n\n    if (this.get('layout') === 'vertical') {\n      circleGroup.addShape('text', {\n        attrs: Util.mix({\n          x: maxWidth + 20 + this.get('textOffset'),\n          y: y + titleGap,\n          text: text === 0 ? '0' : text\n        }, textStyle)\n      });\n    } else {\n      circleGroup.addShape('text', {\n        attrs: Util.mix({\n          x: x,\n          y: y + titleGap + maxWidth + 13 + this.get('textOffset'),\n          text: text === 0 ? '0' : text\n        }, textStyle)\n      });\n    }\n  }; // the circles while slidable === false\n\n\n  _proto._renderUnslidable = function _renderUnslidable() {\n    var firstItemValue = this.get('firstItem').value;\n    var lastItemValue = this.get('lastItem').value;\n\n    if (firstItemValue > lastItemValue) {\n      var tmp = lastItemValue;\n      lastItemValue = firstItemValue;\n      firstItemValue = tmp;\n    }\n\n    var minText = this._formatItemValue(firstItemValue);\n\n    var maxText = this._formatItemValue(lastItemValue);\n\n    var minRadius = firstItemValue < MIN_SIZE ? MIN_SIZE : firstItemValue;\n    var maxRadius = lastItemValue > MAX_SIZE ? MAX_SIZE : lastItemValue;\n\n    if (minRadius > maxRadius) {\n      minRadius = MIN_SIZE;\n      maxRadius = MAX_SIZE;\n    }\n\n    if (this.get('layout') === 'vertical') {\n      this._addCircle(maxRadius, maxRadius, minRadius, minText, 2 * maxRadius); // min\n\n\n      this._addCircle(maxRadius, maxRadius * 2 + CIRCLE_GAP + minRadius, maxRadius, maxText, 2 * maxRadius); // max\n\n    } else {\n      this._addCircle(maxRadius, maxRadius, minRadius, minText, 2 * maxRadius); // min\n\n\n      this._addCircle(maxRadius * 2 + CIRCLE_GAP + minRadius, maxRadius, maxRadius, maxText, 2 * maxRadius); // max\n\n    }\n  };\n\n  _proto.activate = function activate(value) {\n    if (!this.get('slidable')) {\n      return;\n    }\n\n    _Continuous.prototype.activate.call(this, value);\n  };\n\n  return CircleSize;\n}(Continuous);\n\nmodule.exports = CircleSize;\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Tooltip = __webpack_require__(68);\n\nTooltip.Html = __webpack_require__(331);\nTooltip.Canvas = __webpack_require__(163);\nTooltip.Mini = __webpack_require__(333);\nmodule.exports = Tooltip;\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar Tooltip = __webpack_require__(68);\n\nvar Util = __webpack_require__(3);\n\nvar DomUtil = Util.DomUtil;\n\nvar TooltipTheme = __webpack_require__(332);\n\nvar Crosshair = __webpack_require__(160);\n\nvar PositionMixin = __webpack_require__(161);\n\nvar MarkerGroupMixin = __webpack_require__(162);\n\nvar CONTAINER_CLASS = 'g2-tooltip';\nvar TITLE_CLASS = 'g2-tooltip-title';\nvar LIST_CLASS = 'g2-tooltip-list';\nvar MARKER_CLASS = 'g2-tooltip-marker';\nvar VALUE_CLASS = 'g2-tooltip-value';\nvar LIST_ITEM_CLASS = 'g2-tooltip-list-item';\n\nfunction find(dom, cls) {\n  return dom.getElementsByClassName(cls)[0];\n}\n\nfunction mergeStyles(styles, cfg) {\n  Object.keys(styles).forEach(function (k) {\n    if (cfg[k]) {\n      styles[k] = Util.mix(styles[k], cfg[k]);\n    }\n  });\n  return styles;\n}\n\nvar HtmlTooltip =\n/*#__PURE__*/\nfunction (_Tooltip) {\n  _inheritsLoose(HtmlTooltip, _Tooltip);\n\n  var _proto = HtmlTooltip.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Tooltip.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n         * tooltip 容器模板\n         * @type {String}\n      */\n      containerTpl: ' <div class=\"' + CONTAINER_CLASS + '\"> ' + '<div class=\"' + TITLE_CLASS + '\"></div>' + '<ul class=\"' + LIST_CLASS + '\"></ul>' + '</div>',\n\n      /**\n       * tooltip 列表项模板\n       * @type {String}\n       */\n      itemTpl: '<li data-index={index}>' + '<span style=\"background-color:{color};\" class=' + MARKER_CLASS + '></span>' + '{name}<span class=' + VALUE_CLASS + '>{value}</span></li>',\n\n      /**\n       * tooltip html内容\n       * @type {String}\n       */\n      htmlContent: null,\n\n      /**\n       * tooltip 内容跟随鼠标移动\n       * @type {Boolean}\n       */\n      follow: true,\n\n      /**\n       * 是否允许鼠标停留在 tooltip 上，默认不允许\n       * @type {Boolean}\n       */\n      enterable: false\n    });\n  };\n\n  function HtmlTooltip(cfg) {\n    var _this;\n\n    _this = _Tooltip.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), PositionMixin);\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), MarkerGroupMixin);\n    var style = TooltipTheme;\n    _this.style = mergeStyles(style, cfg);\n\n    _this._init_();\n\n    if (_this.get('items')) {\n      _this.render();\n    } // crosshair\n\n\n    var crosshair = _this.get('crosshairs');\n\n    if (crosshair) {\n      var plot = crosshair.type === 'rect' ? _this.get('backPlot') : _this.get('frontPlot');\n      var crosshairGroup = new Crosshair(Util.mix({\n        plot: plot,\n        plotRange: _this.get('plotRange'),\n        canvas: _this.get('canvas')\n      }, _this.get('crosshairs')));\n      crosshairGroup.hide();\n\n      _this.set('crosshairGroup', crosshairGroup);\n    }\n\n    return _this;\n  }\n\n  _proto._init_ = function _init_() {\n    var self = this;\n    var containerTpl = self.get('containerTpl');\n    var outterNode = self.get('canvas').get('el').parentNode;\n    var container;\n\n    if (!this.get('htmlContent')) {\n      if (/^\\#/.test(containerTpl)) {\n        // 如果传入 dom 节点的 id\n        var id = containerTpl.replace('#', '');\n        container = document.getElementById(id);\n      } else {\n        container = DomUtil.createDom(containerTpl);\n        DomUtil.modifyCSS(container, self.style[CONTAINER_CLASS]);\n        outterNode.appendChild(container);\n        outterNode.style.position = 'relative';\n      }\n\n      self.set('container', container);\n    }\n  };\n\n  _proto.render = function render() {\n    var self = this;\n    self.clear();\n\n    if (self.get('htmlContent')) {\n      var outterNode = self.get('canvas').get('el').parentNode;\n\n      var container = self._getHtmlContent();\n\n      outterNode.appendChild(container);\n      self.set('container', container);\n    } else {\n      self._renderTpl();\n    }\n  };\n\n  _proto._renderTpl = function _renderTpl() {\n    var self = this;\n    var showTitle = self.get('showTitle');\n    var titleContent = self.get('titleContent');\n    var container = self.get('container');\n    var titleDom = find(container, TITLE_CLASS);\n    var listDom = find(container, LIST_CLASS);\n    var items = self.get('items');\n\n    if (titleDom && showTitle) {\n      DomUtil.modifyCSS(titleDom, self.style[TITLE_CLASS]);\n      titleDom.innerHTML = titleContent;\n    }\n\n    if (listDom) {\n      DomUtil.modifyCSS(listDom, self.style[LIST_CLASS]);\n      Util.each(items, function (item, index) {\n        listDom.appendChild(self._addItem(item, index));\n      });\n    }\n  };\n\n  _proto.clear = function clear() {\n    var container = this.get('container');\n\n    if (this.get('htmlContent')) {\n      container && container.remove();\n    } else {\n      var titleDom = find(container, TITLE_CLASS);\n      var listDom = find(container, LIST_CLASS);\n\n      if (titleDom) {\n        titleDom.innerHTML = '';\n      }\n\n      if (listDom) {\n        listDom.innerHTML = '';\n      }\n    }\n  };\n\n  _proto.show = function show() {\n    var container = this.get('container');\n    container.style.visibility = 'visible';\n    container.style.display = 'block';\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.show();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.show();\n\n    _Tooltip.prototype.show.call(this);\n\n    this.get('canvas').draw();\n  };\n\n  _proto.hide = function hide() {\n    var container = this.get('container');\n    container.style.visibility = 'hidden';\n    container.style.display = 'none';\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.hide();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.hide();\n\n    _Tooltip.prototype.hide.call(this);\n\n    this.get('canvas').draw();\n  };\n\n  _proto.destroy = function destroy() {\n    var self = this;\n    var container = self.get('container');\n    var containerTpl = self.get('containerTpl');\n\n    if (container && !/^\\#/.test(containerTpl)) {\n      container.parentNode.removeChild(container);\n    }\n\n    var crosshairGroup = this.get('crosshairGroup');\n    crosshairGroup && crosshairGroup.destroy();\n    var markerGroup = this.get('markerGroup');\n    markerGroup && markerGroup.remove();\n\n    _Tooltip.prototype.destroy.call(this);\n  };\n\n  _proto._addItem = function _addItem(item, index) {\n    var itemTpl = this.get('itemTpl'); // TODO: 有可能是个回调函数\n\n    var itemDiv = Util.substitute(itemTpl, Util.mix({\n      index: index\n    }, item));\n    var itemDOM = DomUtil.createDom(itemDiv);\n    DomUtil.modifyCSS(itemDOM, this.style[LIST_ITEM_CLASS]);\n    var markerDom = find(itemDOM, MARKER_CLASS);\n\n    if (markerDom) {\n      DomUtil.modifyCSS(markerDom, this.style[MARKER_CLASS]);\n    }\n\n    var valueDom = find(itemDOM, VALUE_CLASS);\n\n    if (valueDom) {\n      DomUtil.modifyCSS(valueDom, this.style[VALUE_CLASS]);\n    }\n\n    return itemDOM;\n  };\n\n  _proto._getHtmlContent = function _getHtmlContent() {\n    var htmlContent = this.get('htmlContent');\n    var title = this.get('titleContent');\n    var items = this.get('items');\n    var htmlString = htmlContent(title, items);\n    var ele = DomUtil.createDom(htmlString);\n    return ele;\n  };\n\n  _proto.setPosition = function setPosition(x, y, target) {\n    var container = this.get('container');\n    var outterNode = this.get('canvas').get('el');\n    var viewWidth = DomUtil.getWidth(outterNode);\n    var viewHeight = DomUtil.getHeight(outterNode);\n    var containerWidth = container.clientWidth;\n    var containerHeight = container.clientHeight;\n    var endx = x;\n    var endy = y;\n    var position;\n    var prePosition = this.get('prePosition') || {\n      x: 0,\n      y: 0\n    };\n\n    if (this.get('enterable')) {\n      y = y - container.clientHeight / 2;\n      position = [x, y];\n\n      if (prePosition && x - prePosition.x > 0) {\n        // 留 1px 防止鼠标点击事件无法在画布上触发\n        x -= container.clientWidth + 1;\n      } else {\n        x += 1;\n      }\n    } else if (this.get('position')) {\n      var _containerWidth = container.clientWidth;\n      var _containerHeight = container.clientHeight;\n      position = this._calcTooltipPosition(x, y, this.get('position'), _containerWidth, _containerHeight, target);\n      x = position[0];\n      y = position[1];\n    } else {\n      position = this._constraintPositionInBoundary(x, y, containerWidth, containerHeight, viewWidth, viewHeight);\n      x = position[0];\n      y = position[1];\n    }\n\n    if (this.get('inPlot')) {\n      // tooltip 必须限制在绘图区域内\n      var plotRange = this.get('plotRange');\n      position = this._constraintPositionInPlot(x, y, containerWidth, containerHeight, plotRange, this.get('enterable'));\n      x = position[0];\n      y = position[1];\n    }\n\n    var markerItems = this.get('markerItems');\n\n    if (!Util.isEmpty(markerItems)) {\n      endx = markerItems[0].x;\n      endy = markerItems[0].y;\n    }\n\n    this.set('prePosition', position); // 记录上次的位置\n\n    var follow = this.get('follow');\n\n    if (follow) {\n      container.style.left = x + 'px';\n      container.style.top = y + 'px';\n    }\n\n    var crosshairGroup = this.get('crosshairGroup');\n\n    if (crosshairGroup) {\n      var items = this.get('items');\n      crosshairGroup.setPosition(endx, endy, items);\n    }\n\n    _Tooltip.prototype.setPosition.call(this, x, y);\n  };\n\n  return HtmlTooltip;\n}(Tooltip);\n\nmodule.exports = HtmlTooltip;\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _TooltipTheme;\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY; // tooltip 相关 dom 的 css 类名\n\n\nvar TOOLTIP_CONTAINER_CLASS = 'g2-tooltip';\nvar TOOLTIP_TITLE_CLASS = 'g2-tooltip-title';\nvar TOOLTIP_LIST_CLASS = 'g2-tooltip-list';\nvar TOOLTIP_LIST_ITEM_CLASS = 'g2-tooltip-list-item';\nvar TOOLTIP_MARKER_CLASS = 'g2-tooltip-marker';\nvar TOOLTIP_VALUE_CLASS = 'g2-tooltip-value';\nvar TooltipTheme = (_TooltipTheme = {\n  crosshairs: false,\n  offset: 15\n}, _TooltipTheme[\"\" + TOOLTIP_CONTAINER_CLASS] = {\n  position: 'absolute',\n  visibility: 'hidden',\n  // @2018-07-25 by blue.lb 这里去掉浮动，火狐上存在样式错位\n  // whiteSpace: 'nowrap',\n  zIndex: 8,\n  transition: 'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), left 0.4s cubic-bezier(0.23, 1, 0.32, 1), top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  boxShadow: '0px 0px 10px #aeaeae',\n  borderRadius: '3px',\n  color: 'rgb(87, 87, 87)',\n  fontSize: '12px',\n  fontFamily: FONT_FAMILY,\n  lineHeight: '20px',\n  padding: '10px 10px 6px 10px'\n}, _TooltipTheme[\"\" + TOOLTIP_TITLE_CLASS] = {\n  marginBottom: '4px'\n}, _TooltipTheme[\"\" + TOOLTIP_LIST_CLASS] = {\n  margin: 0,\n  listStyleType: 'none',\n  padding: 0\n}, _TooltipTheme[\"\" + TOOLTIP_LIST_ITEM_CLASS] = {\n  marginBottom: '4px'\n}, _TooltipTheme[\"\" + TOOLTIP_MARKER_CLASS] = {\n  width: '5px',\n  height: '5px',\n  borderRadius: '50%',\n  display: 'inline-block',\n  marginRight: '8px'\n}, _TooltipTheme[\"\" + TOOLTIP_VALUE_CLASS] = {\n  display: 'inline-block',\n  float: 'right',\n  marginLeft: '30px'\n}, _TooltipTheme);\nmodule.exports = TooltipTheme;\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Util = __webpack_require__(3);\n\nvar CanvasTooltip = __webpack_require__(163);\n\nvar _require = __webpack_require__(14),\n    FONT_FAMILY = _require.FONT_FAMILY;\n\nvar DomUtil = Util.DomUtil;\nvar MatrixUtil = Util.MatrixUtil;\n\nvar MiniTooltip =\n/*#__PURE__*/\nfunction (_CanvasTooltip) {\n  _inheritsLoose(MiniTooltip, _CanvasTooltip);\n\n  function MiniTooltip() {\n    return _CanvasTooltip.apply(this, arguments) || this;\n  }\n\n  var _proto = MiniTooltip.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _CanvasTooltip.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * 默认背景板样式\n       * @type {Object}\n       */\n      boardStyle: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        // fill: 'rgba(50, 50, 50, 1)',\n        radius: 3\n      },\n\n      /**\n       * 默认value样式\n       * @type {Object}\n       * */\n      valueStyle: {\n        x: 0,\n        y: 0,\n        text: '',\n        fontFamily: FONT_FAMILY,\n        fontSize: 12,\n        stroke: '#fff',\n        lineWidth: 2,\n        fill: 'black',\n        textBaseline: 'top',\n        textAlign: 'start'\n      },\n\n      /**\n       * 默认padding值\n       * @type {Object}\n       */\n      padding: {\n        top: 5,\n        right: 5,\n        bottom: 0,\n        left: 5\n      },\n      triangleWidth: 10,\n      triangleHeight: 4\n    });\n  };\n\n  _proto._init_ = function _init_() {\n    var self = this;\n    var padding = self.get('padding');\n    var parent = self.get('frontPlot'); // container\n\n    var container = parent.addGroup();\n    self.set('container', container); // board\n\n    var board = container.addShape('rect', {\n      attrs: Util.mix({}, self.get('boardStyle'))\n    });\n    self.set('board', board); // triangleShpe\n\n    var triangleShape = container.addShape('path', {\n      attrs: {\n        fill: self.get('boardStyle').fill\n      }\n    });\n    self.set('triangleShape', triangleShape); // itemGroup\n\n    var itemGroup = container.addGroup();\n    itemGroup.move(padding.left, padding.top); // value\n\n    var valueShape = itemGroup.addShape('text', {\n      attrs: Util.mix({}, self.get('valueStyle'))\n    });\n    self.set('valueShape', valueShape);\n  };\n\n  _proto.render = function render() {\n    var self = this;\n    self.clear();\n    var board = self.get('board');\n    var valueShape = self.get('valueShape');\n    var padding = self.get('padding');\n    var item = self.get('items')[0];\n\n    if (valueShape) {\n      valueShape.attr('text', item.value);\n    } // update board based on bbox\n\n\n    var bbox = valueShape ? valueShape.getBBox() : {\n      width: 80,\n      height: 30\n    };\n    var width = padding.left + bbox.width + padding.right;\n    var height = padding.top + bbox.height + padding.bottom;\n    board.attr('width', width);\n    board.attr('height', height); // update triangle shape\n\n    self._centerTriangleShape();\n  };\n\n  _proto.clear = function clear() {\n    var valueShape = this.get('valueShape');\n    valueShape.attr('text', '');\n  };\n\n  _proto.setPosition = function setPosition(x, y, target) {\n    var self = this;\n    var container = self.get('container');\n    var plotRange = self.get('plotRange');\n    var bbox = container.getBBox();\n    var width = bbox.width;\n    var height = bbox.height;\n    x -= width / 2;\n\n    if (target && (target.name === 'point' || target.name === 'interval')) {\n      var targetY = target.getBBox().y;\n      y = targetY;\n    }\n\n    y -= height;\n\n    if (this.get('inPlot')) {\n      // constrain in plot\n      if (x < plotRange.tl.x) {\n        x = plotRange.tl.x;\n\n        self._leftTriangleShape();\n      } else if (x + width / 2 > plotRange.tr.x) {\n        x = plotRange.tr.x - width;\n\n        self._rightTriangleShape();\n      } else {\n        self._centerTriangleShape();\n      }\n\n      if (y < plotRange.tl.y) {\n        y = plotRange.tl.y;\n      } else if (y + height > plotRange.bl.y) {\n        y = plotRange.bl.y - height;\n      }\n    } else {\n      // constrain in dom\n      var outterNode = this.get('canvas').get('el');\n      var viewWidth = DomUtil.getWidth(outterNode);\n      var viewHeight = DomUtil.getHeight(outterNode);\n\n      if (x < 0) {\n        x = 0;\n\n        self._leftTriangleShape();\n      } else if (x + width / 2 > viewWidth) {\n        x = viewWidth - width;\n\n        self._rightTriangleShape();\n      } else {\n        self._centerTriangleShape();\n      }\n\n      if (y < 0) {\n        y = 0;\n      } else if (y + height > viewHeight) {\n        y = viewHeight - height;\n      }\n    }\n\n    var ulMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var mat = MatrixUtil.transform(ulMatrix, [['t', x, y]]);\n    container.stopAnimate();\n    container.animate({\n      matrix: mat\n    }, this.get('animationDuration'));\n  };\n\n  _proto._centerTriangleShape = function _centerTriangleShape() {\n    var triangle = this.get('triangleShape');\n    var width = this.get('triangleWidth');\n    var height = this.get('triangleHeight');\n    var boardBBox = this.get('board').getBBox();\n    var boardWidth = boardBBox.width;\n    var boardHeight = boardBBox.height;\n    var pathArray = [['M', 0, 0], ['L', width, 0], ['L', width / 2, height], ['L', 0, 0], ['Z']];\n    triangle.attr('path', pathArray);\n    triangle.move(boardWidth / 2 - width / 2, boardHeight - 1);\n  };\n\n  _proto._leftTriangleShape = function _leftTriangleShape() {\n    var triangle = this.get('triangleShape');\n    var width = this.get('triangleWidth');\n    var height = this.get('triangleHeight');\n    var boardBBox = this.get('board').getBBox();\n    var boardHeight = boardBBox.height;\n    var pathArray = [['M', 0, 0], ['L', width, 0], ['L', 0, height + 3], ['L', 0, 0], ['Z']];\n    triangle.attr('path', pathArray);\n    triangle.move(0, boardHeight - 3);\n  };\n\n  _proto._rightTriangleShape = function _rightTriangleShape() {\n    var triangle = this.get('triangleShape');\n    var width = this.get('triangleWidth');\n    var height = this.get('triangleHeight');\n    var boardBBox = this.get('board').getBBox();\n    var boardWidth = boardBBox.width;\n    var boardHeight = boardBBox.height;\n    var pathArray = [['M', 0, 0], ['L', width, 0], ['L', width, height + 4], ['L', 0, 0], ['Z']];\n    triangle.attr('path', pathArray);\n    triangle.move(boardWidth - width - 1, boardHeight - 4);\n  };\n\n  return MiniTooltip;\n}(CanvasTooltip);\n\nmodule.exports = MiniTooltip;\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MatrixUtil = __webpack_require__(0).MatrixUtil;\n\nvar Vector2 = MatrixUtil.vec2;\n\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var prevPoint;\n  var nextPoint;\n  var hasConstraint = !!constraint;\n  var min, max;\n\n  if (hasConstraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      min = Vector2.min([], min, point);\n      max = Vector2.max([], max, point);\n    }\n\n    min = Vector2.min([], min, constraint[0]);\n    max = Vector2.max([], max, constraint[1]);\n  }\n\n  for (var _i = 0, len = points.length; _i < len; _i++) {\n    var _point = points[_i];\n\n    if (isLoop) {\n      prevPoint = points[_i ? _i - 1 : len - 1];\n      nextPoint = points[(_i + 1) % len];\n    } else {\n      if (_i === 0 || _i === len - 1) {\n        cps.push(_point);\n        continue;\n      } else {\n        prevPoint = points[_i - 1];\n        nextPoint = points[_i + 1];\n      }\n    }\n\n    var v = [];\n    v = Vector2.sub(v, nextPoint, prevPoint);\n    v = Vector2.scale(v, v, smooth);\n    var d0 = Vector2.distance(_point, prevPoint);\n    var d1 = Vector2.distance(_point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    var v1 = Vector2.scale([], v, -d0);\n    var v2 = Vector2.scale([], v, d1);\n    var cp0 = Vector2.add([], _point, v1);\n    var cp1 = Vector2.add([], _point, v2);\n\n    if (hasConstraint) {\n      cp0 = Vector2.max([], cp0, min);\n      cp0 = Vector2.min([], cp0, max);\n      cp1 = Vector2.max([], cp1, min);\n      cp1 = Vector2.min([], cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nfunction catmullRom2bezier(crp, z, constraint) {\n  var isLoop = !!z;\n  var pointList = [];\n\n  for (var i = 0, l = crp.length; i < l; i += 2) {\n    pointList.push([crp[i], crp[i + 1]]);\n  }\n\n  var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n  var len = pointList.length;\n  var d1 = [];\n  var cp1;\n  var cp2;\n  var p;\n\n  for (var _i2 = 0; _i2 < len - 1; _i2++) {\n    cp1 = controlPointList[_i2 * 2];\n    cp2 = controlPointList[_i2 * 2 + 1];\n    p = pointList[_i2 + 1];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  if (isLoop) {\n    cp1 = controlPointList[len];\n    cp2 = controlPointList[len + 1];\n    p = pointList[0];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  return d1;\n}\n\nmodule.exports = {\n  catmullRom2bezier: catmullRom2bezier\n};\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar PolarLabels = __webpack_require__(164);\n\nvar PathUtil = __webpack_require__(22);\n\nvar Global = __webpack_require__(7);\n\nvar MARGIN = 5;\n\nfunction getEndPoint(center, angle, r) {\n  return {\n    x: center.x + r * Math.cos(angle),\n    y: center.y + r * Math.sin(angle)\n  };\n}\n\nfunction antiCollision(labels, lineHeight, plotRange, center, isRight) {\n  // adjust y position of labels to avoid overlapping\n  var overlapping = true;\n  var start = plotRange.start;\n  var end = plotRange.end;\n  var startY = Math.min(start.y, end.y);\n  var totalHeight = Math.abs(start.y - end.y);\n  var i;\n  var maxY = 0;\n  var minY = Number.MIN_VALUE;\n  var boxes = labels.map(function (label) {\n    if (label.y > maxY) {\n      maxY = label.y;\n    }\n\n    if (label.y < minY) {\n      minY = label.y;\n    }\n\n    return {\n      size: lineHeight,\n      targets: [label.y - startY]\n    };\n  });\n  minY -= startY;\n\n  if (maxY - startY > totalHeight) {\n    totalHeight = maxY - startY;\n  }\n\n  while (overlapping) {\n    /* eslint no-loop-func: 0 */\n    boxes.forEach(function (box) {\n      var target = (Math.min.apply(minY, box.targets) + Math.max.apply(minY, box.targets)) / 2;\n      box.pos = Math.min(Math.max(minY, target - box.size / 2), totalHeight - box.size); // box.pos = Math.max(0, target - box.size / 2);\n    }); // detect overlapping and join boxes\n\n    overlapping = false;\n    i = boxes.length;\n\n    while (i--) {\n      if (i > 0) {\n        var previousBox = boxes[i - 1];\n        var box = boxes[i];\n\n        if (previousBox.pos + previousBox.size > box.pos) {\n          // overlapping\n          previousBox.size += box.size;\n          previousBox.targets = previousBox.targets.concat(box.targets); // overflow, shift up\n\n          if (previousBox.pos + previousBox.size > totalHeight) {\n            previousBox.pos = totalHeight - previousBox.size;\n          }\n\n          boxes.splice(i, 1); // removing box\n\n          overlapping = true;\n        }\n      }\n    }\n  }\n\n  i = 0; // step 4: normalize y and adjust x\n\n  boxes.forEach(function (b) {\n    var posInCompositeBox = startY + lineHeight / 2; // middle of the label\n\n    b.targets.forEach(function () {\n      labels[i].y = b.pos + posInCompositeBox;\n      posInCompositeBox += lineHeight;\n      i++;\n    });\n  }); // (x - cx)^2 + (y - cy)^2 = totalR^2\n\n  labels.forEach(function (label) {\n    var rPow2 = label.r * label.r;\n    var dyPow2 = Math.pow(Math.abs(label.y - center.y), 2);\n\n    if (rPow2 < dyPow2) {\n      label.x = center.x;\n    } else {\n      var dx = Math.sqrt(rPow2 - dyPow2);\n\n      if (!isRight) {\n        // left\n        label.x = center.x - dx;\n      } else {\n        // right\n        label.x = center.x + dx;\n      }\n    }\n  });\n}\n\nvar PieLabels =\n/*#__PURE__*/\nfunction (_PolarLabels) {\n  _inheritsLoose(PieLabels, _PolarLabels);\n\n  function PieLabels() {\n    return _PolarLabels.apply(this, arguments) || this;\n  }\n\n  var _proto = PieLabels.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      label: Global.thetaLabels\n    };\n  };\n\n  _proto.getDefaultOffset = function getDefaultOffset(point) {\n    return point.offset || 0;\n  };\n  /**\n   * @protected\n   * to avoid overlapping\n   * @param {Array} items labels to be placed\n   * @return {Array} items\n   */\n\n\n  _proto.adjustItems = function adjustItems(items) {\n    var self = this;\n    var offset = items[0] ? items[0].offset : 0;\n\n    if (offset > 0) {\n      items = self._distribute(items, offset);\n    }\n\n    return _PolarLabels.prototype.adjustItems.call(this, items);\n  };\n  /**\n   * @private\n   * distribute labels\n   * @param {Array} labels labels\n   * @param {Number} offset offset\n   * @return {Array} labels\n   */\n\n\n  _proto._distribute = function _distribute(labels, offset) {\n    var self = this;\n    var coord = self.get('coord');\n    var radius = coord.getRadius();\n    var lineHeight = self.get('label').labelHeight;\n    var center = coord.getCenter();\n    var totalR = radius + offset;\n    var totalHeight = totalR * 2 + lineHeight * 2;\n    var plotRange = {\n      start: coord.start,\n      end: coord.end\n    };\n    var geom = self.get('geom');\n\n    if (geom) {\n      var view = geom.get('view');\n      plotRange = view.getViewRegion();\n    } // step 1: separate labels\n\n\n    var halves = [[], // left\n    [] // right\n    ];\n    labels.forEach(function (label) {\n      if (!label) {\n        return;\n      }\n\n      if (label.textAlign === 'right') {\n        // left\n        halves[0].push(label);\n      } else {\n        // right or center will be put on the right side\n        halves[1].push(label);\n      }\n    });\n    halves.forEach(function (half, index) {\n      // step 2: reduce labels\n      var maxLabelsCountForOneSide = parseInt(totalHeight / lineHeight, 10);\n\n      if (half.length > maxLabelsCountForOneSide) {\n        half.sort(function (a, b) {\n          // sort by percentage DESC\n          return b['..percent'] - a['..percent'];\n        });\n        half.splice(maxLabelsCountForOneSide, half.length - maxLabelsCountForOneSide);\n      } // step 3: distribute position (x and y)\n\n\n      half.sort(function (a, b) {\n        // sort by y ASC\n        return a.y - b.y;\n      });\n      antiCollision(half, lineHeight, plotRange, center, index);\n    });\n    return halves[0].concat(halves[1]);\n  }; // 连接线\n\n\n  _proto.lineToLabel = function lineToLabel(label) {\n    var self = this;\n    var coord = self.get('coord');\n    var r = coord.getRadius();\n    var distance = label.offset;\n    var angle = label.orignAngle || label.angle;\n    var center = coord.getCenter();\n    var start = getEndPoint(center, angle, r + MARGIN / 2);\n    var inner = getEndPoint(center, angle, r + distance / 2);\n\n    if (!label.labelLine) {\n      label.labelLine = self.get('label').labelLine || {};\n    }\n\n    label.labelLine.path = ['M' + start.x, start.y + ' Q' + inner.x, inner.y + ' ' + label.x, label.y].join(',');\n  };\n  /**\n   * @protected\n   * get rotation for label\n   * @param {Number} angle angle\n   * @param {Number} offset offset\n   * @return {Number} rotate\n   */\n\n\n  _proto.getLabelRotate = function getLabelRotate(angle, offset) {\n    var rotate;\n\n    if (offset < 0) {\n      rotate = angle * 180 / Math.PI;\n\n      if (rotate > 90) {\n        rotate = rotate - 180;\n      }\n\n      if (rotate < -90) {\n        rotate = rotate + 180;\n      }\n    }\n\n    return rotate / 180 * Math.PI;\n  };\n  /**\n   * @protected\n   * get text align for label\n   * @param {Object} point point\n   * @return {String} align\n   */\n\n\n  _proto.getLabelAlign = function getLabelAlign(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var center = coord.getCenter();\n    var align;\n\n    if (point.angle <= Math.PI / 2 && point.x >= center.x) {\n      align = 'left';\n    } else {\n      align = 'right';\n    }\n\n    var offset = self.getDefaultOffset(point);\n\n    if (offset <= 0) {\n      if (align === 'right') {\n        align = 'left';\n      } else {\n        align = 'right';\n      }\n    }\n\n    return align;\n  };\n\n  _proto.getArcPoint = function getArcPoint(point) {\n    return point;\n  };\n\n  _proto.getPointAngle = function getPointAngle(point) {\n    var self = this;\n    var coord = self.get('coord');\n    var startPoint = {\n      x: Util.isArray(point.x) ? point.x[0] : point.x,\n      y: point.y[0]\n    };\n    self.transLabelPoint(startPoint); // 转换到画布坐标，如果坐标系发生改变\n\n    var endPoint = {\n      x: Util.isArray(point.x) ? point.x[1] : point.x,\n      y: point.y[1]\n    };\n    self.transLabelPoint(endPoint); // 转换到画布坐标，如果坐标系发生改变\n\n    var angle;\n    var startAngle = PathUtil.getPointAngle(coord, startPoint);\n\n    if (point.points && point.points[0].y === point.points[1].y) {\n      angle = startAngle;\n    } else {\n      var endAngle = PathUtil.getPointAngle(coord, endPoint);\n\n      if (startAngle >= endAngle) {\n        // 100% pie slice\n        endAngle = endAngle + Math.PI * 2;\n      }\n\n      angle = startAngle + (endAngle - startAngle) / 2;\n    }\n\n    return angle;\n  };\n\n  _proto.getCirclePoint = function getCirclePoint(angle, offset) {\n    var self = this;\n    var coord = self.get('coord');\n    var center = coord.getCenter();\n    var r = coord.getRadius() + offset;\n    var point = getEndPoint(center, angle, r);\n    point.angle = angle;\n    point.r = r;\n    return point;\n  };\n\n  return PieLabels;\n}(PolarLabels);\n\nmodule.exports = PieLabels;\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar GeomLabels = __webpack_require__(65);\n\nvar IntervalLabels =\n/*#__PURE__*/\nfunction (_GeomLabels) {\n  _inheritsLoose(IntervalLabels, _GeomLabels);\n\n  function IntervalLabels() {\n    return _GeomLabels.apply(this, arguments) || this;\n  }\n\n  var _proto = IntervalLabels.prototype;\n\n  _proto.setLabelPosition = function setLabelPosition(point, originPoint, index, position) {\n    if (Util.isFunction(position)) {\n      position = position(point.text, originPoint._origin, index);\n    }\n\n    var coord = this.get('coord');\n    var transposed = coord.isTransposed;\n    var point0 = coord.convertPoint(originPoint.points[0]);\n    var point1 = coord.convertPoint(originPoint.points[2]);\n    var width = (point0.x - point1.x) / 2 * (transposed ? -1 : 1);\n    var height = (point0.y - point1.y) / 2 * (transposed ? -1 : 1);\n\n    switch (position) {\n      case 'right':\n        if (transposed) {\n          point.x -= width;\n          point.y += height;\n          point.textAlign = point.textAlign || 'center';\n        } else {\n          point.x -= width;\n          point.y += height;\n          point.textAlign = point.textAlign || 'left';\n        }\n\n        break;\n\n      case 'left':\n        if (transposed) {\n          point.x -= width;\n          point.y -= height;\n          point.textAlign = point.textAlign || 'center';\n        } else {\n          point.x += width;\n          point.y += height;\n          point.textAlign = point.textAlign || 'right';\n        }\n\n        break;\n\n      case 'bottom':\n        if (transposed) {\n          point.x -= width * 2;\n          point.textAlign = point.textAlign || 'left';\n        } else {\n          point.y += height * 2;\n          point.textAlign = point.textAlign || 'center';\n        }\n\n        break;\n\n      case 'middle':\n        if (transposed) {\n          point.x -= width;\n        } else {\n          point.y += height;\n        }\n\n        point.textAlign = point.textAlign || 'center';\n        break;\n\n      case 'top':\n        if (transposed) {\n          point.textAlign = point.textAlign || 'left';\n        } else {\n          point.textAlign = point.textAlign || 'center';\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return IntervalLabels;\n}(GeomLabels);\n\nmodule.exports = IntervalLabels;\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The tooltip handler\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar _require = __webpack_require__(7),\n    defaultColor = _require.defaultColor;\n\nvar FIELD_ORIGIN = '_origin';\n\nfunction getScaleName(scale) {\n  return scale.alias || scale.field;\n}\n\nvar TooltipMixin = {\n  _getIntervalSize: function _getIntervalSize(obj) {\n    var size = null;\n    var type = this.get('type');\n    var coord = this.get('coord');\n\n    if (coord.isRect && (type === 'interval' || type === 'schema')) {\n      size = this.getSize(obj[FIELD_ORIGIN]); // 如果字段发生了映射，宽度计算就会报错\n\n      var dim = coord.isTransposed ? 'y' : 'x';\n\n      if (Util.isArray(obj[dim])) {\n        var width = Math.abs(obj[dim][1] - obj[dim][0]);\n        size = size < width ? null : size; // 直方图计算错误\n      }\n    }\n\n    return size;\n  },\n  _snapEqual: function _snapEqual(v1, v2, scale) {\n    var equals;\n    v1 = scale.translate(v1);\n    v2 = scale.translate(v2);\n\n    if (scale.isCategory) {\n      equals = v1 === v2;\n    } else {\n      equals = Util.snapEqual(v1, v2);\n    }\n\n    return equals;\n  },\n  _getScaleValueByPoint: function _getScaleValueByPoint(point) {\n    var result = 0;\n    var coord = this.get('coord');\n    var xScale = this.getXScale();\n    var invertPoint = coord.invert(point);\n    var xValue = invertPoint.x;\n\n    if (this.isInCircle() && xValue > (1 + xScale.rangeMax()) / 2) {\n      xValue = xScale.rangeMin(); // 极坐标下，scale 的 range 被做过特殊处理 see view.js#L88\n    }\n\n    result = xScale.invert(xValue);\n\n    if (xScale.isCategory) {\n      result = xScale.translate(result); // 防止分类类型\n    }\n\n    return result;\n  },\n  _getOriginByPoint: function _getOriginByPoint(point) {\n    var xScale = this.getXScale();\n    var yScale = this.getYScale();\n    var xField = xScale.field;\n    var yField = yScale.field;\n    var coord = this.get('coord');\n    var invertPoint = coord.invert(point);\n    var xValue = xScale.invert(invertPoint.x);\n    var yValue = yScale.invert(invertPoint.y);\n    var result = {};\n    result[xField] = xValue;\n    result[yField] = yValue;\n    return result;\n  },\n  _getScale: function _getScale(field) {\n    var self = this;\n    var scales = self.get('scales');\n    var rst = null;\n    Util.each(scales, function (scale) {\n      if (scale.field === field) {\n        rst = scale;\n        return false;\n      }\n    });\n    return rst;\n  },\n  // 获取值对应的度量\n  _getTipValueScale: function _getTipValueScale() {\n    var attrs = this.getAttrsForLegend();\n    var scale;\n    Util.each(attrs, function (attr) {\n      var tmpScale = attr.getScale(attr.type);\n\n      if (tmpScale.isLinear) {\n        // 如果指定字段是非position的，同时是连续的\n        scale = tmpScale;\n        return false;\n      }\n    });\n    var xScale = this.getXScale();\n    var yScale = this.getYScale();\n\n    if (!scale && yScale && yScale.field === '..y') {\n      return xScale;\n    }\n\n    return scale || yScale || xScale;\n  },\n  _getTipTitleScale: function _getTipTitleScale(titleField) {\n    var self = this;\n\n    if (titleField) {\n      return self._getScale(titleField);\n    }\n\n    var position = self.getAttr('position');\n    var fields = position.getFields();\n    var tmpField;\n    Util.each(fields, function (field) {\n      if (field.indexOf('..') === -1) {\n        tmpField = field;\n        return false;\n      }\n    });\n    return self._getScale(tmpField);\n  },\n  _filterValue: function _filterValue(arr, point) {\n    var coord = this.get('coord');\n    var yScale = this.getYScale();\n    var yField = yScale.field;\n    var invertPoint = coord.invert(point);\n    var yValue = invertPoint.y;\n    yValue = yScale.invert(yValue);\n    var rst = arr[arr.length - 1];\n    Util.each(arr, function (obj) {\n      var origin = obj[FIELD_ORIGIN];\n\n      if (origin[yField][0] <= yValue && origin[yField][1] >= yValue) {\n        rst = obj;\n        return false;\n      }\n    });\n    return rst;\n  },\n  getXDistance: function getXDistance() {\n    var self = this;\n    var distance = self.get('xDistance');\n\n    if (!distance) {\n      var xScale = self.getXScale();\n\n      if (xScale.isCategory) {\n        distance = 1;\n      } else {\n        var values = xScale.values; // values 是无序的\n\n        var min = xScale.translate(values[0]);\n        var max = min;\n        Util.each(values, function (value) {\n          // 时间类型需要 translate\n          value = xScale.translate(value);\n\n          if (value < min) {\n            min = value;\n          }\n\n          if (value > max) {\n            max = value;\n          }\n        });\n        var length = values.length; // 应该是除以 length - 1\n\n        distance = (max - min) / (length - 1);\n      }\n\n      self.set('xDistance', distance);\n    }\n\n    return distance;\n  },\n  findPoint: function findPoint(point, dataArray) {\n    var self = this;\n    var type = self.get('type');\n    var xScale = self.getXScale();\n    var yScale = self.getYScale();\n    var xField = xScale.field;\n    var yField = yScale.field;\n    var rst = null;\n\n    if (Util.indexOf(['heatmap', 'point'], type) > -1) {\n      var coord = self.get('coord');\n      var invertPoint = coord.invert(point);\n      var xValue = xScale.invert(invertPoint.x);\n      var yValue = yScale.invert(invertPoint.y);\n      var min = Infinity;\n      Util.each(dataArray, function (obj) {\n        var distance = Math.pow(obj[FIELD_ORIGIN][xField] - xValue, 2) + Math.pow(obj[FIELD_ORIGIN][yField] - yValue, 2);\n\n        if (distance < min) {\n          min = distance;\n          rst = obj;\n        }\n      });\n      return rst;\n    }\n\n    var first = dataArray[0];\n    var last = dataArray[dataArray.length - 1];\n\n    if (!first) {\n      return rst;\n    }\n\n    var value = self._getScaleValueByPoint(point); // 根据该点获得对应度量后数据的值\n\n\n    var firstXValue = first[FIELD_ORIGIN][xField];\n    var firstYValue = first[FIELD_ORIGIN][yField];\n    var lastXValue = last[FIELD_ORIGIN][xField];\n    var isYRange = yScale.isLinear && Util.isArray(firstYValue); // 考虑 x 维度相同，y 是数组区间的情况\n    // 如果x的值是数组\n\n    if (Util.isArray(firstXValue)) {\n      Util.each(dataArray, function (record) {\n        var origin = record[FIELD_ORIGIN];\n\n        if (xScale.translate(origin[xField][0]) <= value && xScale.translate(origin[xField][1]) >= value) {\n          if (isYRange) {\n            if (!Util.isArray(rst)) {\n              rst = [];\n            }\n\n            rst.push(record);\n          } else {\n            rst = record;\n            return false;\n          }\n        }\n      });\n\n      if (Util.isArray(rst)) {\n        rst = this._filterValue(rst, point);\n      }\n    } else {\n      var next;\n\n      if (!xScale.isLinear && xScale.type !== 'timeCat') {\n        Util.each(dataArray, function (record, index) {\n          var origin = record[FIELD_ORIGIN];\n\n          if (self._snapEqual(origin[xField], value, xScale)) {\n            if (isYRange) {\n              if (!Util.isArray(rst)) {\n                rst = [];\n              }\n\n              rst.push(record);\n            } else {\n              rst = record;\n              return false;\n            }\n          } else if (xScale.translate(origin[xField]) <= value) {\n            last = record;\n            next = dataArray[index + 1];\n          }\n        });\n\n        if (Util.isArray(rst)) {\n          rst = this._filterValue(rst, point);\n        }\n      } else {\n        if ((value > xScale.translate(lastXValue) || value < xScale.translate(firstXValue)) && (value > xScale.max || value < xScale.min)) {\n          return null;\n        }\n\n        var firstIdx = 0;\n        var lastIdx = dataArray.length - 1;\n        var middleIdx;\n\n        while (firstIdx <= lastIdx) {\n          middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n          var item = dataArray[middleIdx][FIELD_ORIGIN][xField];\n\n          if (self._snapEqual(item, value, xScale)) {\n            return dataArray[middleIdx];\n          }\n\n          if (xScale.translate(item) <= xScale.translate(value)) {\n            firstIdx = middleIdx + 1;\n            last = dataArray[middleIdx];\n            next = dataArray[middleIdx + 1];\n          } else {\n            if (lastIdx === 0) {\n              last = dataArray[0];\n            }\n\n            lastIdx = middleIdx - 1;\n          }\n        }\n      }\n\n      if (last && next) {\n        // 计算最逼近的\n        if (Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - value) > Math.abs(xScale.translate(next[FIELD_ORIGIN][xField]) - value)) {\n          last = next;\n        }\n      }\n    }\n\n    var distance = self.getXDistance(); // 每个分类间的平均间距\n\n    if (!rst && Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - value) <= distance / 2) {\n      rst = last;\n    }\n\n    return rst;\n  },\n\n  /**\n   * @protected\n   * 获取tooltip的标题\n   * @param  {Object} origin 点的原始信息\n   * @param  {String} titleField 标题的字段\n   * @return {String} 提示信息的标题\n   */\n  getTipTitle: function getTipTitle(origin, titleField) {\n    var tipTitle = '';\n\n    var titleScale = this._getTipTitleScale(titleField);\n\n    if (titleScale) {\n      var value = origin[titleScale.field];\n      tipTitle = titleScale.getText(value);\n    } else if (this.get('type') === 'heatmap') {\n      // 热力图在不存在 title 的时候特殊处理\n      var xScale = this.getXScale();\n      var yScale = this.getYScale();\n      var xValue = xScale.getText(origin[xScale.field]);\n      var yValue = yScale.getText(origin[yScale.field]);\n      tipTitle = '( ' + xValue + ', ' + yValue + ' )';\n    }\n\n    return tipTitle;\n  },\n  getTipValue: function getTipValue(origin, valueScale) {\n    var value;\n    var field = valueScale.field;\n    var key = origin.key;\n    value = origin[field];\n\n    if (Util.isArray(value)) {\n      var tmp = [];\n      Util.each(value, function (sub) {\n        tmp.push(valueScale.getText(sub));\n      });\n      value = tmp.join('-');\n    } else {\n      value = valueScale.getText(value, key);\n    }\n\n    return value;\n  },\n\n  /**\n   * @protected\n   * 获取tooltip的名称\n   * @param  {Object} origin 点的原始信息\n   * @return {String} 提示信息的名称\n   */\n  getTipName: function getTipName(origin) {\n    var name;\n    var nameScale;\n\n    var groupScales = this._getGroupScales();\n\n    if (groupScales.length) {\n      // 如果存在分组类型，取第一个分组类型\n      Util.each(groupScales, function (scale) {\n        nameScale = scale;\n        return false;\n      });\n    }\n\n    if (nameScale) {\n      var field = nameScale.field;\n      name = nameScale.getText(origin[field]);\n    } else {\n      var valueScale = this._getTipValueScale();\n\n      name = getScaleName(valueScale);\n    }\n\n    return name;\n  },\n\n  /**\n   * 获取点对应tooltip的信息\n   * @protected\n   * @param  {Object} point 原始的数据记录\n   * @param  {String} titleField tooltipTitle 配置信息\n   * @return {Array}  一条或者多条记录\n   */\n  getTipItems: function getTipItems(point, titleField) {\n    var self = this;\n    var origin = point[FIELD_ORIGIN];\n    var tipTitle = self.getTipTitle(origin, titleField);\n    var tooltipCfg = self.get('tooltipCfg');\n    var items = [];\n    var name;\n    var value;\n\n    function addItem(itemName, itemValue, cfg) {\n      if (!Util.isNil(itemValue) && itemValue !== '') {\n        // 值为null的时候，忽视\n        var item = {\n          title: tipTitle,\n          point: point,\n          name: itemName || tipTitle,\n          value: itemValue,\n          color: point.color || defaultColor,\n          marker: true\n        };\n        item.size = self._getIntervalSize(point);\n        items.push(Util.mix({}, item, cfg));\n      }\n    }\n\n    if (tooltipCfg) {\n      var fields = tooltipCfg.fields;\n      var cfg = tooltipCfg.cfg;\n      var callbackParams = [];\n      Util.each(fields, function (field) {\n        callbackParams.push(origin[field]);\n      });\n\n      if (cfg) {\n        // 存在回调函数\n        if (Util.isFunction(cfg)) {\n          cfg = cfg.apply(null, callbackParams);\n        }\n\n        var itemCfg = Util.mix({}, {\n          point: point,\n          title: tipTitle,\n          color: point.color || defaultColor,\n          marker: true // 默认展示 marker\n\n        }, cfg);\n        itemCfg.size = self._getIntervalSize(point);\n        items.push(itemCfg);\n      } else {\n        Util.each(fields, function (field) {\n          if (!Util.isNil(origin[field])) {\n            // 字段数据为null ,undefined时不显示\n            var scale = self._getScale(field);\n\n            name = getScaleName(scale);\n            value = scale.getText(origin[field]);\n            addItem(name, value);\n          }\n        });\n      }\n    } else {\n      var valueScale = self._getTipValueScale();\n\n      if (!Util.isNil(origin[valueScale.field])) {\n        // 字段数据为null ,undefined时不显示\n        value = self.getTipValue(origin, valueScale);\n        name = self.getTipName(origin);\n        addItem(name, value);\n      }\n    }\n\n    return items;\n  },\n  isShareTooltip: function isShareTooltip() {\n    var shareTooltip = this.get('shareTooltip');\n    var type = this.get('type');\n    var view = this.get('view');\n    var options;\n\n    if (view.get('parent')) {\n      options = view.get('parent').get('options');\n    } else {\n      options = view.get('options');\n    }\n\n    if (type === 'interval') {\n      var coord = this.get('coord');\n      var coordType = coord.type;\n\n      if (coordType === 'theta' || coordType === 'polar' && coord.isTransposed) {\n        shareTooltip = false;\n      }\n    } else if (!this.getYScale() || Util.inArray(['contour', 'point', 'polygon', 'edge'], type)) {\n      shareTooltip = false;\n    }\n\n    if (options.tooltip && Util.isBoolean(options.tooltip.shared)) {\n      // 以用户设置的为准\n      shareTooltip = options.tooltip.shared;\n    }\n\n    return shareTooltip;\n  }\n};\nmodule.exports = TooltipMixin;\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview the interaction when geom was actived\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar FIELD_ORIGIN = '_origin';\n\nfunction isSameShape(shape1, shape2) {\n  if (Util.isNil(shape1) || Util.isNil(shape2)) {\n    return false;\n  }\n\n  var shape1Origin = shape1.get('origin');\n  var shape2Origin = shape2.get('origin');\n  return Util.isEqual(shape1Origin, shape2Origin);\n}\n\nfunction isChange(preShapes, shapes) {\n  if (!preShapes) {\n    return true;\n  }\n\n  if (preShapes.length !== shapes.length) {\n    return true;\n  }\n\n  var rst = false;\n  Util.each(shapes, function (shape, index) {\n    if (!isSameShape(shape, preShapes[index])) {\n      rst = true;\n      return false;\n    }\n  });\n  return rst;\n}\n\nfunction getOriginAttrs(activeCfg, shape) {\n  var originAttrs = {};\n  Util.each(activeCfg, function (v, k) {\n    var originValue = shape.attr(k);\n\n    if (Util.isArray(originValue)) {\n      originValue = Util.cloneDeep(originValue); // 缓存原来的属性，由于 .attr('matrix') 是数组，所以此处需要深度复制\n    }\n\n    originAttrs[k] = originValue;\n  });\n  return originAttrs;\n}\n\nvar ActiveMixin = {\n  _isAllowActive: function _isAllowActive() {\n    var allowActive = this.get('allowActive');\n\n    if (Util.isNil(allowActive)) {\n      // 用户未设置，使用默认的策略\n      var view = this.get('view');\n      var isShareTooltip = this.isShareTooltip();\n      var options = view.get('options'); // 默认情况下，tooltip 关闭或者 tooltip 模式为 shared === false 的时候允许 active\n\n      if (options.tooltip === false || !isShareTooltip) {\n        return true;\n      }\n    } else {\n      return allowActive;\n    }\n\n    return false;\n  },\n  _onMouseenter: function _onMouseenter(ev) {\n    var self = this;\n    var shape = ev.shape;\n    var shapeContainer = self.get('shapeContainer');\n\n    if (shape && shapeContainer.contain(shape) && self._isAllowActive()) {\n      // shape.get('animating')\n      self.setShapesActived(shape);\n    }\n  },\n  _onMouseleave: function _onMouseleave() {\n    var self = this;\n    var view = self.get('view');\n    var canvas = view.get('canvas');\n\n    if (self.get('activeShapes')) {\n      self.clearActivedShapes();\n      canvas.draw();\n    }\n  },\n  _bindActiveAction: function _bindActiveAction() {\n    var self = this;\n    var view = self.get('view');\n    var type = self.get('type');\n    view.on(type + ':mouseenter', Util.wrapBehavior(self, '_onMouseenter'));\n    view.on(type + ':mouseleave', Util.wrapBehavior(self, '_onMouseleave'));\n  },\n  _offActiveAction: function _offActiveAction() {\n    var self = this;\n    var view = self.get('view');\n    var type = self.get('type');\n    view.off(type + ':mouseenter', Util.getWrapBehavior(self, '_onMouseenter'));\n    view.off(type + ':mouseleave', Util.getWrapBehavior(self, '_onMouseleave'));\n  },\n  _setActiveShape: function _setActiveShape(shape) {\n    var self = this;\n    var activedOptions = self.get('activedOptions') || {};\n    var shapeData = shape.get('origin');\n    var shapeName = shapeData.shape || self.getDefaultValue('shape');\n\n    if (Util.isArray(shapeName)) {\n      shapeName = shapeName[0];\n    }\n\n    var shapeFactory = self.get('shapeFactory');\n    var shapeCfg = Util.mix({}, shape.attr(), {\n      origin: shapeData\n    });\n    var activeCfg = shapeFactory.getActiveCfg(shapeName, shapeCfg);\n\n    if (activedOptions.style) {\n      Util.mix(activeCfg, activedOptions.style);\n    }\n\n    var originAttrs = getOriginAttrs(activeCfg, shape);\n    shape.setSilent('_originAttrs', originAttrs);\n\n    if (activedOptions.animate) {\n      shape.animate(activeCfg, 300);\n    } else {\n      shape.attr(activeCfg);\n    }\n\n    shape.set('zIndex', 1); // 提前\n  },\n  setShapesActived: function setShapesActived(shapes) {\n    var self = this;\n\n    if (!Util.isArray(shapes)) {\n      shapes = [shapes];\n    }\n\n    var preShapes = self.get('activeShapes'); // 获取上次被激活的 shapes\n\n    if (!isChange(preShapes, shapes)) {\n      return;\n    }\n\n    var view = self.get('view');\n    var canvas = view.get('canvas');\n    var shapeContainer = self.get('shapeContainer');\n    var activedOptions = self.get('activedOptions');\n\n    if (activedOptions && activedOptions.highlight) {\n      // 上次的动画未完成，所以要停止掉动画\n      Util.each(shapes, function (shape) {\n        if (shape.get('animating')) {\n          shape.stopAnimate();\n        }\n      });\n      self.highlightShapes(shapes);\n    } else {\n      if (preShapes) {\n        self.clearActivedShapes(); // 先清除激活元素\n      }\n\n      Util.each(shapes, function (shape) {\n        if (shape.get('animating')) {\n          shape.stopAnimate();\n        }\n\n        if (shape.get('visible') && !shape.get('selected')) {\n          self._setActiveShape(shape);\n        }\n      });\n    }\n\n    self.set('activeShapes', shapes);\n    shapeContainer.sort();\n    canvas.draw();\n  },\n  clearActivedShapes: function clearActivedShapes() {\n    var self = this;\n    var shapeContainer = self.get('shapeContainer');\n    var activedOptions = self.get('activedOptions');\n    var activeAnimate = activedOptions && activedOptions.animate;\n\n    if (shapeContainer && !shapeContainer.get('destroyed')) {\n      var activeShapes = self.get('activeShapes');\n      Util.each(activeShapes, function (activeShape) {\n        if (!activeShape.get('selected')) {\n          var originAttrs = activeShape.get('_originAttrs');\n\n          if (activeAnimate) {\n            activeShape.stopAnimate();\n            activeShape.animate(originAttrs, 300);\n          } else {\n            activeShape.attr(originAttrs);\n          }\n\n          activeShape.setZIndex(0);\n          activeShape.set('_originAttrs', null);\n        }\n      });\n      var preHighlightShapes = self.get('preHighlightShapes');\n\n      if (preHighlightShapes) {\n        var shapes = shapeContainer.get('children');\n        Util.each(shapes, function (shape) {\n          if (!shape.get('selected')) {\n            var originAttrs = shape.get('_originAttrs');\n\n            if (originAttrs) {\n              if (activeAnimate) {\n                shape.stopAnimate();\n                shape.animate(originAttrs, 300);\n              } else {\n                shape.attr(originAttrs);\n              }\n\n              shape.setZIndex(0);\n              shape.set('_originAttrs', null);\n            }\n          }\n        });\n      } // 恢复原来排序\n\n\n      var children = shapeContainer.get('children');\n      children.sort(function (obj1, obj2) {\n        return obj1._INDEX - obj2._INDEX;\n      });\n      self.set('activeShapes', null);\n      self.set('preHighlightShapes', null);\n    }\n  },\n  getGroupShapesByPoint: function getGroupShapesByPoint(point) {\n    var self = this;\n    var shapeContainer = self.get('shapeContainer');\n    var activeShapes = [];\n\n    if (shapeContainer) {\n      var xField = self.getXScale().field;\n      var shapes = self.getShapes();\n\n      var originObj = self._getOriginByPoint(point);\n\n      Util.each(shapes, function (shape) {\n        var origin = shape.get('origin');\n\n        if (shape.get('visible') && origin) {\n          // 有可能不是图形，而是label文本，所以判断一下\n          var shapeXValue = origin[FIELD_ORIGIN][xField];\n\n          if (shapeXValue === originObj[xField]) {\n            activeShapes.push(shape);\n          }\n        }\n      });\n    }\n\n    return activeShapes;\n  },\n  getSingleShapeByPoint: function getSingleShapeByPoint(point) {\n    var self = this;\n    var shapeContainer = self.get('shapeContainer');\n    var canvas = shapeContainer.get('canvas');\n    var pixelRatio = canvas.get('pixelRatio');\n    var result;\n\n    if (shapeContainer) {\n      result = shapeContainer.getShape(point.x * pixelRatio, point.y * pixelRatio);\n    }\n\n    if (result && result.get('origin')) {\n      return result;\n    }\n  },\n  highlightShapes: function highlightShapes(_highlightShapes, highlightCfg) {\n    var self = this;\n\n    if (!Util.isArray(_highlightShapes)) {\n      _highlightShapes = [_highlightShapes];\n    }\n\n    var preHighlightShapes = self.get('activeShapes'); // 获取上次被激活的 shapes\n\n    if (!isChange(preHighlightShapes, _highlightShapes)) {\n      return;\n    }\n\n    if (preHighlightShapes) {\n      self.clearActivedShapes();\n    }\n\n    var shapes = self.getShapes();\n    var activedOptions = self.get('activedOptions');\n    var activeAnimate = activedOptions && activedOptions.animate;\n    var activeStyle = activedOptions && activedOptions.style;\n    Util.each(shapes, function (shape) {\n      var changeAttrs = {};\n      shape.stopAnimate();\n\n      if (Util.indexOf(_highlightShapes, shape) !== -1) {\n        Util.mix(changeAttrs, activeStyle, highlightCfg);\n        shape.setZIndex(1); // 提前\n      } else {\n        Util.mix(changeAttrs, {\n          fillOpacity: 0.3,\n          // @2018-07-11 by blue.lb 由于线图只有stoke，fillOpacity不生效，最好还是直接改成整个图形透明度opacity\n          opacity: 0.3\n        });\n        shape.setZIndex(0);\n      }\n\n      var originAttrs = getOriginAttrs(changeAttrs, shape);\n      shape.setSilent('_originAttrs', originAttrs);\n\n      if (activeAnimate) {\n        shape.animate(changeAttrs, 300);\n      } else {\n        shape.attr(changeAttrs);\n      }\n    });\n    self.set('preHighlightShapes', _highlightShapes);\n    self.set('activeShapes', _highlightShapes);\n  }\n};\nmodule.exports = ActiveMixin;\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview the interaction when geom was selected\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar FIELD_ORIGIN = '_origin';\n\nfunction isSameShape(shape1, shape2) {\n  if (Util.isNil(shape1) || Util.isNil(shape2)) {\n    return false;\n  }\n\n  var shape1Origin = shape1.get('origin');\n  var shape2Origin = shape2.get('origin');\n  return Util.isEqual(shape1Origin, shape2Origin);\n}\n\nfunction getOriginAttrs(selectedCfg, shape) {\n  var originAttrs = {};\n  Util.each(selectedCfg, function (v, k) {\n    if (k === 'transform') {\n      k = 'matrix';\n    }\n\n    var originValue = shape.attr(k);\n\n    if (Util.isArray(originValue)) {\n      originValue = Util.cloneDeep(originValue); // 缓存原来的属性，由于 .attr('matrix') 是数组，所以此处需要深度复制\n    }\n\n    originAttrs[k] = originValue;\n  });\n  return originAttrs;\n}\n\nvar SelectMixin = {\n  _isAllowSelect: function _isAllowSelect() {\n    var isAllowSelect = this.get('allowSelect');\n\n    if (Util.isNil(isAllowSelect)) {\n      var type = this.get('type');\n      var coord = this.get('coord');\n      var coordType = coord && coord.type;\n\n      if (type === 'interval' && coordType === 'theta') {\n        // 饼图默认可以进行选中\n        return true;\n      }\n    } else {\n      // 用户设置了 select 配置\n      return isAllowSelect;\n    }\n\n    return false;\n  },\n  _onClick: function _onClick(ev) {\n    var self = this;\n\n    if (self._isAllowSelect()) {\n      // 允许选中下才执行\n      self.clearActivedShapes(); // 清除hover效果\n\n      var shape = ev.shape;\n      var shapeContainer = self.get('shapeContainer');\n\n      if (shape && !shape.get('animating') && shapeContainer.contain(shape)) {\n        self.setShapeSelected(shape);\n      }\n    }\n  },\n  _bindSelectedAction: function _bindSelectedAction() {\n    var self = this;\n    var view = self.get('view');\n    var type = self.get('type');\n    view.on(type + ':click', Util.wrapBehavior(self, '_onClick'));\n  },\n  _offSelectedAction: function _offSelectedAction() {\n    var self = this;\n    var view = self.get('view');\n    var type = self.get('type');\n    view.off(type + ':click', Util.getWrapBehavior(self, '_onClick'));\n  },\n  _setShapeStatus: function _setShapeStatus(shape, status) {\n    var self = this;\n    var view = self.get('view');\n    var selectedOptions = self.get('selectedOptions') || {};\n    var animate = selectedOptions.animate !== false; // 默认允许动画\n\n    var canvas = view.get('canvas');\n    shape.set('selected', status);\n    var shapeData = shape.get('origin');\n\n    if (status) {\n      // 选中状态\n      var shapeName = shapeData.shape || self.getDefaultValue('shape');\n\n      if (Util.isArray(shapeName)) {\n        shapeName = shapeName[0];\n      }\n\n      var shapeFactory = self.get('shapeFactory');\n      var cfg = Util.mix({\n        geom: self,\n        point: shapeData\n      }, selectedOptions);\n      var selectedStyle = shapeFactory.getSelectedCfg(shapeName, cfg);\n      Util.mix(selectedStyle, cfg.style); // 用户设置的优先级更高\n\n      if (!shape.get('_originAttrs')) {\n        // 缓存原有属性\n        if (shape.get('animating')) {\n          // 停止动画\n          shape.stopAnimate();\n        }\n\n        shape.set('_originAttrs', getOriginAttrs(selectedStyle, shape));\n      }\n\n      if (animate) {\n        shape.animate(selectedStyle, 300);\n      } else {\n        shape.attr(selectedStyle);\n        canvas.draw();\n      }\n    } else {\n      var originAttrs = shape.get('_originAttrs');\n      shape.set('_originAttrs', null);\n\n      if (animate) {\n        shape.animate(originAttrs, 300);\n      } else {\n        shape.attr(originAttrs);\n        canvas.draw();\n      }\n    }\n  },\n  setShapeSelected: function setShapeSelected(shape) {\n    var self = this;\n\n    var selectedShapes = self._getSelectedShapes();\n\n    var selectedOptions = self.get('selectedOptions') || {};\n    var cancelable = selectedOptions.cancelable !== false; // 选中状态是否允许取消，默认允许\n\n    if (selectedOptions.mode === 'multiple') {\n      // 支持多选\n      if (Util.indexOf(selectedShapes, shape) === -1) {\n        selectedShapes.push(shape);\n\n        self._setShapeStatus(shape, true);\n      } else if (cancelable) {\n        // 图形已经被选中并且选中状态允许取消选中\n        Util.Array.remove(selectedShapes, shape);\n\n        self._setShapeStatus(shape, false);\n      }\n    } else {\n      var selectedShape = selectedShapes[0];\n\n      if (cancelable) {\n        // 如果允许取消，则选中null\n        shape = isSameShape(selectedShape, shape) ? null : shape;\n      }\n\n      if (!isSameShape(selectedShape, shape)) {\n        if (selectedShape) {\n          self._setShapeStatus(selectedShape, false);\n        }\n\n        if (shape) {\n          self._setShapeStatus(shape, true);\n        }\n      }\n    }\n  },\n  clearSelected: function clearSelected() {\n    var self = this;\n    var shapeContainer = self.get('shapeContainer');\n\n    if (shapeContainer && !shapeContainer.get('destroyed')) {\n      var selectedShapes = self._getSelectedShapes();\n\n      Util.each(selectedShapes, function (shape) {\n        self._setShapeStatus(shape, false);\n\n        shape.set('_originAttrs', null);\n      });\n    }\n  },\n\n  /**\n   * 设置记录对应的图形选中\n   * @param {Object} record 选中的记录\n   * @chainable\n   * @return {Geom} 返回当前的 Geometry\n   */\n  setSelected: function setSelected(record) {\n    var self = this;\n    var shapes = self.getShapes();\n    Util.each(shapes, function (shape) {\n      var origin = shape.get('origin');\n\n      if (origin && origin[FIELD_ORIGIN] === record) {\n        self.setShapeSelected(shape);\n      }\n    });\n    return this;\n  },\n  _getSelectedShapes: function _getSelectedShapes() {\n    var self = this;\n    var shapes = self.getShapes();\n    var selectedShapes = [];\n    Util.each(shapes, function (shape) {\n      if (shape.get('selected')) {\n        selectedShapes.push(shape);\n      }\n    });\n    self.set('selectedShapes', selectedShapes);\n    return selectedShapes;\n  }\n};\nmodule.exports = SelectMixin;\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nmodule.exports = function (field) {\n  if (Util.isArray(field)) {\n    return field;\n  }\n\n  if (Util.isString(field)) {\n    return field.split('*');\n  }\n\n  return [field];\n};\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 度量的控制器\n * @author dxq613@gmail.com\n */\nvar Scale = __webpack_require__(74);\n\nvar Util = __webpack_require__(0);\n\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\nvar TYPES = {\n  LINEAR: 'linear',\n  CAT: 'cat',\n  TIME: 'time'\n};\n\nvar ScaleController =\n/*#__PURE__*/\nfunction () {\n  function ScaleController(cfg) {\n    // defs 列定义\n    this.defs = {};\n    this.viewTheme = {\n      scales: {}\n    }; // filtered fields\n\n    this.filters = {};\n    Util.assign(this, cfg);\n  }\n\n  var _proto = ScaleController.prototype;\n\n  _proto._getDef = function _getDef(field) {\n    var defs = this.defs;\n    var viewTheme = this.viewTheme;\n    var def = null;\n\n    if (viewTheme.scales[field] || defs[field]) {\n      def = Util.mix({}, viewTheme.scales[field]); // 处理覆盖属性的问题\n\n      Util.each(defs[field], function (v, k) {\n        if (Util.isNil(v)) {\n          delete def[k];\n        } else {\n          def[k] = v;\n        }\n      });\n\n      if (this.filters[field]) {\n        delete def.min;\n        delete def.max;\n      }\n    }\n\n    return def;\n  };\n\n  _proto._getDefaultType = function _getDefaultType(field, data) {\n    var type = TYPES.LINEAR;\n    var value = Util.Array.firstValue(data, field);\n\n    if (Util.isArray(value)) {\n      value = value[0];\n    }\n\n    if (dateRegex.test(value)) {\n      type = TYPES.TIME;\n    } else if (Util.isString(value)) {\n      type = TYPES.CAT;\n    }\n\n    return type;\n  };\n\n  _proto._getScaleCfg = function _getScaleCfg(type, field, data) {\n    var cfg = {\n      field: field\n    };\n    var values = Util.Array.values(data, field);\n    cfg.values = values;\n\n    if (!Scale.isCategory(type) && type !== 'time') {\n      var range = Util.Array.getRange(values);\n      cfg.min = range.min;\n      cfg.max = range.max;\n      cfg.nice = true;\n    }\n\n    if (type === 'time') {\n      cfg.nice = false;\n    }\n\n    return cfg;\n  };\n\n  _proto.createScale = function createScale(field, data) {\n    var self = this;\n\n    var def = self._getDef(field);\n\n    var scale; // 如果数据为空直接返回常量度量\n\n    if (!data || !data.length) {\n      if (def && def.type) {\n        scale = Scale[def.type](def);\n      } else {\n        scale = Scale.identity({\n          value: field,\n          field: field.toString(),\n          values: [field]\n        });\n      }\n\n      return scale;\n    }\n\n    var firstValue = Util.Array.firstValue(data, field);\n\n    if (Util.isNumber(field) || Util.isNil(firstValue) && !def) {\n      scale = Scale.identity({\n        value: field,\n        field: field.toString(),\n        values: [field]\n      });\n    } else {\n      // 如果已经定义过这个度量\n      var type;\n\n      if (def) {\n        type = def.type;\n      }\n\n      type = type || self._getDefaultType(field, data);\n\n      var cfg = self._getScaleCfg(type, field, data);\n\n      if (def) {\n        Util.mix(cfg, def);\n      }\n\n      scale = Scale[type](cfg);\n    }\n\n    return scale;\n  };\n\n  return ScaleController;\n}();\n\nmodule.exports = ScaleController;\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The controller of coordinate\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar Coord = __webpack_require__(343);\n\nvar CoordController =\n/*#__PURE__*/\nfunction () {\n  function CoordController(option) {\n    this.type = 'rect';\n    this.actions = [];\n    this.cfg = {};\n    Util.mix(this, option);\n    this.option = option || {};\n  }\n\n  var _proto = CoordController.prototype;\n\n  _proto.reset = function reset(coordOption) {\n    this.actions = coordOption.actions || [];\n    this.type = coordOption.type;\n    this.cfg = coordOption.cfg;\n    this.option.actions = this.actions;\n    this.option.type = this.type;\n    this.option.cfg = this.cfg;\n    return this;\n  };\n\n  _proto._execActions = function _execActions(coord) {\n    var actions = this.actions;\n    Util.each(actions, function (action) {\n      var m = action[0];\n      coord[m](action[1], action[2]);\n    });\n  };\n\n  _proto.hasAction = function hasAction(actionName) {\n    var actions = this.actions;\n    var rst = false;\n    Util.each(actions, function (action) {\n      if (actionName === action[0]) {\n        rst = true;\n        return false;\n      }\n    });\n    return rst;\n  };\n  /**\n   * 创建坐标系对象\n   * @param  {Object} start 坐标系起始点\n   * @param  {Object} end   坐标系结束点\n   * @return {Function} 坐标系的构造函数\n   */\n\n\n  _proto.createCoord = function createCoord(start, end) {\n    var self = this;\n    var type = self.type;\n    var cfg = self.cfg;\n    var C; // 构造函数\n\n    var coord;\n    var coordCfg = Util.mix({\n      start: start,\n      end: end\n    }, cfg);\n\n    if (type === 'theta') {\n      // definition of theta coord\n      C = Coord.Polar;\n\n      if (!self.hasAction('transpose')) {\n        self.transpose(); // 极坐标，同时transpose\n      }\n\n      coord = new C(coordCfg);\n      coord.type = type;\n    } else {\n      C = Coord[Util.upperFirst(type || '')] || Coord.Rect;\n      coord = new C(coordCfg);\n    }\n\n    self._execActions(coord);\n\n    return coord;\n  };\n\n  _proto.rotate = function rotate(angle) {\n    angle = angle * Math.PI / 180;\n    this.actions.push(['rotate', angle]);\n    return this;\n  };\n\n  _proto.reflect = function reflect(dim) {\n    this.actions.push(['reflect', dim]);\n    return this;\n  };\n\n  _proto.scale = function scale(sx, sy) {\n    this.actions.push(['scale', sx, sy]);\n    return this;\n  };\n\n  _proto.transpose = function transpose() {\n    this.actions.push(['transpose']);\n    return this;\n  };\n\n  return CoordController;\n}();\n\nmodule.exports = CoordController;\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @fileOverview the entry of coordinate\n * @author sima.zhang1990@gmail.com\n */\n\nvar Coord = __webpack_require__(44);\n\nCoord.Cartesian = __webpack_require__(344);\nCoord.Rect = Coord.Cartesian;\nCoord.Polar = __webpack_require__(345);\nCoord.Helix = __webpack_require__(346);\nmodule.exports = Coord;\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @fileOverview the class of Cartesian Coordinate\n * @author sima.zhang\n */\n\n\nvar mix = __webpack_require__(8);\n\nvar Base = __webpack_require__(44);\n\nvar Cartesian =\n/*#__PURE__*/\nfunction (_Base) {\n  _inherits(Cartesian, _Base);\n\n  _createClass(Cartesian, [{\n    key: \"getDefaultCfg\",\n\n    /**\n     * @override\n     */\n    value: function getDefaultCfg() {\n      var cfg = _get(_getPrototypeOf(Cartesian.prototype), \"getDefaultCfg\", this).call(this);\n\n      return mix({}, cfg, {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        type: 'cartesian',\n        isRect: true\n      });\n    }\n  }]);\n\n  function Cartesian(cfg) {\n    var _this;\n\n    _classCallCheck(this, Cartesian);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cartesian).call(this, cfg));\n\n    _this._init();\n\n    return _this;\n  }\n\n  _createClass(Cartesian, [{\n    key: \"_init\",\n    value: function _init() {\n      var start = this.start,\n          end = this.end;\n      var x = {\n        start: start.x,\n        end: end.x\n      };\n      var y = {\n        start: start.y,\n        end: end.y\n      };\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"convertPoint\",\n    value: function convertPoint(point) {\n      var x;\n      var y;\n\n      if (this.isTransposed) {\n        x = point.y;\n        y = point.x;\n      } else {\n        x = point.x;\n        y = point.y;\n      }\n\n      return {\n        x: this.convertDim(x, 'x'),\n        y: this.convertDim(y, 'y')\n      };\n    }\n  }, {\n    key: \"invertPoint\",\n    value: function invertPoint(point) {\n      var x = this.invertDim(point.x, 'x');\n      var y = this.invertDim(point.y, 'y');\n\n      if (this.isTransposed) {\n        return {\n          x: y,\n          y: x\n        };\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }]);\n\n  return Cartesian;\n}(Base);\n\nmodule.exports = Cartesian;\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @fileOverview the class of Polar Coordinate\n * @author sima.zhang\n */\n\n\nvar MatrixUtil = __webpack_require__(43);\n\nvar isNumberEqual = __webpack_require__(35);\n\nvar mix = __webpack_require__(8);\n\nvar Base = __webpack_require__(44);\n\nvar mat3 = MatrixUtil.mat3;\nvar vec2 = MatrixUtil.vec2;\nvar vec3 = MatrixUtil.vec3;\n\nvar Polar =\n/*#__PURE__*/\nfunction (_Base) {\n  _inherits(Polar, _Base);\n\n  _createClass(Polar, [{\n    key: \"getDefaultCfg\",\n    value: function getDefaultCfg() {\n      var cfg = _get(_getPrototypeOf(Polar.prototype), \"getDefaultCfg\", this).call(this);\n\n      return mix({}, cfg, {\n        startAngle: -Math.PI / 2,\n        endAngle: Math.PI * 3 / 2,\n        innerRadius: 0,\n        type: 'polar',\n        isPolar: true\n      });\n    }\n  }]);\n\n  function Polar(cfg) {\n    var _this;\n\n    _classCallCheck(this, Polar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Polar).call(this, cfg));\n\n    _this._init();\n\n    return _this;\n  }\n\n  _createClass(Polar, [{\n    key: \"_init\",\n    value: function _init() {\n      var radius = this.radius;\n      var innerRadius = this.innerRadius;\n      var center = this.center;\n      var startAngle = this.startAngle;\n      var endAngle = this.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += Math.PI * 2;\n      }\n\n      this.endAngle = endAngle;\n      var oneBox = this.getOneBox();\n      var oneWidth = oneBox.maxX - oneBox.minX;\n      var oneHeight = oneBox.maxY - oneBox.minY;\n      var left = Math.abs(oneBox.minX) / oneWidth;\n      var top = Math.abs(oneBox.minY) / oneHeight;\n      var width = this.width;\n      var height = this.height;\n      var maxRadius;\n      var circleCentre;\n\n      if (height / oneHeight > width / oneWidth) {\n        // width为主\n        maxRadius = width / oneWidth;\n        circleCentre = {\n          x: center.x - (0.5 - left) * width,\n          y: center.y - (0.5 - top) * maxRadius * oneHeight\n        };\n      } else {\n        // height为主\n        maxRadius = height / oneHeight;\n        circleCentre = {\n          x: center.x - (0.5 - left) * maxRadius * oneWidth,\n          y: center.y - (0.5 - top) * height\n        };\n      }\n\n      if (!radius) {\n        radius = maxRadius;\n      } else if (radius > 0 && radius <= 1) {\n        radius = maxRadius * radius;\n      } else if (radius <= 0 || radius > maxRadius) {\n        radius = maxRadius;\n      }\n\n      var x = {\n        start: startAngle,\n        end: endAngle\n      };\n      var y = {\n        start: innerRadius * radius,\n        end: radius\n      };\n      this.x = x;\n      this.y = y;\n      this.radius = radius;\n      this.circleCentre = circleCentre;\n      this.center = circleCentre;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.circleCentre;\n    }\n  }, {\n    key: \"getOneBox\",\n    value: function getOneBox() {\n      var startAngle = this.startAngle;\n      var endAngle = this.endAngle;\n\n      if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n        return {\n          minX: -1,\n          maxX: 1,\n          minY: -1,\n          maxY: 1\n        };\n      }\n\n      var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n      var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n\n      for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n        xs.push(Math.cos(i));\n        ys.push(Math.sin(i));\n      }\n\n      return {\n        minX: Math.min.apply(Math, xs),\n        maxX: Math.max.apply(Math, xs),\n        minY: Math.min.apply(Math, ys),\n        maxY: Math.max.apply(Math, ys)\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      return this.radius;\n    }\n  }, {\n    key: \"convertPoint\",\n    value: function convertPoint(point) {\n      var center = this.getCenter();\n      var x = this.isTransposed ? point.y : point.x;\n      var y = this.isTransposed ? point.x : point.y;\n      x = this.convertDim(x, 'x');\n      y = this.convertDim(y, 'y');\n      return {\n        x: center.x + Math.cos(x) * y,\n        y: center.y + Math.sin(x) * y\n      };\n    }\n  }, {\n    key: \"invertPoint\",\n    value: function invertPoint(point) {\n      var center = this.getCenter();\n      var vPoint = [point.x - center.x, point.y - center.y];\n      var x = this.x;\n      var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      mat3.rotate(m, m, x.start);\n      var vStart = [1, 0, 0];\n      vec3.transformMat3(vStart, vStart, m);\n      vStart = [vStart[0], vStart[1]];\n      var angle = vec2.angleTo(vStart, vPoint, x.end < x.start);\n\n      if (isNumberEqual(angle, Math.PI * 2)) {\n        angle = 0;\n      }\n\n      var radius = vec2.length(vPoint);\n      var xPercent = angle / (x.end - x.start);\n      xPercent = x.end - x.start > 0 ? xPercent : -xPercent;\n      var yPercent = this.invertDim(radius, 'y');\n      var rst = {};\n      rst.x = this.isTransposed ? yPercent : xPercent;\n      rst.y = this.isTransposed ? xPercent : yPercent;\n      return rst;\n    }\n  }]);\n\n  return Polar;\n}(Base);\n\nmodule.exports = Polar;\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @fileOverview the class of Helix Coordinate\n * @author sima.zhang\n */\n\n\nvar MatrixUtil = __webpack_require__(43);\n\nvar isNumberEqual = __webpack_require__(35);\n\nvar mix = __webpack_require__(8);\n\nvar Base = __webpack_require__(44);\n\nvar vec2 = MatrixUtil.vec2;\n\nvar Helix =\n/*#__PURE__*/\nfunction (_Base) {\n  _inherits(Helix, _Base);\n\n  _createClass(Helix, [{\n    key: \"getDefaultCfg\",\n    value: function getDefaultCfg() {\n      var cfg = _get(_getPrototypeOf(Helix.prototype), \"getDefaultCfg\", this).call(this);\n\n      return mix({}, cfg, {\n        startAngle: 1.25 * Math.PI,\n        endAngle: 7.25 * Math.PI,\n        innerRadius: 0,\n        type: 'helix',\n        isHelix: true\n      });\n    }\n  }]);\n\n  function Helix(cfg) {\n    var _this;\n\n    _classCallCheck(this, Helix);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Helix).call(this, cfg));\n\n    _this._init();\n\n    return _this;\n  }\n\n  _createClass(Helix, [{\n    key: \"_init\",\n    value: function _init() {\n      var width = this.width;\n      var height = this.height;\n      var radius = this.radius;\n      var innerRadius = this.innerRadius;\n      var startAngle = this.startAngle;\n      var endAngle = this.endAngle;\n      var index = (endAngle - startAngle) / (2 * Math.PI) + 1; // 螺线圈数\n\n      var maxRadius = Math.min(width, height) / 2;\n\n      if (radius && radius >= 0 && radius <= 1) {\n        maxRadius = maxRadius * radius;\n      }\n\n      var d = Math.floor(maxRadius * (1 - innerRadius) / index);\n      var a = d / (Math.PI * 2); // 螺线系数\n\n      var x = {\n        start: startAngle,\n        end: endAngle\n      };\n      var y = {\n        start: innerRadius * maxRadius,\n        end: innerRadius * maxRadius + d * 0.99\n      };\n      this.a = a;\n      this.d = d;\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.center;\n    }\n    /**\n     * 将百分比数据变成屏幕坐标\n     * @param  {Object} point 归一化的点坐标\n     * @return {Object}       返回对应的屏幕坐标\n     */\n\n  }, {\n    key: \"convertPoint\",\n    value: function convertPoint(point) {\n      var a = this.a;\n      var center = this.center;\n      var x;\n      var y;\n\n      if (this.isTransposed) {\n        x = point.y;\n        y = point.x;\n      } else {\n        x = point.x;\n        y = point.y;\n      }\n\n      var thi = this.convertDim(x, 'x');\n      var r = a * thi;\n      var newY = this.convertDim(y, 'y');\n      return {\n        x: center.x + Math.cos(thi) * (r + newY),\n        y: center.y + Math.sin(thi) * (r + newY)\n      };\n    }\n    /**\n     * 将屏幕坐标点还原成百分比数据\n     * @param  {Object} point 屏幕坐标\n     * @return {Object}       返回对应的归一化后的数据\n     */\n\n  }, {\n    key: \"invertPoint\",\n    value: function invertPoint(point) {\n      var center = this.center;\n      var a = this.a;\n      var d = this.d + this.y.start;\n      var v = vec2.subtract([], [point.x, point.y], [center.x, center.y]);\n      var thi = vec2.angleTo(v, [1, 0], true);\n      var rMin = thi * a; // 坐标与原点的连线在第一圈上的交点，最小r值\n\n      if (vec2.length(v) < rMin) {\n        // 坐标与原点的连线不可能小于最小r值，但不排除因小数计算产生的略小于rMin的情况\n        rMin = vec2.length(v);\n      }\n\n      var index = Math.floor((vec2.length(v) - rMin) / d); // 当前点位于第index圈\n\n      thi = 2 * index * Math.PI + thi;\n      var r = a * thi;\n      var newY = vec2.length(v) - r;\n      newY = isNumberEqual(newY, 0) ? 0 : newY;\n      var x = this.invertDim(thi, 'x');\n      var y = this.invertDim(newY, 'y');\n      x = isNumberEqual(x, 0) ? 0 : x;\n      y = isNumberEqual(y, 0) ? 0 : y;\n      var rst = {};\n      rst.x = this.isTransposed ? y : x;\n      rst.y = this.isTransposed ? x : y;\n      return rst;\n    }\n  }]);\n\n  return Helix;\n}(Base);\n\nmodule.exports = Helix;\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The controller of axis\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar _require = __webpack_require__(21),\n    Axis = _require.Axis;\n\nvar vec2 = Util.MatrixUtil.vec2;\n\nfunction formatTicks(ticks) {\n  var tmp = [];\n\n  if (ticks.length > 0) {\n    tmp = ticks.slice(0);\n    var first = tmp[0];\n    var last = tmp[tmp.length - 1];\n\n    if (first.value !== 0) {\n      tmp.unshift({\n        value: 0\n      });\n    }\n\n    if (last.value !== 1) {\n      tmp.push({\n        value: 1\n      });\n    }\n  }\n\n  return tmp;\n}\n\nfunction fillAxisTicks(ticks, isLinear, gridCentering) {\n  var result = [];\n  if (ticks.length < 1) return result;\n\n  if (ticks.length >= 2 && isLinear && gridCentering) {\n    result.push({\n      text: '',\n      tickValue: '',\n      value: 0\n    });\n  }\n\n  if (ticks[0].value !== 0) {\n    result.push({\n      text: '',\n      tickValue: '',\n      value: 0\n    });\n  }\n\n  result = result.concat(ticks);\n\n  if (result[result.length - 1].value !== 1) {\n    result.push({\n      text: '',\n      tickValue: '',\n      value: 1\n    });\n  }\n\n  return result;\n}\n\nfunction getDefaultValueFromPosition(position, val) {\n  if (val === void 0) {\n    val = 0;\n  }\n\n  if (position === 'middle') {\n    val = 0.5;\n  }\n\n  if (position.indexOf('%') !== -1) {\n    val = parseInt(position, 10) / 100;\n  }\n\n  return val;\n}\n\nvar AxisController =\n/*#__PURE__*/\nfunction () {\n  function AxisController(cfg) {\n    this.visible = true;\n    this.canvas = null;\n    this.container = null;\n    this.coord = null;\n    this.options = null;\n    this.axes = [];\n    Util.mix(this, cfg);\n  }\n\n  var _proto = AxisController.prototype;\n\n  _proto._isHide = function _isHide(field) {\n    // 对应的坐标轴是否隐藏\n    var options = this.options;\n\n    if (options && options[field] === false) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto._getMiddleValue = function _getMiddleValue(curValue, ticks, index, isLinear) {\n    if (curValue === 0 && !isLinear) {\n      return 0;\n    }\n\n    if (curValue === 1) {\n      return 1;\n    }\n\n    var nextValue = ticks[index + 1].value;\n\n    if (!isLinear && nextValue === 1) {\n      return 1;\n    }\n\n    return (curValue + nextValue) / 2;\n  };\n\n  _proto._getLineRange = function _getLineRange(coord, scale, dimType, index) {\n    var start;\n    var end;\n    var isVertical;\n    var field = scale.field;\n    var options = this.options;\n    var position = '';\n\n    if (options[field] && options[field].position) {\n      position = options[field].position;\n    } // TODO middle & percentage for position\n\n\n    if (dimType === 'x') {\n      // x轴的坐标轴,底部的横坐标\n      var y = position === 'top' ? 1 : 0;\n      y = getDefaultValueFromPosition(position, y);\n      start = {\n        x: 0,\n        y: y\n      };\n      end = {\n        x: 1,\n        y: y\n      };\n      isVertical = false;\n    } else {\n      // y轴坐标轴\n      if (index) {\n        // 多轴的情况\n        var x = position === 'left' ? 0 : 1;\n        x = getDefaultValueFromPosition(position, x);\n        start = {\n          x: x,\n          y: 0\n        };\n        end = {\n          x: x,\n          y: 1\n        };\n      } else {\n        // 单个y轴，或者第一个y轴\n        var _x = position === 'right' ? 1 : 0;\n\n        _x = getDefaultValueFromPosition(position, _x);\n        start = {\n          x: _x,\n          y: 0\n        };\n        end = {\n          x: _x,\n          y: 1\n        };\n      }\n\n      isVertical = true;\n    }\n\n    start = coord.convert(start);\n    end = coord.convert(end);\n    return {\n      start: start,\n      end: end,\n      isVertical: isVertical\n    };\n  };\n\n  _proto._getLineCfg = function _getLineCfg(coord, scale, dimType, index) {\n    var factor;\n\n    var range = this._getLineRange(coord, scale, dimType, index);\n\n    var isVertical = range.isVertical; // 标识该坐标轴是否是纵坐标\n\n    var start = range.start;\n    var end = range.end;\n    var center = coord.center;\n\n    if (coord.isTransposed) {\n      isVertical = !isVertical;\n    }\n\n    if (isVertical && start.x > center.x || !isVertical && start.y > center.y) {\n      factor = 1;\n    } else {\n      factor = -1;\n    }\n\n    return {\n      isVertical: isVertical,\n      factor: factor,\n      start: start,\n      end: end\n    };\n  }; // 获取圆弧坐标轴配置项信息\n\n\n  _proto._getCircleCfg = function _getCircleCfg(coord) {\n    var circleCfg = {};\n    var rangeX = coord.x;\n    var rangeY = coord.y;\n    var isReflectY = rangeY.start > rangeY.end;\n    var start;\n\n    if (coord.isTransposed) {\n      start = {\n        x: isReflectY ? 0 : 1,\n        y: 0\n      };\n    } else {\n      start = {\n        x: 0,\n        y: isReflectY ? 0 : 1\n      };\n    }\n\n    start = coord.convert(start);\n    var center = coord.circleCentre;\n    var startVector = [start.x - center.x, start.y - center.y];\n    var normalVector = [1, 0];\n    var startAngle;\n\n    if (start.y > center.y) {\n      startAngle = vec2.angle(startVector, normalVector);\n    } else {\n      startAngle = vec2.angle(startVector, normalVector) * -1;\n    }\n\n    var endAngle = startAngle + (rangeX.end - rangeX.start);\n    circleCfg.startAngle = startAngle;\n    circleCfg.endAngle = endAngle;\n    circleCfg.center = center;\n    circleCfg.radius = Math.sqrt(Math.pow(start.x - center.x, 2) + Math.pow(start.y - center.y, 2));\n    circleCfg.inner = coord.innerRadius || 0;\n    return circleCfg;\n  };\n\n  _proto._getRadiusCfg = function _getRadiusCfg(coord) {\n    var startAngle = coord.x.start;\n    var factor = startAngle < 0 ? -1 : 1;\n    var start;\n    var end;\n\n    if (coord.isTransposed) {\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 1,\n        y: 0\n      };\n    } else {\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 0,\n        y: 1\n      };\n    }\n\n    return {\n      factor: factor,\n      start: coord.convert(start),\n      end: coord.convert(end)\n    };\n  }; // 确定坐标轴的位置\n\n\n  _proto._getAxisPosition = function _getAxisPosition(coord, dimType, index, field) {\n    var position = ''; // 用户自己定义了 position\n\n    var options = this.options; // const VALID_POSITIONS = [\n    //   'top',\n    //   'left',\n    //   'right',\n    //   'bottom'\n    // ];\n\n    if (options[field] && options[field].position) {\n      position = options[field].position; // if (VALID_POSITIONS.indexOf(position) > -1) {\n      //   return position;\n      // }\n    } else {\n      var coordType = coord.type;\n\n      if (coord.isRect) {\n        if (dimType === 'x') {\n          position = 'bottom';\n        } else if (dimType === 'y') {\n          if (index) {\n            position = 'right';\n          } else {\n            position = 'left';\n          }\n        }\n      } else if (coordType === 'helix') {\n        position = 'helix';\n      } else if (dimType === 'x') {\n        position = coord.isTransposed ? 'radius' : 'circle';\n      } else {\n        position = coord.isTransposed ? 'circle' : 'radius';\n      }\n    }\n\n    return position;\n  }; // 获取坐标轴构成的配置信息\n\n\n  _proto._getAxisDefaultCfg = function _getAxisDefaultCfg(coord, scale, type, position) {\n    var self = this;\n    var viewTheme = self.viewTheme;\n    var cfg = {};\n    var options = self.options;\n    var field = scale.field;\n    cfg = Util.deepMix({}, viewTheme.axis[position], cfg, options[field]);\n    cfg.viewTheme = viewTheme;\n\n    if (cfg.title) {\n      var title = Util.isPlainObject(cfg.title) ? cfg.title : {};\n      title.text = title.text || scale.alias || field;\n      Util.deepMix(cfg, {\n        title: title\n      });\n    }\n\n    cfg.ticks = scale.getTicks();\n\n    if (coord.isPolar && !scale.isCategory) {\n      if (type === 'x' && Math.abs(coord.endAngle - coord.startAngle) === Math.PI * 2) {\n        cfg.ticks.pop();\n      }\n    }\n\n    cfg.coord = coord;\n\n    if (cfg.label && Util.isNil(cfg.label.autoRotate)) {\n      cfg.label.autoRotate = true; // 允许自动旋转，避免重叠\n    }\n\n    if (options.hasOwnProperty('xField') && options.xField.hasOwnProperty('grid')) {\n      if (cfg.position === 'left') {\n        Util.deepMix(cfg, options.xField);\n      }\n    }\n\n    return cfg;\n  }; // 确定坐标轴的配置信息\n\n\n  _proto._getAxisCfg = function _getAxisCfg(coord, scale, verticalScale, dimType, index, viewId) {\n    if (index === void 0) {\n      index = '';\n    }\n\n    var self = this;\n\n    var position = self._getAxisPosition(coord, dimType, index, scale.field);\n\n    var cfg = self._getAxisDefaultCfg(coord, scale, dimType, position);\n\n    if (!Util.isEmpty(cfg.grid) && verticalScale) {\n      // 生成 gridPoints\n      var gridPoints = [];\n      var tickValues = [];\n      var verticalTicks = formatTicks(verticalScale.getTicks()); // 没有垂直的坐标点时不会只栅格\n\n      if (verticalTicks.length) {\n        var ticks = fillAxisTicks(cfg.ticks, scale.isLinear, cfg.grid.align === 'center');\n        Util.each(ticks, function (tick, idx) {\n          tickValues.push(tick.tickValue);\n          var subPoints = [];\n          var value = tick.value;\n\n          if (cfg.grid.align === 'center') {\n            value = self._getMiddleValue(value, ticks, idx, scale.isLinear);\n          }\n\n          if (!Util.isNil(value)) {\n            var rangeX = coord.x;\n            var rangeY = coord.y;\n            Util.each(verticalTicks, function (verticalTick) {\n              var x = dimType === 'x' ? value : verticalTick.value;\n              var y = dimType === 'x' ? verticalTick.value : value;\n              var point = coord.convert({\n                x: x,\n                y: y\n              });\n\n              if (coord.isPolar) {\n                var center = coord.circleCentre;\n\n                if (rangeY.start > rangeY.end) {\n                  y = 1 - y;\n                }\n\n                point.flag = rangeX.start > rangeX.end ? 0 : 1;\n                point.radius = Math.sqrt(Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2));\n              }\n\n              subPoints.push(point);\n            });\n            gridPoints.push({\n              _id: viewId + '-' + dimType + index + '-grid-' + tick.tickValue,\n              points: subPoints\n            });\n          }\n        });\n      }\n\n      cfg.grid.items = gridPoints;\n      cfg.grid.tickValues = tickValues;\n    }\n\n    cfg.type = scale.type;\n    return cfg;\n  };\n\n  _proto._getHelixCfg = function _getHelixCfg(coord) {\n    var helixCfg = {};\n    var a = coord.a;\n    var startAngle = coord.startAngle;\n    var endAngle = coord.endAngle;\n    var index = 100;\n    var crp = [];\n\n    for (var i = 0; i <= index; i++) {\n      var point = coord.convert({\n        x: i / 100,\n        y: 0\n      });\n      crp.push(point.x);\n      crp.push(point.y);\n    }\n\n    var axisStart = coord.convert({\n      x: 0,\n      y: 0\n    });\n    helixCfg.a = a;\n    helixCfg.startAngle = startAngle;\n    helixCfg.endAngle = endAngle;\n    helixCfg.crp = crp;\n    helixCfg.axisStart = axisStart;\n    helixCfg.center = coord.center;\n    helixCfg.inner = coord.y.start; // 内半径\n\n    return helixCfg;\n  };\n\n  _proto._drawAxis = function _drawAxis(coord, scale, verticalScale, dimType, viewId, xAxis, index) {\n    var container = this.container;\n    var canvas = this.canvas;\n    var C; // 坐标轴类\n\n    var appendCfg; // 每个坐标轴 start end 等绘制边界的信息\n\n    if (coord.type === 'cartesian') {\n      C = Axis.Line;\n      appendCfg = this._getLineCfg(coord, scale, dimType, index);\n    } else if (coord.type === 'helix' && dimType === 'x') {\n      C = Axis.Helix;\n      appendCfg = this._getHelixCfg(coord);\n    } else if (dimType === 'x') {\n      C = Axis.Circle;\n      appendCfg = this._getCircleCfg(coord);\n    } else {\n      C = Axis.Line;\n      appendCfg = this._getRadiusCfg(coord);\n    }\n\n    var cfg = this._getAxisCfg(coord, scale, verticalScale, dimType, index, viewId);\n\n    cfg = Util.mix({}, cfg, appendCfg);\n\n    if (dimType === 'y' && xAxis && xAxis.get('type') === 'circle') {\n      cfg.circle = xAxis;\n    }\n\n    cfg._id = viewId + '-' + dimType;\n\n    if (!Util.isNil(index)) {\n      cfg._id = viewId + '-' + dimType + index;\n    }\n\n    Util.mix(cfg, {\n      canvas: canvas,\n      group: container\n    });\n    var axis = new C(cfg);\n    axis.render();\n    this.axes.push(axis);\n    return axis;\n  };\n\n  _proto.createAxis = function createAxis(xScale, yScales, viewId) {\n    var self = this;\n    var coord = this.coord;\n    var coordType = coord.type; // theta坐标系默认不绘制坐标轴\n\n    if (coordType !== 'theta' && !(coordType === 'polar' && coord.isTransposed)) {\n      var xAxis;\n\n      if (xScale && !self._isHide(xScale.field)) {\n        xAxis = self._drawAxis(coord, xScale, yScales[0], 'x', viewId); // 绘制 x 轴\n      }\n\n      if (!Util.isEmpty(yScales) && coordType !== 'helix') {\n        Util.each(yScales, function (yScale, index) {\n          if (!self._isHide(yScale.field)) {\n            self._drawAxis(coord, yScale, xScale, 'y', viewId, xAxis, index);\n          }\n        });\n      }\n    }\n  };\n\n  _proto.changeVisible = function changeVisible(visible) {\n    var axes = this.axes;\n    Util.each(axes, function (axis) {\n      axis.set('visible', visible);\n    });\n  };\n\n  _proto.clear = function clear() {\n    var self = this;\n    var axes = self.axes;\n    Util.each(axes, function (axis) {\n      axis.clear();\n    });\n    self.axes = [];\n  };\n\n  return AxisController;\n}();\n\nmodule.exports = AxisController;\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nvar Guide = __webpack_require__(349);\n\nvar GuideController =\n/*#__PURE__*/\nfunction () {\n  function GuideController(cfg) {\n    this.guides = [];\n    this.options = [];\n    this.xScales = null;\n    this.yScales = null;\n    this.view = null;\n    this.viewTheme = null;\n    this.frontGroup = null;\n    this.backGroup = null;\n    Util.mix(this, cfg);\n  }\n\n  var _proto = GuideController.prototype;\n\n  _proto._creatGuides = function _creatGuides() {\n    var self = this;\n    var options = this.options;\n    var xScales = this.xScales;\n    var yScales = this.yScales;\n    var view = this.view;\n    var viewTheme = this.viewTheme;\n\n    if (this.backContainer && view) {\n      this.backGroup = this.backContainer.addGroup({\n        viewId: view.get('_id')\n      });\n    }\n\n    if (this.frontContainer && view) {\n      this.frontGroup = this.frontContainer.addGroup({\n        viewId: view.get('_id')\n      });\n    }\n\n    options.forEach(function (option) {\n      var type = option.type;\n      var config = Util.deepMix({\n        xScales: xScales,\n        yScales: yScales,\n        viewTheme: viewTheme\n      }, viewTheme ? viewTheme.guide[type] : {}, option);\n      type = Util.upperFirst(type);\n      var guide = new Guide[type](config);\n      self.guides.push(guide);\n    });\n    return self.guides;\n  };\n\n  _proto.line = function line(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'line'\n    }, cfg));\n    return this;\n  };\n\n  _proto.arc = function arc(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'arc'\n    }, cfg));\n    return this;\n  };\n\n  _proto.text = function text(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'text'\n    }, cfg));\n    return this;\n  };\n\n  _proto.image = function image(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'image'\n    }, cfg));\n    return this;\n  };\n\n  _proto.region = function region(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'region'\n    }, cfg));\n    return this;\n  };\n\n  _proto.regionFilter = function regionFilter(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'regionFilter'\n    }, cfg));\n    return this;\n  };\n\n  _proto.dataMarker = function dataMarker(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'dataMarker'\n    }, cfg));\n    return this;\n  };\n\n  _proto.dataRegion = function dataRegion(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'dataRegion'\n    }, cfg));\n    return this;\n  };\n\n  _proto.html = function html(cfg) {\n    if (cfg === void 0) {\n      cfg = {};\n    }\n\n    this.options.push(Util.mix({\n      type: 'html'\n    }, cfg));\n    return this;\n  };\n\n  _proto.render = function render(coord) {\n    var self = this;\n    var view = self.view;\n    var viewData = view && view.get('data');\n\n    var guides = self._creatGuides();\n\n    Util.each(guides, function (guide) {\n      var container;\n\n      if (guide.get('top')) {\n        // 默认 guide 绘制到 backPlot，用户也可以声明 top: true，显示在最上层\n        container = self.frontGroup || self.frontContainer;\n      } else {\n        container = self.backGroup || self.backContainer;\n      }\n\n      guide.render(coord, container, viewData, view);\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.options = [];\n    this.reset();\n  };\n\n  _proto.changeVisible = function changeVisible(visible) {\n    var guides = this.guides;\n    Util.each(guides, function (guide) {\n      guide.changeVisible(visible);\n    });\n  };\n\n  _proto.reset = function reset() {\n    var guides = this.guides;\n    Util.each(guides, function (guide) {\n      guide.clear();\n    });\n    this.guides = [];\n    this.backGroup && this.backGroup.remove();\n    this.frontGroup && this.frontGroup.remove();\n  };\n\n  return GuideController;\n}();\n\nmodule.exports = GuideController;\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _require = __webpack_require__(21),\n    Guide = _require.Guide;\n\nvar RegionFilter = __webpack_require__(350);\n\nGuide.RegionFilter = RegionFilter;\nmodule.exports = Guide;\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar Guide = __webpack_require__(15);\n\nvar _require = __webpack_require__(25),\n    Path = _require.Path;\n\nvar RegionFilter =\n/*#__PURE__*/\nfunction (_Guide) {\n  _inheritsLoose(RegionFilter, _Guide);\n\n  function RegionFilter() {\n    return _Guide.apply(this, arguments) || this;\n  }\n\n  var _proto = RegionFilter.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Guide.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      name: 'regionFilter',\n      zIndex: 1,\n      top: true,\n      start: null,\n      end: null,\n      color: null,\n      apply: null,\n      style: {\n        opacity: 1\n      }\n    });\n  };\n\n  _proto.render = function render(coord, group, viewData, view) {\n    var self = this;\n    var layer = group.addGroup();\n    layer.name = 'guide-region-filter';\n    view.once('afterpaint', function () {\n      // 2018-08-08 by blue.lb padding为auto时，会导致重新绘制一次，这时候layer已经被销毁了\n      if (layer.get('destroyed')) return;\n\n      self._drawShapes(view, layer);\n\n      var clip = self._drawClip(coord);\n\n      layer.attr({\n        clip: clip\n      });\n      self.set('clip', clip);\n      self.get('appendInfo') && layer.setSilent('appendInfo', self.get('appendInfo'));\n      self.set('el', layer);\n    });\n  };\n\n  _proto._drawShapes = function _drawShapes(view, layer) {\n    var self = this;\n    var output = [];\n    var geoms = view.getAllGeoms();\n    geoms.map(function (geom) {\n      var shapes = geom.getShapes();\n      var geomType = geom.get('type');\n\n      var filter = self._geomFilter(geomType);\n\n      if (filter) {\n        shapes.map(function (shape) {\n          var shapeType = shape.type; // const shapeAttr = Util.mix({}, shape.attr());\n\n          var shapeAttr = Util.cloneDeep(shape.attr());\n\n          self._adjustDisplay(shapeAttr);\n\n          var s = layer.addShape(shapeType, {\n            attrs: shapeAttr\n          });\n          output.push(s);\n          return shape;\n        });\n      }\n\n      return geom;\n    });\n    return output;\n  };\n\n  _proto._drawClip = function _drawClip(coord) {\n    var self = this;\n    var start = self.parsePoint(coord, self.get('start'));\n    var end = self.parsePoint(coord, self.get('end'));\n    var path = [['M', start.x, start.y], ['L', end.x, start.y], ['L', end.x, end.y], ['L', start.x, end.y], ['z']];\n    var clip = new Path({\n      attrs: {\n        path: path,\n        opacity: 1\n      }\n    });\n    return clip;\n  };\n\n  _proto._adjustDisplay = function _adjustDisplay(attr) {\n    var self = this;\n    var color = self.get('color');\n\n    if (attr.fill) {\n      attr.fill = attr.fillStyle = color;\n    }\n\n    attr.stroke = attr.strokeStyle = color;\n  };\n\n  _proto._geomFilter = function _geomFilter(geomType) {\n    var self = this;\n    var apply = self.get('apply');\n\n    if (apply) {\n      return Util.contains(apply, geomType);\n    }\n\n    return true;\n  };\n\n  _proto.clear = function clear() {\n    _Guide.prototype.clear.call(this);\n\n    var clip = this.get('clip');\n    clip && clip.remove();\n  };\n\n  return RegionFilter;\n}(Guide);\n\nmodule.exports = RegionFilter;\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nvar _require = __webpack_require__(21),\n    Legend = _require.Legend;\n\nvar Tail = __webpack_require__(352);\n\nvar Shape = __webpack_require__(18);\n\nvar bboxOfBackPlot = __webpack_require__(166);\n\nvar plotRange2BBox = __webpack_require__(168);\n\nvar FIELD_ORIGIN = '_origin';\nvar MARKER_SIZE = 4.5;\nvar requireAnimationFrameFn = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nfunction _snapEqual(v1, v2, scale) {\n  var isEqual;\n\n  if (Util.isNil(scale)) {\n    return false;\n  }\n\n  v1 = scale.translate(v1);\n  v2 = scale.translate(v2);\n\n  if (scale.isCategory) {\n    isEqual = v1 === v2;\n  } else {\n    isEqual = Math.abs(v1 - v2) <= 1;\n  }\n\n  return isEqual;\n}\n\nfunction findGeom(geoms, value) {\n  var rst;\n  Util.each(geoms, function (geom) {\n    if (geom.get('visible')) {\n      var yScale = geom.getYScale();\n\n      if (yScale.field === value) {\n        rst = geom;\n        return;\n      }\n    }\n  });\n  return rst;\n}\n\nvar LegendController =\n/*#__PURE__*/\nfunction () {\n  function LegendController(cfg) {\n    var self = this;\n    self.options = {};\n    Util.mix(self, cfg);\n    self.clear();\n    var chart = self.chart;\n    self.container = chart.get('frontPlot');\n    self.plotRange = chart.get('plotRange');\n  }\n\n  var _proto = LegendController.prototype;\n\n  _proto.clear = function clear() {\n    var legends = this.legends;\n    this.backRange = null;\n    Util.each(legends, function (legendItems) {\n      Util.each(legendItems, function (legend) {\n        legend.destroy();\n      });\n    });\n    this.legends = {};\n  }; // 获取坐标轴等背景元素占的范围，防止遮挡坐标轴\n\n\n  _proto.getBackRange = function getBackRange() {\n    var backRange = this.backRange;\n\n    if (!backRange) {\n      var backPlot = this.chart.get('backPlot');\n      backRange = bboxOfBackPlot(backPlot, plotRange2BBox(this.chart.get('plotRange')));\n      var plotRange = this.plotRange;\n\n      if (backRange.maxX - backRange.minX < plotRange.br.x - plotRange.tl.x && backRange.maxY - backRange.minY < plotRange.br.y - plotRange.tl.y) {\n        // 如果背景小于则直接使用 plotRange\n        backRange = {\n          minX: plotRange.tl.x,\n          minY: plotRange.tl.y,\n          maxX: plotRange.br.x,\n          maxY: plotRange.br.y\n        };\n      }\n\n      this.backRange = backRange;\n    }\n\n    return backRange;\n  };\n\n  _proto._isFieldInView = function _isFieldInView(field, value, view) {\n    var flag = false;\n    var scales = view.get('scales');\n    var fieldScale = scales[field];\n\n    if (fieldScale && fieldScale.values) {\n      flag = Util.inArray(fieldScale.values, value);\n    }\n\n    return flag;\n  };\n\n  _proto._bindClickEvent = function _bindClickEvent(legend, scale, filterVals) {\n    var self = this;\n    var chart = self.chart;\n    var views = chart.get('views');\n    var field = scale.field;\n    var options = self.options;\n    legend.on('itemclick', function (ev) {\n      if (options.onClick && options.defaultClickHandlerEnabled !== true) {\n        options.onClick(ev);\n      } else {\n        // if 'defaultClickHandlerEnabled' is true the default click behavior would be worked.\n        var item = ev.item;\n        var checked = ev.checked;\n        var isSingleSelected = legend.get('selectedMode') === 'single'; // 图例的选中模式\n\n        var clickedValue = item.dataValue; // import: 需要取该图例项原始的数值\n\n        if (checked) {\n          Util.Array.remove(filterVals, clickedValue);\n\n          if (self._isFieldInView(field, clickedValue, chart)) {\n            chart.filter(field, function (field) {\n              return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\n            });\n          }\n\n          Util.each(views, function (view) {\n            if (self._isFieldInView(field, clickedValue, view)) {\n              view.filter(field, function (field) {\n                return isSingleSelected ? field === clickedValue : !Util.inArray(filterVals, field);\n              });\n            }\n          });\n        } else if (!isSingleSelected) {\n          filterVals.push(clickedValue);\n\n          if (self._isFieldInView(field, clickedValue, chart)) {\n            chart.filter(field, function (field) {\n              return !Util.inArray(filterVals, field);\n            });\n          }\n\n          Util.each(views, function (view) {\n            if (self._isFieldInView(field, clickedValue, view)) {\n              view.filter(field, function (field) {\n                return !Util.inArray(filterVals, field);\n              });\n            }\n          });\n        }\n\n        if (options.onClick) {\n          options.onClick(ev);\n        }\n\n        chart.set('keepLegend', true); // 图例不重新渲染\n\n        chart.set('keepPadding', true); // 边框不重新计算\n\n        chart.repaint();\n        chart.set('keepPadding', false);\n        chart.set('keepLegend', false);\n      }\n    });\n  };\n\n  _proto._bindClickEventForMix = function _bindClickEventForMix(legend) {\n    var self = this;\n    var chart = self.chart;\n    var geoms = chart.getAllGeoms();\n    legend.on('itemclick', function (ev) {\n      var value = ev.item.value;\n      var checked = ev.checked;\n\n      if (checked) {\n        Util.each(geoms, function (geom) {\n          var field = geom.getYScale().field;\n\n          if (field === value) {\n            geom.show();\n          }\n        });\n      } else {\n        Util.each(geoms, function (geom) {\n          var field = geom.getYScale().field;\n\n          if (field === value) {\n            geom.hide();\n          }\n        });\n      }\n    });\n  };\n\n  _proto._filterLabels = function _filterLabels(shape, geom, visible) {\n    if (shape.get('gLabel')) {\n      shape.get('gLabel').set('visible', visible);\n    } else {\n      var labelCfg = geom.get('labelCfg');\n\n      if (labelCfg && labelCfg.fields && labelCfg.fields.length > 0) {\n        var xScale = geom.getXScale();\n        var yScale = geom.getYScale();\n        var xField = xScale.field;\n        var yField = yScale.field;\n\n        var shapeData = shape.get('origin')._origin;\n\n        var labelContainer = geom.get('labelContainer');\n        var labels = labelContainer.get('labelsGroup').get('children');\n        Util.each(labels, function (label) {\n          var labelData = label.get('origin') || [];\n\n          if (labelData[xField] === shapeData[xField] && labelData[yField] === shapeData[yField]) {\n            label.set('visible', visible);\n            shape.set('gLabel', label);\n          }\n        });\n      }\n    }\n  };\n\n  _proto._bindFilterEvent = function _bindFilterEvent(legend, scale) {\n    var self = this;\n    var chart = this.chart;\n    var field = scale.field;\n    legend.on('itemfilter', function (ev) {\n      var range = ev.range;\n      chart.filterShape(function (obj, shape, geom) {\n        // @2018-12-21 by blue.lb 由于数值0直接被类型转换为false，这里需要做更精确一点的判断\n        if (!Util.isNil(obj[field])) {\n          var filtered = obj[field] >= range[0] && obj[field] <= range[1]; // shape 带 label，则还需要隐藏 label\n\n          self._filterLabels(shape, geom, filtered);\n\n          return filtered;\n        }\n\n        return true;\n      });\n      var geoms = chart.getAllGeoms() || [];\n\n      var _loop = function _loop(i) {\n        var geom = geoms[i];\n\n        if (geom.get('type') === 'heatmap') {\n          requireAnimationFrameFn(function () {\n            geom.drawWithRange(range);\n          });\n        }\n      };\n\n      for (var i = 0; i < geoms.length; i++) {\n        _loop(i);\n      }\n    });\n  };\n\n  _proto._getShapeData = function _getShapeData(shape) {\n    var originData = shape.get('origin');\n\n    if (Util.isArray(originData)) {\n      originData = originData[0];\n    }\n\n    return originData[FIELD_ORIGIN];\n  };\n\n  _proto._bindHoverEvent = function _bindHoverEvent(legend, field) {\n    var self = this;\n    var chart = self.chart;\n    var geoms = chart.getAllGeoms();\n    var options = self.options;\n    var canvas = chart.get('canvas');\n    legend.on('itemhover', function (ev) {\n      var value = ev.item.value;\n      var pre = self.pre;\n\n      if (!pre) {\n        Util.each(geoms, function (geom) {\n          var shapeContainer = geom.get('shapeContainer');\n          var shapes = geom.getShapes();\n          var activeShapes = [];\n\n          if (field) {\n            var scale = geom.get('scales')[field];\n            Util.each(shapes, function (shape) {\n              var origin = self._getShapeData(shape);\n\n              if (origin && _snapEqual(origin[field], value, scale)) {\n                activeShapes.push(shape);\n              }\n            });\n          } else if (geom.getYScale().field === value) {\n            activeShapes = shapes;\n          }\n\n          if (!Util.isEmpty(activeShapes)) {\n            ev.shapes = activeShapes;\n            ev.geom = geom;\n\n            if (options.onHover) {\n              options.onHover(ev);\n              shapeContainer.sort();\n              canvas.draw();\n            } else {\n              geom.setShapesActived(activeShapes);\n            }\n          }\n        });\n        self.pre = value;\n      } else if (pre === value) {\n        return;\n      }\n    });\n    legend.on('itemunhover', function (ev) {\n      self.pre = null;\n\n      if (options.onUnhover) {\n        options.onUnhover(ev);\n      }\n\n      Util.each(geoms, function (geom) {\n        if (geom.get('activeShapes')) {\n          geom.clearActivedShapes();\n          canvas.draw();\n        }\n      });\n    });\n  };\n\n  _proto._isFiltered = function _isFiltered(scale, filterVals, scaleValue) {\n    if (!scale.isCategory) {\n      return true;\n    }\n\n    var rst = true;\n    scaleValue = scale.invert(scaleValue);\n    Util.each(filterVals, function (val) {\n      if (scale.getText(val) === scale.getText(scaleValue)) {\n        rst = false;\n        return false;\n      }\n    });\n    return rst;\n  };\n\n  _proto._alignLegend = function _alignLegend(legend, pre, region, position) {\n    var self = this;\n    var viewTheme = self.viewTheme;\n    var container = self.container;\n    var canvas = container.get('canvas');\n    var width = canvas.get('width');\n    var height = canvas.get('height');\n    var totalRegion = self.totalRegion;\n    var plotRange = self.plotRange;\n    var backRange = self.getBackRange(); // 背景占得范围\n\n    var offsetX = legend.get('offset')[0] || 0;\n    var offsetY = legend.get('offset')[1] || 0; // const offset = Util.isNil(legend.get('offset')) ? MARGIN : legend.get('offset');\n\n    var legendHeight = legend.getHeight();\n    var legendWidth = legend.getWidth();\n    var borderMargin = viewTheme.legend.margin;\n    var innerMargin = viewTheme.legend.legendMargin;\n    var legendNum = self.legends[position].length;\n    var posArray = position.split('-');\n    var x = 0;\n    var y = 0;\n    var tempoRegion = legendNum > 1 ? totalRegion : region;\n\n    if (posArray[0] === 'left' || posArray[0] === 'right') {\n      height = plotRange.br.y;\n      x = self._getXAlign(posArray[0], width, region, backRange, legendWidth, borderMargin);\n\n      if (pre) {\n        // @2018-10-19 by blue.lb 由于legend中并不存在y属性，这里需要先获取group再获取y值\n        y = pre.get('group').get('y') + pre.getHeight() + innerMargin;\n      } else {\n        y = self._getYAlignVertical(posArray[1], height, tempoRegion, backRange, 0, borderMargin, canvas.get('height'));\n      }\n    } else if (posArray[0] === 'top' || posArray[0] === 'bottom') {\n      y = self._getYAlignHorizontal(posArray[0], height, region, backRange, legendHeight, borderMargin);\n\n      if (pre) {\n        var preWidth = pre.getWidth(); // @2018-10-19 by blue.lb 由于legend中并不存在x属性，这里需要先获取group再获取x值\n\n        x = pre.get('group').get('x') + preWidth + innerMargin;\n      } else {\n        x = self._getXAlign(posArray[1], width, tempoRegion, backRange, 0, borderMargin);\n        if (posArray[1] === 'right') x = plotRange.br.x - tempoRegion.totalWidth;\n      }\n    }\n\n    legend.move(x + offsetX, y + offsetY);\n  };\n\n  _proto._getXAlign = function _getXAlign(pos, width, region, backRange, legendWidth, borderMargin) {\n    var x = pos === 'left' ? backRange.minX - legendWidth - borderMargin[3] : backRange.maxX + borderMargin[1];\n\n    if (pos === 'center') {\n      x = (width - region.totalWidth) / 2;\n    }\n\n    return x;\n  };\n\n  _proto._getYAlignHorizontal = function _getYAlignHorizontal(pos, height, region, backRange, legendHeight, borderMargin) {\n    var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : backRange.maxY + borderMargin[2];\n    return y;\n  };\n\n  _proto._getYAlignVertical = function _getYAlignVertical(pos, height, region, backRange, legendHeight, borderMargin, canvasHeight) {\n    var y = pos === 'top' ? backRange.minY - legendHeight - borderMargin[0] : height - region.totalHeight;\n\n    if (pos === 'center') {\n      y = (canvasHeight - region.totalHeight) / 2;\n    }\n\n    return y;\n  };\n\n  _proto._getSubRegion = function _getSubRegion(legends) {\n    var maxWidth = 0;\n    var maxHeight = 0;\n    var totalWidth = 0;\n    var totalHeight = 0;\n    Util.each(legends, function (legend) {\n      var width = legend.getWidth();\n      var height = legend.getHeight();\n\n      if (maxWidth < width) {\n        maxWidth = width;\n      }\n\n      totalWidth += width;\n\n      if (maxHeight < height) {\n        maxHeight = height;\n      }\n\n      totalHeight += height;\n    });\n    return {\n      maxWidth: maxWidth,\n      totalWidth: totalWidth,\n      maxHeight: maxHeight,\n      totalHeight: totalHeight\n    };\n  };\n\n  _proto._getRegion = function _getRegion() {\n    var self = this;\n    var viewTheme = self.viewTheme;\n    var legends = self.legends;\n    var innerMargin = viewTheme.legend.legendMargin;\n    var subs = [];\n    var totalWidth = 0;\n    var totalHeight = 0;\n    Util.each(legends, function (legendItems) {\n      var subRegion = self._getSubRegion(legendItems);\n\n      subs.push(subRegion);\n      totalWidth += subRegion.totalWidth + innerMargin;\n      totalHeight += subRegion.totalHeight + innerMargin;\n    });\n    return {\n      totalWidth: totalWidth,\n      totalHeight: totalHeight,\n      subs: subs\n    };\n  };\n\n  _proto._addCategoryLegend = function _addCategoryLegend(scale, attr, geom, filterVals, position) {\n    var self = this;\n    var field = scale.field;\n    var legendOptions = self.options;\n    var fieldOption = legendOptions[field];\n\n    if (fieldOption) {\n      legendOptions = fieldOption;\n    }\n\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var container = self.container;\n    var items = [];\n    var ticks = scale.getTicks();\n    var isByAttr = true;\n    var shapeType = geom.get('shapeType') || 'point';\n    var shape = geom.getDefaultValue('shape') || 'circle';\n\n    if (legendOptions[field] && legendOptions[field].marker) {\n      // 用户为 field 对应的图例定义了 marker\n      shape = legendOptions[field].marker;\n      shapeType = 'point';\n      isByAttr = false;\n    } else if (legendOptions.marker) {\n      shape = legendOptions.marker;\n      shapeType = 'point';\n      isByAttr = false;\n    }\n\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n    var canvas = chart.get('canvas');\n    var plotRange = self.plotRange;\n    var posArray = position.split('-');\n    var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\n    Util.each(ticks, function (tick) {\n      var text = tick.text;\n      var name = text;\n      var scaleValue = tick.value;\n      var value = scale.invert(scaleValue);\n      var cfg = {\n        isInCircle: geom.isInCircle()\n      };\n      var checked = filterVals ? self._isFiltered(scale, filterVals, scaleValue) : true;\n      var colorAttr = geom.getAttr('color');\n      var shapeAttr = geom.getAttr('shape');\n\n      if (colorAttr) {\n        // 存在颜色映射\n        if (colorAttr.callback && colorAttr.callback.length > 1) {\n          // 多参数映射，阻止程序报错\n          var restArgs = Array(colorAttr.callback.length - 1).fill('');\n          cfg.color = colorAttr.mapping.apply(colorAttr, [value].concat(restArgs)).join('') || viewTheme.defaultColor;\n        } else {\n          cfg.color = colorAttr.mapping(value).join('') || viewTheme.defaultColor;\n        }\n      }\n\n      if (isByAttr && shapeAttr) {\n        // 存在形状映射\n        if (shapeAttr.callback && shapeAttr.callback.length > 1) {\n          // 多参数映射，阻止程序报错\n          var _restArgs = Array(shapeAttr.callback.length - 1).fill('');\n\n          shape = shapeAttr.mapping.apply(shapeAttr, [value].concat(_restArgs)).join('');\n        } else {\n          shape = shapeAttr.mapping(value).join('');\n        }\n      }\n\n      var shapeObject = Shape.getShapeFactory(shapeType);\n      var marker = shapeObject.getMarkerCfg(shape, cfg);\n\n      if (Util.isFunction(shape)) {\n        marker.symbol = shape;\n      }\n\n      items.push({\n        value: name,\n        // 图例项显示文本的内容\n        dataValue: value,\n        // 图例项对应原始数据中的数值\n        checked: checked,\n        marker: marker\n      });\n    });\n    var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions[field] || legendOptions, {\n      viewId: chart.get('_id'),\n      maxLength: maxLength,\n      items: items,\n      container: container,\n      position: [0, 0]\n    });\n\n    if (legendCfg.title) {\n      Util.deepMix(legendCfg, {\n        title: {\n          text: scale.alias || scale.field\n        }\n      });\n    }\n\n    var legend;\n\n    if (self._isTailLegend(legendOptions, geom)) {\n      legendCfg.chart = self.chart;\n      legendCfg.geom = geom;\n      legend = new Tail(legendCfg);\n    } else {\n      if (legendOptions.useHtml) {\n        var canvasEle = container.get('canvas').get('el');\n        container = legendOptions.container;\n\n        if (Util.isString(container) && /^\\#/.test(container)) {\n          // 如果传入 dom 节点的 id\n          var id = container.replace('#', '');\n          container = document.getElementById(id);\n        }\n\n        if (!container) {\n          container = canvasEle.parentNode;\n        }\n\n        legendCfg.container = container;\n        if (legendCfg.legendStyle === undefined) legendCfg.legendStyle = {};\n        legendCfg.legendStyle.CONTAINER_CLASS = {\n          position: 'absolute',\n          overflow: 'auto',\n          'z-index': canvasEle.style.zIndex === '' ? 1 : parseInt(canvasEle.style.zIndex, 10) + 1\n        };\n\n        if (legendOptions.flipPage) {\n          legendCfg.legendStyle.CONTAINER_CLASS.height = posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto';\n          legendCfg.legendStyle.CONTAINER_CLASS.width = !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto';\n          legend = new Legend.CatPageHtml(legendCfg);\n        } else {\n          legend = new Legend.CatHtml(legendCfg);\n        }\n      } else {\n        legend = new Legend.Category(legendCfg);\n      }\n    }\n\n    self._bindClickEvent(legend, scale, filterVals);\n\n    legends[position].push(legend);\n    return legend;\n  };\n\n  _proto._bindChartMove = function _bindChartMove(scale) {\n    var chart = this.chart;\n    var legends = this.legends;\n    chart.on('plotmove', function (ev) {\n      var selected = false;\n\n      if (ev.target) {\n        var origin = ev.target.get('origin');\n\n        if (origin) {\n          var data = origin[FIELD_ORIGIN] || origin[0][FIELD_ORIGIN];\n          var field = scale.field;\n\n          if (data) {\n            var value = data[field];\n            Util.each(legends, function (legendItems) {\n              Util.each(legendItems, function (legend) {\n                selected = true;\n                !legend.destroyed && legend.activate(value);\n              });\n            });\n          }\n        }\n      }\n\n      if (!selected) {\n        Util.each(legends, function (legendItems) {\n          Util.each(legendItems, function (legend) {\n            !legend.destroyed && legend.deactivate();\n          });\n        });\n      }\n    });\n  };\n\n  _proto._addContinuousLegend = function _addContinuousLegend(scale, attr, position) {\n    var self = this;\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var container = self.container;\n    var field = scale.field;\n    var ticks = scale.getTicks();\n    var items = [];\n    var legend;\n    var minValue;\n    var maxValue;\n    var viewTheme = self.viewTheme;\n    Util.each(ticks, function (tick) {\n      var scaleValue = tick.value;\n      var invertValue = scale.invert(scaleValue);\n      var attrValue = attr.mapping(invertValue).join('');\n      items.push({\n        value: tick.tickValue,\n        // tick.text\n        attrValue: attrValue,\n        color: attrValue,\n        scaleValue: scaleValue\n      });\n\n      if (scaleValue === 0) {\n        minValue = true;\n      }\n\n      if (scaleValue === 1) {\n        maxValue = true;\n      }\n    });\n\n    if (!minValue) {\n      items.push({\n        value: scale.min,\n        attrValue: attr.mapping(0).join(''),\n        color: attr.mapping(0).join(''),\n        scaleValue: 0\n      });\n    }\n\n    if (!maxValue) {\n      items.push({\n        value: scale.max,\n        attrValue: attr.mapping(1).join(''),\n        color: attr.mapping(1).join(''),\n        scaleValue: 1\n      });\n    }\n\n    var options = self.options;\n    var posArray = position.split('-');\n    var defaultCfg = viewTheme.legend[posArray[0]];\n\n    if (options && options.slidable === false || options[field] && options[field].slidable === false) {\n      defaultCfg = Util.mix({}, defaultCfg, viewTheme.legend.gradient);\n    }\n\n    var legendCfg = Util.deepMix({}, defaultCfg, options[field] || options, {\n      items: items,\n      attr: attr,\n      formatter: scale.formatter,\n      container: container,\n      position: [0, 0]\n    });\n\n    if (legendCfg.title) {\n      Util.deepMix(legendCfg, {\n        title: {\n          text: scale.alias || scale.field\n        }\n      });\n    }\n\n    if (attr.type === 'color') {\n      legend = new Legend.Color(legendCfg);\n    } else if (attr.type === 'size') {\n      if (options && options.sizeType === 'circle') legend = new Legend.CircleSize(legendCfg);else legend = new Legend.Size(legendCfg);\n    } else {\n      return;\n    }\n\n    self._bindFilterEvent(legend, scale);\n\n    legends[position].push(legend);\n    return legend;\n  };\n\n  _proto._isTailLegend = function _isTailLegend(opt, geom) {\n    if (opt.hasOwnProperty('attachLast') && opt.attachLast) {\n      var geomType = geom.get('type');\n      if (geomType === 'line' || geomType === 'lineStack' || geomType === 'area' || geomType === 'areaStack') return true;\n    }\n\n    return false;\n  };\n\n  _proto._adjustPosition = function _adjustPosition(position, isTailLegend) {\n    var pos;\n\n    if (isTailLegend) {\n      pos = 'right-top';\n    } else if (Util.isArray(position)) {\n      pos = String(position[0]) + '-' + String(position[1]);\n    } else {\n      var posArr = position.split('-');\n\n      if (posArr.length === 1) {\n        // 只用了left/right/bottom/top一个位置定位\n        if (posArr[0] === 'left') pos = 'left-bottom';\n        if (posArr[0] === 'right') pos = 'right-bottom';\n        if (posArr[0] === 'top') pos = 'top-center';\n        if (posArr[0] === 'bottom') pos = 'bottom-center';\n      } else {\n        pos = position;\n      }\n    }\n\n    return pos;\n  };\n\n  _proto.addLegend = function addLegend(scale, attr, geom, filterVals) {\n    var self = this;\n    var legendOptions = self.options;\n    var field = scale.field;\n    var fieldOption = legendOptions[field];\n    var viewTheme = self.viewTheme;\n\n    if (fieldOption === false) {\n      // 如果不显示此图例\n      return null;\n    }\n\n    if (fieldOption && fieldOption.custom) {\n      self.addCustomLegend(field);\n    } else {\n      var position = legendOptions.position || viewTheme.defaultLegendPosition;\n      position = self._adjustPosition(position, self._isTailLegend(legendOptions, geom));\n\n      if (fieldOption && fieldOption.position) {\n        // 如果对某个图例单独设置 position，则对 position 重新赋值\n        position = self._adjustPosition(fieldOption.position, self._isTailLegend(fieldOption, geom));\n      }\n\n      var legend;\n\n      if (scale.isLinear) {\n        legend = self._addContinuousLegend(scale, attr, position);\n      } else {\n        legend = self._addCategoryLegend(scale, attr, geom, filterVals, position);\n      }\n\n      if (legend) {\n        self._bindHoverEvent(legend, field);\n\n        legendOptions.reactive && self._bindChartMove(scale);\n      }\n    }\n  };\n  /**\n   * 自定义图例\n   * @param {string} field 自定义图例的数据字段名，可以为空\n   * @return {object} legend 自定义图例实例\n   */\n\n\n  _proto.addCustomLegend = function addCustomLegend(field) {\n    var self = this;\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n    var container = self.container;\n    var legendOptions = self.options;\n\n    if (field) {\n      legendOptions = legendOptions[field];\n    }\n\n    var position = legendOptions.position || viewTheme.defaultLegendPosition;\n    position = self._adjustPosition(position);\n    var legends = self.legends;\n    legends[position] = legends[position] || [];\n    var items = legendOptions.items;\n\n    if (!items) {\n      return;\n    }\n\n    var geoms = chart.getAllGeoms();\n    Util.each(items, function (item) {\n      var geom = findGeom(geoms, item.value);\n\n      if (!Util.isObject(item.marker)) {\n        item.marker = {\n          symbol: item.marker ? item.marker : 'circle',\n          fill: item.fill,\n          radius: MARKER_SIZE\n        };\n      } else {\n        item.marker.radius = item.marker.radius || MARKER_SIZE;\n      }\n\n      item.checked = Util.isNil(item.checked) ? true : item.checked;\n      item.geom = geom;\n    });\n    var canvas = chart.get('canvas');\n    var plotRange = self.plotRange;\n    var posArray = position.split('-');\n    var maxLength = posArray[0] === 'right' || posArray[0] === 'left' ? plotRange.bl.y - plotRange.tr.y : canvas.get('width');\n    var legendCfg = Util.deepMix({}, viewTheme.legend[posArray[0]], legendOptions, {\n      maxLength: maxLength,\n      items: items,\n      container: container,\n      position: [0, 0]\n    });\n    var legend;\n\n    if (legendOptions.useHtml) {\n      var htmlContainer = legendOptions.container;\n\n      if (/^\\#/.test(container)) {\n        // 如果传入 dom 节点的 id\n        var id = htmlContainer.replace('#', '');\n        htmlContainer = document.getElementById(id);\n      } else if (!htmlContainer) {\n        htmlContainer = container.get('canvas').get('el').parentNode;\n      }\n\n      legendCfg.container = htmlContainer;\n      if (legendCfg.legendStyle === undefined) legendCfg.legendStyle = {};\n\n      if (!legendCfg.legendStyle.CONTAINER_CLASS) {\n        legendCfg.legendStyle.CONTAINER_CLASS = {\n          height: posArray[0] === 'right' || posArray[0] === 'left' ? maxLength + 'px' : 'auto',\n          width: !(posArray[0] === 'right' || posArray[0] === 'left') ? maxLength + 'px' : 'auto',\n          position: 'absolute',\n          overflow: 'auto'\n        };\n      }\n\n      if (legendOptions.flipPage) legend = new Legend.CatPageHtml(legendCfg);else legend = new Legend.CatHtml(legendCfg);\n    } else legend = new Legend.Category(legendCfg);\n\n    legends[position].push(legend);\n    legend.on('itemclick', function (ev) {\n      if (legendOptions.onClick) {\n        // 用户自定义了图例点击事件\n        legendOptions.onClick(ev);\n      }\n    });\n\n    self._bindHoverEvent(legend);\n\n    return legend;\n  };\n\n  _proto.addMixedLegend = function addMixedLegend(scales, geoms) {\n    var self = this;\n    var items = [];\n    Util.each(scales, function (scale) {\n      var value = scale.field;\n      Util.each(geoms, function (geom) {\n        if (geom.getYScale() === scale && scale.values && scale.values.length > 0) {\n          var shapeType = geom.get('shapeType') || 'point';\n          var shape = geom.getDefaultValue('shape') || 'circle';\n          var shapeObject = Shape.getShapeFactory(shapeType);\n          var cfg = {\n            color: geom.getDefaultValue('color')\n          };\n          var marker = shapeObject.getMarkerCfg(shape, cfg);\n          var item = {\n            value: value,\n            marker: marker\n          };\n          items.push(item);\n        }\n      }); // end of geom loop\n    }); // end of scale loop\n\n    var options = {\n      custom: true,\n      items: items\n    };\n    self.options = Util.deepMix({}, options, self.options);\n    var legend = self.addCustomLegend();\n\n    self._bindClickEventForMix(legend);\n  };\n\n  _proto.alignLegends = function alignLegends() {\n    var self = this;\n    var legends = self.legends;\n\n    var totalRegion = self._getRegion(legends);\n\n    self.totalRegion = totalRegion;\n    var i = 0;\n    Util.each(legends, function (legendItems, position) {\n      var region =\n      /* self._getRegion(legendItems)*/\n      totalRegion.subs[i];\n      Util.each(legendItems, function (legend, index) {\n        var pre = legendItems[index - 1];\n\n        if (!(legend.get('useHtml') && !legend.get('autoPosition'))) {\n          self._alignLegend(legend, pre, region, position);\n        }\n      });\n      i++;\n    });\n    return this;\n  };\n\n  return LegendController;\n}();\n\nmodule.exports = LegendController;\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview The class of tail legend\n * @author Ye Liu\n */\nvar Util = __webpack_require__(0); // const Category = require('./category');\n\n\nvar Components = __webpack_require__(21);\n\nvar Global = __webpack_require__(7);\n\nvar Legend = Components.Legend;\nvar Category = Legend.Category;\n\nvar Tail =\n/*#__PURE__*/\nfunction (_Category) {\n  _inheritsLoose(Tail, _Category);\n\n  function Tail() {\n    return _Category.apply(this, arguments) || this;\n  }\n\n  var _proto = Tail.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Category.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      /**\n       * type标识\n       * @type {String}\n       */\n      type: 'tail-legend',\n\n      /**\n       * 布局方式\n       * horizontal 水平\n       * vertical 垂直\n       * @type {String}\n       */\n      layout: 'vertical',\n      autoLayout: true\n    });\n  };\n\n  _proto._addItem = function _addItem(item) {\n    var itemsGroup = this.get('itemsGroup');\n\n    var x = this._getNextX();\n\n    var y = 0;\n    var unCheckColor = this.get('unCheckColor');\n    var itemGroup = itemsGroup.addGroup({\n      x: 0,\n      y: 0,\n      value: item.value,\n      scaleValue: item.scaleValue,\n      checked: item.checked\n    });\n    itemGroup.translate(x, y);\n    itemGroup.set('viewId', itemsGroup.get('viewId'));\n    var textStyle = this.get('textStyle');\n    var wordSpace = this.get('_wordSpaceing');\n    var startX = 0;\n\n    if (item.marker) {\n      // 如果有marker添加marker\n      var markerAttrs = Util.mix({}, item.marker, {\n        x: item.marker.radius,\n        y: 0\n      });\n\n      if (!item.checked) {\n        if (markerAttrs.fill) {\n          markerAttrs.fill = unCheckColor;\n        }\n\n        if (markerAttrs.stroke) {\n          markerAttrs.stroke = unCheckColor;\n        }\n      }\n\n      var markerShape = itemGroup.addShape('marker', {\n        type: 'marker',\n        attrs: markerAttrs\n      });\n      markerShape.attr('cursor', 'pointer');\n      markerShape.name = 'legend-marker';\n      startX += markerShape.getBBox().width + wordSpace;\n    }\n\n    var textAttrs = Util.mix({}, textStyle, {\n      x: startX,\n      y: 0,\n      text: this._formatItemValue(item.value)\n    });\n\n    if (!item.checked) {\n      Util.mix(textAttrs, {\n        fill: unCheckColor\n      });\n    }\n\n    var textShape = itemGroup.addShape('text', {\n      attrs: textAttrs\n    });\n    textShape.attr('cursor', 'pointer');\n    textShape.name = 'legend-text';\n    this.get('appendInfo') && textShape.setSilent('appendInfo', this.get('appendInfo')); // 添加一个包围矩形，用于事件支持\n\n    var bbox = itemGroup.getBBox();\n    var itemWidth = this.get('itemWidth');\n    var wrapperShape = itemGroup.addShape('rect', {\n      attrs: {\n        x: x,\n        y: y - bbox.height / 2,\n        fill: '#fff',\n        fillOpacity: 0,\n        width: itemWidth || bbox.width,\n        height: bbox.height\n      }\n    });\n    wrapperShape.attr('cursor', 'pointer');\n    wrapperShape.setSilent('origin', item); // 保存图例项相关的数据，便于事件操作\n\n    wrapperShape.name = 'legend-item';\n    this.get('appendInfo') && wrapperShape.setSilent('appendInfo', this.get('appendInfo'));\n    itemGroup.name = 'legendGroup';\n    return itemGroup;\n  };\n\n  _proto._adjust = function _adjust() {\n    var self = this;\n    var geom = self.get('geom');\n\n    if (geom) {\n      var groupMatrix = self.get('group').attr('matrix');\n      groupMatrix[7] = 0;\n      var dataArray = self.get('geom').get('dataArray');\n      var groups = this.get('itemsGroup').get('children');\n      var index = 0;\n      Util.each(groups, function (groupItem) {\n        var dArray = dataArray[index];\n        var lastY = dArray[dArray.length - 1].y;\n\n        if (Util.isArray(lastY)) {\n          lastY = lastY[1];\n        }\n\n        var groupHeight = groupItem.getBBox().height;\n        var x = groupItem.get('x');\n        var y = lastY - groupHeight / 2;\n        groupItem.translate(x, y);\n        index++;\n      });\n\n      if (self.get('autoLayout')) {\n        self._antiCollision(groups);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    _Category.prototype.render.call(this);\n\n    var chart = this.get('chart');\n    chart.once('afterpaint', function () {\n      _this._adjust();\n    });\n  };\n\n  _proto._getPreviousY = function _getPreviousY(item) {\n    var y = item.attr('matrix')[7];\n    var height = item.getBBox().height;\n    return y + height;\n  };\n\n  _proto._adjustDenote = function _adjustDenote(group, start, end) {\n    var margin = Global.legend.legendMargin;\n    var x0 = -2;\n    var x2 = -margin * 2;\n    group.addShape('path', {\n      attrs: {\n        path: 'M' + x0 + ',' + start + 'L' + x2 + ',' + (end + 3),\n        lineWidth: 1,\n        lineDash: [2, 2],\n        stroke: '#999999'\n      }\n    });\n  };\n\n  _proto._antiCollision = function _antiCollision(items) {\n    var self = this;\n    items.sort(function (a, b) {\n      var ay = a.attr('matrix')[7];\n      var by = b.attr('matrix')[7];\n      return ay - by;\n    });\n    var overlapping = true;\n    var plotRange = self.get('chart').get('plotRange');\n    var startY = plotRange.tl.y;\n    var totalHeight = Math.abs(startY - plotRange.bl.y);\n    var elementHeight = items[0].getBBox().height;\n    var minY = Number.MIN_VALUE;\n    var maxY = 0;\n    var boxes = items.map(function (item) {\n      var y = item.attr('matrix')[7];\n\n      if (y > maxY) {\n        maxY = y;\n      }\n\n      if (y < minY) {\n        minY = y;\n      }\n\n      return {\n        size: item.getBBox().height,\n        targets: [y - startY]\n      };\n    });\n    minY -= startY;\n    var i = 0;\n\n    while (overlapping) {\n      for (var _i = 0; _i < boxes.length; _i++) {\n        var box = boxes[_i];\n        var target = (Math.min.apply(minY, box.targets) + Math.max.apply(minY, box.targets)) / 2;\n        box.pos = Math.min(Math.max(minY, target - box.size / 2), totalHeight - box.size);\n      }\n\n      overlapping = false;\n      i = boxes.length;\n\n      while (i--) {\n        if (i > 0) {\n          var previous = boxes[i - 1];\n          var current = boxes[i];\n\n          if (previous.pos + previous.size > current.pos) {\n            // overlapping\n            previous.size += current.size;\n            previous.targets = previous.targets.concat(current.targets);\n            boxes.splice(i, 1);\n            overlapping = true;\n          }\n        }\n      } // end of while i\n\n    } // end of while\n    // adjust y\n\n\n    i = 0;\n    var group = this.get('itemsGroup').addGroup();\n    boxes.forEach(function (b) {\n      var posInCompositeBox = startY + elementHeight;\n      b.targets.forEach(function () {\n        var origin_y = items[i].attr('matrix')[7];\n        var y = b.pos + posInCompositeBox - elementHeight / 2;\n        var dist = Math.abs(origin_y - y);\n\n        if (dist > elementHeight / 2) {\n          self._adjustDenote(group, y, origin_y - self.get('group').attr('matrix')[7] / 2);\n        }\n\n        items[i].translate(0, -origin_y);\n        items[i].translate(0, y);\n        posInCompositeBox += elementHeight;\n        i++;\n      });\n    });\n  }; // end of antiCollision\n\n\n  return Tail;\n}(Category);\n\nmodule.exports = Tail;\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The controller of tooltip\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar _require = __webpack_require__(21),\n    Tooltip = _require.Tooltip;\n\nvar MatrixUtil = Util.MatrixUtil;\nvar Vector2 = MatrixUtil.vec2;\nvar TYPE_SHOW_MARKERS = ['line', 'area', 'path', 'areaStack']; // 默认展示 tooltip marker 的几何图形\n\nvar TYPE_SHOW_CROSSHAIRS = ['line', 'area']; // 默认展示十字瞄准线的几何图形\n// TODO FIXME this is HARD CODING\n\nvar IGNORE_TOOLTIP_ITEM_PROPERTIES = ['marker', 'showMarker'];\n\nfunction _indexOfArray(items, item) {\n  var rst = -1;\n  Util.each(items, function (sub, index) {\n    var isEqual = true;\n\n    for (var key in item) {\n      if (item.hasOwnProperty(key) && IGNORE_TOOLTIP_ITEM_PROPERTIES.indexOf(key) === -1) {\n        if (!Util.isObject(item[key]) && item[key] !== sub[key]) {\n          isEqual = false;\n          break;\n        }\n      }\n    }\n\n    if (isEqual) {\n      rst = index;\n      return false;\n    }\n  });\n  return rst;\n} // 判断是否有样式\n\n\nfunction _hasClass(dom, className) {\n  if (!dom) {\n    return false;\n  }\n\n  var cls = '';\n  if (!dom.className) return false;\n\n  if (!Util.isNil(dom.className.baseVal)) {\n    cls = dom.className.baseVal;\n  } else {\n    cls = dom.className;\n  }\n\n  return cls.indexOf(className) !== -1;\n}\n\nfunction _isParent(dom, cls) {\n  var parent = dom.parentNode;\n  var rst = false;\n\n  while (parent && parent !== document.body) {\n    if (_hasClass(parent, cls)) {\n      rst = true;\n      break;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return rst;\n} // 去除重复的值, 去除不同图形相同数据，只展示一份即可\n\n\nfunction _uniqItems(items) {\n  var tmp = [];\n  Util.each(items, function (item) {\n    var index = _indexOfArray(tmp, item);\n\n    if (index === -1) {\n      tmp.push(item);\n    } else {\n      tmp[index] = item;\n    }\n  });\n  return tmp;\n}\n\nvar TooltipController =\n/*#__PURE__*/\nfunction () {\n  function TooltipController(cfg) {\n    Util.assign(this, cfg);\n    this.timeStamp = 0;\n  }\n\n  var _proto = TooltipController.prototype;\n\n  _proto._normalizeEvent = function _normalizeEvent(event) {\n    var chart = this.chart;\n\n    var canvas = this._getCanvas();\n\n    var point = canvas.getPointByClient(event.clientX, event.clientY);\n    var pixelRatio = canvas.get('pixelRatio');\n    point.x = point.x / pixelRatio;\n    point.y = point.y / pixelRatio;\n    var views = chart.getViewsByPoint(point);\n    point.views = views;\n    return point;\n  };\n\n  _proto._getCanvas = function _getCanvas() {\n    return this.chart.get('canvas');\n  };\n\n  _proto._getTriggerEvent = function _getTriggerEvent() {\n    var options = this.options;\n    var triggerOn = options.triggerOn;\n    var eventName;\n\n    if (!triggerOn || triggerOn === 'mousemove') {\n      eventName = 'plotmove';\n    } else if (triggerOn === 'click') {\n      eventName = 'plotclick';\n    } else if (triggerOn === 'none') {\n      eventName = null;\n    }\n\n    return eventName;\n  };\n\n  _proto._getDefaultTooltipCfg = function _getDefaultTooltipCfg() {\n    var self = this;\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n    var options = self.options;\n    var defaultCfg = Util.mix({}, viewTheme.tooltip);\n    var geoms = chart.getAllGeoms().filter(function (geom) {\n      return geom.get('visible');\n    });\n    var shapes = [];\n    Util.each(geoms, function (geom) {\n      var type = geom.get('type');\n      var adjusts = geom.get('adjusts');\n      var isSymmetric = false;\n\n      if (adjusts) {\n        Util.each(adjusts, function (adjust) {\n          if (adjust.type === 'symmetric' || adjust.type === 'Symmetric') {\n            isSymmetric = true;\n            return false;\n          }\n        });\n      }\n\n      if (Util.indexOf(shapes, type) === -1 && !isSymmetric) {\n        shapes.push(type);\n      }\n    });\n    var isTransposed = geoms.length && geoms[0].get('coord') ? geoms[0].get('coord').isTransposed : false;\n    var crosshairsCfg;\n\n    if (geoms.length && geoms[0].get('coord') && geoms[0].get('coord').type === 'cartesian') {\n      if (shapes[0] === 'interval' && options.shared !== false) {\n        // 直角坐标系下 interval 的 crosshair 为矩形背景框\n        var crosshairs = Util.mix({}, viewTheme.tooltipCrosshairsRect);\n        crosshairs.isTransposed = isTransposed;\n        crosshairsCfg = {\n          zIndex: 0,\n          // 矩形背景框不可覆盖 geom\n          crosshairs: crosshairs\n        };\n      } else if (Util.indexOf(TYPE_SHOW_CROSSHAIRS, shapes[0]) > -1) {\n        var _crosshairs = Util.mix({}, viewTheme.tooltipCrosshairsLine);\n\n        _crosshairs.isTransposed = isTransposed;\n        crosshairsCfg = {\n          crosshairs: _crosshairs\n        };\n      }\n    }\n\n    return Util.mix(defaultCfg, crosshairsCfg, {});\n  };\n\n  _proto._bindEvent = function _bindEvent() {\n    var chart = this.chart;\n\n    var triggerEvent = this._getTriggerEvent();\n\n    if (triggerEvent) {\n      chart.on(triggerEvent, Util.wrapBehavior(this, 'onMouseMove'));\n      chart.on('plotleave', Util.wrapBehavior(this, 'onMouseOut'));\n    }\n  };\n\n  _proto._offEvent = function _offEvent() {\n    var chart = this.chart;\n\n    var triggerEvent = this._getTriggerEvent();\n\n    if (triggerEvent) {\n      chart.off(triggerEvent, Util.getWrapBehavior(this, 'onMouseMove'));\n      chart.off('plotleave', Util.getWrapBehavior(this, 'onMouseOut'));\n    }\n  };\n\n  _proto._setTooltip = function _setTooltip(point, items, markersItems, target) {\n    var self = this;\n    var tooltip = self.tooltip;\n    var prePoint = self.prePoint;\n\n    if (!prePoint || prePoint.x !== point.x || prePoint.y !== point.y) {\n      items = _uniqItems(items);\n      self.prePoint = point;\n      var chart = self.chart;\n      var viewTheme = self.viewTheme;\n      var x = Util.isArray(point.x) ? point.x[point.x.length - 1] : point.x;\n      var y = Util.isArray(point.y) ? point.y[point.y.length - 1] : point.y;\n\n      if (!tooltip.get('visible')) {\n        chart.emit('tooltip:show', {\n          x: x,\n          y: y,\n          tooltip: tooltip\n        });\n      }\n\n      var first = items[0];\n      var title = first.title || first.name;\n\n      if (tooltip.isContentChange(title, items)) {\n        chart.emit('tooltip:change', {\n          tooltip: tooltip,\n          x: x,\n          y: y,\n          items: items\n        }); // bugfix: when set the title in the tooltip:change event does not take effect.\n\n        title = items[0].title || items[0].name;\n        tooltip.setContent(title, items);\n\n        if (!Util.isEmpty(markersItems)) {\n          if (self.options.hideMarkers === true) {\n            // 不展示 tooltip marker\n            tooltip.set('markerItems', markersItems); // 用于 tooltip 辅助线的定位\n          } else {\n            tooltip.setMarkers(markersItems, viewTheme.tooltipMarker);\n          }\n        } else {\n          tooltip.clearMarkers(); // clearMarkers 只会将 markerItems 从 markerGroup 中移除\n          // 所以我们还要将 markerItems 从 tooltip 中移除\n          // 这么做是为了防止上一次设置 marker 时的 markerItems 影响此次 tooltip 辅助线的定位\n\n          tooltip.set('markerItems', []);\n        }\n      }\n\n      var canvas = this._getCanvas();\n\n      if (target === canvas && tooltip.get('type') === 'mini') {\n        // filter mini tooltip\n        tooltip.hide();\n      } else {\n        tooltip.setPosition(x, y, target);\n        tooltip.show();\n      }\n    }\n  };\n\n  _proto.hideTooltip = function hideTooltip() {\n    var tooltip = this.tooltip;\n    var chart = this.chart;\n\n    var canvas = this._getCanvas();\n\n    this.prePoint = null;\n    tooltip.hide();\n    chart.emit('tooltip:hide', {\n      tooltip: tooltip\n    });\n    canvas.draw();\n  };\n\n  _proto.onMouseMove = function onMouseMove(ev) {\n    if (Util.isEmpty(ev.views)) {\n      return;\n    }\n\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n    var point = {\n      x: ev.x,\n      y: ev.y\n    };\n\n    if (timeStamp - lastTimeStamp > 16 && !this.chart.get('stopTooltip')) {\n      this.showTooltip(point, ev.views, ev.shape);\n      this.timeStamp = timeStamp;\n    }\n  };\n\n  _proto.onMouseOut = function onMouseOut(ev) {\n    var tooltip = this.tooltip; // const canvas = this._getCanvas();\n\n    if (!tooltip.get('visible') || !tooltip.get('follow')) {\n      return;\n    } // 除非离开 plot 时鼠标依然在图形上，这段逻辑没有意义\n    // if (ev && ev.target !== canvas) {\n    //   return;\n    // }\n\n\n    if (ev && ev.toElement && (_hasClass(ev.toElement, 'g2-tooltip') || _isParent(ev.toElement, 'g2-tooltip'))) {\n      return;\n    }\n\n    this.hideTooltip();\n  };\n\n  _proto.renderTooltip = function renderTooltip() {\n    var self = this;\n\n    if (self.tooltip) {\n      // tooltip 对象已经创建\n      return;\n    }\n\n    var chart = self.chart;\n    var viewTheme = self.viewTheme;\n\n    var canvas = self._getCanvas();\n\n    var defaultCfg = self._getDefaultTooltipCfg();\n\n    var options = self.options;\n    options = Util.deepMix({\n      plotRange: chart.get('plotRange'),\n      capture: false,\n      canvas: canvas,\n      frontPlot: chart.get('frontPlot'),\n      viewTheme: viewTheme.tooltip,\n      backPlot: chart.get('backPlot')\n    }, defaultCfg, options);\n\n    if (options.crosshairs && options.crosshairs.type === 'rect') {\n      options.zIndex = 0; // toolip 背景框不可遮盖住 geom，防止用户配置了 crosshairs\n    }\n\n    options.visible = false; // @2018-09-13 by blue.lb 如果设置shared为false不需要指定position\n    // if (options.shared === false && Util.isNil(options.position)) {\n    //   options.position = 'top';\n    // }\n\n    var tooltip;\n\n    if (options.type === 'mini') {\n      options.crosshairs = false; // this.options.shared = false;\n\n      options.position = 'top';\n      tooltip = new Tooltip.Mini(options);\n    } else if (options.useHtml) {\n      tooltip = new Tooltip.Html(options);\n    } else {\n      tooltip = new Tooltip.Canvas(options);\n    }\n\n    self.tooltip = tooltip;\n\n    var triggerEvent = self._getTriggerEvent();\n\n    if (!tooltip.get('enterable') && triggerEvent === 'plotmove') {\n      // 鼠标不允许进入 tooltip 容器\n      var tooltipContainer = tooltip.get('container');\n\n      if (tooltipContainer) {\n        tooltipContainer.onmousemove = function (e) {\n          // 避免 tooltip 频繁闪烁\n          var eventObj = self._normalizeEvent(e);\n\n          chart.emit(triggerEvent, eventObj);\n        };\n      }\n    }\n\n    self._bindEvent();\n  };\n\n  _proto.showTooltip = function showTooltip(point, views, target) {\n    var self = this;\n\n    if (Util.isEmpty(views) || !point) {\n      return;\n    }\n\n    if (!this.tooltip) {\n      this.renderTooltip(); // 如果一开始 tooltip 关闭，用户重新调用的时候需要先生成 tooltip\n    }\n\n    var options = self.options;\n    var markersItems = [];\n    var items = [];\n    Util.each(views, function (view) {\n      if (!view.get('tooltipEnable')) {\n        // 如果不显示tooltip，则跳过\n        return true;\n      }\n\n      var geoms = view.get('geoms');\n      var coord = view.get('coord');\n      Util.each(geoms, function (geom) {\n        var type = geom.get('type');\n\n        if (geom.get('visible') && geom.get('tooltipCfg') !== false) {\n          var dataArray = geom.get('dataArray');\n\n          if (geom.isShareTooltip() || options.shared === false && Util.inArray(['area', 'line', 'path', 'polygon'], type)) {\n            Util.each(dataArray, function (obj) {\n              var tmpPoint = geom.findPoint(point, obj);\n\n              if (tmpPoint) {\n                var subItems = geom.getTipItems(tmpPoint, options.title);\n                Util.each(subItems, function (v) {\n                  var point = v.point;\n\n                  if (point && point.x && point.y) {\n                    // hotfix: make sure there is no null value\n                    var x = Util.isArray(point.x) ? point.x[point.x.length - 1] : point.x;\n                    var y = Util.isArray(point.y) ? point.y[point.y.length - 1] : point.y;\n                    point = coord.applyMatrix(x, y, 1);\n                    v.x = point[0];\n                    v.y = point[1];\n                    v.showMarker = true;\n\n                    var itemMarker = self._getItemMarker(geom, v.color);\n\n                    v.marker = itemMarker;\n\n                    if (Util.indexOf(TYPE_SHOW_MARKERS, type) !== -1) {\n                      markersItems.push(v);\n                    }\n                  }\n                });\n                items = items.concat(subItems);\n              }\n            });\n          } else {\n            var geomContainer = geom.get('shapeContainer');\n            var canvas = geomContainer.get('canvas');\n            var pixelRatio = canvas.get('pixelRatio');\n            var shape = geomContainer.getShape(point.x * pixelRatio, point.y * pixelRatio);\n\n            if (shape && shape.get('visible') && shape.get('origin')) {\n              items = geom.getTipItems(shape.get('origin'), options.title);\n            }\n          }\n        }\n      });\n      Util.each(items, function (item) {\n        var point = item.point;\n        var x = Util.isArray(point.x) ? point.x[point.x.length - 1] : point.x;\n        var y = Util.isArray(point.y) ? point.y[point.y.length - 1] : point.y;\n        point = coord.applyMatrix(x, y, 1);\n        item.x = point[0];\n        item.y = point[1];\n      });\n    });\n\n    if (items.length) {\n      var first = items[0]; // bugfix: multiple tooltip items with different titles\n\n      if (!items.every(function (item) {\n        return item.title === first.title;\n      })) {\n        var nearestItem = first;\n        var nearestDistance = Infinity;\n        items.forEach(function (item) {\n          var distance = Vector2.distance([point.x, point.y], [item.x, item.y]);\n\n          if (distance < nearestDistance) {\n            nearestDistance = distance;\n            nearestItem = item;\n          }\n        });\n        items = items.filter(function (item) {\n          return item.title === nearestItem.title;\n        });\n        markersItems = markersItems.filter(function (item) {\n          return item.title === nearestItem.title;\n        });\n      }\n\n      if (options.shared === false && items.length > 1) {\n        var snapItem = items[0];\n        var min = Math.abs(point.y - snapItem.y);\n        Util.each(items, function (aItem) {\n          if (Math.abs(point.y - aItem.y) <= min) {\n            snapItem = aItem;\n            min = Math.abs(point.y - aItem.y);\n          }\n        });\n\n        if (snapItem && snapItem.x && snapItem.y) {\n          markersItems = [snapItem];\n        }\n\n        items = [snapItem];\n      } // 3.0 采用当前鼠标位置作为 tooltip 的参考点\n      // if (!Util.isEmpty(markersItems)) {\n      //   point = markersItems[0];\n      // }\n\n\n      self._setTooltip(point, items, markersItems, target);\n    } else {\n      self.hideTooltip();\n    }\n  };\n\n  _proto.clear = function clear() {\n    var tooltip = this.tooltip;\n    tooltip && tooltip.destroy();\n    this.tooltip = null;\n    this.prePoint = null;\n\n    this._offEvent();\n  };\n\n  _proto._getItemMarker = function _getItemMarker(geom, color) {\n    var shapeType = geom.get('shapeType') || 'point';\n    var shape = geom.getDefaultValue('shape') || 'circle';\n    var shapeObject = Shape.getShapeFactory(shapeType);\n    var cfg = {\n      color: color\n    };\n    var marker = shapeObject.getMarkerCfg(shape, cfg);\n    return marker;\n  };\n\n  return TooltipController;\n}();\n\nmodule.exports = TooltipController;\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The controller of chart's events\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nfunction isSameShape(shape1, shape2) {\n  if (Util.isNil(shape1) || Util.isNil(shape2)) {\n    return false;\n  }\n\n  var shape1Origin = shape1.get('origin');\n  var shape2Origin = shape2.get('origin'); // hotfix: if both shapes have no data，just compare shapes.\n\n  if (Util.isNil(shape1Origin) && Util.isNil(shape2Origin)) {\n    return Util.isEqual(shape1, shape2);\n  }\n\n  return Util.isEqual(shape1Origin, shape2Origin);\n}\n\nfunction registerData(eventObj) {\n  if (eventObj.shape && eventObj.shape.get('origin')) {\n    eventObj.data = eventObj.shape.get('origin');\n  }\n}\n\nvar EventController =\n/*#__PURE__*/\nfunction () {\n  function EventController(cfg) {\n    this.view = null;\n    this.canvas = null;\n    Util.assign(this, cfg);\n\n    this._init();\n  }\n\n  var _proto = EventController.prototype;\n\n  _proto._init = function _init() {\n    this.pixelRatio = this.canvas.get('pixelRatio');\n  };\n\n  _proto._getShapeEventObj = function _getShapeEventObj(ev) {\n    return {\n      x: ev.x / this.pixelRatio,\n      y: ev.y / this.pixelRatio,\n      target: ev.target,\n      // canvas 元素\n      toElement: ev.event.toElement || ev.event.relatedTarget\n    };\n  };\n\n  _proto._getShape = function _getShape(x, y) {\n    var view = this.view;\n    var container = view.get('canvas');\n    return container.getShape(x, y);\n  };\n\n  _proto._getPointInfo = function _getPointInfo(ev) {\n    var view = this.view;\n    var point = {\n      x: ev.x / this.pixelRatio,\n      y: ev.y / this.pixelRatio\n    };\n    var views = view.getViewsByPoint(point);\n    point.views = views;\n    return point;\n  };\n\n  _proto._getEventObj = function _getEventObj(ev, point, views) {\n    return {\n      x: point.x,\n      y: point.y,\n      target: ev.target,\n      // canvas 元素\n      toElement: ev.event.toElement || ev.event.relatedTarget,\n      // 目标元素\n      views: views\n    };\n  };\n\n  _proto.bindEvents = function bindEvents() {\n    var canvas = this.canvas;\n    canvas.on('mousedown', Util.wrapBehavior(this, 'onDown'));\n    canvas.on('mousemove', Util.wrapBehavior(this, 'onMove'));\n    canvas.on('mouseleave', Util.wrapBehavior(this, 'onOut'));\n    canvas.on('mouseup', Util.wrapBehavior(this, 'onUp'));\n    canvas.on('click', Util.wrapBehavior(this, 'onClick'));\n    canvas.on('dblclick', Util.wrapBehavior(this, 'onClick'));\n    canvas.on('touchstart', Util.wrapBehavior(this, 'onTouchstart'));\n    canvas.on('touchmove', Util.wrapBehavior(this, 'onTouchmove'));\n    canvas.on('touchend', Util.wrapBehavior(this, 'onTouchend'));\n  };\n\n  _proto._triggerShapeEvent = function _triggerShapeEvent(shape, eventName, eventObj) {\n    if (shape && shape.name && !shape.get('destroyed')) {\n      var view = this.view;\n\n      if (view.isShapeInView(shape)) {\n        var name = shape.name + ':' + eventName;\n        eventObj.view = view;\n        eventObj.appendInfo = shape.get('appendInfo'); // appendInfo is defined by user\n\n        view.emit(name, eventObj);\n        var parent = view.get('parent');\n\n        if (parent) {\n          // chart 上也需要抛出该事件，本期先不抛出\n          parent.emit(name, eventObj);\n        }\n      }\n    }\n  };\n\n  _proto.onDown = function onDown(ev) {\n    var view = this.view;\n\n    var eventObj = this._getShapeEventObj(ev);\n\n    eventObj.shape = this.currentShape;\n    registerData(eventObj);\n    view.emit('mousedown', eventObj);\n\n    this._triggerShapeEvent(this.currentShape, 'mousedown', eventObj);\n  };\n\n  _proto.onMove = function onMove(ev) {\n    var self = this;\n    var view = self.view;\n    var currentShape = self.currentShape; // 如果图形被销毁，则设置当前 shape 为空\n\n    if (currentShape && currentShape.get('destroyed')) {\n      currentShape = null;\n      self.currentShape = null;\n    }\n\n    var shape = self._getShape(ev.x, ev.y) || ev.currentTarget;\n\n    var eventObj = self._getShapeEventObj(ev);\n\n    eventObj.shape = shape;\n    registerData(eventObj);\n    view.emit('mousemove', eventObj);\n\n    self._triggerShapeEvent(shape, 'mousemove', eventObj);\n\n    if (currentShape && !isSameShape(currentShape, shape)) {\n      var leaveObj = self._getShapeEventObj(ev);\n\n      leaveObj.shape = currentShape;\n      leaveObj.toShape = shape;\n      registerData(leaveObj);\n\n      self._triggerShapeEvent(currentShape, 'mouseleave', leaveObj);\n    }\n\n    if (shape && !isSameShape(currentShape, shape)) {\n      var enterObj = self._getShapeEventObj(ev);\n\n      enterObj.shape = shape;\n      enterObj.fromShape = currentShape;\n      registerData(enterObj);\n\n      self._triggerShapeEvent(shape, 'mouseenter', enterObj);\n    }\n\n    self.currentShape = shape;\n\n    var point = self._getPointInfo(ev);\n\n    var preViews = self.curViews || [];\n\n    if (preViews.length === 0 && point.views.length) {\n      view.emit('plotenter', self._getEventObj(ev, point, point.views));\n    } // point.views 是指当前 view 或者子 view，不会取跟当前 view 同一层级的兄弟元素（view)\n\n\n    if (preViews.length && point.views.length === 0) {\n      view.emit('plotleave', self._getEventObj(ev, point, preViews));\n    }\n\n    if (point.views.length) {\n      eventObj = self._getEventObj(ev, point, point.views);\n      eventObj.shape = shape;\n      registerData(eventObj);\n      view.emit('plotmove', eventObj);\n    }\n\n    self.curViews = point.views;\n  };\n\n  _proto.onOut = function onOut(ev) {\n    var self = this;\n    var view = self.view;\n\n    var point = self._getPointInfo(ev);\n\n    var preViews = self.curViews || [];\n\n    var evtObj = self._getEventObj(ev, point, preViews); // 只有没有padding 时，当前依然在 view 的 plotRange 情况下才会出现这个情况，保证 plotleave 触发\n\n\n    if (self.curViews && self.curViews.length !== 0 && (!evtObj.toElement || evtObj.toElement.tagName !== 'CANVAS')) {\n      view.emit('plotleave', evtObj);\n      self.curViews = []; // 清空\n    }\n  };\n\n  _proto.onUp = function onUp(ev) {\n    var view = this.view;\n\n    var eventObj = this._getShapeEventObj(ev);\n\n    eventObj.shape = this.currentShape;\n    view.emit('mouseup', eventObj);\n\n    this._triggerShapeEvent(this.currentShape, 'mouseup', eventObj);\n  };\n\n  _proto.onClick = function onClick(ev) {\n    var self = this;\n    var view = self.view;\n    var shape = self._getShape(ev.x, ev.y) || ev.currentTarget;\n\n    var shapeEventObj = self._getShapeEventObj(ev);\n\n    shapeEventObj.shape = shape;\n    registerData(shapeEventObj);\n    view.emit('click', shapeEventObj);\n\n    self._triggerShapeEvent(shape, ev.type, shapeEventObj);\n\n    self.currentShape = shape;\n\n    var point = self._getPointInfo(ev);\n\n    var views = point.views;\n\n    if (!Util.isEmpty(views)) {\n      var eventObj = self._getEventObj(ev, point, views);\n\n      if (self.currentShape) {\n        var _shape = self.currentShape;\n        eventObj.shape = _shape;\n        registerData(eventObj); // eventObj.data = shape.get('origin');\n      }\n\n      view.emit('plotclick', eventObj);\n\n      if (ev.type === 'dblclick') {\n        view.emit('plotdblclick', eventObj);\n        view.emit('dblclick', shapeEventObj);\n      }\n    }\n  };\n\n  _proto.onTouchstart = function onTouchstart(ev) {\n    var view = this.view;\n    var shape = this._getShape(ev.x, ev.y) || ev.currentTarget;\n\n    var eventObj = this._getShapeEventObj(ev);\n\n    eventObj.shape = shape;\n    registerData(eventObj);\n    view.emit('touchstart', eventObj);\n\n    this._triggerShapeEvent(shape, 'touchstart', eventObj);\n\n    this.currentShape = shape;\n  };\n\n  _proto.onTouchmove = function onTouchmove(ev) {\n    var view = this.view;\n    var shape = this._getShape(ev.x, ev.y) || ev.currentTarget;\n\n    var eventObj = this._getShapeEventObj(ev);\n\n    eventObj.shape = shape;\n    registerData(eventObj);\n    view.emit('touchmove', eventObj);\n\n    this._triggerShapeEvent(shape, 'touchmove', eventObj);\n\n    this.currentShape = shape;\n  };\n\n  _proto.onTouchend = function onTouchend(ev) {\n    var view = this.view;\n\n    var eventObj = this._getShapeEventObj(ev);\n\n    eventObj.shape = this.currentShape;\n    registerData(eventObj);\n    view.emit('touchend', eventObj);\n\n    this._triggerShapeEvent(this.currentShape, 'touchend', eventObj);\n  };\n\n  _proto.clearEvents = function clearEvents() {\n    var canvas = this.canvas;\n    canvas.off('mousemove', Util.getWrapBehavior(this, 'onMove'));\n    canvas.off('mouseleave', Util.getWrapBehavior(this, 'onOut'));\n    canvas.off('mousedown', Util.getWrapBehavior(this, 'onDown'));\n    canvas.off('mouseup', Util.getWrapBehavior(this, 'onUp'));\n    canvas.off('click', Util.getWrapBehavior(this, 'onClick'));\n    canvas.off('dblclick', Util.getWrapBehavior(this, 'onClick'));\n    canvas.off('touchstart', Util.getWrapBehavior(this, 'onTouchstart'));\n    canvas.off('touchmove', Util.getWrapBehavior(this, 'onTouchmove'));\n    canvas.off('touchend', Util.getWrapBehavior(this, 'onTouchend'));\n  };\n\n  return EventController;\n}();\n\nmodule.exports = EventController;\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview The entry of chart's animation\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar Animate = __webpack_require__(126);\n\nvar MatrixUtil = Util.MatrixUtil;\nvar mat3 = MatrixUtil.mat3; // 获取图组内所有的shapes\n\nfunction getShapes(container, viewId) {\n  var shapes = [];\n\n  if (container.get('animate') === false) {\n    return [];\n  }\n\n  var children = container.get('children');\n  Util.each(children, function (child) {\n    if (child.isGroup) {\n      shapes = shapes.concat(getShapes(child, viewId));\n    } else if (child.isShape && child._id) {\n      var id = child._id;\n      id = id.split('-')[0];\n\n      if (id === viewId) {\n        shapes.push(child);\n      }\n    }\n  });\n  return shapes;\n}\n\nfunction cache(shapes) {\n  var rst = {};\n  Util.each(shapes, function (shape) {\n    if (!shape._id || shape.isClip) return;\n    var id = shape._id;\n    rst[id] = {\n      _id: id,\n      type: shape.get('type'),\n      attrs: Util.cloneDeep(shape.attr()),\n      // 原始属性\n      name: shape.name,\n      index: shape.get('index'),\n      animateCfg: shape.get('animateCfg'),\n      coord: shape.get('coord')\n    };\n  });\n  return rst;\n}\n\nfunction getAnimate(geomType, coord, animationType, animationName) {\n  var result;\n\n  if (animationName) {\n    result = Animate.Action[animationType][animationName];\n  } else {\n    result = Animate.getAnimation(geomType, coord, animationType);\n  }\n\n  return result;\n}\n\nfunction getAnimateCfg(geomType, animationType, animateCfg) {\n  var defaultCfg = Animate.getAnimateCfg(geomType, animationType);\n\n  if (animateCfg && animateCfg[animationType]) {\n    return Util.deepMix({}, defaultCfg, animateCfg[animationType]);\n  }\n\n  return defaultCfg;\n}\n\nfunction addAnimate(cache, shapes, canvas, isUpdate) {\n  var animate;\n  var animateCfg;\n  var canvasDrawn = false;\n\n  if (isUpdate) {\n    // Step: leave -> update -> enter\n    var updateShapes = []; // 存储的是 shapes\n\n    var newShapes = []; // 存储的是 shapes\n\n    Util.each(shapes, function (shape) {\n      var result = cache[shape._id];\n\n      if (!result) {\n        newShapes.push(shape);\n      } else {\n        shape.setSilent('cacheShape', result);\n        updateShapes.push(shape);\n        delete cache[shape._id];\n      }\n    });\n    Util.each(cache, function (deletedShape) {\n      var name = deletedShape.name,\n          coord = deletedShape.coord,\n          _id = deletedShape._id,\n          attrs = deletedShape.attrs,\n          index = deletedShape.index,\n          type = deletedShape.type;\n      animateCfg = getAnimateCfg(name, 'leave', deletedShape.animateCfg);\n      animate = getAnimate(name, coord, 'leave', animateCfg.animation);\n\n      if (Util.isFunction(animate)) {\n        var tempShape = canvas.addShape(type, {\n          attrs: attrs,\n          index: index\n        });\n        tempShape._id = _id;\n        tempShape.name = name;\n\n        if (coord && name !== 'label') {\n          var tempShapeMatrix = tempShape.getMatrix();\n          var finalMatrix = mat3.multiply([], tempShapeMatrix, coord.matrix);\n          tempShape.setMatrix(finalMatrix);\n        }\n\n        canvasDrawn = true;\n        animate(tempShape, animateCfg, coord);\n      }\n    });\n    Util.each(updateShapes, function (updateShape) {\n      var name = updateShape.name;\n      var coord = updateShape.get('coord');\n      var cacheAttrs = updateShape.get('cacheShape').attrs; // 判断如果属性相同的话就不进行变换\n\n      if (!Util.isEqual(cacheAttrs, updateShape.attr())) {\n        animateCfg = getAnimateCfg(name, 'update', updateShape.get('animateCfg'));\n        animate = getAnimate(name, coord, 'update', animateCfg.animation);\n\n        if (Util.isFunction(animate)) {\n          animate(updateShape, animateCfg, coord);\n        } else {\n          var endState = Util.cloneDeep(updateShape.attr());\n          updateShape.attr(cacheAttrs);\n          updateShape.animate(endState, animateCfg.duration, animateCfg.easing, function () {\n            updateShape.setSilent('cacheShape', null);\n          });\n        }\n\n        canvasDrawn = true;\n      }\n    });\n    Util.each(newShapes, function (newShape) {\n      var name = newShape.name;\n      var coord = newShape.get('coord');\n      animateCfg = getAnimateCfg(name, 'enter', newShape.get('animateCfg'));\n      animate = getAnimate(name, coord, 'enter', animateCfg.animation);\n\n      if (Util.isFunction(animate)) {\n        animate(newShape, animateCfg, coord);\n        canvasDrawn = true;\n      }\n    });\n  } else {\n    Util.each(shapes, function (shape) {\n      var name = shape.name;\n      var coord = shape.get('coord');\n      animateCfg = getAnimateCfg(name, 'appear', shape.get('animateCfg'));\n      animate = getAnimate(name, coord, 'appear', animateCfg.animation);\n\n      if (Util.isFunction(animate)) {\n        animate(shape, animateCfg, coord);\n        canvasDrawn = true;\n      }\n    });\n  }\n\n  return canvasDrawn;\n}\n\nmodule.exports = {\n  execAnimation: function execAnimation(view, isUpdate) {\n    var viewContainer = view.get('middlePlot');\n    var axisContainer = view.get('backPlot');\n    var viewId = view.get('_id');\n    var canvas = view.get('canvas');\n    var caches = canvas.get(viewId + 'caches') || [];\n\n    if (caches.length === 0) {\n      isUpdate = false;\n    }\n\n    var shapes = getShapes(viewContainer, viewId);\n    var axisShapes = getShapes(axisContainer, viewId);\n    var cacheShapes = shapes.concat(axisShapes);\n    canvas.setSilent(viewId + 'caches', cache(cacheShapes));\n    var drawn;\n\n    if (isUpdate) {\n      drawn = addAnimate(caches, cacheShapes, canvas, isUpdate);\n    } else {\n      drawn = addAnimate(caches, shapes, canvas, isUpdate);\n    }\n\n    if (!drawn) {\n      canvas.draw();\n    }\n  }\n};\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview The class of canvas plot\n * @author sima.zhang\n */\nvar Util = __webpack_require__(0);\n\nvar _require = __webpack_require__(16),\n    Group = _require.Group;\n\nvar AUTO_STR = 'auto';\n\nvar PlotBack =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(PlotBack, _Group);\n\n  function PlotBack() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = PlotBack.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * 类型\n       * @type {String}\n       */\n      type: 'plotBack',\n\n      /**\n       * 画布边距\n       * @type {Number | Array | Object | \"auto\"}\n       */\n      padding: null,\n\n      /**\n       * 大背景\n       * @type {Object}\n       */\n      background: null,\n\n      /**\n       * 绘图区域范围\n       * @type {Object}\n       */\n      plotRange: null,\n\n      /**\n       * 绘图区域背景\n       * @type {Object}\n       */\n      plotBackground: null\n    };\n  };\n\n  _proto._beforeRenderUI = function _beforeRenderUI() {\n    this._calculateRange();\n  };\n\n  _proto._renderUI = function _renderUI() {\n    this._renderBackground();\n\n    this._renderPlotBackground();\n  };\n\n  _proto._renderBackground = function _renderBackground() {\n    var self = this;\n    var background = self.get('background');\n\n    if (background) {\n      var canvas = this.get('canvas');\n      var width = self.get('width') || canvas.get('width');\n      var height = self.get('height') || canvas.get('height');\n      var cfg = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      };\n      var rect = self.get('backgroundShape');\n\n      if (!rect) {\n        rect = this.addShape('rect', {\n          attrs: Util.mix(cfg, background)\n        });\n        this.set('backgroundShape', rect);\n      } else {\n        rect.attr(cfg);\n      }\n    } else {\n      return;\n    }\n  };\n\n  _proto._renderPlotBackground = function _renderPlotBackground() {\n    var self = this;\n    var plotBackground = self.get('plotBackground');\n\n    if (plotBackground) {\n      var plotRange = self.get('plotRange');\n      var width = plotRange.br.x - plotRange.bl.x;\n      var height = plotRange.br.y - plotRange.tr.y;\n      var tl = plotRange.tl;\n      var cfg = {\n        x: tl.x,\n        y: tl.y,\n        width: width,\n        height: height\n      };\n      var plotBackShape = self.get('plotBackShape');\n\n      if (!plotBackShape) {\n        if (plotBackground.image) {\n          cfg.img = plotBackground.image;\n          plotBackShape = self.addShape('image', {\n            attrs: cfg\n          });\n        } else {\n          // 矩形\n          Util.mix(cfg, plotBackground);\n          plotBackShape = self.addShape('rect', {\n            attrs: cfg\n          });\n        }\n\n        self.set('plotBackShape', plotBackShape);\n      } else {\n        plotBackShape.attr(cfg);\n      }\n    } else {\n      return;\n    }\n  };\n\n  _proto._convert = function _convert(val, isHorizontal) {\n    if (Util.isString(val)) {\n      if (val === AUTO_STR) {\n        val = 0;\n      } else if (val.indexOf('%') !== -1) {\n        var canvas = this.get('canvas');\n        var width = this.get('width') || canvas.get('width');\n        var height = this.get('height') || canvas.get('height');\n        val = parseInt(val, 10) / 100;\n        val = isHorizontal ? val * width : val * height;\n      }\n    }\n\n    return val;\n  };\n\n  _proto._calculateRange = function _calculateRange() {\n    var self = this;\n    var plotRange = self.get('plotRange');\n\n    if (Util.isNil(plotRange)) {\n      plotRange = {};\n    }\n\n    var padding = self.get('padding');\n    var canvas = this.get('canvas');\n    var width = self.get('width') || canvas.get('width');\n    var height = self.get('height') || canvas.get('height');\n    var allPadding = Util.toAllPadding(padding);\n\n    var top = self._convert(allPadding[0], false);\n\n    var right = self._convert(allPadding[1], true);\n\n    var bottom = self._convert(allPadding[2], false);\n\n    var left = self._convert(allPadding[3], true);\n\n    var minX = Math.min(left, width - right);\n    var maxX = Math.max(left, width - right);\n    var minY = Math.min(height - bottom, top);\n    var maxY = Math.max(height - bottom, top);\n    plotRange.tl = {\n      x: minX,\n      y: minY\n    }; // top-left\n\n    plotRange.tr = {\n      x: maxX,\n      y: minY\n    }; // top-right\n\n    plotRange.bl = {\n      x: minX,\n      y: maxY\n    }; // bottom-left\n\n    plotRange.br = {\n      x: maxX,\n      y: maxY\n    }; // bottom-right\n\n    plotRange.cc = {\n      x: (maxX + minX) / 2,\n      y: (maxY + minY) / 2\n    };\n    this.set('plotRange', plotRange);\n  };\n\n  _proto.repaint = function repaint() {\n    this._calculateRange();\n\n    this._renderBackground();\n\n    this._renderPlotBackground();\n\n    return this;\n  };\n\n  return PlotBack;\n}(Group);\n\nmodule.exports = PlotBack;\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 需要计算所占x轴上的宽度的辅助类\n * @author sima.zhang1990@gmail.com\n * @author dxq613@gmail.com\n */\nvar Global = __webpack_require__(7);\n\nvar Util = __webpack_require__(0); // 已经排序后的数据查找距离最小的\n\n\nfunction findMinDistance(arr, scale) {\n  var count = arr.length; // 日期类型的 values 经常上文本类型，所以需要转换一下\n\n  if (Util.isString(arr[0])) {\n    arr = arr.map(function (v) {\n      return scale.translate(v);\n    });\n  }\n\n  var distance = arr[1] - arr[0];\n\n  for (var i = 2; i < count; i++) {\n    var tmp = arr[i] - arr[i - 1];\n\n    if (distance > tmp) {\n      distance = tmp;\n    }\n  }\n\n  return distance;\n}\n\nvar SizeMixin = {\n  getDefaultSize: function getDefaultSize() {\n    var defaultSize = this.get('defaultSize');\n    var viewTheme = this.get('viewTheme') || Global;\n\n    if (!defaultSize) {\n      var coord = this.get('coord');\n      var xScale = this.getXScale();\n      var xValues = xScale.values;\n      var dataArray = this.get('dataArray');\n      var count;\n\n      if (xScale.isLinear && xValues.length > 1) {\n        xValues.sort();\n        var interval = findMinDistance(xValues, xScale);\n        count = (xScale.max - xScale.min) / interval;\n\n        if (xValues.length > count) {\n          count = xValues.length;\n        }\n      } else {\n        count = xValues.length;\n      }\n\n      var range = xScale.range;\n      var normalizeSize = 1 / count;\n      var widthRatio = 1;\n\n      if (this.isInCircle()) {\n        if (coord.isTransposed && count > 1) {\n          // 极坐标下多层环图\n          widthRatio = viewTheme.widthRatio.multiplePie;\n        } else {\n          widthRatio = viewTheme.widthRatio.rose;\n        }\n        /* if (dataArray.length > 1) {\n          normalizeSize *= (range[1] - range[0]);\n        } */\n\n      } else {\n        if (xScale.isLinear) {\n          normalizeSize *= range[1] - range[0];\n        }\n\n        widthRatio = viewTheme.widthRatio.column; // 柱状图要除以2\n      }\n\n      normalizeSize *= widthRatio;\n\n      if (this.hasAdjust('dodge')) {\n        var dodgeCount = this._getDodgeCount(dataArray);\n\n        normalizeSize = normalizeSize / dodgeCount;\n      }\n\n      defaultSize = normalizeSize;\n      this.set('defaultSize', defaultSize);\n    }\n\n    return defaultSize;\n  },\n  _getDodgeCount: function _getDodgeCount(dataArray) {\n    var adjusts = this.get('adjusts');\n    var dodgeBy;\n    var count = dataArray.length;\n    Util.each(adjusts, function (adjust) {\n      if (adjust.type === 'dodge') {\n        dodgeBy = adjust.dodgeBy;\n      }\n    });\n\n    if (dodgeBy) {\n      var mergeData = Util.Array.merge(dataArray);\n      var values = Util.Array.values(mergeData, dodgeBy);\n      count = values.length;\n    }\n\n    return count;\n  },\n  getDimWidth: function getDimWidth(dimName) {\n    var coord = this.get('coord');\n    var start = coord.convertPoint({\n      x: 0,\n      y: 0\n    });\n    var end = coord.convertPoint({\n      x: dimName === 'x' ? 1 : 0,\n      y: dimName === 'x' ? 0 : 1\n    });\n    var width = 0;\n\n    if (start && end) {\n      width = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\n    }\n\n    return width;\n  },\n  _getWidth: function _getWidth() {\n    var coord = this.get('coord');\n    var width; // x轴的长度\n\n    if (this.isInCircle() && !coord.isTransposed) {\n      // 极坐标下 width 为弧长\n      width = (coord.endAngle - coord.startAngle) * coord.radius;\n    } else {\n      width = this.getDimWidth('x'); // 不需要判断transpose\n    }\n\n    return width;\n  },\n  _toNormalizedSize: function _toNormalizedSize(size) {\n    var width = this._getWidth();\n\n    return size / width;\n  },\n  _toCoordSize: function _toCoordSize(normalizeSize) {\n    var width = this._getWidth();\n\n    return width * normalizeSize;\n  },\n  getNormalizedSize: function getNormalizedSize(obj) {\n    var size = this.getAttrValue('size', obj);\n\n    if (Util.isNil(size)) {\n      size = this.getDefaultSize();\n    } else {\n      size = this._toNormalizedSize(size);\n    }\n\n    return size;\n  },\n  getSize: function getSize(obj) {\n    var size = this.getAttrValue('size', obj);\n\n    if (Util.isNil(size)) {\n      var normalizeSize = this.getDefaultSize();\n      size = this._toCoordSize(normalizeSize);\n    }\n\n    return size;\n  }\n};\nmodule.exports = SizeMixin;\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 分割数据用于处理存在 null 值的折线图、区域图\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Global = __webpack_require__(7);\n\nmodule.exports = {\n  splitData: function splitData(data) {\n    var viewTheme = this.get('viewTheme') || Global;\n    if (!data.length) return [];\n    var arr = [];\n    var tmp = [];\n    var yScale = this.getYScale();\n    var yDim = yScale.field;\n    var yValue;\n    Util.each(data, function (obj) {\n      yValue = obj._origin ? obj._origin[yDim] : obj[yDim];\n\n      if (viewTheme.connectNulls) {\n        // 如果忽视 Null 直接连接节点，则将 value = null 的数据过滤掉\n        if (!Util.isNil(yValue)) {\n          tmp.push(obj);\n        }\n      } else {\n        if (Util.isArray(yValue) && Util.isNil(yValue[0]) || Util.isNil(yValue)) {\n          if (tmp.length) {\n            arr.push(tmp);\n            tmp = [];\n          }\n        } else {\n          tmp.push(obj);\n        }\n      }\n    });\n\n    if (tmp.length) {\n      arr.push(tmp);\n    }\n\n    return arr;\n  }\n};\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview 路径图，无序的线图\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar SplitMixin = __webpack_require__(358);\n\nvar Util = __webpack_require__(0);\n\nvar Path =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Path, _GeomBase);\n\n  var _proto = Path.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'path';\n    cfg.shapeType = 'line';\n    return cfg;\n  };\n\n  function Path(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SplitMixin);\n    return _this;\n  }\n\n  _proto.getDrawCfg = function getDrawCfg(obj) {\n    var cfg = _GeomBase.prototype.getDrawCfg.call(this, obj);\n\n    cfg.isStack = this.hasStack();\n    return cfg;\n  };\n\n  _proto.draw = function draw(data, container, shapeFactory, index) {\n    var self = this;\n    var splitArray = this.splitData(data);\n    var cfg = this.getDrawCfg(data[0]);\n\n    self._applyViewThemeShapeStyle(cfg, cfg.shape, shapeFactory);\n\n    cfg.origin = data; // path,line 等图的origin 是整个序列\n\n    Util.each(splitArray, function (subData, splitedIndex) {\n      if (!Util.isEmpty(subData)) {\n        cfg.splitedIndex = splitedIndex; // 传入分割片段索引 用于生成id\n\n        cfg.points = subData;\n        var geomShape = shapeFactory.drawShape(cfg.shape, cfg, container);\n        self.appendShapeInfo(geomShape, index + splitedIndex);\n      }\n    });\n  };\n\n  return Path;\n}(GeomBase);\n\nGeomBase.Path = Path;\nmodule.exports = Path;\n\n/***/ }),\n/* 360 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__namespace__ = __webpack_require__(370);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__namespaces__ = __webpack_require__(371);\n\n\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === __WEBPACK_IMPORTED_MODULE_1__namespaces__[\"b\" /* xhtml */] && document.documentElement.namespaceURI === __WEBPACK_IMPORTED_MODULE_1__namespaces__[\"b\" /* xhtml */] ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  var fullname = Object(__WEBPACK_IMPORTED_MODULE_0__namespace__[\"a\" /* default */])(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n});\n\n/***/ }),\n/* 361 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n});\n\n/***/ }),\n/* 362 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = tweenValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schedule__ = __webpack_require__(70);\n\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    var schedule = Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n\n      for (var t = {\n        name: name,\n        value: value\n      }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  var id = this._id;\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(this.node(), id).tween;\n\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n});\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(node, id).value[name];\n  };\n}\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview facets of chart\n * @author dxq613@gmail.com\n */\nvar Global = __webpack_require__(7);\n\nvar Util = __webpack_require__(0);\n\nvar assign = Util.assign;\nvar isNil = Util.isNil;\nvar isArray = Util.isArray;\nvar cloneDeep = Util.cloneDeep; // 绑定事件\n\nvar wrapBehavior = Util.wrapBehavior; // 获取绑定的事件\n\nvar getWrapBehavior = Util.getWrapBehavior;\n\nvar Base =\n/*#__PURE__*/\nfunction () {\n  var _proto = Base.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      chart: null,\n      group: null,\n\n      /**\n       * 是否默认显示每个分面的title\n       * @type {Boolean}\n       */\n      showTitle: true,\n\n      /**\n       * 是否自动修改坐标轴的信息\n       * @type {Boolean}\n       */\n      autoSetAxis: true,\n\n      /**\n       * View 的内边框\n       * @type {Number|Array}\n       */\n      padding: 10,\n\n      /**\n       * 遍历每个view 的回调函数\n       * @type {Function}\n       */\n      eachView: null,\n\n      /**\n       * 分面的字段名列表\n       * @type {Array}\n       */\n      fields: [],\n\n      /**\n       * 列值的的标题\n       * @type {Object}\n       */\n      colTitle: {\n        offsetY: -15,\n        style: {\n          fontSize: 14,\n          textAlign: 'center',\n          fill: '#666',\n          fontFamily: Global.fontFamily\n        }\n      },\n      rowTitle: {\n        offsetX: 15,\n        style: {\n          fontSize: 14,\n          textAlign: 'center',\n          rotate: 90,\n          fill: '#666',\n          fontFamily: Global.fontFamily\n        }\n      }\n    };\n  };\n\n  function Base(cfg) {\n    var defaultCfg = this.getDefaultCfg();\n    assign(this, defaultCfg, cfg);\n    this.init();\n  }\n\n  _proto.init = function init() {\n    if (!this.chart) {\n      throw new Error('Facets Error: please specify the chart!');\n    }\n\n    this._bindEvent();\n\n    this.initContainer();\n\n    if (this.chart.get('data')) {\n      this.initViews();\n    }\n  };\n\n  _proto.initContainer = function initContainer() {\n    var chart = this.chart;\n    var frontPlot = chart.get('frontPlot');\n    var group = frontPlot.addGroup();\n    this.group = group;\n  };\n\n  _proto.initViews = function initViews() {\n    var chart = this.chart;\n    var data = chart.get('data');\n    var eachView = this.eachView;\n    var facets = this.generateFacets(data);\n\n    for (var i = 0; i < facets.length; i++) {\n      var facet = facets[i];\n      var region = facet.region;\n      var view = chart.view({\n        start: region.start,\n        end: region.end,\n        padding: this.padding\n      });\n      view.source(facet.data);\n      this.beforeProcessView(view, facet);\n\n      if (eachView) {\n        eachView(view, facet);\n      }\n\n      this.afterProcessView(view, facet);\n      facet.view = view;\n    }\n\n    this.facets = facets;\n  };\n  /**\n   * 处理 view 前\n   * @protected\n   */\n\n\n  _proto.beforeProcessView = function beforeProcessView()\n  /* view, facet */\n  {};\n  /**\n   * 处理view\n   * @param {Object} view 视图\n   * @param {Object} facet 分面信息\n   * @protected\n   */\n\n\n  _proto.afterProcessView = function afterProcessView(view, facet) {\n    if (this.autoSetAxis) {\n      this.processAxis(view, facet);\n    }\n  };\n\n  _proto.processAxis = function processAxis(view, facet) {\n    var viewOptions = view.get('options');\n    var geoms = view.get('geoms');\n\n    if ((!viewOptions.coord.type || viewOptions.coord.type === 'rect') && geoms.length) {\n      var field = geoms[0].get('attrOptions').position.field;\n      var fields = isArray(field) ? field : field.split('*').map(function (str) {\n        return str.trim();\n      });\n      var xField = fields[0];\n      var yField = fields[1];\n\n      if (isNil(viewOptions.axes)) {\n        viewOptions.axes = {};\n      }\n\n      var axes = viewOptions.axes;\n\n      if (axes !== false) {\n        if (xField && axes[xField] !== false) {\n          axes[xField] = axes[xField] || {};\n          this.setXAxis(xField, axes, facet);\n        }\n\n        if (yField && axes[yField] !== false) {\n          axes[yField] = axes[yField] || {};\n          this.setYAxis(yField, axes, facet);\n        }\n      }\n    }\n  };\n\n  _proto.setXAxis = function setXAxis()\n  /* xField, axes, facet */\n  {};\n\n  _proto.setYAxis = function setYAxis()\n  /* yField, axes, facet */\n  {}; // 默认显示各列的标题\n\n\n  _proto.renderTitle = function renderTitle(view, facet) {\n    this.drawColTitle(view, facet);\n  };\n\n  _proto.getScaleText = function getScaleText(field, value, view) {\n    var rst;\n\n    if (field) {\n      var scales = view.get('scales');\n      var scale = scales[field];\n\n      if (!scale) {\n        scale = view.createScale(field);\n      }\n\n      rst = scale.getText(value);\n    } else {\n      rst = value;\n    }\n\n    return rst;\n  };\n\n  _proto.drawColTitle = function drawColTitle(view, facet) {\n    var text = this.getScaleText(facet.colField, facet.colValue, view);\n    var colTextCfg = assign({\n      position: ['50%', '0%'],\n      content: text\n    }, this.colTitle);\n    view.guide().text(colTextCfg);\n  };\n\n  _proto.drawRowTitle = function drawRowTitle(view, facet) {\n    var text = this.getScaleText(facet.rowField, facet.rowValue, view);\n    var rowTextCfg = assign({\n      position: ['100%', '50%'],\n      content: text\n    }, cloneDeep(this.rowTitle));\n    view.guide().text(rowTextCfg);\n  };\n  /**\n   * 数据过滤器\n   * @protected\n   * @param {Array} conditions 过滤条件\n   * @return {Function} 过滤函数\n   */\n\n\n  _proto.getFilter = function getFilter(conditions) {\n    var filter = function filter(obj) {\n      var filtered = true;\n      conditions.forEach(function (cond) {\n        var field = cond.field;\n        var value = cond.value; // const values = cond.values;\n\n        var tmp = true;\n\n        if (!isNil(value) && field) {\n          tmp = obj[field] === value;\n        }\n\n        filtered = filtered && tmp;\n      });\n      return filtered;\n    };\n\n    return filter;\n  };\n  /**\n   * 获取字段对应的值\n   * @protected\n   * @param  {String} field 字段名\n   * @param  {Array} data 数据\n   * @return {Array} 字段对应的值\n   */\n\n\n  _proto.getFieldValues = function getFieldValues(field, data) {\n    var rst = [];\n    var tmpMap = {};\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i];\n      var value = obj[field];\n\n      if (!isNil(value) && !tmpMap[value]) {\n        rst.push(value);\n        tmpMap[value] = true;\n      }\n    }\n\n    return rst;\n  };\n\n  _proto.getRegion = function getRegion(rows, cols, xIndex, yIndex) {\n    var xWidth = 1 / cols; // x轴方向的每个分面的偏移\n\n    var yWidth = 1 / rows; // y轴方向的每个分面的偏移\n\n    var start = {\n      x: xWidth * xIndex,\n      y: yWidth * yIndex\n    };\n    var end = {\n      x: start.x + xWidth,\n      y: start.y + yWidth\n    };\n    return {\n      start: start,\n      end: end\n    };\n  };\n  /**\n   * 生成分面\n   * @protected\n   * @return {Array} 多个分面集合\n   */\n\n\n  _proto.generateFacets = function generateFacets()\n  /* data */\n  {\n    return [];\n  };\n\n  _proto._bindEvent = function _bindEvent() {\n    var chart = this.chart;\n    chart.on('afterchangedata', wrapBehavior(this, 'onDataChange'));\n    chart.on('beforeclear', wrapBehavior(this, 'onClear'));\n    chart.on('beforedestroy', wrapBehavior(this, 'destroy'));\n    chart.on('beforepaint', wrapBehavior(this, 'onPaint'));\n    chart.on('setdata', wrapBehavior(this, 'onDataChange'));\n  };\n\n  _proto._clearEvent = function _clearEvent() {\n    var chart = this.chart;\n\n    if (chart) {\n      chart.off('afterchangedata', getWrapBehavior(this, 'onDataChange'));\n      chart.off('beforeclear', getWrapBehavior(this, 'onClear'));\n      chart.off('beforedestroy', getWrapBehavior(this, 'destroy'));\n      chart.off('beforepaint', getWrapBehavior(this, 'onPaint'));\n      chart.off('setdata', getWrapBehavior(this, 'onDataChange'));\n    }\n  };\n\n  _proto._clearFacets = function _clearFacets() {\n    var facets = this.facets;\n    var chart = this.chart;\n\n    if (facets) {\n      for (var i = 0; i < facets.length; i++) {\n        var facet = facets[i];\n        chart.removeView(facet.view);\n      }\n    }\n\n    this.facets = null;\n  };\n\n  _proto.onClear = function onClear() {\n    this.onRemove();\n  };\n\n  _proto.onPaint = function onPaint() {\n    if (this.showTitle) {\n      var facets = this.facets;\n\n      for (var i = 0; i < facets.length; i++) {\n        var facet = facets[i];\n        var view = facet.view;\n        this.renderTitle(view, facet);\n      }\n    }\n  };\n\n  _proto.onDataChange = function onDataChange() {\n    this._clearFacets();\n\n    this.initViews();\n  };\n\n  _proto.onRemove = function onRemove() {\n    this._clearFacets();\n\n    this._clearEvent();\n\n    this.group && this.group.remove();\n    this.chart = null;\n    this.facets = null;\n    this.group = null;\n  };\n\n  _proto.destroy = function destroy() {\n    this.onRemove();\n    this.destroyed = true;\n  };\n\n  return Base;\n}();\n\nmodule.exports = Base;\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview interval geometry\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar SizeMixin = __webpack_require__(357);\n\n__webpack_require__(365);\n\nvar Interval =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Interval, _GeomBase);\n\n  var _proto = Interval.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'interval';\n    cfg.shapeType = 'interval';\n    cfg.generatePoints = true;\n    return cfg;\n  };\n\n  function Interval(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SizeMixin);\n    return _this;\n  }\n\n  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {\n    var cfg = _GeomBase.prototype.createShapePointsCfg.call(this, obj);\n\n    cfg.size = this.getNormalizedSize(obj);\n    return cfg;\n  };\n\n  _proto.clearInner = function clearInner() {\n    _GeomBase.prototype.clearInner.call(this);\n\n    this.set('defaultSize', null);\n  };\n\n  return Interval;\n}(GeomBase);\n\nvar IntervalStack =\n/*#__PURE__*/\nfunction (_Interval) {\n  _inheritsLoose(IntervalStack, _Interval);\n\n  function IntervalStack() {\n    return _Interval.apply(this, arguments) || this;\n  }\n\n  var _proto2 = IntervalStack.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interval.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'stack'\n    }];\n    return cfg;\n  };\n\n  return IntervalStack;\n}(Interval);\n\nvar IntervalDodge =\n/*#__PURE__*/\nfunction (_Interval2) {\n  _inheritsLoose(IntervalDodge, _Interval2);\n\n  function IntervalDodge() {\n    return _Interval2.apply(this, arguments) || this;\n  }\n\n  var _proto3 = IntervalDodge.prototype;\n\n  _proto3.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interval2.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'dodge'\n    }];\n    return cfg;\n  };\n\n  return IntervalDodge;\n}(Interval);\n\nvar IntervalSymmetric =\n/*#__PURE__*/\nfunction (_Interval3) {\n  _inheritsLoose(IntervalSymmetric, _Interval3);\n\n  function IntervalSymmetric() {\n    return _Interval3.apply(this, arguments) || this;\n  }\n\n  var _proto4 = IntervalSymmetric.prototype;\n\n  _proto4.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interval3.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'symmetric'\n    }];\n    return cfg;\n  };\n\n  return IntervalSymmetric;\n}(Interval);\n\nInterval.Stack = IntervalStack;\nInterval.Dodge = IntervalDodge;\nInterval.Symmetric = IntervalSymmetric;\nGeomBase.Interval = Interval;\nGeomBase.IntervalStack = IntervalStack;\nGeomBase.IntervalDodge = IntervalDodge;\nGeomBase.IntervalSymmetric = IntervalSymmetric;\nmodule.exports = Interval;\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview interval shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar PathUtil = __webpack_require__(22);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nvar G = __webpack_require__(16);\n\nvar GPathUtil = Util.PathUtil; // 获取柱状图的几个点\n\nfunction getRectPoints(cfg, isPyramid) {\n  var x = cfg.x;\n  var y = cfg.y;\n  var y0 = cfg.y0; // 0 点的位置\n\n  var width = cfg.size; // 有3种情况，\n  // 1. y，x都不是数组\n  // 2. y是数组，x不是\n  // 3. x是数组，y不是\n\n  var ymin = y0;\n  var ymax = y;\n\n  if (Util.isArray(y)) {\n    ymax = y[1];\n    ymin = y[0];\n  }\n\n  var xmin;\n  var xmax;\n\n  if (Util.isArray(x)) {\n    xmin = x[0];\n    xmax = x[1];\n  } else {\n    xmin = x - width / 2;\n    xmax = x + width / 2;\n  }\n\n  var points = [];\n  points.push({\n    x: xmin,\n    y: ymin\n  }, {\n    x: xmin,\n    y: ymax\n  });\n\n  if (isPyramid) {\n    points.push({\n      x: xmax,\n      y: (ymax + ymin) / 2\n    });\n  } else {\n    points.push({\n      x: xmax,\n      y: ymax\n    }, {\n      x: xmax,\n      y: ymin\n    });\n  }\n\n  return points;\n}\n\nfunction getRectPath(points) {\n  var path = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n\n    if (point) {\n      var action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n\n  var first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n  return path;\n}\n\nfunction getLinePoints(cfg) {\n  var x = cfg.x;\n  var y = cfg.y;\n  var y0 = cfg.y0; // 0 点的位置\n\n  var points = [];\n\n  if (Util.isArray(y)) {\n    Util.each(y, function (yItem, idx) {\n      points.push({\n        x: Util.isArray(x) ? x[idx] : x,\n        y: yItem\n      });\n    });\n  } else {\n    points.push({\n      x: x,\n      y: y\n    }, {\n      x: x,\n      y: y0\n    });\n  }\n\n  return points;\n}\n\nfunction getTickPoints(cfg) {\n  var x = cfg.x;\n  var y = Util.isArray(cfg.y) ? cfg.y[1] : cfg.y;\n  var y0 = Util.isArray(cfg.y) ? cfg.y[0] : cfg.y0;\n  var barWidth = cfg.size;\n  var points = [];\n  points.push({\n    x: x - barWidth / 2,\n    y: y\n  }, {\n    x: x + barWidth / 2,\n    y: y\n  }, {\n    x: x,\n    y: y\n  }, {\n    x: x,\n    y: y0\n  }, {\n    x: x - barWidth / 2,\n    y: y0\n  }, {\n    x: x + barWidth / 2,\n    y: y0\n  });\n  return points;\n}\n\nfunction getTickPath(points) {\n  var path = [];\n  path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]);\n  return path;\n}\n\nfunction getFillAttrs(cfg) {\n  var defaultAttrs = Global.shape.interval;\n  var attrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(attrs, cfg);\n\n  if (cfg.color) {\n    attrs.stroke = attrs.stroke || cfg.color;\n  }\n\n  return attrs;\n}\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = Global.shape.hollowInterval;\n  var attrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(attrs, cfg);\n  return attrs;\n}\n\nfunction getFunnelPath(cfg, isFunnel) {\n  var path = [];\n  var points = cfg.points;\n  var nextPoints = cfg.nextPoints;\n\n  if (!Util.isNil(nextPoints)) {\n    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', nextPoints[1].x, nextPoints[1].y], ['L', nextPoints[0].x, nextPoints[0].y], ['Z']);\n  } else if (isFunnel) {\n    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']);\n  } else {\n    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[2].x, points[2].y], ['Z']);\n  }\n\n  return path;\n}\n\nfunction getThetaCfg(point, coord) {\n  var r = coord.getRadius();\n  var inner = coord.innerRadius;\n  var startAngle;\n  var endAngle;\n  var ir = r * inner;\n  var startPoint;\n  var endPoint;\n\n  if (!Util.isArray(point.x) && Util.isArray(point.y)) {\n    point.x = [point.x, point.x]; // 如果x是一个值，y是数组，将x转成数组\n  }\n\n  if (Util.isArray(point.x)) {\n    startPoint = {\n      x: point.x[0],\n      y: point.y[0]\n    };\n    endPoint = {\n      x: point.x[1],\n      y: point.y[1]\n    };\n    startAngle = PathUtil.getPointAngle(coord, startPoint);\n    endAngle = PathUtil.getPointAngle(coord, endPoint);\n\n    if (endAngle <= startAngle) {\n      // 考虑占比百分百的情形\n      endAngle = endAngle + Math.PI * 2;\n    }\n  } else {\n    endPoint = point;\n    startAngle = coord.startAngle;\n    endAngle = PathUtil.getPointAngle(coord, endPoint);\n  }\n\n  return {\n    r: r,\n    ir: ir,\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n} // 获取选中时的样式，当前仅支持饼图\n\n\nfunction _getSelectedCfg(type, cfg) {\n  var geom = cfg.geom;\n  var coord = geom.get('coord');\n  var point = cfg.point;\n  var r = 7.5;\n  var selectedCfg;\n\n  if (coord && coord.type === 'theta') {\n    var thetaCfg = getThetaCfg(point, coord);\n    var middleAngle = (thetaCfg.endAngle - thetaCfg.startAngle) / 2 + thetaCfg.startAngle;\n    var x = r * Math.cos(middleAngle);\n    var y = r * Math.sin(middleAngle);\n    selectedCfg = {\n      transform: [['t', x, y]]\n    };\n  }\n\n  return Util.mix({}, selectedCfg);\n}\n\nvar Interval = Shape.registerFactory('interval', {\n  defaultShapeType: 'rect',\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    if (!type || Util.inArray(['rect', 'funnel', 'pyramid'], type)) {\n      // 透明度降低 0.15\n      var fillOpacity = cfg.fillOpacity || cfg.opacity || 1;\n      return {\n        fillOpacity: fillOpacity - 0.15\n      };\n    }\n\n    var lineWidth = cfg.lineWidth || 0;\n    return {\n      lineWidth: lineWidth + 1\n    };\n  },\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return getRectPoints(pointInfo);\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    return _getSelectedCfg(type, cfg);\n  }\n}); // 默认柱状图\n\nShape.registerShape('interval', 'rect', {\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var path = getRectPath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var rectCfg = getFillAttrs(cfg);\n    var isInCircle = cfg.isInCircle;\n    return Util.mix({\n      symbol: isInCircle ? 'circle' : 'square',\n      radius: isInCircle ? 4.5 : 4\n    }, rectCfg);\n  }\n}); // 空心柱状图\n\nShape.registerShape('interval', 'hollowRect', {\n  draw: function draw(cfg, container) {\n    var attrs = getLineAttrs(cfg);\n    var path = getRectPath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var rectCfg = getLineAttrs(cfg);\n    var isInCircle = cfg.isInCircle;\n    return Util.mix({\n      symbol: isInCircle ? 'circle' : 'square',\n      radius: isInCircle ? 4.5 : 4\n    }, rectCfg);\n  }\n}); // 线形柱状图\n\nShape.registerShape('interval', 'line', {\n  getPoints: function getPoints(pointInfo) {\n    return getLinePoints(pointInfo);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getLineAttrs(cfg);\n    attrs.lineWidth = cfg.size || 1; // size 就是线的宽度\n\n    var path = getRectPath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var lineCfg = getLineAttrs(cfg);\n    return Util.mix({\n      symbol: 'line',\n      radius: 5\n    }, lineCfg);\n  }\n}); // 钉子形的柱状图\n\nShape.registerShape('interval', 'tick', {\n  getPoints: function getPoints(pointInfo) {\n    return getTickPoints(pointInfo);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getLineAttrs(cfg); // @2018-12-25 by blue.lb 经过测试发现size代表的是宽度，而style中的lineWidth才是设置线宽，放在interval暂时先特殊处理\n\n    if (!attrs.lineWidth) {\n      attrs.lineWidth = 2;\n    }\n\n    var path = getTickPath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var lineCfg = getLineAttrs(cfg);\n    return Util.mix({\n      symbol: 'tick',\n      radius: 5\n    }, lineCfg);\n  }\n}); // 漏斗图\n\nShape.registerShape('interval', 'funnel', {\n  getPoints: function getPoints(pointInfo) {\n    pointInfo.size = pointInfo.size * 2; // 漏斗图的 size 是柱状图的两倍\n\n    return getRectPoints(pointInfo);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var path = getFunnelPath(cfg, true);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var funnelCfg = getFillAttrs(cfg);\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, funnelCfg);\n  }\n}); // 金字塔图\n\nShape.registerShape('interval', 'pyramid', {\n  getPoints: function getPoints(pointInfo) {\n    pointInfo.size = pointInfo.size * 2; // 漏斗图的 size 是柱状图的两倍\n\n    return getRectPoints(pointInfo, true);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var path = getFunnelPath(cfg, false);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var funnelCfg = getFillAttrs(cfg);\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, funnelCfg);\n  }\n}); // 水波图\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n * @return {Array} 正弦片段曲线\n */\n\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  } else if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  } else if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param  {number} radius          半径\n * @param  {number} waterLevel      水位\n * @param  {number} waveLength      波长\n * @param  {number} phase           相位\n * @param  {number} amplitude       震幅\n * @param  {number} cx              圆心x\n * @param  {number} cy              圆心y\n * @return {Array}  path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\n\n\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 2;\n  var path = []; // map phase to [-Math.PI * 2, 0]\n\n  while (phase < -Math.PI * 2) {\n    phase += Math.PI * 2;\n  }\n\n  while (phase > 0) {\n    phase -= Math.PI * 2;\n  }\n\n  phase = phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n\n  var waveRight = 0;\n\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n\n\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['L', left, waterLevel]);\n  return path;\n}\n/**\n * 添加水波\n * @param {number} x           中心x\n * @param {number} y           中心y\n * @param {number} level       水位等级 0～1\n * @param {number} waveCount   水波数\n * @param {number} colors      色值\n * @param {number} group       图组\n * @param {number} clip        用于剪切的图形\n * @param {number} radius      绘制图形的高度\n */\n\n\nfunction addWaterWave(x, y, level, waveCount, colors, group, clip, radius) {\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY;\n  var duration = 5000;\n  var delayDiff = 300;\n\n  for (var i = 0; i < waveCount; i++) {\n    var wave = group.addShape('path', {\n      attrs: {\n        path: getWaterWavePath(radius, bbox.minY + height * level, width / 4, 0, width / 64, x, y),\n        fill: colors[i],\n        clip: clip\n      }\n    }); // FIXME wave animation error in svg\n\n    if (Global.renderer === 'canvas') {\n      wave.animate({\n        transform: [['t', width / 2, 0]],\n        repeat: true\n      }, duration - i * delayDiff);\n    }\n  }\n}\n\nShape.registerShape('interval', 'liquid-fill-gauge', {\n  draw: function draw(cfg, container) {\n    var self = this;\n    var cy = 0.5;\n    var sumX = 0;\n    var minX = Infinity;\n    Util.each(cfg.points, function (p) {\n      if (p.x < minX) {\n        minX = p.x;\n      }\n\n      sumX += p.x;\n    });\n    var cx = sumX / cfg.points.length;\n    var cp = self.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minP = self.parsePoint({\n      x: minX,\n      y: 0.5\n    });\n    var xWidth = cp.x - minP.x;\n    var radius = Math.min(xWidth, minP.y);\n    var attrs = getFillAttrs(cfg);\n    var clipCircle = new G.Circle({\n      attrs: {\n        x: cp.x,\n        y: cp.y,\n        r: radius\n      }\n    });\n    addWaterWave(cp.x, cp.y, cfg.y / (2 * cp.y), 1, [attrs.fill], container, clipCircle, radius * 4);\n    return container.addShape('circle', {\n      attrs: Util.mix(getLineAttrs(cfg), {\n        x: cp.x,\n        y: cp.y,\n        r: radius + radius / 8\n      })\n    });\n  }\n});\nvar pathMetaCache = {};\nShape.registerShape('interval', 'liquid-fill-path', {\n  draw: function draw(cfg, container) {\n    var self = this;\n    var attrs = Util.mix({}, getFillAttrs(cfg));\n    var path = cfg.shape[1];\n    var cy = 0.5;\n    var sumX = 0;\n    var minX = Infinity;\n    Util.each(cfg.points, function (p) {\n      if (p.x < minX) {\n        minX = p.x;\n      }\n\n      sumX += p.x;\n    });\n    var cx = sumX / cfg.points.length;\n    var cp = self.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minP = self.parsePoint({\n      x: minX,\n      y: 0.5\n    });\n    var xWidth = cp.x - minP.x;\n    var radius = Math.min(xWidth, minP.y);\n    var pathMeta;\n\n    if (pathMetaCache[path]) {\n      pathMeta = pathMetaCache[path];\n    } else {\n      var segments = GPathUtil.parsePathString(path);\n      pathMetaCache[path] = pathMeta = {\n        segments: segments\n      };\n    }\n\n    var transform = [];\n\n    if (attrs.rotate) {\n      transform.push(['r', attrs.rotate / 180 * Math.PI]);\n      delete attrs.rotate;\n    }\n\n    var shape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        fillOpacity: 0,\n        path: pathMeta.segments\n      })\n    });\n    var bbox = Util.cloneDeep(shape.getBBox());\n    var rangeX = bbox.maxX - bbox.minX;\n    var rangeY = bbox.maxY - bbox.minY;\n    var range = Math.max(rangeX, rangeY);\n    var scale = radius * 2 / range;\n    shape.transform(transform.concat([['s', scale, scale]]));\n    var dw = scale * rangeX / 2; // (bbox.maxX - bbox.minX) / 2;\n\n    var dh = scale * rangeY / 2; // (bbox.maxY - bbox.minY) / 2;\n\n    shape.transform([['t', cp.x - dw, cp.y - dh]]);\n    addWaterWave(cp.x, cp.y, cfg.y / (2 * cp.y), 1, [attrs.fill], container, shape, minP.y * 4);\n    var keyShape = container.addShape('path', {\n      attrs: Util.mix(getLineAttrs(cfg), {\n        path: pathMeta.segments\n      })\n    });\n    keyShape.transform(transform.concat([['s', scale, scale], ['t', cp.x - dw, cp.y - dh]]));\n    return keyShape;\n  }\n});\nShape.registerShape('interval', 'top-line', {\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var style = cfg.style || {};\n    var linePath = [['M', cfg.points[1].x, cfg.points[1].y], ['L', cfg.points[2].x, cfg.points[2].y]];\n    var lineAttrs = {\n      stroke: style.stroke || 'white',\n      lineWidth: style.lineWidth || 1,\n      path: this.parsePath(linePath)\n    };\n    var path = getRectPath(cfg.points);\n    path = this.parsePath(path);\n    delete attrs.stroke; // 不在柱子上绘制线\n\n    var rectShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        zIndex: 0,\n        path: path\n      })\n    });\n    container.addShape('path', {\n      zIndex: 1,\n      attrs: lineAttrs\n    });\n    return rectShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var rectCfg = getFillAttrs(cfg);\n    var isInCircle = cfg.isInCircle;\n    return Util.mix({\n      symbol: isInCircle ? 'circle' : 'square',\n      radius: isInCircle ? 4.5 : 4\n    }, rectCfg);\n  }\n});\nmodule.exports = Interval;\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 线图\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Path = __webpack_require__(359);\n\n__webpack_require__(367);\n\nvar Line =\n/*#__PURE__*/\nfunction (_Path) {\n  _inheritsLoose(Line, _Path);\n\n  function Line() {\n    return _Path.apply(this, arguments) || this;\n  }\n\n  var _proto = Line.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Path.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'line';\n    cfg.sortable = true;\n    return cfg;\n  };\n\n  return Line;\n}(Path);\n\nvar LineStack =\n/*#__PURE__*/\nfunction (_Line) {\n  _inheritsLoose(LineStack, _Line);\n\n  function LineStack() {\n    return _Line.apply(this, arguments) || this;\n  }\n\n  var _proto2 = LineStack.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Line.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'stack'\n    }];\n    return cfg;\n  };\n\n  return LineStack;\n}(Line);\n\nLine.Stack = LineStack;\nGeomBase.Line = Line;\nGeomBase.LineStack = LineStack;\nmodule.exports = Line;\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview line shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n */\nvar Util = __webpack_require__(0);\n\nvar PathUtil = __webpack_require__(22);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Shape = __webpack_require__(18);\n\nvar Global = __webpack_require__(7);\n\nvar DOT_ARR = [1, 1];\nvar DASH_ARR = [5.5, 1];\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.line;\n  var lineAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(lineAttrs, cfg);\n\n  if (cfg.size) {\n    lineAttrs.lineWidth = cfg.size;\n  }\n\n  return lineAttrs;\n}\n\nfunction getMarkerAttrs(cfg) {\n  var defaultCfg = Global.shape.line;\n  var lineAttrs = Util.mix({\n    lineWidth: 2,\n    radius: 6\n  }, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(lineAttrs, cfg);\n  return lineAttrs;\n} // 获取带有上下区间的 path\n\n\nfunction getRangePath(points, smooth, isInCircle, cfg) {\n  var topPoints = [];\n  var isStack = cfg.isStack;\n  var bottomPoints = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    var tmp = ShapeUtil.splitPoints(point);\n    bottomPoints.push(tmp[0]);\n    topPoints.push(tmp[1]);\n  }\n\n  var topPath = getSinglePath(topPoints, smooth, isInCircle, cfg);\n  var bottomPath = getSinglePath(bottomPoints, smooth, isInCircle, cfg);\n\n  if (isStack) {\n    return topPath;\n  }\n\n  return topPath.concat(bottomPath);\n} // 单条 path\n\n\nfunction getSinglePath(points, smooth, isInCircle, cfg) {\n  var path;\n\n  if (!smooth) {\n    path = PathUtil.getLinePath(points, false);\n\n    if (isInCircle) {\n      path.push(['Z']);\n    }\n  } else {\n    // 直角坐标系下绘制曲线时限制最大值、最小值\n    var constraint = cfg.constraint;\n\n    if (isInCircle && points.length) {\n      points.push({\n        x: points[0].x,\n        y: points[0].y\n      });\n    }\n\n    path = PathUtil.getSplinePath(points, false, constraint);\n  }\n\n  return path;\n} // get line path\n\n\nfunction getPath(cfg, smooth) {\n  var path;\n  var points = cfg.points;\n  var isInCircle = cfg.isInCircle;\n  var first = points[0];\n\n  if (Util.isArray(first.y)) {\n    path = getRangePath(points, smooth, isInCircle, cfg);\n  } else {\n    path = getSinglePath(points, smooth, isInCircle, cfg);\n  }\n\n  return path;\n}\n\nfunction _interpPoints(points, fn) {\n  var tmpPoints = [];\n  Util.each(points, function (point, index) {\n    var nextPoint = points[index + 1];\n    tmpPoints.push(point);\n\n    if (nextPoint) {\n      tmpPoints = tmpPoints.concat(fn(point, nextPoint));\n    }\n  });\n  return tmpPoints;\n} // 插值的图形path，不考虑null\n\n\nfunction _getInterPath(points) {\n  var path = [];\n  Util.each(points, function (point, index) {\n    var subPath = index === 0 ? ['M', point.x, point.y] : ['L', point.x, point.y];\n    path.push(subPath);\n  });\n  return path;\n} // 插值的图形\n\n\nfunction _getInterPointShapeCfg(cfg, fn) {\n  var points = _interpPoints(cfg.points, fn);\n\n  return _getInterPath(points);\n}\n\nfunction _markerFn(x, y, r) {\n  return [['M', x - r, y], ['L', x + r, y]];\n}\n\nfunction _smoothMarkerFn(x, y, r) {\n  return [['M', x - r, y], ['A', r / 2, r / 2, 0, 1, 1, x, y], ['A', r / 2, r / 2, 0, 1, 0, x + r, y]];\n} // get marker cfg\n\n\nfunction _getMarkerCfg(cfg, smooth) {\n  return Util.mix({\n    symbol: smooth ? _smoothMarkerFn : _markerFn\n  }, getMarkerAttrs(cfg));\n}\n\nfunction _getInterMarkerCfg(cfg, fn) {\n  return Util.mix({\n    symbol: fn\n  }, getMarkerAttrs(cfg));\n} // 当只有一个数据时绘制点\n\n\nfunction drawPointShape(shapeObj, cfg, container) {\n  var point = cfg.points[0];\n  return container.addShape('circle', {\n    attrs: Util.mix({\n      x: point.x,\n      y: point.y,\n      r: 2,\n      fill: cfg.color\n    }, cfg.style)\n  });\n} // regist line geom\n\n\nvar Line = Shape.registerFactory('line', {\n  // 默认的shape\n  defaultShapeType: 'line',\n\n  /* getMarkerCfg(type, cfg) {\n    const lineObj = Line[type] || Line.line;\n    return lineObj.getMarkerCfg(cfg);\n  }, */\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 0;\n    return {\n      lineWidth: lineWidth + 1\n    };\n  },\n  // 计算点 如果存在多个点，分割成单个的点, 不考虑多个x对应一个y的情况\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return ShapeUtil.splitPoints(pointInfo);\n  },\n  drawShape: function drawShape(type, cfg, container) {\n    var shape = this.getShape(type);\n    var gShape;\n\n    if (cfg.points.length === 1 && Global.showSinglePoint) {\n      gShape = drawPointShape(this, cfg, container);\n    } else {\n      gShape = shape.draw(cfg, container);\n    }\n\n    if (gShape) {\n      gShape.set('origin', cfg.origin);\n      gShape._id = cfg.splitedIndex ? cfg._id + cfg.splitedIndex : cfg._id;\n      gShape.name = this.name;\n    }\n\n    return gShape;\n  }\n}); // draw line shape\n\nShape.registerShape('line', 'line', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getPath(cfg, false);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg);\n  }\n}); // 点线 ···\n\nShape.registerShape('line', 'dot', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getPath(cfg, false);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path,\n        lineDash: DOT_ARR\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var tmp = _getMarkerCfg(cfg, false);\n\n    tmp.lineDash = DOT_ARR;\n    return tmp;\n  }\n}); // 断线 - - -\n\nShape.registerShape('line', 'dash', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getPath(cfg, false);\n    return container.addShape('path', {\n      attrs: Util.mix({\n        path: path,\n        lineDash: DASH_ARR\n      }, attrs)\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var tmp = _getMarkerCfg(cfg, false);\n\n    tmp.lineDash = tmp.lineDash || DASH_ARR;\n    return tmp;\n  }\n}); // draw smooth line shape\n\nShape.registerShape('line', 'smooth', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var coord = this._coord; // 曲线的限制\n\n    cfg.constraint = [[coord.start.x, coord.end.y], [coord.end.x, coord.start.y]];\n    var path = getPath(cfg, true);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg, true);\n  }\n});\nShape.registerShape('line', 'hv', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n\n    var path = _getInterPointShapeCfg(cfg, function (point, nextPoint) {\n      var tmp = [];\n      tmp.push({\n        x: nextPoint.x,\n        y: point.y\n      });\n      return tmp;\n    });\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getInterMarkerCfg(cfg, function (x, y, r) {\n      return [['M', x - r - 1, y - 2.5], ['L', x, y - 2.5], ['L', x, y + 2.5], ['L', x + r + 1, y + 2.5]];\n    });\n  }\n});\nShape.registerShape('line', 'vh', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n\n    var path = _getInterPointShapeCfg(cfg, function (point, nextPoint) {\n      var tmp = [];\n      tmp.push({\n        x: point.x,\n        y: nextPoint.y\n      });\n      return tmp;\n    });\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getInterMarkerCfg(cfg, function (x, y, r) {\n      return [['M', x - r - 1, y + 2.5], ['L', x, y + 2.5], ['L', x, y - 2.5], ['L', x + r + 1, y - 2.5]];\n    });\n  }\n});\nShape.registerShape('line', 'hvh', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n\n    var path = _getInterPointShapeCfg(cfg, function (point, nextPoint) {\n      var tmp = [];\n      var middlex = (nextPoint.x - point.x) / 2 + point.x;\n      tmp.push({\n        x: middlex,\n        y: point.y\n      });\n      tmp.push({\n        x: middlex,\n        y: nextPoint.y\n      });\n      return tmp;\n    });\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getInterMarkerCfg(cfg, function (x, y, r) {\n      return [['M', x - (r + 1), y + 2.5], ['L', x - r / 2, y + 2.5], ['L', x - r / 2, y - 2.5], ['L', x + r / 2, y - 2.5], ['L', x + r / 2, y + 2.5], ['L', x + r + 1, y + 2.5]];\n    });\n  }\n});\nShape.registerShape('line', 'vhv', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n\n    var path = _getInterPointShapeCfg(cfg, function (point, nextPoint) {\n      var tmp = [];\n      var middley = (nextPoint.y - point.y) / 2 + point.y;\n      tmp.push({\n        x: point.x,\n        y: middley\n      });\n      tmp.push({\n        x: nextPoint.x,\n        y: middley\n      });\n      return tmp;\n    });\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getInterMarkerCfg(cfg, function (x, y) {\n      // 宽 13px，高 8px\n      return [['M', x - 5, y + 2.5], ['L', x - 5, y], ['L', x, y], ['L', x, y - 3], ['L', x, y + 3], ['L', x + 6.5, y + 3]];\n    });\n  }\n});\nLine.spline = Line.smooth;\nmodule.exports = Line;\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 点图\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\n__webpack_require__(369);\n\nvar Point =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Point, _GeomBase);\n\n  function Point() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Point.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'point';\n    cfg.shapeType = 'point';\n    cfg.generatePoints = true;\n    return cfg;\n  };\n\n  _proto.drawPoint = function drawPoint(obj, container, shapeFactory, index) {\n    var self = this;\n    var shape = obj.shape;\n    var cfg = self.getDrawCfg(obj);\n\n    self._applyViewThemeShapeStyle(cfg, shape, shapeFactory);\n\n    var geomShape;\n\n    if (Util.isArray(obj.y)) {\n      var hasAdjust = self.hasStack();\n      Util.each(obj.y, function (y, idx) {\n        cfg.y = y;\n        cfg.yIndex = idx;\n\n        if (!hasAdjust || idx !== 0) {\n          geomShape = shapeFactory.drawShape(shape, cfg, container);\n          self.appendShapeInfo(geomShape, index + idx);\n        }\n      });\n    } else if (!Util.isNil(obj.y)) {\n      geomShape = shapeFactory.drawShape(shape, cfg, container);\n      self.appendShapeInfo(geomShape, index);\n    }\n  };\n\n  return Point;\n}(GeomBase);\n\nvar PointJitter =\n/*#__PURE__*/\nfunction (_Point) {\n  _inheritsLoose(PointJitter, _Point);\n\n  function PointJitter() {\n    return _Point.apply(this, arguments) || this;\n  }\n\n  var _proto2 = PointJitter.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Point.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'jitter'\n    }];\n    return cfg;\n  };\n\n  return PointJitter;\n}(Point);\n\nvar PointStack =\n/*#__PURE__*/\nfunction (_Point2) {\n  _inheritsLoose(PointStack, _Point2);\n\n  function PointStack() {\n    return _Point2.apply(this, arguments) || this;\n  }\n\n  var _proto3 = PointStack.prototype;\n\n  _proto3.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Point2.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'stack'\n    }];\n    return cfg;\n  };\n\n  return PointStack;\n}(Point);\n\nPoint.Jitter = PointJitter;\nPoint.Stack = PointStack;\nGeomBase.Point = Point;\nGeomBase.PointJitter = PointJitter;\nGeomBase.PointStack = PointStack;\nmodule.exports = Point;\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview point shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n */\nvar Util = __webpack_require__(0);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nvar Shape = __webpack_require__(18); // const svgpath = require('svgpath');\n\n\nvar _require = __webpack_require__(16),\n    Marker = _require.Marker;\n\nvar PathUtil = Util.PathUtil;\nvar SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nvar HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line', 'pointerLine', 'pointerArrow'];\nvar SQRT_3 = Math.sqrt(3); // 增加marker\n\nUtil.mix(Marker.Symbols, {\n  hexagon: function hexagon(x, y, r) {\n    var diffX = r / 2 * SQRT_3;\n    return [['M', x, y - r], ['L', x + diffX, y - r / 2], ['L', x + diffX, y + r / 2], ['L', x, y + r], ['L', x - diffX, y + r / 2], ['L', x - diffX, y - r / 2], ['Z']];\n  },\n  bowtie: function bowtie(x, y, r) {\n    var diffY = r - 1.5;\n    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n  },\n  cross: function cross(x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y + r], ['M', x + r, y - r], ['L', x - r, y + r]];\n  },\n  tick: function tick(x, y, r) {\n    return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n  },\n  plus: function plus(x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y], ['M', x, y - r], ['L', x, y + r]];\n  },\n  hyphen: function hyphen(x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y]];\n  },\n  line: function line(x, y, r) {\n    return [['M', x, y - r], ['L', x, y + r]];\n  }\n});\n\nfunction getFillAttrs(cfg) {\n  var defaultAttrs = Global.shape.point;\n  var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(pointAttrs, cfg);\n\n  if (Util.isNumber(cfg.size)) {\n    pointAttrs.radius = cfg.size;\n  }\n\n  return pointAttrs;\n}\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = Global.shape.hollowPoint;\n  var pointAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(pointAttrs, cfg);\n\n  if (Util.isNumber(cfg.size)) {\n    pointAttrs.radius = cfg.size;\n  }\n\n  return pointAttrs;\n}\n\nvar Point = Shape.registerFactory('point', {\n  defaultShapeType: 'hollowCircle',\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    // 点放大 + 颜色加亮\n    var radius = cfg.radius;\n    var color;\n\n    if (type && (type.indexOf('hollow') === 0 || Util.indexOf(HOLLOW_SHAPES, type) !== -1) || !type) {\n      color = cfg.stroke || cfg.strokeStyle;\n    } else {\n      color = cfg.fill || cfg.fillStyle;\n    }\n\n    return {\n      radius: radius + 1,\n      shadowBlur: radius,\n      shadowColor: color,\n      stroke: color,\n      strokeOpacity: 1,\n      lineWidth: 1\n    };\n  },\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return ShapeUtil.splitPoints(pointInfo);\n  }\n});\n\nfunction getRectPath(cfg) {\n  var x = cfg.points[0].x;\n  var y = cfg.points[0].y;\n  var w = cfg.size[0];\n  var h = cfg.size[1];\n  var path = [['M', x - 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y - 0.5 * h], ['L', x + 0.5 * w, y + 0.5 * h], ['L', x - 0.5 * w, y + 0.5 * h], ['z']];\n  return path;\n} // 用于桑基图的节点\n\n\nShape.registerShape('point', 'rect', {\n  draw: function draw(cfg, container) {\n    var rectAttrs = getFillAttrs(cfg);\n    var path = getRectPath(cfg);\n    path = this.parsePath(path);\n    var gShape = container.addShape('path', {\n      attrs: Util.mix(rectAttrs, {\n        path: path\n      })\n    });\n    return gShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    var attrs = getFillAttrs(cfg);\n    attrs.symbol = 'rect';\n    attrs.radius = 4.5;\n    return attrs;\n  }\n}); // 添加shapes\n\nUtil.each(SHAPES, function (shape) {\n  Shape.registerShape('point', shape, {\n    draw: function draw(cfg, container) {\n      // cfg.points = this.parsePoints(cfg.points);\n      var attrs = getFillAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getFillAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  }); // 添加该 shape 对应的 hollowShape\n\n  Shape.registerShape('point', 'hollow' + Util.upperFirst(shape), {\n    draw: function draw(cfg, container) {\n      // cfg.points = this.parsePoints(cfg.points);\n      var attrs = getLineAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getLineAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  });\n}); // 添加 hollowShapes\n\nUtil.each(HOLLOW_SHAPES, function (shape) {\n  Shape.registerShape('point', shape, {\n    draw: function draw(cfg, container) {\n      var attrs = getLineAttrs(cfg);\n      return container.addShape('Marker', {\n        attrs: Util.mix(attrs, {\n          symbol: shape,\n          x: cfg.x,\n          y: cfg.y\n        })\n      });\n    },\n    getMarkerCfg: function getMarkerCfg(cfg) {\n      var attrs = getLineAttrs(cfg);\n      attrs.symbol = shape;\n      attrs.radius = 4.5;\n      return attrs;\n    }\n  });\n}); // image\n\nShape.registerShape('point', 'image', {\n  draw: function draw(cfg, container) {\n    cfg.points = this.parsePoints(cfg.points);\n    return container.addShape('image', {\n      attrs: {\n        x: cfg.points[0].x - cfg.size / 2,\n        y: cfg.points[0].y - cfg.size,\n        width: cfg.size,\n        height: cfg.size,\n        img: cfg.shape[1]\n      }\n    });\n  }\n}); // path\n\nvar pathMetaCache = {};\nShape.registerShape('point', 'path', {\n  draw: function draw(cfg, container) {\n    var attrs = Util.mix({}, getLineAttrs(cfg), getFillAttrs(cfg));\n    var path = cfg.shape[1];\n    var size = cfg.size || 10;\n    var pathMeta;\n\n    if (pathMetaCache[path]) {\n      pathMeta = pathMetaCache[path];\n    } else {\n      var segments = PathUtil.parsePathString(path);\n      var nums = Util.flatten(segments).filter(function (num) {\n        return Util.isNumber(num);\n      });\n      pathMetaCache[path] = pathMeta = {\n        range: Math.max.apply(null, nums) - Math.min.apply(null, nums),\n        segments: segments\n      };\n    }\n\n    var scale = size / pathMeta.range;\n    var transform = [];\n\n    if (attrs.rotate) {\n      transform.push(['r', attrs.rotate / 180 * Math.PI]);\n      delete attrs.rotate;\n    }\n\n    var shape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: pathMeta.segments\n      })\n    });\n    transform.push(['s', scale, scale], ['t', cfg.x, cfg.y]);\n    shape.transform(transform);\n    return shape;\n  }\n});\nmodule.exports = Point;\n\n/***/ }),\n/* 370 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__namespaces__ = __webpack_require__(371);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return __WEBPACK_IMPORTED_MODULE_0__namespaces__[\"a\" /* default */].hasOwnProperty(prefix) ? {\n    space: __WEBPACK_IMPORTED_MODULE_0__namespaces__[\"a\" /* default */][prefix],\n    local: name\n  } : name;\n});\n\n/***/ }),\n/* 371 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return xhtml; });\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n});\n\n/***/ }),\n/* 372 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction none() {}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n});\n\n/***/ }),\n/* 373 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n});\n\n/***/ }),\n/* 374 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return event; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = customEvent;\nvar filterEvents = {};\nvar event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\n  return this;\n});\nfunction customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n\n/***/ }),\n/* 375 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__selection_on__ = __webpack_require__(374);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var current = __WEBPACK_IMPORTED_MODULE_0__selection_on__[\"c\" /* event */],\n      source;\n\n  while (source = current.sourceEvent) current = source;\n\n  return current;\n});\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (chart) {\n  var scaleController = chart.get('scaleController') || {};\n  return scaleController.defs;\n};\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getColDefs = __webpack_require__(376);\n\nmodule.exports = function (chart, field) {\n  var colDefs = getColDefs(chart);\n\n  if (colDefs && colDefs[field]) {\n    return colDefs[field];\n  }\n};\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nvar TimeUtil = __webpack_require__(71);\n\nmodule.exports = function (data, scale) {\n  var result;\n  var field = scale.field,\n      type = scale.type;\n  var values = Util.Array.values(data, field);\n\n  if (type === 'linear') {\n    result = Util.Array.getRange(values);\n\n    if (scale.min < result.min) {\n      result.min = scale.min;\n    }\n\n    if (scale.max > result.max) {\n      result.max = scale.max;\n    }\n  } else if (type === 'timeCat') {\n    Util.each(values, function (v, i) {\n      values[i] = TimeUtil.toTimeStamp(v);\n    });\n    values.sort(function (v1, v2) {\n      return v1 - v2;\n    });\n    result = values;\n  } else {\n    result = values;\n  }\n\n  return result;\n};\n\n/***/ }),\n/* 379 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__selection_index__ = __webpack_require__(69);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (selector) {\n  return typeof selector === \"string\" ? new __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"a\" /* Selection */]([[document.querySelector(selector)]], [document.documentElement]) : new __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"a\" /* Selection */]([[selector]], __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"c\" /* root */]);\n});\n\n/***/ }),\n/* 380 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction empty() {\n  return [];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n});\n\n/***/ }),\n/* 381 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar matcher = function (selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function (selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (matcher);\n\n/***/ }),\n/* 382 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = EnterNode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sparse__ = __webpack_require__(383);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(69);\n\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (function () {\n  return new __WEBPACK_IMPORTED_MODULE_1__index__[\"a\" /* Selection */](this._enter || this._groups.map(__WEBPACK_IMPORTED_MODULE_0__sparse__[\"a\" /* default */]), this._parents);\n});\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function (child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function (child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function (selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function (selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};\n\n/***/ }),\n/* 383 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (update) {\n  return new Array(update.length);\n});\n\n/***/ }),\n/* 384 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = styleValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__window__ = __webpack_require__(373);\n\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n});\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name) || Object(__WEBPACK_IMPORTED_MODULE_0__window__[\"a\" /* default */])(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\n/***/ }),\n/* 385 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transition_schedule__ = __webpack_require__(70);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > __WEBPACK_IMPORTED_MODULE_0__transition_schedule__[\"d\" /* STARTING */] && schedule.state < __WEBPACK_IMPORTED_MODULE_0__transition_schedule__[\"b\" /* ENDING */];\n    schedule.state = __WEBPACK_IMPORTED_MODULE_0__transition_schedule__[\"a\" /* ENDED */];\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n});\n\n/***/ }),\n/* 386 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_interpolate__ = __webpack_require__(117);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (a, b) {\n  var c;\n  return (typeof b === \"number\" ? __WEBPACK_IMPORTED_MODULE_1_d3_interpolate__[\"interpolateNumber\"] : b instanceof __WEBPACK_IMPORTED_MODULE_0_d3_color__[\"a\" /* color */] ? __WEBPACK_IMPORTED_MODULE_1_d3_interpolate__[\"interpolateRgb\"] : (c = Object(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"a\" /* color */])(b)) ? (b = c, __WEBPACK_IMPORTED_MODULE_1_d3_interpolate__[\"interpolateRgb\"]) : __WEBPACK_IMPORTED_MODULE_1_d3_interpolate__[\"interpolateString\"])(a, b);\n});\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 分面的基类\n * @author dxq613@gmail.com\n */\nvar Base = __webpack_require__(363);\n/**\n * 矩形的 facet 有以下属性：\n * - colField 列的字段\n * - rowField 行的字段\n * - colValue 列字段的值\n * - rowValue 行字段的值\n * - cols 列数\n * - rows 行数\n * - colIndex 列的序号\n * - rowIndex 行的序号\n */\n\n/**\n * 用于生成分面的类\n * @class Facets.Rect\n */\n\n\nvar Rect =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Rect, _Base);\n\n  function Rect() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Rect.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'rect';\n    return cfg;\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields; // var defs = self.defs;\n\n    var rst = [];\n    var rows = 1;\n    var cols = 1;\n    var colField = fields[0];\n    var rowField = fields[1];\n    var colValues = [''];\n    var rowValues = [''];\n\n    if (colField) {\n      colValues = self.getFieldValues(colField, data);\n      cols = colValues.length;\n    }\n\n    if (rowField) {\n      rowValues = self.getFieldValues(rowField, data);\n      rows = rowValues.length;\n    } // 获取每个维度对应的frame\n\n\n    colValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: colField,\n          value: xVal,\n          values: colValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var filter = self.getFilter(conditions);\n        var subData = data.filter(filter);\n        var facet = {\n          type: self.type,\n          colValue: xVal,\n          rowValue: yVal,\n          colField: colField,\n          rowField: rowField,\n          colIndex: xIndex,\n          rowIndex: yIndex,\n          cols: cols,\n          rows: rows,\n          data: subData,\n          region: self.getRegion(rows, cols, xIndex, yIndex)\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  }; // 设置 x 坐标轴的文本、title 是否显示\n\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    if (facet.rowIndex !== facet.rows - 1) {\n      axes[xField].title = null;\n      axes[xField].label = null;\n    } else if (facet.colIndex !== parseInt((facet.cols - 1) / 2)) {\n      axes[xField].title = null;\n    }\n  }; // 设置 y 坐标轴的文本、title 是否显示\n\n\n  _proto.setYAxis = function setYAxis(yField, axes, facet) {\n    if (facet.colIndex !== 0) {\n      axes[yField].title = null;\n      axes[yField].label = null;\n    } else if (facet.rowIndex !== parseInt((facet.rows - 1) / 2)) {\n      axes[yField].title = null;\n    }\n  };\n\n  _proto.renderTitle = function renderTitle(view, facet) {\n    if (facet.rowIndex === 0) {\n      this.drawColTitle(view, facet);\n    }\n\n    if (facet.colIndex === facet.cols - 1) {\n      this.drawRowTitle(view, facet);\n    }\n  };\n\n  return Rect;\n}(Base);\n\nmodule.exports = Rect;\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview list facets, support cols\n */\nvar Base = __webpack_require__(363);\n/**\n * 用于生成分面的类\n * @class Facets.List\n */\n\n\nvar List =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(List, _Base);\n\n  function List() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'list';\n    cfg.cols = null; // 用户不设置时就显示一行\n\n    return cfg;\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields;\n    var colField = fields[0];\n\n    if (!colField) {\n      throw 'Please specify for the field for facet!';\n    }\n\n    var colValues = self.getFieldValues(colField, data);\n    var count = colValues.length;\n    var cols = self.cols || count;\n    var rows = parseInt((count + cols - 1) / cols);\n    var rst = [];\n    colValues.forEach(function (xVal, index) {\n      var row = parseInt(index / cols);\n      var col = index % cols;\n      var conditions = [{\n        field: colField,\n        value: xVal,\n        values: colValues\n      }];\n      var filter = self.getFilter(conditions);\n      var subData = data.filter(filter);\n      var facet = {\n        type: self.type,\n        count: count,\n        colValue: xVal,\n        colField: colField,\n        rowField: null,\n        rowValue: xVal,\n        colIndex: col,\n        rowIndex: row,\n        cols: cols,\n        rows: rows,\n        data: subData,\n        region: self.getRegion(rows, cols, col, row)\n      };\n      rst.push(facet);\n    });\n    return rst;\n  }; // 设置 x 坐标轴的文本、title 是否显示\n\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.rowIndex !== facet.rows - 1 && facet.cols * facet.rowIndex + facet.colIndex + 1 + facet.cols <= facet.count) {\n      axes[xField].label = null;\n      axes[xField].title = null;\n    }\n  }; // 设置 y 坐标轴的文本、title 是否显示\n\n\n  _proto.setYAxis = function setYAxis(yField, axes, facet) {\n    if (facet.colIndex !== 0) {\n      axes[yField].title = null;\n      axes[yField].label = null;\n    }\n  };\n\n  return List;\n}(Base);\n\nmodule.exports = List;\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar G2 = __webpack_require__(172); // geoms\n\n\n__webpack_require__(390);\n\n__webpack_require__(392);\n\n__webpack_require__(394);\n\n__webpack_require__(364);\n\n__webpack_require__(366);\n\n__webpack_require__(359);\n\n__webpack_require__(368);\n\n__webpack_require__(395);\n\n__webpack_require__(397);\n\n__webpack_require__(399);\n\n__webpack_require__(459); // facets\n\n\n__webpack_require__(461); // interaction\n\n\n__webpack_require__(466);\n\nmodule.exports = G2;\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview 面积图\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar SplitMixin = __webpack_require__(358);\n\nvar Util = __webpack_require__(0);\n\n__webpack_require__(391);\n\nvar Area =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Area, _GeomBase);\n\n  var _proto = Area.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'area';\n    cfg.shapeType = 'area';\n    cfg.generatePoints = true;\n    cfg.sortable = true;\n    return cfg;\n  };\n\n  function Area(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SplitMixin);\n    return _this;\n  }\n\n  _proto.draw = function draw(data, container, shapeFactory, index) {\n    var self = this;\n    var cfg = this.getDrawCfg(data[0]);\n\n    self._applyViewThemeShapeStyle(cfg, cfg.shape, shapeFactory);\n\n    var splitArray = this.splitData(data);\n    cfg.origin = data; // path,line,area 等图的origin 是整个序列\n\n    Util.each(splitArray, function (subData, splitedIndex) {\n      cfg.splitedIndex = splitedIndex; // 传入分割片段索引 用于生成id\n\n      var points = subData.map(function (obj) {\n        return obj.points;\n      });\n      cfg.points = points;\n      var geomShape = shapeFactory.drawShape(cfg.shape, cfg, container);\n      self.appendShapeInfo(geomShape, index + splitedIndex);\n    });\n  };\n\n  return Area;\n}(GeomBase);\n\nvar AreaStack =\n/*#__PURE__*/\nfunction (_Area) {\n  _inheritsLoose(AreaStack, _Area);\n\n  function AreaStack() {\n    return _Area.apply(this, arguments) || this;\n  }\n\n  var _proto2 = AreaStack.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Area.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'stack'\n    }];\n    return cfg;\n  };\n\n  return AreaStack;\n}(Area);\n\nArea.Stack = AreaStack;\nGeomBase.Area = Area;\nGeomBase.AreaStack = AreaStack;\nmodule.exports = Area;\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview area shape\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar PathUtil = __webpack_require__(22);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = Global.shape.hollowArea;\n  var lineAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(lineAttrs, cfg);\n\n  if (Util.isNumber(cfg.size)) {\n    lineAttrs.lineWidth = cfg.size;\n  }\n\n  return lineAttrs;\n}\n\nfunction getFillAttrs(cfg) {\n  var defaultAttrs = Global.shape.area;\n  var areaAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(areaAttrs, cfg);\n\n  if (cfg.color) {\n    areaAttrs.stroke = areaAttrs.stroke || cfg.color;\n  }\n\n  if (Util.isNumber(cfg.size)) {\n    areaAttrs.lineWidth = cfg.size;\n  }\n\n  return areaAttrs;\n}\n\nfunction getPath(cfg, smooth, shape) {\n  var path = [];\n  var pointsArr = [];\n  var topLinePoints = []; // area 区域上部分\n\n  var bottomLinePoints = []; // area 区域下部分\n\n  var isInCircle = cfg.isInCircle;\n  Util.each(cfg.points, function (point) {\n    topLinePoints.push(point[1]);\n    bottomLinePoints.push(point[0]);\n  }); // if (!isInCircle) {\n\n  bottomLinePoints = bottomLinePoints.reverse(); // }\n\n  pointsArr.push(topLinePoints, bottomLinePoints);\n  Util.each(pointsArr, function (points, index) {\n    var subPath = [];\n    points = shape.parsePoints(points);\n    var p1 = points[0];\n\n    if (isInCircle) {\n      points.push({\n        x: p1.x,\n        y: p1.y\n      });\n    }\n\n    if (smooth) {\n      subPath = PathUtil.getSplinePath(points, false, cfg.constraint);\n    } else {\n      subPath = PathUtil.getLinePath(points, false);\n    }\n\n    if (index > 0) {\n      subPath[0][0] = 'L';\n    }\n\n    path = path.concat(subPath);\n  });\n  path.push(['Z']);\n  return path;\n} // get marker cfg\n\n\nfunction _getMarkerCfg(cfg) {\n  return {\n    symbol: function symbol(x, y) {\n      return [['M', x - 5.5, y - 4], ['L', x + 5.5, y - 4], ['L', x + 5.5, y + 4], ['L', x - 5.5, y + 4], ['Z']];\n    },\n    radius: 5,\n    fill: cfg.color,\n    fillOpacity: 0.6\n  };\n} // 鼠标悬浮触发active状态\n\n\nfunction _getActiveCfg(type, cfg) {\n  if (type === 'line' || type === 'smoothLine') {\n    // 线加粗\n    var lineWidth = cfg.lineWidth || 0;\n    return {\n      lineWidth: lineWidth + 1\n    };\n  }\n\n  var opacity = cfg.fillOpacity || cfg.opacity || 1;\n  return {\n    fillOpacity: opacity - 0.15,\n    strokeOpacity: opacity - 0.15\n  };\n} // 当只有一个数据时绘制点\n\n\nfunction drawPointShape(shapeObj, cfg, container) {\n  var coord = shapeObj._coord;\n  var point = coord.convertPoint(cfg.points[0][1]);\n  return container.addShape('circle', {\n    attrs: Util.mix({\n      x: point.x,\n      y: point.y,\n      r: 2,\n      fill: cfg.color\n    }, cfg.style)\n  });\n}\n\nvar Area = Shape.registerFactory('area', {\n  defaultShapeType: 'area',\n\n  /**\n   * @override\n   * @protected\n   * 计算点 如果存在多个点，分割成单个的点, 不考虑多个x对应一个y的情况\n   * 单点则补上y0点\n   */\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    var points = [];\n    var x = pointInfo.x;\n    var y = pointInfo.y;\n    var y0 = pointInfo.y0;\n    y = Util.isArray(y) ? y : [y0, y];\n    Util.each(y, function (yItem) {\n      points.push({\n        x: x,\n        y: yItem\n      });\n    });\n    return points;\n  },\n  // 获取激活的图形属性\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    return _getActiveCfg(type, cfg);\n  },\n  drawShape: function drawShape(type, cfg, container) {\n    var shape = this.getShape(type);\n    var gShape;\n\n    if (cfg.points.length === 1 && Global.showSinglePoint) {\n      gShape = drawPointShape(this, cfg, container);\n    } else {\n      gShape = shape.draw(cfg, container);\n    }\n\n    if (gShape) {\n      gShape.set('origin', cfg.origin);\n      gShape._id = cfg.splitedIndex ? cfg._id + cfg.splitedIndex : cfg._id;\n      gShape.name = this.name;\n    }\n\n    return gShape;\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n}); // 默认：填充区域图\n\nShape.registerShape('area', 'area', {\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var path = getPath(cfg, false, this); // path = this.parsePath(path, false);\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg);\n  }\n}); // 填充平滑区域图\n\nShape.registerShape('area', 'smooth', {\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var coord = this._coord; // 曲线的限制\n\n    cfg.constraint = [[coord.start.x, coord.end.y], [coord.end.x, coord.start.y]];\n    var path = getPath(cfg, true, this); // path = this.parsePath(path, false);\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg);\n  }\n}); // 封闭的折线\n\nShape.registerShape('area', 'line', {\n  draw: function draw(cfg, container) {\n    var attrs = getLineAttrs(cfg);\n    var path = getPath(cfg, false, this); // path = this.parsePath(path, false);\n\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg);\n  }\n}); // 封闭的平滑线\n\nShape.registerShape('area', 'smoothLine', {\n  draw: function draw(cfg, container) {\n    var attrs = getLineAttrs(cfg);\n    var path = getPath(cfg, true, this);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return _getMarkerCfg(cfg);\n  }\n});\nArea.spline = Area.smooth;\nmodule.exports = Area;\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 边，用于关系图的边\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\n__webpack_require__(393);\n\nvar Edge =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Edge, _GeomBase);\n\n  function Edge() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Edge.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'edge';\n    cfg.shapeType = 'edge';\n    cfg.generatePoints = true;\n    return cfg;\n  };\n\n  return Edge;\n}(GeomBase);\n\nGeomBase.Edge = Edge;\nmodule.exports = Edge;\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 边的 shape\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nvar PathUtil = __webpack_require__(22);\n\nvar CORNER_PERCENT = 1 / 3;\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.edge;\n  var lineAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(lineAttrs, cfg);\n  return lineAttrs;\n}\n\nvar Edge = Shape.registerFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return ShapeUtil.splitPoints(pointInfo);\n  },\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 0;\n    return {\n      lineWidth: lineWidth + 1\n    };\n  }\n});\n\nfunction getCPath(from, to) {\n  var points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - 1 / 2) + to.y * 1 / 2\n  });\n  points.push({\n    y: from.y * (1 - 1 / 2) + to.y * 1 / 2,\n    x: to.x\n  });\n  points.push(to);\n  var sub = ['C'];\n  Util.each(points, function (point) {\n    sub.push(point.x, point.y);\n  });\n  return sub;\n}\n\nfunction getQPath(to, center) {\n  var points = [];\n  points.push({\n    x: center.x,\n    y: center.y\n  });\n  points.push(to);\n  var sub = ['Q'];\n  Util.each(points, function (point) {\n    sub.push(point.x, point.y);\n  });\n  return sub;\n}\n\nfunction createSmoothPath(from, to) {\n  var sub = getCPath(from, to);\n  var path = [['M', from.x, from.y]];\n  path.push(sub);\n  return path;\n}\n\nfunction createArcPath(from, to, center) {\n  var sub = getQPath(to, center);\n  var path = [['M', from.x, from.y]];\n  path.push(sub);\n  return path;\n}\n\nfunction createArcWeightPath(points, center) {\n  var arc1 = getQPath(points[1], center);\n  var arc2 = getQPath(points[3], center);\n  var path = [['M', points[0].x, points[0].y]];\n  path.push(arc2);\n  path.push(['L', points[3].x, points[3].y]);\n  path.push(['L', points[2].x, points[2].y]);\n  path.push(arc1);\n  path.push(['L', points[1].x, points[1].y]);\n  path.push(['L', points[0].x, points[0].y]);\n  path.push(['Z']);\n  return path;\n}\n\nfunction createRectPath(from, to) {\n  var points = [];\n  points.push({\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n    x: from.x\n  });\n  points.push({\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n    x: to.x\n  });\n  points.push(to);\n  var path = [['M', from.x, from.y]];\n  Util.each(points, function (point) {\n    path.push(['L', point.x, point.y]);\n  });\n  return path;\n}\n\nShape.registerShape('edge', 'line', {\n  draw: function draw(cfg, container) {\n    var points = this.parsePoints(cfg.points);\n    var attrCfg = getAttrs(cfg);\n    var path = PathUtil.getLinePath(points);\n    var line = container.addShape('path', {\n      attrs: Util.mix(attrCfg, {\n        path: path\n      })\n    });\n    return line;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4.5\n    }, getAttrs(cfg));\n  }\n});\nShape.registerShape('edge', 'vhv', {\n  draw: function draw(cfg, container) {\n    var points = cfg.points;\n    var attrCfg = getAttrs(cfg);\n    var path = createRectPath(points[0], points[1]);\n    path = this.parsePath(path);\n    var line = container.addShape('path', {\n      attrs: Util.mix(attrCfg, {\n        path: path\n      })\n    });\n    return line;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4.5\n    }, getAttrs(cfg));\n  }\n});\nShape.registerShape('edge', 'smooth', {\n  draw: function draw(cfg, container) {\n    var points = cfg.points;\n    var attrCfg = getAttrs(cfg);\n    var path = createSmoothPath(points[0], points[1]);\n    path = this.parsePath(path);\n    var line = container.addShape('path', {\n      attrs: Util.mix(attrCfg, {\n        path: path\n      })\n    });\n    return line;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4.5\n    }, getAttrs(cfg));\n  }\n}); //  弧线包括笛卡尔坐标系下的半圆弧线、极坐标系下以圆心为控制点的二阶曲线、笛卡尔坐标系下带权重的三阶曲线、极坐标系下带权重的以圆心为控制点的二阶曲线\n\nShape.registerShape('edge', 'arc', {\n  draw: function draw(cfg, container) {\n    var points = cfg.points;\n    var type = points.length > 2 ? 'weight' : 'normal';\n    var attrCfg = getAttrs(cfg);\n    var line;\n    var path;\n\n    if (cfg.isInCircle) {\n      var center = {\n        x: 0,\n        y: 1\n      };\n\n      if (type === 'normal') {\n        path = createArcPath(points[0], points[1], center);\n      } else {\n        attrCfg.fill = attrCfg.stroke;\n        path = createArcWeightPath(points, center);\n      }\n\n      path = this.parsePath(path);\n      line = container.addShape('path', {\n        attrs: Util.mix(attrCfg, {\n          path: path\n        })\n      });\n    } else {\n      if (type === 'normal') {\n        points = this.parsePoints(points);\n        line = container.addShape('arc', {\n          attrs: Util.mix(attrCfg, {\n            x: (points[1].x + points[0].x) / 2,\n            y: points[0].y,\n            r: Math.abs(points[1].x - points[0].x) / 2,\n            startAngle: Math.PI,\n            endAngle: Math.PI * 2\n          })\n        });\n      } else {\n        path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y]];\n        var c1 = getCPath(points[1], points[3]);\n        var c2 = getCPath(points[2], points[0]);\n        path.push(c1);\n        path.push(['L', points[3].x, points[3].y]);\n        path.push(['L', points[2].x, points[2].y]);\n        path.push(c2);\n        path.push(['Z']);\n        path = this.parsePath(path);\n        attrCfg.fill = attrCfg.stroke;\n        line = container.addShape('path', {\n          attrs: Util.mix(attrCfg, {\n            path: path\n          })\n        });\n      }\n    }\n\n    return line;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4.5\n    }, getAttrs(cfg));\n  }\n});\nmodule.exports = Edge;\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview heatmap\n * @author leungwensen@gmail.com\n */\nvar _require = __webpack_require__(73),\n    ColorUtil = _require.ColorUtil; // TODO: ColorUtil 独立成包，从 attr 包中抽离\n\n\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar ORIGIN_FIELD = '_origin';\nvar SHADOW_CANVAS = 'shadowCanvas';\nvar VALUE_RANGE = 'valueRange';\nvar IMAGE_SHAPE = 'imageShape';\nvar MAPPED_DATA = 'mappedData';\nvar GRAY_SCALE_BLURRED_CANVAS = 'grayScaleBlurredCanvas';\nvar HEATMAP_SIZE = 'heatmapSize';\n\nvar Heatmap =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Heatmap, _GeomBase);\n\n  function Heatmap() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Heatmap.prototype;\n\n  /**\n   * get default configuration\n   * @protected\n   * @return {Object} configuration\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'heatmap';\n    cfg.paletteCache = {}; // cfg.shapeType = 'heatmap';\n\n    return cfg;\n  };\n\n  _proto._prepareRange = function _prepareRange() {\n    var self = this;\n    var data = self.get(MAPPED_DATA);\n    var colorAttr = self.getAttr('color');\n    var colorField = colorAttr.field;\n    var min = Infinity;\n    var max = -Infinity;\n    data.forEach(function (row) {\n      var value = row[ORIGIN_FIELD][colorField];\n\n      if (value > max) {\n        max = value;\n      }\n\n      if (value < min) {\n        min = value;\n      }\n    });\n\n    if (min === max) {\n      min = max - 1;\n    }\n\n    var range = [min, max];\n    self.set(VALUE_RANGE, range);\n  };\n\n  _proto._prepareSize = function _prepareSize() {\n    var self = this;\n    var radius = self.getDefaultValue('size');\n\n    if (!Util.isNumber(radius)) {\n      radius = self._getDefaultSize();\n    }\n\n    var styleOptions = self.get('styleOptions');\n    var blur = styleOptions && Util.isObject(styleOptions.style) ? styleOptions.style.blur : null;\n\n    if (!Util.isFinite(blur) || blur === null) {\n      blur = radius / 2;\n    }\n\n    self.set(HEATMAP_SIZE, {\n      blur: blur,\n      radius: radius\n    });\n  };\n\n  _proto._getDefaultSize = function _getDefaultSize() {\n    var self = this;\n    var position = self.getAttr('position');\n    var coord = self.get('coord');\n    var radius = Math.min(coord.width / (position.scales[0].ticks.length * 4), coord.height / (position.scales[1].ticks.length * 4));\n    return radius;\n  };\n\n  _proto._colorize = function _colorize(img) {\n    var self = this;\n    var colorAttr = self.getAttr('color');\n    var pixels = img.data;\n    var paletteCache = self.get('paletteCache');\n\n    for (var i = 3; i < pixels.length; i += 4) {\n      var alpha = pixels[i]; // get gradient color from opacity value\n\n      if (alpha) {\n        var palette = void 0;\n\n        if (paletteCache[alpha]) {\n          palette = paletteCache[alpha];\n        } else {\n          palette = ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n          paletteCache[alpha] = palette;\n        } // const palette = colorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n\n\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  };\n\n  _proto._prepareGreyScaleBlurredCircle = function _prepareGreyScaleBlurredCircle(r, blur) {\n    var self = this;\n    var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\n\n    if (!circleCanvas) {\n      circleCanvas = document.createElement('canvas');\n      self.set(GRAY_SCALE_BLURRED_CANVAS, circleCanvas);\n    }\n\n    var r2 = r + blur;\n    var ctx = circleCanvas.getContext('2d');\n    circleCanvas.width = circleCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, circleCanvas.width, circleCanvas.height); // ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  };\n\n  _proto._drawGrayScaleBlurredCircle = function _drawGrayScaleBlurredCircle(x, y, r, alpha, ctx) {\n    var self = this;\n    var circleCanvas = self.get(GRAY_SCALE_BLURRED_CANVAS);\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(circleCanvas, x - r, y - r);\n  };\n\n  _proto._getShadowCanvasCtx = function _getShadowCanvasCtx() {\n    var self = this;\n    var canvas = self.get(SHADOW_CANVAS);\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      self.set(SHADOW_CANVAS, canvas);\n    }\n\n    var _self$get = self.get('coord'),\n        width = _self$get.width,\n        height = _self$get.height;\n\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n  };\n\n  _proto._clearShadowCanvasCtx = function _clearShadowCanvasCtx() {\n    var ctx = this._getShadowCanvasCtx();\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  };\n\n  _proto._getImageShape = function _getImageShape() {\n    var self = this;\n    var imageShape = self.get(IMAGE_SHAPE);\n\n    if (imageShape) {\n      return imageShape;\n    }\n\n    var container = self.get('container');\n    imageShape = container.addShape('Image', {});\n    self.set(IMAGE_SHAPE, imageShape);\n    return imageShape;\n  };\n\n  _proto.drawWithRange = function drawWithRange(range) {\n    var self = this; // canvas size\n\n    var _self$get2 = self.get('coord'),\n        start = _self$get2.start,\n        end = _self$get2.end,\n        width = _self$get2.width,\n        height = _self$get2.height; // value, range, etc\n\n\n    var valueField = self.getAttr('color').field;\n    var size = self.get(HEATMAP_SIZE); // prepare shadow canvas context\n\n    self._clearShadowCanvasCtx();\n\n    var ctx = self._getShadowCanvasCtx(); // filter data\n\n\n    var data = self.get(MAPPED_DATA);\n\n    if (range) {\n      data = data.filter(function (row) {\n        return row[ORIGIN_FIELD][valueField] <= range[1] && row[ORIGIN_FIELD][valueField] >= range[0];\n      });\n    } // step1. draw points with shadow\n\n\n    var scale = self._getScale(valueField);\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i];\n      var cfg = self.getDrawCfg(obj);\n      var alpha = scale.scale(obj[ORIGIN_FIELD][valueField]);\n\n      self._drawGrayScaleBlurredCircle(cfg.x - start.x, cfg.y - end.y, size.radius + size.blur, alpha, ctx);\n    } // step2. convert pixels\n\n\n    var colored = ctx.getImageData(0, 0, width, height);\n\n    self._clearShadowCanvasCtx();\n\n    self._colorize(colored);\n\n    ctx.putImageData(colored, 0, 0);\n\n    var imageShape = self._getImageShape();\n\n    imageShape.attr('x', start.x);\n    imageShape.attr('y', end.y);\n    imageShape.attr('width', width);\n    imageShape.attr('height', height);\n    imageShape.attr('img', ctx.canvas);\n  };\n\n  _proto.draw = function draw(data\n  /* , container, shapeFactory, index */\n  ) {\n    var self = this;\n    self.set(MAPPED_DATA, data);\n\n    self._prepareRange();\n\n    self._prepareSize();\n\n    var size = self.get(HEATMAP_SIZE);\n\n    self._prepareGreyScaleBlurredCircle(size.radius, size.blur);\n\n    var range = self.get(VALUE_RANGE);\n    self.drawWithRange(range); // super.draw(data, container, shapeFactory, index);\n  };\n\n  return Heatmap;\n}(GeomBase);\n\nGeomBase.Heatmap = Heatmap;\nmodule.exports = Heatmap;\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview 多边形\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\n__webpack_require__(396);\n\nvar Polygon =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Polygon, _GeomBase);\n\n  function Polygon() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Polygon.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'polygon';\n    cfg.shapeType = 'polygon';\n    cfg.generatePoints = true;\n    return cfg;\n  };\n\n  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {\n    var cfg = _GeomBase.prototype.createShapePointsCfg.call(this, obj);\n\n    var self = this;\n    var x = cfg.x;\n    var y = cfg.y;\n    var temp;\n\n    if (!(Util.isArray(x) && Util.isArray(y))) {\n      // x y 都是数组时，不做处理\n      var xScale = self.getXScale();\n      var yScale = self.getYScale();\n      var xCount = xScale.values ? xScale.values.length : xScale.ticks.length;\n      var yCount = yScale.values ? yScale.values.length : yScale.ticks.length;\n      var xOffset = 0.5 * 1 / xCount;\n      var yOffset = 0.5 * 1 / yCount;\n\n      if (xScale.isCategory && yScale.isCategory) {\n        // 如果x,y都是分类\n        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n      } else if (Util.isArray(x)) {\n        // x 是数组\n        temp = x;\n        x = [temp[0], temp[0], temp[1], temp[1]];\n        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n      } else if (Util.isArray(y)) {\n        // y 是数组\n        temp = y;\n        y = [temp[0], temp[1], temp[1], temp[0]];\n        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n      }\n\n      cfg.x = x;\n      cfg.y = y;\n    }\n\n    return cfg;\n  };\n\n  return Polygon;\n}(GeomBase);\n\nGeomBase.Polygon = Polygon;\nmodule.exports = Polygon;\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview line shapes\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n * @author huangtonger@aliyun.com\n # @author liuye10@yahoo.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.polygon;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addFillAttrs(pathAttrs, cfg);\n  return pathAttrs;\n}\n\nfunction getHollowAttrs(cfg) {\n  var defaultCfg = Global.shape.hollowPolygon;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(pathAttrs, cfg);\n  return pathAttrs;\n}\n\nfunction getPath(points) {\n  var flag = points[0];\n  var i = 1;\n  var path = [['M', flag.x, flag.y]];\n\n  while (i < points.length) {\n    var c = points[i];\n\n    if (c.x !== points[i - 1].x || c.y !== points[i - 1].y) {\n      path.push(['L', c.x, c.y]);\n\n      if (c.x === flag.x && c.y === flag.y && i < points.length - 1) {\n        flag = points[i + 1];\n        path.push(['Z']);\n        path.push(['M', flag.x, flag.y]);\n        i++;\n      }\n    }\n\n    i++;\n  }\n\n  if (!Util.isEqual(path[path.length - 1], flag)) {\n    path.push(['L', flag.x, flag.y]);\n  }\n\n  path.push(['Z']);\n  return path;\n} // regist line geom\n\n\nvar Polygon = Shape.registerFactory('polygon', {\n  defaultShapeType: 'polygon',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    var points = [];\n    Util.each(pointInfo.x, function (subX, index) {\n      var subY = pointInfo.y[index];\n      points.push({\n        x: subX,\n        y: subY\n      });\n    });\n    return points;\n  },\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 1;\n\n    if (type === 'hollow') {\n      return {\n        lineWidth: lineWidth + 1\n      };\n    }\n\n    var opacity = cfg.fillOpacity || cfg.opacity || 1;\n    return {\n      // lineWidth,\n      fillOpacity: opacity - 0.08\n    };\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n});\nShape.registerShape('polygon', 'polygon', {\n  draw: function draw(cfg, container) {\n    if (!Util.isEmpty(cfg.points)) {\n      var attrs = getAttrs(cfg);\n      var path = getPath(cfg.points);\n      path = this.parsePath(path);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: path\n        })\n      });\n    }\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nShape.registerShape('polygon', 'hollow', {\n  draw: function draw(cfg, container) {\n    if (!Util.isEmpty(cfg.points)) {\n      var attrs = getHollowAttrs(cfg);\n      var path = getPath(cfg.points);\n      path = this.parsePath(path);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: path\n        })\n      });\n    }\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'square',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nmodule.exports = Polygon;\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview 自定义图形\n * @author dxq613@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar SizeMixin = __webpack_require__(357);\n\n__webpack_require__(398);\n\nvar Schema =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Schema, _GeomBase);\n\n  var _proto = Schema.prototype;\n\n  /**\n   * 获取默认的配置属性\n   * @protected\n   * @return {Object} 默认属性\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'schema';\n    cfg.shapeType = 'schema';\n    cfg.generatePoints = true;\n    return cfg;\n  };\n\n  function Schema(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SizeMixin);\n    return _this;\n  }\n\n  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {\n    var cfg = _GeomBase.prototype.createShapePointsCfg.call(this, obj);\n\n    cfg.size = this.getNormalizedSize(obj);\n    return cfg;\n  };\n\n  return Schema;\n}(GeomBase);\n\nvar SchemaDodge =\n/*#__PURE__*/\nfunction (_Schema) {\n  _inheritsLoose(SchemaDodge, _Schema);\n\n  function SchemaDodge() {\n    return _Schema.apply(this, arguments) || this;\n  }\n\n  var _proto2 = SchemaDodge.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Schema.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'dodge'\n    }];\n    return cfg;\n  };\n\n  return SchemaDodge;\n}(Schema);\n\nSchema.Dodge = SchemaDodge;\nGeomBase.Schema = Schema;\nGeomBase.SchemaDodge = SchemaDodge;\nmodule.exports = Schema;\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview 自定义的 shape\n * @author dxq613@gmail.com\n * @author sima.zhang1990@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nfunction _parseValue(value) {\n  if (!Util.isArray(value)) {\n    value = [value];\n  }\n\n  var min = value[0]; // 最小值\n\n  var max = value[value.length - 1]; // 最大值\n\n  var min1 = value.length > 1 ? value[1] : min;\n  var max1 = value.length > 3 ? value[3] : max;\n  var median = value.length > 2 ? value[2] : min1;\n  return {\n    min: min,\n    // 最小值\n    max: max,\n    // 最大值\n    min1: min1,\n    max1: max1,\n    median: median\n  };\n}\n\nfunction addPoints(from, to) {\n  Util.each(from, function (subArr) {\n    to.push({\n      x: subArr[0],\n      y: subArr[1]\n    });\n  });\n}\n\nfunction getAttrs(cfg) {\n  var defaultAttrs = Global.shape.schema;\n  var lineAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addStrokeAttrs(lineAttrs, cfg);\n  return lineAttrs;\n}\n\nfunction getFillAttrs(cfg) {\n  var defaultAttrs = Global.shape.schema;\n  var lineAttrs = Util.mix({}, defaultAttrs, cfg.style);\n  ShapeUtil.addFillAttrs(lineAttrs, cfg);\n\n  if (cfg.color) {\n    lineAttrs.stroke = lineAttrs.stroke || cfg.color;\n  }\n\n  return lineAttrs;\n}\n\nfunction getBoxPoints(x, y, width) {\n  var points = [];\n  var pointsArray;\n  var obj;\n\n  if (Util.isArray(y)) {\n    // 2维\n    obj = _parseValue(y);\n    pointsArray = [[x - width / 2, obj.max], [x + width / 2, obj.max], [x, obj.max], [x, obj.max1], [x - width / 2, obj.min1], [x - width / 2, obj.max1], [x + width / 2, obj.max1], [x + width / 2, obj.min1], [x, obj.min1], [x, obj.min], [x - width / 2, obj.min], [x + width / 2, obj.min], [x - width / 2, obj.median], [x + width / 2, obj.median]];\n  } else {\n    // 只有一个维度\n    y = y || 0.5;\n    obj = _parseValue(x);\n    pointsArray = [[obj.min, y - width / 2], [obj.min, y + width / 2], [obj.min, y], [obj.min1, y], [obj.min1, y - width / 2], [obj.min1, y + width / 2], [obj.max1, y + width / 2], [obj.max1, y - width / 2], [obj.max1, y], [obj.max, y], [obj.max, y - width / 2], [obj.max, y + width / 2], [obj.median, y - width / 2], [obj.median, y + width / 2]];\n  }\n\n  addPoints(pointsArray, points);\n  return points;\n}\n\nfunction _sortValue(value) {\n  if (!Util.isArray(value)) {\n    value = [value];\n  } // 从大到小排序\n\n\n  var sorted = value.sort(function (a, b) {\n    return a < b ? 1 : -1;\n  });\n  var length = sorted.length;\n\n  if (length < 4) {\n    var min = sorted[length - 1];\n\n    for (var i = 0; i < 4 - length; i++) {\n      sorted.push(min);\n    }\n  }\n\n  return sorted;\n} // 获取K线图的points\n\n\nfunction getCandlePoints(x, y, width) {\n  var yValues = _sortValue(y);\n\n  var points = [{\n    x: x,\n    y: yValues[0]\n  }, {\n    x: x,\n    y: yValues[1]\n  }, {\n    x: x - width / 2,\n    y: yValues[2]\n  }, {\n    x: x - width / 2,\n    y: yValues[1]\n  }, {\n    x: x + width / 2,\n    y: yValues[1]\n  }, {\n    x: x + width / 2,\n    y: yValues[2]\n  }, {\n    x: x,\n    y: yValues[2]\n  }, {\n    x: x,\n    y: yValues[3]\n  }]; // 按照顺时针连接\n\n  return points;\n}\n\nfunction getBoxPath(points) {\n  var path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], // 封闭 z\n  ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x, points[10].y], ['L', points[11].x, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n  return path;\n}\n\nfunction getCandlePath(points) {\n  var path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];\n  return path;\n}\n\nvar Schema = Shape.registerFactory('schema', {\n  defaultShapeType: '',\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    if (type === 'box') {\n      var lineWidth = cfg.lineWidth || 1;\n      return {\n        lineWidth: lineWidth + 1\n      };\n    }\n\n    var opacity = cfg.fillOpacity || cfg.opacity || 1;\n    return {\n      fillOpacity: opacity - 0.15,\n      strokeOpacity: opacity - 0.15\n    };\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n}); // 箱线图\n\nShape.registerShape('schema', 'box', {\n  getPoints: function getPoints(pointInfo) {\n    return getBoxPoints(pointInfo.x, pointInfo.y, pointInfo.size);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getBoxPath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return {\n      symbol: function symbol(x, y, r) {\n        var yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        var points = getBoxPoints(x, yValues, r);\n        return [['M', points[0].x + 1, points[0].y], ['L', points[1].x - 1, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x + 1, points[10].y], ['L', points[11].x - 1, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n      },\n      radius: 6,\n      lineWidth: 1,\n      stroke: cfg.color\n    };\n  }\n}); // K线\n\nShape.registerShape('schema', 'candle', {\n  getPoints: function getPoints(pointInfo) {\n    return getCandlePoints(pointInfo.x, pointInfo.y, pointInfo.size);\n  },\n  draw: function draw(cfg, container) {\n    var attrs = getFillAttrs(cfg);\n    var path = getCandlePath(cfg.points);\n    path = this.parsePath(path);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return {\n      symbol: function symbol(x, y, r) {\n        y = [y + 7.5, y + 3, y - 3, y - 7.5];\n        var points = getCandlePoints(x, y, r);\n        return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];\n      },\n      lineWidth: 1,\n      stroke: cfg.color,\n      fill: cfg.color,\n      radius: 6\n    };\n  }\n});\nmodule.exports = Schema;\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview Venn Diagram\n * @author leungwensen@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar _require = __webpack_require__(400),\n    venn = _require.venn,\n    scaleSolution = _require.scaleSolution,\n    circlePath = _require.circlePath,\n    intersectionAreaPath = _require.intersectionAreaPath,\n    computeTextCentres = _require.computeTextCentres;\n\n__webpack_require__(458);\n\nvar Venn =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Venn, _GeomBase);\n\n  function Venn() {\n    return _GeomBase.apply(this, arguments) || this;\n  }\n\n  var _proto = Venn.prototype;\n\n  /**\n   * get default configuration\n   * @protected\n   * @return {Object} configuration\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'venn';\n    cfg.shapeType = 'venn';\n    cfg.generatePoints = true; // super.draw(data, container, shapeFactory, index);\n\n    return cfg;\n  };\n\n  _proto._initAttrs = function _initAttrs() {\n    var self = this;\n    var attrOptions = self.get('attrOptions');\n    var labelCfg = self.get('labelCfg');\n    var data = self.get('data');\n    var sizeField = attrOptions.size ? attrOptions.size.field : 'size';\n    var labelField = labelCfg ? labelCfg.fields[0] : 'sets';\n    self.set('labelCfg', null); // prepare data\n\n    data.forEach(function (row) {\n      row.sets = row[labelField];\n      row.size = row[sizeField];\n    });\n    var solution = venn(data); // scaling\n\n    var coord = self.get('coord');\n    var xRange = [Math.min(coord.x.end, coord.x.start), Math.max(coord.x.end, coord.x.start)];\n    var yRange = [Math.min(coord.y.end, coord.y.start), Math.max(coord.y.end, coord.y.start)];\n    var width = xRange[1] - xRange[0];\n    var height = yRange[1] - yRange[0];\n    var styleOptions = self.get('styleOptions');\n    var padding = styleOptions && Util.isObject(styleOptions.style) ? styleOptions.style.padding : 0;\n\n    if (!Util.isFinite(padding)) {\n      padding = 0;\n    }\n\n    var circles = scaleSolution(solution, width, height, padding);\n    var textCenters = computeTextCentres(circles, data);\n    data.forEach(function (row) {\n      var sets = row.sets;\n      var id = sets.join(',');\n      row.id = id;\n\n      if (sets.length === 1) {\n        var circle = circles[id];\n        row.path = circlePath(circle.x, circle.y, circle.radius);\n        Util.assign(row, circle);\n      } else {\n        var setCircles = sets.map(function (set) {\n          return circles[set];\n        });\n        var path = intersectionAreaPath(setCircles);\n\n        if (!/[zZ]$/.test(path)) {\n          path += 'Z';\n        }\n\n        row.path = path;\n        var center = textCenters[id] || {\n          x: 0,\n          y: 0\n        };\n        Util.assign(row, center);\n      }\n    }); // x, y scales\n\n    self.position('x*y');\n\n    _GeomBase.prototype._initAttrs.call(this);\n  };\n\n  _proto.paint = function paint() {\n    _GeomBase.prototype.paint.call(this);\n\n    var self = this;\n    var dataArray = self.get('dataArray');\n    var shapeContainer = self.get('shapeContainer'); // add labels\n\n    dataArray.forEach(function (row) {\n      var cfg = self.getDrawCfg(row[0]);\n      var origin = cfg.origin._origin;\n      shapeContainer.addShape('text', {\n        attrs: Util.mix({}, {\n          x: origin.x,\n          y: origin.y,\n          text: origin.label || '',\n          fontSize: 18,\n          fill: cfg.shape === 'hollow' ? cfg.color : '#666',\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }, cfg.style ? cfg.style.textStyle : {})\n      });\n    });\n  };\n\n  return Venn;\n}(GeomBase);\n\nGeomBase.Venn = Venn;\nmodule.exports = Venn;\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports, __webpack_require__(72), __webpack_require__(435)) : undefined;\n})(this, function (exports, d3Selection, d3Transition) {\n  'use strict';\n\n  var SMALL = 1e-10;\n  /** Returns the intersection area of a bunch of circles (where each circle\n   is an object having an x,y and radius property) */\n\n  function intersectionArea(circles, stats) {\n    // get all the intersection points of the circles\n    var intersectionPoints = getIntersectionPoints(circles); // filter out points that aren't included in all the circles\n\n    var innerPoints = intersectionPoints.filter(function (p) {\n      return containedInCircles(p, circles);\n    });\n    var arcArea = 0,\n        polygonArea = 0,\n        arcs = [],\n        i; // if we have intersection points that are within all the circles,\n    // then figure out the area contained by them\n\n    if (innerPoints.length > 1) {\n      // sort the points by angle from the center of the polygon, which lets\n      // us just iterate over points to get the edges\n      var center = getCenter(innerPoints);\n\n      for (i = 0; i < innerPoints.length; ++i) {\n        var p = innerPoints[i];\n        p.angle = Math.atan2(p.x - center.x, p.y - center.y);\n      }\n\n      innerPoints.sort(function (a, b) {\n        return b.angle - a.angle;\n      }); // iterate over all points, get arc between the points\n      // and update the areas\n\n      var p2 = innerPoints[innerPoints.length - 1];\n\n      for (i = 0; i < innerPoints.length; ++i) {\n        var p1 = innerPoints[i]; // polygon area updates easily ...\n\n        polygonArea += (p2.x + p1.x) * (p1.y - p2.y); // updating the arc area is a little more involved\n\n        var midPoint = {\n          x: (p1.x + p2.x) / 2,\n          y: (p1.y + p2.y) / 2\n        },\n            arc = null;\n\n        for (var j = 0; j < p1.parentIndex.length; ++j) {\n          if (p2.parentIndex.indexOf(p1.parentIndex[j]) > -1) {\n            // figure out the angle halfway between the two points\n            // on the current circle\n            var circle = circles[p1.parentIndex[j]],\n                a1 = Math.atan2(p1.x - circle.x, p1.y - circle.y),\n                a2 = Math.atan2(p2.x - circle.x, p2.y - circle.y);\n            var angleDiff = a2 - a1;\n\n            if (angleDiff < 0) {\n              angleDiff += 2 * Math.PI;\n            } // and use that angle to figure out the width of the\n            // arc\n\n\n            var a = a2 - angleDiff / 2,\n                width = distance(midPoint, {\n              x: circle.x + circle.radius * Math.sin(a),\n              y: circle.y + circle.radius * Math.cos(a)\n            }); // clamp the width to the largest is can actually be\n            // (sometimes slightly overflows because of FP errors)\n\n            if (width > circle.radius * 2) {\n              width = circle.radius * 2;\n            } // pick the circle whose arc has the smallest width\n\n\n            if (arc === null || arc.width > width) {\n              arc = {\n                circle: circle,\n                width: width,\n                p1: p1,\n                p2: p2\n              };\n            }\n          }\n        }\n\n        if (arc !== null) {\n          arcs.push(arc);\n          arcArea += circleArea(arc.circle.radius, arc.width);\n          p2 = p1;\n        }\n      }\n    } else {\n      // no intersection points, is either disjoint - or is completely\n      // overlapped. figure out which by examining the smallest circle\n      var smallest = circles[0];\n\n      for (i = 1; i < circles.length; ++i) {\n        if (circles[i].radius < smallest.radius) {\n          smallest = circles[i];\n        }\n      } // make sure the smallest circle is completely contained in all\n      // the other circles\n\n\n      var disjoint = false;\n\n      for (i = 0; i < circles.length; ++i) {\n        if (distance(circles[i], smallest) > Math.abs(smallest.radius - circles[i].radius)) {\n          disjoint = true;\n          break;\n        }\n      }\n\n      if (disjoint) {\n        arcArea = polygonArea = 0;\n      } else {\n        arcArea = smallest.radius * smallest.radius * Math.PI;\n        arcs.push({\n          circle: smallest,\n          p1: {\n            x: smallest.x,\n            y: smallest.y + smallest.radius\n          },\n          p2: {\n            x: smallest.x - SMALL,\n            y: smallest.y + smallest.radius\n          },\n          width: smallest.radius * 2\n        });\n      }\n    }\n\n    polygonArea /= 2;\n\n    if (stats) {\n      stats.area = arcArea + polygonArea;\n      stats.arcArea = arcArea;\n      stats.polygonArea = polygonArea;\n      stats.arcs = arcs;\n      stats.innerPoints = innerPoints;\n      stats.intersectionPoints = intersectionPoints;\n    }\n\n    return arcArea + polygonArea;\n  }\n  /** returns whether a point is contained by all of a list of circles */\n\n\n  function containedInCircles(point, circles) {\n    for (var i = 0; i < circles.length; ++i) {\n      if (distance(point, circles[i]) > circles[i].radius + SMALL) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /** Gets all intersection points between a bunch of circles */\n\n\n  function getIntersectionPoints(circles) {\n    var ret = [];\n\n    for (var i = 0; i < circles.length; ++i) {\n      for (var j = i + 1; j < circles.length; ++j) {\n        var intersect = circleCircleIntersection(circles[i], circles[j]);\n\n        for (var k = 0; k < intersect.length; ++k) {\n          var p = intersect[k];\n          p.parentIndex = [i, j];\n          ret.push(p);\n        }\n      }\n    }\n\n    return ret;\n  }\n  /** Circular segment area calculation. See http://mathworld.wolfram.com/CircularSegment.html */\n\n\n  function circleArea(r, width) {\n    return r * r * Math.acos(1 - width / r) - (r - width) * Math.sqrt(width * (2 * r - width));\n  }\n  /** euclidean distance between two points */\n\n\n  function distance(p1, p2) {\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));\n  }\n  /** Returns the overlap area of two circles of radius r1 and r2 - that\n  have their centers separated by distance d. Simpler faster\n  circle intersection for only two circles */\n\n\n  function circleOverlap(r1, r2, d) {\n    // no overlap\n    if (d >= r1 + r2) {\n      return 0;\n    } // completely overlapped\n\n\n    if (d <= Math.abs(r1 - r2)) {\n      return Math.PI * Math.min(r1, r2) * Math.min(r1, r2);\n    }\n\n    var w1 = r1 - (d * d - r2 * r2 + r1 * r1) / (2 * d),\n        w2 = r2 - (d * d - r1 * r1 + r2 * r2) / (2 * d);\n    return circleArea(r1, w1) + circleArea(r2, w2);\n  }\n  /** Given two circles (containing a x/y/radius attributes),\n  returns the intersecting points if possible.\n  note: doesn't handle cases where there are infinitely many\n  intersection points (circles are equivalent):, or only one intersection point*/\n\n\n  function circleCircleIntersection(p1, p2) {\n    var d = distance(p1, p2),\n        r1 = p1.radius,\n        r2 = p2.radius; // if to far away, or self contained - can't be done\n\n    if (d >= r1 + r2 || d <= Math.abs(r1 - r2)) {\n      return [];\n    }\n\n    var a = (r1 * r1 - r2 * r2 + d * d) / (2 * d),\n        h = Math.sqrt(r1 * r1 - a * a),\n        x0 = p1.x + a * (p2.x - p1.x) / d,\n        y0 = p1.y + a * (p2.y - p1.y) / d,\n        rx = -(p2.y - p1.y) * (h / d),\n        ry = -(p2.x - p1.x) * (h / d);\n    return [{\n      x: x0 + rx,\n      y: y0 - ry\n    }, {\n      x: x0 - rx,\n      y: y0 + ry\n    }];\n  }\n  /** Returns the center of a bunch of points */\n\n\n  function getCenter(points) {\n    var center = {\n      x: 0,\n      y: 0\n    };\n\n    for (var i = 0; i < points.length; ++i) {\n      center.x += points[i].x;\n      center.y += points[i].y;\n    }\n\n    center.x /= points.length;\n    center.y /= points.length;\n    return center;\n  }\n  /** finds the zeros of a function, given two starting points (which must\n   * have opposite signs */\n\n\n  function bisect(f, a, b, parameters) {\n    parameters = parameters || {};\n    var maxIterations = parameters.maxIterations || 100,\n        tolerance = parameters.tolerance || 1e-10,\n        fA = f(a),\n        fB = f(b),\n        delta = b - a;\n\n    if (fA * fB > 0) {\n      throw \"Initial bisect points must have opposite signs\";\n    }\n\n    if (fA === 0) return a;\n    if (fB === 0) return b;\n\n    for (var i = 0; i < maxIterations; ++i) {\n      delta /= 2;\n      var mid = a + delta,\n          fMid = f(mid);\n\n      if (fMid * fA >= 0) {\n        a = mid;\n      }\n\n      if (Math.abs(delta) < tolerance || fMid === 0) {\n        return mid;\n      }\n    }\n\n    return a + delta;\n  } // need some basic operations on vectors, rather than adding a dependency,\n  // just define here\n\n\n  function zeros(x) {\n    var r = new Array(x);\n\n    for (var i = 0; i < x; ++i) {\n      r[i] = 0;\n    }\n\n    return r;\n  }\n\n  function zerosM(x, y) {\n    return zeros(x).map(function () {\n      return zeros(y);\n    });\n  }\n\n  function dot(a, b) {\n    var ret = 0;\n\n    for (var i = 0; i < a.length; ++i) {\n      ret += a[i] * b[i];\n    }\n\n    return ret;\n  }\n\n  function norm2(a) {\n    return Math.sqrt(dot(a, a));\n  }\n\n  function scale(ret, value, c) {\n    for (var i = 0; i < value.length; ++i) {\n      ret[i] = value[i] * c;\n    }\n  }\n\n  function weightedSum(ret, w1, v1, w2, v2) {\n    for (var j = 0; j < ret.length; ++j) {\n      ret[j] = w1 * v1[j] + w2 * v2[j];\n    }\n  }\n  /** minimizes a function using the downhill simplex method */\n\n\n  function nelderMead(f, x0, parameters) {\n    parameters = parameters || {};\n    var maxIterations = parameters.maxIterations || x0.length * 200,\n        nonZeroDelta = parameters.nonZeroDelta || 1.05,\n        zeroDelta = parameters.zeroDelta || 0.001,\n        minErrorDelta = parameters.minErrorDelta || 1e-6,\n        minTolerance = parameters.minErrorDelta || 1e-5,\n        rho = parameters.rho !== undefined ? parameters.rho : 1,\n        chi = parameters.chi !== undefined ? parameters.chi : 2,\n        psi = parameters.psi !== undefined ? parameters.psi : -0.5,\n        sigma = parameters.sigma !== undefined ? parameters.sigma : 0.5,\n        maxDiff; // initialize simplex.\n\n    var N = x0.length,\n        simplex = new Array(N + 1);\n    simplex[0] = x0;\n    simplex[0].fx = f(x0);\n    simplex[0].id = 0;\n\n    for (var i = 0; i < N; ++i) {\n      var point = x0.slice();\n      point[i] = point[i] ? point[i] * nonZeroDelta : zeroDelta;\n      simplex[i + 1] = point;\n      simplex[i + 1].fx = f(point);\n      simplex[i + 1].id = i + 1;\n    }\n\n    function updateSimplex(value) {\n      for (var i = 0; i < value.length; i++) {\n        simplex[N][i] = value[i];\n      }\n\n      simplex[N].fx = value.fx;\n    }\n\n    var sortOrder = function (a, b) {\n      return a.fx - b.fx;\n    };\n\n    var centroid = x0.slice(),\n        reflected = x0.slice(),\n        contracted = x0.slice(),\n        expanded = x0.slice();\n\n    for (var iteration = 0; iteration < maxIterations; ++iteration) {\n      simplex.sort(sortOrder);\n\n      if (parameters.history) {\n        // copy the simplex (since later iterations will mutate) and\n        // sort it to have a consistent order between iterations\n        var sortedSimplex = simplex.map(function (x) {\n          var state = x.slice();\n          state.fx = x.fx;\n          state.id = x.id;\n          return state;\n        });\n        sortedSimplex.sort(function (a, b) {\n          return a.id - b.id;\n        });\n        parameters.history.push({\n          x: simplex[0].slice(),\n          fx: simplex[0].fx,\n          simplex: sortedSimplex\n        });\n      }\n\n      maxDiff = 0;\n\n      for (i = 0; i < N; ++i) {\n        maxDiff = Math.max(maxDiff, Math.abs(simplex[0][i] - simplex[1][i]));\n      }\n\n      if (Math.abs(simplex[0].fx - simplex[N].fx) < minErrorDelta && maxDiff < minTolerance) {\n        break;\n      } // compute the centroid of all but the worst point in the simplex\n\n\n      for (i = 0; i < N; ++i) {\n        centroid[i] = 0;\n\n        for (var j = 0; j < N; ++j) {\n          centroid[i] += simplex[j][i];\n        }\n\n        centroid[i] /= N;\n      } // reflect the worst point past the centroid  and compute loss at reflected\n      // point\n\n\n      var worst = simplex[N];\n      weightedSum(reflected, 1 + rho, centroid, -rho, worst);\n      reflected.fx = f(reflected); // if the reflected point is the best seen, then possibly expand\n\n      if (reflected.fx < simplex[0].fx) {\n        weightedSum(expanded, 1 + chi, centroid, -chi, worst);\n        expanded.fx = f(expanded);\n\n        if (expanded.fx < reflected.fx) {\n          updateSimplex(expanded);\n        } else {\n          updateSimplex(reflected);\n        }\n      } // if the reflected point is worse than the second worst, we need to\n      // contract\n      else if (reflected.fx >= simplex[N - 1].fx) {\n          var shouldReduce = false;\n\n          if (reflected.fx > worst.fx) {\n            // do an inside contraction\n            weightedSum(contracted, 1 + psi, centroid, -psi, worst);\n            contracted.fx = f(contracted);\n\n            if (contracted.fx < worst.fx) {\n              updateSimplex(contracted);\n            } else {\n              shouldReduce = true;\n            }\n          } else {\n            // do an outside contraction\n            weightedSum(contracted, 1 - psi * rho, centroid, psi * rho, worst);\n            contracted.fx = f(contracted);\n\n            if (contracted.fx < reflected.fx) {\n              updateSimplex(contracted);\n            } else {\n              shouldReduce = true;\n            }\n          }\n\n          if (shouldReduce) {\n            // if we don't contract here, we're done\n            if (sigma >= 1) break; // do a reduction\n\n            for (i = 1; i < simplex.length; ++i) {\n              weightedSum(simplex[i], 1 - sigma, simplex[0], sigma, simplex[i]);\n              simplex[i].fx = f(simplex[i]);\n            }\n          }\n        } else {\n          updateSimplex(reflected);\n        }\n    }\n\n    simplex.sort(sortOrder);\n    return {\n      fx: simplex[0].fx,\n      x: simplex[0]\n    };\n  } /// searches along line 'pk' for a point that satifies the wolfe conditions\n  /// See 'Numerical Optimization' by Nocedal and Wright p59-60\n  /// f : objective function\n  /// pk : search direction\n  /// current: object containing current gradient/loss\n  /// next: output: contains next gradient/loss\n  /// returns a: step size taken\n\n\n  function wolfeLineSearch(f, pk, current, next, a, c1, c2) {\n    var phi0 = current.fx,\n        phiPrime0 = dot(current.fxprime, pk),\n        phi = phi0,\n        phi_old = phi0,\n        phiPrime = phiPrime0,\n        a0 = 0;\n    a = a || 1;\n    c1 = c1 || 1e-6;\n    c2 = c2 || 0.1;\n\n    function zoom(a_lo, a_high, phi_lo) {\n      for (var iteration = 0; iteration < 16; ++iteration) {\n        a = (a_lo + a_high) / 2;\n        weightedSum(next.x, 1.0, current.x, a, pk);\n        phi = next.fx = f(next.x, next.fxprime);\n        phiPrime = dot(next.fxprime, pk);\n\n        if (phi > phi0 + c1 * a * phiPrime0 || phi >= phi_lo) {\n          a_high = a;\n        } else {\n          if (Math.abs(phiPrime) <= -c2 * phiPrime0) {\n            return a;\n          }\n\n          if (phiPrime * (a_high - a_lo) >= 0) {\n            a_high = a_lo;\n          }\n\n          a_lo = a;\n          phi_lo = phi;\n        }\n      }\n\n      return 0;\n    }\n\n    for (var iteration = 0; iteration < 10; ++iteration) {\n      weightedSum(next.x, 1.0, current.x, a, pk);\n      phi = next.fx = f(next.x, next.fxprime);\n      phiPrime = dot(next.fxprime, pk);\n\n      if (phi > phi0 + c1 * a * phiPrime0 || iteration && phi >= phi_old) {\n        return zoom(a0, a, phi_old);\n      }\n\n      if (Math.abs(phiPrime) <= -c2 * phiPrime0) {\n        return a;\n      }\n\n      if (phiPrime >= 0) {\n        return zoom(a, a0, phi);\n      }\n\n      phi_old = phi;\n      a0 = a;\n      a *= 2;\n    }\n\n    return a;\n  }\n\n  function conjugateGradient(f, initial, params) {\n    // allocate all memory up front here, keep out of the loop for perfomance\n    // reasons\n    var current = {\n      x: initial.slice(),\n      fx: 0,\n      fxprime: initial.slice()\n    },\n        next = {\n      x: initial.slice(),\n      fx: 0,\n      fxprime: initial.slice()\n    },\n        yk = initial.slice(),\n        pk,\n        temp,\n        a = 1,\n        maxIterations;\n    params = params || {};\n    maxIterations = params.maxIterations || initial.length * 20;\n    current.fx = f(current.x, current.fxprime);\n    pk = current.fxprime.slice();\n    scale(pk, current.fxprime, -1);\n\n    for (var i = 0; i < maxIterations; ++i) {\n      a = wolfeLineSearch(f, pk, current, next, a); // todo: history in wrong spot?\n\n      if (params.history) {\n        params.history.push({\n          x: current.x.slice(),\n          fx: current.fx,\n          fxprime: current.fxprime.slice(),\n          alpha: a\n        });\n      }\n\n      if (!a) {\n        // faiiled to find point that satifies wolfe conditions.\n        // reset direction for next iteration\n        scale(pk, current.fxprime, -1);\n      } else {\n        // update direction using Polak–Ribiere CG method\n        weightedSum(yk, 1, next.fxprime, -1, current.fxprime);\n        var delta_k = dot(current.fxprime, current.fxprime),\n            beta_k = Math.max(0, dot(yk, next.fxprime) / delta_k);\n        weightedSum(pk, beta_k, pk, -1, next.fxprime);\n        temp = current;\n        current = next;\n        next = temp;\n      }\n\n      if (norm2(current.fxprime) <= 1e-5) {\n        break;\n      }\n    }\n\n    if (params.history) {\n      params.history.push({\n        x: current.x.slice(),\n        fx: current.fx,\n        fxprime: current.fxprime.slice(),\n        alpha: a\n      });\n    }\n\n    return current;\n  }\n  /** given a list of set objects, and their corresponding overlaps.\n  updates the (x, y, radius) attribute on each set such that their positions\n  roughly correspond to the desired overlaps */\n\n\n  function venn(areas, parameters) {\n    parameters = parameters || {};\n    parameters.maxIterations = parameters.maxIterations || 500;\n    var initialLayout = parameters.initialLayout || bestInitialLayout;\n    var loss = parameters.lossFunction || lossFunction; // add in missing pairwise areas as having 0 size\n\n    areas = addMissingAreas(areas); // initial layout is done greedily\n\n    var circles = initialLayout(areas, parameters); // transform x/y coordinates to a vector to optimize\n\n    var initial = [],\n        setids = [],\n        setid;\n\n    for (setid in circles) {\n      if (circles.hasOwnProperty(setid)) {\n        initial.push(circles[setid].x);\n        initial.push(circles[setid].y);\n        setids.push(setid);\n      }\n    } // optimize initial layout from our loss function\n\n\n    var solution = nelderMead(function (values) {\n      var current = {};\n\n      for (var i = 0; i < setids.length; ++i) {\n        var setid = setids[i];\n        current[setid] = {\n          x: values[2 * i],\n          y: values[2 * i + 1],\n          radius: circles[setid].radius // size : circles[setid].size\n\n        };\n      }\n\n      return loss(current, areas);\n    }, initial, parameters); // transform solution vector back to x/y points\n\n    var positions = solution.x;\n\n    for (var i = 0; i < setids.length; ++i) {\n      setid = setids[i];\n      circles[setid].x = positions[2 * i];\n      circles[setid].y = positions[2 * i + 1];\n    }\n\n    return circles;\n  }\n\n  var SMALL$1 = 1e-10;\n  /** Returns the distance necessary for two circles of radius r1 + r2 to\n  have the overlap area 'overlap' */\n\n  function distanceFromIntersectArea(r1, r2, overlap) {\n    // handle complete overlapped circles\n    if (Math.min(r1, r2) * Math.min(r1, r2) * Math.PI <= overlap + SMALL$1) {\n      return Math.abs(r1 - r2);\n    }\n\n    return bisect(function (distance$$1) {\n      return circleOverlap(r1, r2, distance$$1) - overlap;\n    }, 0, r1 + r2);\n  }\n  /** Missing pair-wise intersection area data can cause problems:\n   treating as an unknown means that sets will be laid out overlapping,\n   which isn't what people expect. To reflect that we want disjoint sets\n   here, set the overlap to 0 for all missing pairwise set intersections */\n\n\n  function addMissingAreas(areas) {\n    areas = areas.slice(); // two circle intersections that aren't defined\n\n    var ids = [],\n        pairs = {},\n        i,\n        j,\n        a,\n        b;\n\n    for (i = 0; i < areas.length; ++i) {\n      var area = areas[i];\n\n      if (area.sets.length == 1) {\n        ids.push(area.sets[0]);\n      } else if (area.sets.length == 2) {\n        a = area.sets[0];\n        b = area.sets[1];\n        pairs[[a, b]] = true;\n        pairs[[b, a]] = true;\n      }\n    }\n\n    ids.sort(function (a, b) {\n      return a > b;\n    });\n\n    for (i = 0; i < ids.length; ++i) {\n      a = ids[i];\n\n      for (j = i + 1; j < ids.length; ++j) {\n        b = ids[j];\n\n        if (!([a, b] in pairs)) {\n          areas.push({\n            'sets': [a, b],\n            'size': 0\n          });\n        }\n      }\n    }\n\n    return areas;\n  } /// Returns two matrices, one of the euclidean distances between the sets\n  /// and the other indicating if there are subset or disjoint set relationships\n\n\n  function getDistanceMatrices(areas, sets, setids) {\n    // initialize an empty distance matrix between all the points\n    var distances = zerosM(sets.length, sets.length),\n        constraints = zerosM(sets.length, sets.length); // compute required distances between all the sets such that\n    // the areas match\n\n    areas.filter(function (x) {\n      return x.sets.length == 2;\n    }).map(function (current) {\n      var left = setids[current.sets[0]],\n          right = setids[current.sets[1]],\n          r1 = Math.sqrt(sets[left].size / Math.PI),\n          r2 = Math.sqrt(sets[right].size / Math.PI),\n          distance$$1 = distanceFromIntersectArea(r1, r2, current.size);\n      distances[left][right] = distances[right][left] = distance$$1; // also update constraints to indicate if its a subset or disjoint\n      // relationship\n\n      var c = 0;\n\n      if (current.size + 1e-10 >= Math.min(sets[left].size, sets[right].size)) {\n        c = 1;\n      } else if (current.size <= 1e-10) {\n        c = -1;\n      }\n\n      constraints[left][right] = constraints[right][left] = c;\n    });\n    return {\n      distances: distances,\n      constraints: constraints\n    };\n  } /// computes the gradient and loss simulatenously for our constrained MDS optimizer\n\n\n  function constrainedMDSGradient(x, fxprime, distances, constraints) {\n    var loss = 0,\n        i;\n\n    for (i = 0; i < fxprime.length; ++i) {\n      fxprime[i] = 0;\n    }\n\n    for (i = 0; i < distances.length; ++i) {\n      var xi = x[2 * i],\n          yi = x[2 * i + 1];\n\n      for (var j = i + 1; j < distances.length; ++j) {\n        var xj = x[2 * j],\n            yj = x[2 * j + 1],\n            dij = distances[i][j],\n            constraint = constraints[i][j];\n        var squaredDistance = (xj - xi) * (xj - xi) + (yj - yi) * (yj - yi),\n            distance$$1 = Math.sqrt(squaredDistance),\n            delta = squaredDistance - dij * dij;\n\n        if (constraint > 0 && distance$$1 <= dij || constraint < 0 && distance$$1 >= dij) {\n          continue;\n        }\n\n        loss += 2 * delta * delta;\n        fxprime[2 * i] += 4 * delta * (xi - xj);\n        fxprime[2 * i + 1] += 4 * delta * (yi - yj);\n        fxprime[2 * j] += 4 * delta * (xj - xi);\n        fxprime[2 * j + 1] += 4 * delta * (yj - yi);\n      }\n    }\n\n    return loss;\n  } /// takes the best working variant of either constrained MDS or greedy\n\n\n  function bestInitialLayout(areas, params) {\n    var initial = greedyLayout(areas, params);\n    var loss = params.lossFunction || lossFunction; // greedylayout is sufficient for all 2/3 circle cases. try out\n    // constrained MDS for higher order problems, take its output\n    // if it outperforms. (greedy is aesthetically better on 2/3 circles\n    // since it axis aligns)\n\n    if (areas.length >= 8) {\n      var constrained = constrainedMDSLayout(areas, params),\n          constrainedLoss = loss(constrained, areas),\n          greedyLoss = loss(initial, areas);\n\n      if (constrainedLoss + 1e-8 < greedyLoss) {\n        initial = constrained;\n      }\n    }\n\n    return initial;\n  } /// use the constrained MDS variant to generate an initial layout\n\n\n  function constrainedMDSLayout(areas, params) {\n    params = params || {};\n    var restarts = params.restarts || 10; // bidirectionally map sets to a rowid  (so we can create a matrix)\n\n    var sets = [],\n        setids = {},\n        i;\n\n    for (i = 0; i < areas.length; ++i) {\n      var area = areas[i];\n\n      if (area.sets.length == 1) {\n        setids[area.sets[0]] = sets.length;\n        sets.push(area);\n      }\n    }\n\n    var matrices = getDistanceMatrices(areas, sets, setids),\n        distances = matrices.distances,\n        constraints = matrices.constraints; // keep distances bounded, things get messed up otherwise.\n    // TODO: proper preconditioner?\n\n    var norm = norm2(distances.map(norm2)) / distances.length;\n    distances = distances.map(function (row) {\n      return row.map(function (value) {\n        return value / norm;\n      });\n    });\n\n    var obj = function (x, fxprime) {\n      return constrainedMDSGradient(x, fxprime, distances, constraints);\n    };\n\n    var best, current;\n\n    for (i = 0; i < restarts; ++i) {\n      var initial = zeros(distances.length * 2).map(Math.random);\n      current = conjugateGradient(obj, initial, params);\n\n      if (!best || current.fx < best.fx) {\n        best = current;\n      }\n    }\n\n    var positions = best.x; // translate rows back to (x,y,radius) coordinates\n\n    var circles = {};\n\n    for (i = 0; i < sets.length; ++i) {\n      var set = sets[i];\n      circles[set.sets[0]] = {\n        x: positions[2 * i] * norm,\n        y: positions[2 * i + 1] * norm,\n        radius: Math.sqrt(set.size / Math.PI)\n      };\n    }\n\n    if (params.history) {\n      for (i = 0; i < params.history.length; ++i) {\n        scale(params.history[i].x, norm);\n      }\n    }\n\n    return circles;\n  }\n  /** Lays out a Venn diagram greedily, going from most overlapped sets to\n  least overlapped, attempting to position each new set such that the\n  overlapping areas to already positioned sets are basically right */\n\n\n  function greedyLayout(areas, params) {\n    var loss = params && params.lossFunction ? params.lossFunction : lossFunction; // define a circle for each set\n\n    var circles = {},\n        setOverlaps = {},\n        set;\n\n    for (var i = 0; i < areas.length; ++i) {\n      var area = areas[i];\n\n      if (area.sets.length == 1) {\n        set = area.sets[0];\n        circles[set] = {\n          x: 1e10,\n          y: 1e10,\n          rowid: circles.length,\n          size: area.size,\n          radius: Math.sqrt(area.size / Math.PI)\n        };\n        setOverlaps[set] = [];\n      }\n    }\n\n    areas = areas.filter(function (a) {\n      return a.sets.length == 2;\n    }); // map each set to a list of all the other sets that overlap it\n\n    for (i = 0; i < areas.length; ++i) {\n      var current = areas[i];\n      var weight = current.hasOwnProperty('weight') ? current.weight : 1.0;\n      var left = current.sets[0],\n          right = current.sets[1]; // completely overlapped circles shouldn't be positioned early here\n\n      if (current.size + SMALL$1 >= Math.min(circles[left].size, circles[right].size)) {\n        weight = 0;\n      }\n\n      setOverlaps[left].push({\n        set: right,\n        size: current.size,\n        weight: weight\n      });\n      setOverlaps[right].push({\n        set: left,\n        size: current.size,\n        weight: weight\n      });\n    } // get list of most overlapped sets\n\n\n    var mostOverlapped = [];\n\n    for (set in setOverlaps) {\n      if (setOverlaps.hasOwnProperty(set)) {\n        var size = 0;\n\n        for (i = 0; i < setOverlaps[set].length; ++i) {\n          size += setOverlaps[set][i].size * setOverlaps[set][i].weight;\n        }\n\n        mostOverlapped.push({\n          set: set,\n          size: size\n        });\n      }\n    } // sort by size desc\n\n\n    function sortOrder(a, b) {\n      return b.size - a.size;\n    }\n\n    mostOverlapped.sort(sortOrder); // keep track of what sets have been laid out\n\n    var positioned = {};\n\n    function isPositioned(element) {\n      return element.set in positioned;\n    } // adds a point to the output\n\n\n    function positionSet(point, index) {\n      circles[index].x = point.x;\n      circles[index].y = point.y;\n      positioned[index] = true;\n    } // add most overlapped set at (0,0)\n\n\n    positionSet({\n      x: 0,\n      y: 0\n    }, mostOverlapped[0].set); // get distances between all points. TODO, necessary?\n    // answer: probably not\n    // var distances = venn.getDistanceMatrices(circles, areas).distances;\n\n    for (i = 1; i < mostOverlapped.length; ++i) {\n      var setIndex = mostOverlapped[i].set,\n          overlap = setOverlaps[setIndex].filter(isPositioned);\n      set = circles[setIndex];\n      overlap.sort(sortOrder);\n\n      if (overlap.length === 0) {\n        // this shouldn't happen anymore with addMissingAreas\n        throw \"ERROR: missing pairwise overlap information\";\n      }\n\n      var points = [];\n\n      for (var j = 0; j < overlap.length; ++j) {\n        // get appropriate distance from most overlapped already added set\n        var p1 = circles[overlap[j].set],\n            d1 = distanceFromIntersectArea(set.radius, p1.radius, overlap[j].size); // sample positions at 90 degrees for maximum aesthetics\n\n        points.push({\n          x: p1.x + d1,\n          y: p1.y\n        });\n        points.push({\n          x: p1.x - d1,\n          y: p1.y\n        });\n        points.push({\n          y: p1.y + d1,\n          x: p1.x\n        });\n        points.push({\n          y: p1.y - d1,\n          x: p1.x\n        }); // if we have at least 2 overlaps, then figure out where the\n        // set should be positioned analytically and try those too\n\n        for (var k = j + 1; k < overlap.length; ++k) {\n          var p2 = circles[overlap[k].set],\n              d2 = distanceFromIntersectArea(set.radius, p2.radius, overlap[k].size);\n          var extraPoints = circleCircleIntersection({\n            x: p1.x,\n            y: p1.y,\n            radius: d1\n          }, {\n            x: p2.x,\n            y: p2.y,\n            radius: d2\n          });\n\n          for (var l = 0; l < extraPoints.length; ++l) {\n            points.push(extraPoints[l]);\n          }\n        }\n      } // we have some candidate positions for the set, examine loss\n      // at each position to figure out where to put it at\n\n\n      var bestLoss = 1e50,\n          bestPoint = points[0];\n\n      for (j = 0; j < points.length; ++j) {\n        circles[setIndex].x = points[j].x;\n        circles[setIndex].y = points[j].y;\n        var localLoss = loss(circles, areas);\n\n        if (localLoss < bestLoss) {\n          bestLoss = localLoss;\n          bestPoint = points[j];\n        }\n      }\n\n      positionSet(bestPoint, setIndex);\n    }\n\n    return circles;\n  }\n  /** Given a bunch of sets, and the desired overlaps between these sets - computes\n  the distance from the actual overlaps to the desired overlaps. Note that\n  this method ignores overlaps of more than 2 circles */\n\n\n  function lossFunction(sets, overlaps) {\n    var output = 0;\n\n    function getCircles(indices) {\n      return indices.map(function (i) {\n        return sets[i];\n      });\n    }\n\n    for (var i = 0; i < overlaps.length; ++i) {\n      var area = overlaps[i],\n          overlap;\n\n      if (area.sets.length == 1) {\n        continue;\n      } else if (area.sets.length == 2) {\n        var left = sets[area.sets[0]],\n            right = sets[area.sets[1]];\n        overlap = circleOverlap(left.radius, right.radius, distance(left, right));\n      } else {\n        overlap = intersectionArea(getCircles(area.sets));\n      }\n\n      var weight = area.hasOwnProperty('weight') ? area.weight : 1.0;\n      output += weight * (overlap - area.size) * (overlap - area.size);\n    }\n\n    return output;\n  } // orientates a bunch of circles to point in orientation\n\n\n  function orientateCircles(circles, orientation, orientationOrder) {\n    if (orientationOrder === null) {\n      circles.sort(function (a, b) {\n        return b.radius - a.radius;\n      });\n    } else {\n      circles.sort(orientationOrder);\n    }\n\n    var i; // shift circles so largest circle is at (0, 0)\n\n    if (circles.length > 0) {\n      var largestX = circles[0].x,\n          largestY = circles[0].y;\n\n      for (i = 0; i < circles.length; ++i) {\n        circles[i].x -= largestX;\n        circles[i].y -= largestY;\n      }\n    }\n\n    if (circles.length == 2) {\n      // if the second circle is a subset of the first, arrange so that\n      // it is off to one side. hack for https://github.com/benfred/venn.js/issues/120\n      var dist = distance(circles[0], circles[1]);\n\n      if (dist < Math.abs(circles[1].radius - circles[0].radius)) {\n        circles[1].x = circles[0].x + circles[0].radius - circles[1].radius - 1e-10;\n        circles[1].y = circles[0].y;\n      }\n    } // rotate circles so that second largest is at an angle of 'orientation'\n    // from largest\n\n\n    if (circles.length > 1) {\n      var rotation = Math.atan2(circles[1].x, circles[1].y) - orientation,\n          c = Math.cos(rotation),\n          s = Math.sin(rotation),\n          x,\n          y;\n\n      for (i = 0; i < circles.length; ++i) {\n        x = circles[i].x;\n        y = circles[i].y;\n        circles[i].x = c * x - s * y;\n        circles[i].y = s * x + c * y;\n      }\n    } // mirror solution if third solution is above plane specified by\n    // first two circles\n\n\n    if (circles.length > 2) {\n      var angle = Math.atan2(circles[2].x, circles[2].y) - orientation;\n\n      while (angle < 0) {\n        angle += 2 * Math.PI;\n      }\n\n      while (angle > 2 * Math.PI) {\n        angle -= 2 * Math.PI;\n      }\n\n      if (angle > Math.PI) {\n        var slope = circles[1].y / (1e-10 + circles[1].x);\n\n        for (i = 0; i < circles.length; ++i) {\n          var d = (circles[i].x + slope * circles[i].y) / (1 + slope * slope);\n          circles[i].x = 2 * d - circles[i].x;\n          circles[i].y = 2 * d * slope - circles[i].y;\n        }\n      }\n    }\n  }\n\n  function disjointCluster(circles) {\n    // union-find clustering to get disjoint sets\n    circles.map(function (circle) {\n      circle.parent = circle;\n    }); // path compression step in union find\n\n    function find(circle) {\n      if (circle.parent !== circle) {\n        circle.parent = find(circle.parent);\n      }\n\n      return circle.parent;\n    }\n\n    function union(x, y) {\n      var xRoot = find(x),\n          yRoot = find(y);\n      xRoot.parent = yRoot;\n    } // get the union of all overlapping sets\n\n\n    for (var i = 0; i < circles.length; ++i) {\n      for (var j = i + 1; j < circles.length; ++j) {\n        var maxDistance = circles[i].radius + circles[j].radius;\n\n        if (distance(circles[i], circles[j]) + 1e-10 < maxDistance) {\n          union(circles[j], circles[i]);\n        }\n      }\n    } // find all the disjoint clusters and group them together\n\n\n    var disjointClusters = {},\n        setid;\n\n    for (i = 0; i < circles.length; ++i) {\n      setid = find(circles[i]).parent.setid;\n\n      if (!(setid in disjointClusters)) {\n        disjointClusters[setid] = [];\n      }\n\n      disjointClusters[setid].push(circles[i]);\n    } // cleanup bookkeeping\n\n\n    circles.map(function (circle) {\n      delete circle.parent;\n    }); // return in more usable form\n\n    var ret = [];\n\n    for (setid in disjointClusters) {\n      if (disjointClusters.hasOwnProperty(setid)) {\n        ret.push(disjointClusters[setid]);\n      }\n    }\n\n    return ret;\n  }\n\n  function getBoundingBox(circles) {\n    var minMax = function (d) {\n      var hi = Math.max.apply(null, circles.map(function (c) {\n        return c[d] + c.radius;\n      })),\n          lo = Math.min.apply(null, circles.map(function (c) {\n        return c[d] - c.radius;\n      }));\n      return {\n        max: hi,\n        min: lo\n      };\n    };\n\n    return {\n      xRange: minMax('x'),\n      yRange: minMax('y')\n    };\n  }\n\n  function normalizeSolution(solution, orientation, orientationOrder) {\n    if (orientation === null) {\n      orientation = Math.PI / 2;\n    } // work with a list instead of a dictionary, and take a copy so we\n    // don't mutate input\n\n\n    var circles = [],\n        i,\n        setid;\n\n    for (setid in solution) {\n      if (solution.hasOwnProperty(setid)) {\n        var previous = solution[setid];\n        circles.push({\n          x: previous.x,\n          y: previous.y,\n          radius: previous.radius,\n          setid: setid\n        });\n      }\n    } // get all the disjoint clusters\n\n\n    var clusters = disjointCluster(circles); // orientate all disjoint sets, get sizes\n\n    for (i = 0; i < clusters.length; ++i) {\n      orientateCircles(clusters[i], orientation, orientationOrder);\n      var bounds = getBoundingBox(clusters[i]);\n      clusters[i].size = (bounds.xRange.max - bounds.xRange.min) * (bounds.yRange.max - bounds.yRange.min);\n      clusters[i].bounds = bounds;\n    }\n\n    clusters.sort(function (a, b) {\n      return b.size - a.size;\n    }); // orientate the largest at 0,0, and get the bounds\n\n    circles = clusters[0];\n    var returnBounds = circles.bounds;\n    var spacing = (returnBounds.xRange.max - returnBounds.xRange.min) / 50;\n\n    function addCluster(cluster, right, bottom) {\n      if (!cluster) return;\n      var bounds = cluster.bounds,\n          xOffset,\n          yOffset,\n          centreing;\n\n      if (right) {\n        xOffset = returnBounds.xRange.max - bounds.xRange.min + spacing;\n      } else {\n        xOffset = returnBounds.xRange.max - bounds.xRange.max;\n        centreing = (bounds.xRange.max - bounds.xRange.min) / 2 - (returnBounds.xRange.max - returnBounds.xRange.min) / 2;\n        if (centreing < 0) xOffset += centreing;\n      }\n\n      if (bottom) {\n        yOffset = returnBounds.yRange.max - bounds.yRange.min + spacing;\n      } else {\n        yOffset = returnBounds.yRange.max - bounds.yRange.max;\n        centreing = (bounds.yRange.max - bounds.yRange.min) / 2 - (returnBounds.yRange.max - returnBounds.yRange.min) / 2;\n        if (centreing < 0) yOffset += centreing;\n      }\n\n      for (var j = 0; j < cluster.length; ++j) {\n        cluster[j].x += xOffset;\n        cluster[j].y += yOffset;\n        circles.push(cluster[j]);\n      }\n    }\n\n    var index = 1;\n\n    while (index < clusters.length) {\n      addCluster(clusters[index], true, false);\n      addCluster(clusters[index + 1], false, true);\n      addCluster(clusters[index + 2], true, true);\n      index += 3; // have one cluster (in top left). lay out next three relative\n      // to it in a grid\n\n      returnBounds = getBoundingBox(circles);\n    } // convert back to solution form\n\n\n    var ret = {};\n\n    for (i = 0; i < circles.length; ++i) {\n      ret[circles[i].setid] = circles[i];\n    }\n\n    return ret;\n  }\n  /** Scales a solution from venn.venn or venn.greedyLayout such that it fits in\n  a rectangle of width/height - with padding around the borders. also\n  centers the diagram in the available space at the same time */\n\n\n  function scaleSolution(solution, width, height, padding) {\n    var circles = [],\n        setids = [];\n\n    for (var setid in solution) {\n      if (solution.hasOwnProperty(setid)) {\n        setids.push(setid);\n        circles.push(solution[setid]);\n      }\n    }\n\n    width -= 2 * padding;\n    height -= 2 * padding;\n    var bounds = getBoundingBox(circles),\n        xRange = bounds.xRange,\n        yRange = bounds.yRange;\n\n    if (xRange.max == xRange.min || yRange.max == yRange.min) {\n      console.log(\"not scaling solution: zero size detected\");\n      return solution;\n    }\n\n    var xScaling = width / (xRange.max - xRange.min),\n        yScaling = height / (yRange.max - yRange.min),\n        scaling = Math.min(yScaling, xScaling),\n        // while we're at it, center the diagram too\n    xOffset = (width - (xRange.max - xRange.min) * scaling) / 2,\n        yOffset = (height - (yRange.max - yRange.min) * scaling) / 2;\n    var scaled = {};\n\n    for (var i = 0; i < circles.length; ++i) {\n      var circle = circles[i];\n      scaled[setids[i]] = {\n        radius: scaling * circle.radius,\n        x: padding + xOffset + (circle.x - xRange.min) * scaling,\n        y: padding + yOffset + (circle.y - yRange.min) * scaling\n      };\n    }\n\n    return scaled;\n  }\n  /*global console:true*/\n\n\n  function VennDiagram() {\n    var width = 600,\n        height = 350,\n        padding = 15,\n        duration = 1000,\n        orientation = Math.PI / 2,\n        normalize = true,\n        wrap = true,\n        styled = true,\n        fontSize = null,\n        orientationOrder = null,\n        // mimic the behaviour of d3.scale.category10 from the previous\n    // version of d3\n    colourMap = {},\n        // so this is the same as d3.schemeCategory10, which is only defined in d3 4.0\n    // since we can support older versions of d3 as long as we don't force this,\n    // I'm hackily redefining below. TODO: remove this and change to d3.schemeCategory10\n    colourScheme = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"],\n        colourIndex = 0,\n        colours = function (key) {\n      if (key in colourMap) {\n        return colourMap[key];\n      }\n\n      var ret = colourMap[key] = colourScheme[colourIndex];\n      colourIndex += 1;\n\n      if (colourIndex >= colourScheme.length) {\n        colourIndex = 0;\n      }\n\n      return ret;\n    },\n        layoutFunction = venn,\n        loss = lossFunction;\n\n    function chart(selection) {\n      var data = selection.datum(); // handle 0-sized sets by removing from input\n\n      var toremove = {};\n      data.forEach(function (datum) {\n        if (datum.size == 0 && datum.sets.length == 1) {\n          toremove[datum.sets[0]] = 1;\n        }\n      });\n      data = data.filter(function (datum) {\n        return !datum.sets.some(function (set) {\n          return set in toremove;\n        });\n      });\n      var circles = {};\n      var textCentres = {};\n\n      if (data.length > 0) {\n        var solution = layoutFunction(data, {\n          lossFunction: loss\n        });\n\n        if (normalize) {\n          solution = normalizeSolution(solution, orientation, orientationOrder);\n        }\n\n        circles = scaleSolution(solution, width, height, padding);\n        textCentres = computeTextCentres(circles, data);\n      } // Figure out the current label for each set. These can change\n      // and D3 won't necessarily update (fixes https://github.com/benfred/venn.js/issues/103)\n\n\n      var labels = {};\n      data.forEach(function (datum) {\n        if (datum.label) {\n          labels[datum.sets] = datum.label;\n        }\n      });\n\n      function label(d) {\n        if (d.sets in labels) {\n          return labels[d.sets];\n        }\n\n        if (d.sets.length == 1) {\n          return '' + d.sets[0];\n        }\n      } // create svg if not already existing\n\n\n      selection.selectAll(\"svg\").data([circles]).enter().append(\"svg\");\n      var svg = selection.select(\"svg\").attr(\"width\", width).attr(\"height\", height); // to properly transition intersection areas, we need the\n      // previous circles locations. load from elements\n\n      var previous = {},\n          hasPrevious = false;\n      svg.selectAll(\".venn-area path\").each(function (d) {\n        var path = d3Selection.select(this).attr(\"d\");\n\n        if (d.sets.length == 1 && path) {\n          hasPrevious = true;\n          previous[d.sets[0]] = circleFromPath(path);\n        }\n      }); // interpolate intersection area paths between previous and\n      // current paths\n\n      var pathTween = function (d) {\n        return function (t) {\n          var c = d.sets.map(function (set) {\n            var start = previous[set],\n                end = circles[set];\n\n            if (!start) {\n              start = {\n                x: width / 2,\n                y: height / 2,\n                radius: 1\n              };\n            }\n\n            if (!end) {\n              end = {\n                x: width / 2,\n                y: height / 2,\n                radius: 1\n              };\n            }\n\n            return {\n              'x': start.x * (1 - t) + end.x * t,\n              'y': start.y * (1 - t) + end.y * t,\n              'radius': start.radius * (1 - t) + end.radius * t\n            };\n          });\n          return intersectionAreaPath(c);\n        };\n      }; // update data, joining on the set ids\n\n\n      var nodes = svg.selectAll(\".venn-area\").data(data, function (d) {\n        return d.sets;\n      }); // create new nodes\n\n      var enter = nodes.enter().append('g').attr(\"class\", function (d) {\n        return \"venn-area venn-\" + (d.sets.length == 1 ? \"circle\" : \"intersection\");\n      }).attr(\"data-venn-sets\", function (d) {\n        return d.sets.join(\"_\");\n      });\n      var enterPath = enter.append(\"path\"),\n          enterText = enter.append(\"text\").attr(\"class\", \"label\").text(function (d) {\n        return label(d);\n      }).attr(\"text-anchor\", \"middle\").attr(\"dy\", \".35em\").attr(\"x\", width / 2).attr(\"y\", height / 2); // apply minimal style if wanted\n\n      if (styled) {\n        enterPath.style(\"fill-opacity\", \"0\").filter(function (d) {\n          return d.sets.length == 1;\n        }).style(\"fill\", function (d) {\n          return colours(d.sets);\n        }).style(\"fill-opacity\", \".25\");\n        enterText.style(\"fill\", function (d) {\n          return d.sets.length == 1 ? colours(d.sets) : \"#444\";\n        });\n      } // update existing, using pathTween if necessary\n\n\n      var update = selection;\n\n      if (hasPrevious) {\n        update = selection.transition(\"venn\").duration(duration);\n        update.selectAll(\"path\").attrTween(\"d\", pathTween);\n      } else {\n        update.selectAll(\"path\").attr(\"d\", function (d) {\n          return intersectionAreaPath(d.sets.map(function (set) {\n            return circles[set];\n          }));\n        });\n      }\n\n      var updateText = update.selectAll(\"text\").filter(function (d) {\n        return d.sets in textCentres;\n      }).text(function (d) {\n        return label(d);\n      }).attr(\"x\", function (d) {\n        return Math.floor(textCentres[d.sets].x);\n      }).attr(\"y\", function (d) {\n        return Math.floor(textCentres[d.sets].y);\n      });\n\n      if (wrap) {\n        if (hasPrevious) {\n          // d3 4.0 uses 'on' for events on transitions,\n          // but d3 3.0 used 'each' instead. switch appropiately\n          if ('on' in updateText) {\n            updateText.on(\"end\", wrapText(circles, label));\n          } else {\n            updateText.each(\"end\", wrapText(circles, label));\n          }\n        } else {\n          updateText.each(wrapText(circles, label));\n        }\n      } // remove old\n\n\n      var exit = nodes.exit().transition('venn').duration(duration).remove();\n      exit.selectAll(\"path\").attrTween(\"d\", pathTween);\n      var exitText = exit.selectAll(\"text\").attr(\"x\", width / 2).attr(\"y\", height / 2); // if we've been passed a fontSize explicitly, use it to\n      // transition\n\n      if (fontSize !== null) {\n        enterText.style(\"font-size\", \"0px\");\n        updateText.style(\"font-size\", fontSize);\n        exitText.style(\"font-size\", \"0px\");\n      }\n\n      return {\n        'circles': circles,\n        'textCentres': textCentres,\n        'nodes': nodes,\n        'enter': enter,\n        'update': update,\n        'exit': exit\n      };\n    }\n\n    chart.wrap = function (_) {\n      if (!arguments.length) return wrap;\n      wrap = _;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return chart;\n    };\n\n    chart.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = _;\n      return chart;\n    };\n\n    chart.colours = function (_) {\n      if (!arguments.length) return colours;\n      colours = _;\n      return chart;\n    };\n\n    chart.fontSize = function (_) {\n      if (!arguments.length) return fontSize;\n      fontSize = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      return chart;\n    };\n\n    chart.layoutFunction = function (_) {\n      if (!arguments.length) return layoutFunction;\n      layoutFunction = _;\n      return chart;\n    };\n\n    chart.normalize = function (_) {\n      if (!arguments.length) return normalize;\n      normalize = _;\n      return chart;\n    };\n\n    chart.styled = function (_) {\n      if (!arguments.length) return styled;\n      styled = _;\n      return chart;\n    };\n\n    chart.orientation = function (_) {\n      if (!arguments.length) return orientation;\n      orientation = _;\n      return chart;\n    };\n\n    chart.orientationOrder = function (_) {\n      if (!arguments.length) return orientationOrder;\n      orientationOrder = _;\n      return chart;\n    };\n\n    chart.lossFunction = function (_) {\n      if (!arguments.length) return loss;\n      loss = _;\n      return chart;\n    };\n\n    return chart;\n  } // sometimes text doesn't fit inside the circle, if thats the case lets wrap\n  // the text here such that it fits\n  // todo: looks like this might be merged into d3 (\n  // https://github.com/mbostock/d3/issues/1642),\n  // also worth checking out is\n  // http://engineering.findthebest.com/wrapping-axis-labels-in-d3-js/\n  // this seems to be one of those things that should be easy but isn't\n\n\n  function wrapText(circles, labeller) {\n    return function () {\n      var text = d3Selection.select(this),\n          data = text.datum(),\n          width = circles[data.sets[0]].radius || 50,\n          label = labeller(data) || '';\n      var words = label.split(/\\s+/).reverse(),\n          maxLines = 3,\n          minChars = (label.length + words.length) / maxLines,\n          word = words.pop(),\n          line = [word],\n          joined,\n          lineNumber = 0,\n          lineHeight = 1.1,\n          // ems\n      tspan = text.text(null).append(\"tspan\").text(word);\n\n      while (true) {\n        word = words.pop();\n        if (!word) break;\n        line.push(word);\n        joined = line.join(\" \");\n        tspan.text(joined);\n\n        if (joined.length > minChars && tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").text(word);\n          lineNumber++;\n        }\n      }\n\n      var initial = 0.35 - lineNumber * lineHeight / 2,\n          x = text.attr(\"x\"),\n          y = text.attr(\"y\");\n      text.selectAll(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", function (d, i) {\n        return initial + i * lineHeight + \"em\";\n      });\n    };\n  }\n\n  function circleMargin(current, interior, exterior) {\n    var margin = interior[0].radius - distance(interior[0], current),\n        i,\n        m;\n\n    for (i = 1; i < interior.length; ++i) {\n      m = interior[i].radius - distance(interior[i], current);\n\n      if (m <= margin) {\n        margin = m;\n      }\n    }\n\n    for (i = 0; i < exterior.length; ++i) {\n      m = distance(exterior[i], current) - exterior[i].radius;\n\n      if (m <= margin) {\n        margin = m;\n      }\n    }\n\n    return margin;\n  } // compute the center of some circles by maximizing the margin of\n  // the center point relative to the circles (interior) after subtracting\n  // nearby circles (exterior)\n\n\n  function computeTextCentre(interior, exterior) {\n    // get an initial estimate by sampling around the interior circles\n    // and taking the point with the biggest margin\n    var points = [],\n        i;\n\n    for (i = 0; i < interior.length; ++i) {\n      var c = interior[i];\n      points.push({\n        x: c.x,\n        y: c.y\n      });\n      points.push({\n        x: c.x + c.radius / 2,\n        y: c.y\n      });\n      points.push({\n        x: c.x - c.radius / 2,\n        y: c.y\n      });\n      points.push({\n        x: c.x,\n        y: c.y + c.radius / 2\n      });\n      points.push({\n        x: c.x,\n        y: c.y - c.radius / 2\n      });\n    }\n\n    var initial = points[0],\n        margin = circleMargin(points[0], interior, exterior);\n\n    for (i = 1; i < points.length; ++i) {\n      var m = circleMargin(points[i], interior, exterior);\n\n      if (m >= margin) {\n        initial = points[i];\n        margin = m;\n      }\n    } // maximize the margin numerically\n\n\n    var solution = nelderMead(function (p) {\n      return -1 * circleMargin({\n        x: p[0],\n        y: p[1]\n      }, interior, exterior);\n    }, [initial.x, initial.y], {\n      maxIterations: 500,\n      minErrorDelta: 1e-10\n    }).x;\n    var ret = {\n      x: solution[0],\n      y: solution[1]\n    }; // check solution, fallback as needed (happens if fully overlapped\n    // etc)\n\n    var valid = true;\n\n    for (i = 0; i < interior.length; ++i) {\n      if (distance(ret, interior[i]) > interior[i].radius) {\n        valid = false;\n        break;\n      }\n    }\n\n    for (i = 0; i < exterior.length; ++i) {\n      if (distance(ret, exterior[i]) < exterior[i].radius) {\n        valid = false;\n        break;\n      }\n    }\n\n    if (!valid) {\n      if (interior.length == 1) {\n        ret = {\n          x: interior[0].x,\n          y: interior[0].y\n        };\n      } else {\n        var areaStats = {};\n        intersectionArea(interior, areaStats);\n\n        if (areaStats.arcs.length === 0) {\n          ret = {\n            'x': 0,\n            'y': -1000,\n            disjoint: true\n          };\n        } else if (areaStats.arcs.length == 1) {\n          ret = {\n            'x': areaStats.arcs[0].circle.x,\n            'y': areaStats.arcs[0].circle.y\n          };\n        } else if (exterior.length) {\n          // try again without other circles\n          ret = computeTextCentre(interior, []);\n        } else {\n          // take average of all the points in the intersection\n          // polygon. this should basically never happen\n          // and has some issues:\n          // https://github.com/benfred/venn.js/issues/48#issuecomment-146069777\n          ret = getCenter(areaStats.arcs.map(function (a) {\n            return a.p1;\n          }));\n        }\n      }\n    }\n\n    return ret;\n  } // given a dictionary of {setid : circle}, returns\n  // a dictionary of setid to list of circles that completely overlap it\n\n\n  function getOverlappingCircles(circles) {\n    var ret = {},\n        circleids = [];\n\n    for (var circleid in circles) {\n      circleids.push(circleid);\n      ret[circleid] = [];\n    }\n\n    for (var i = 0; i < circleids.length; i++) {\n      var a = circles[circleids[i]];\n\n      for (var j = i + 1; j < circleids.length; ++j) {\n        var b = circles[circleids[j]],\n            d = distance(a, b);\n\n        if (d + b.radius <= a.radius + 1e-10) {\n          ret[circleids[j]].push(circleids[i]);\n        } else if (d + a.radius <= b.radius + 1e-10) {\n          ret[circleids[i]].push(circleids[j]);\n        }\n      }\n    }\n\n    return ret;\n  }\n\n  function computeTextCentres(circles, areas) {\n    var ret = {},\n        overlapped = getOverlappingCircles(circles);\n\n    for (var i = 0; i < areas.length; ++i) {\n      var area = areas[i].sets,\n          areaids = {},\n          exclude = {};\n\n      for (var j = 0; j < area.length; ++j) {\n        areaids[area[j]] = true;\n        var overlaps = overlapped[area[j]]; // keep track of any circles that overlap this area,\n        // and don't consider for purposes of computing the text\n        // centre\n\n        for (var k = 0; k < overlaps.length; ++k) {\n          exclude[overlaps[k]] = true;\n        }\n      }\n\n      var interior = [],\n          exterior = [];\n\n      for (var setid in circles) {\n        if (setid in areaids) {\n          interior.push(circles[setid]);\n        } else if (!(setid in exclude)) {\n          exterior.push(circles[setid]);\n        }\n      }\n\n      var centre = computeTextCentre(interior, exterior);\n      ret[area] = centre;\n\n      if (centre.disjoint && areas[i].size > 0) {\n        console.log(\"WARNING: area \" + area + \" not represented on screen\");\n      }\n    }\n\n    return ret;\n  } // sorts all areas in the venn diagram, so that\n  // a particular area is on top (relativeTo) - and\n  // all other areas are so that the smallest areas are on top\n\n\n  function sortAreas(div, relativeTo) {\n    // figure out sets that are completly overlapped by relativeTo\n    var overlaps = getOverlappingCircles(div.selectAll(\"svg\").datum());\n    var exclude = {};\n\n    for (var i = 0; i < relativeTo.sets.length; ++i) {\n      var check = relativeTo.sets[i];\n\n      for (var setid in overlaps) {\n        var overlap = overlaps[setid];\n\n        for (var j = 0; j < overlap.length; ++j) {\n          if (overlap[j] == check) {\n            exclude[setid] = true;\n            break;\n          }\n        }\n      }\n    } // checks that all sets are in exclude;\n\n\n    function shouldExclude(sets) {\n      for (var i = 0; i < sets.length; ++i) {\n        if (!(sets[i] in exclude)) {\n          return false;\n        }\n      }\n\n      return true;\n    } // need to sort div's so that Z order is correct\n\n\n    div.selectAll(\"g\").sort(function (a, b) {\n      // highest order set intersections first\n      if (a.sets.length != b.sets.length) {\n        return a.sets.length - b.sets.length;\n      }\n\n      if (a == relativeTo) {\n        return shouldExclude(b.sets) ? -1 : 1;\n      }\n\n      if (b == relativeTo) {\n        return shouldExclude(a.sets) ? 1 : -1;\n      } // finally by size\n\n\n      return b.size - a.size;\n    });\n  }\n\n  function circlePath(x, y, r) {\n    var ret = [];\n    ret.push(\"\\nM\", x, y);\n    ret.push(\"\\nm\", -r, 0);\n    ret.push(\"\\na\", r, r, 0, 1, 0, r * 2, 0);\n    ret.push(\"\\na\", r, r, 0, 1, 0, -r * 2, 0);\n    return ret.join(\" \");\n  } // inverse of the circlePath function, returns a circle object from an svg path\n\n\n  function circleFromPath(path) {\n    var tokens = path.split(' ');\n    return {\n      'x': parseFloat(tokens[1]),\n      'y': parseFloat(tokens[2]),\n      'radius': -parseFloat(tokens[4])\n    };\n  }\n  /** returns a svg path of the intersection area of a bunch of circles */\n\n\n  function intersectionAreaPath(circles) {\n    var stats = {};\n    intersectionArea(circles, stats);\n    var arcs = stats.arcs;\n\n    if (arcs.length === 0) {\n      return \"M 0 0\";\n    } else if (arcs.length == 1) {\n      var circle = arcs[0].circle;\n      return circlePath(circle.x, circle.y, circle.radius);\n    } else {\n      // draw path around arcs\n      var ret = [\"\\nM\", arcs[0].p2.x, arcs[0].p2.y];\n\n      for (var i = 0; i < arcs.length; ++i) {\n        var arc = arcs[i],\n            r = arc.circle.radius,\n            wide = arc.width > r;\n        ret.push(\"\\nA\", r, r, 0, wide ? 1 : 0, 1, arc.p1.x, arc.p1.y);\n      }\n\n      return ret.join(\" \");\n    }\n  }\n\n  exports.intersectionArea = intersectionArea;\n  exports.circleCircleIntersection = circleCircleIntersection;\n  exports.circleOverlap = circleOverlap;\n  exports.circleArea = circleArea;\n  exports.distance = distance;\n  exports.venn = venn;\n  exports.greedyLayout = greedyLayout;\n  exports.scaleSolution = scaleSolution;\n  exports.normalizeSolution = normalizeSolution;\n  exports.bestInitialLayout = bestInitialLayout;\n  exports.lossFunction = lossFunction;\n  exports.disjointCluster = disjointCluster;\n  exports.distanceFromIntersectArea = distanceFromIntersectArea;\n  exports.VennDiagram = VennDiagram;\n  exports.wrapText = wrapText;\n  exports.computeTextCentres = computeTextCentres;\n  exports.computeTextCentre = computeTextCentre;\n  exports.sortAreas = sortAreas;\n  exports.circlePath = circlePath;\n  exports.circleFromPath = circleFromPath;\n  exports.intersectionAreaPath = intersectionAreaPath;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n\n/***/ }),\n/* 401 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__creator__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__select__ = __webpack_require__(379);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  return Object(__WEBPACK_IMPORTED_MODULE_1__select__[\"a\" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_0__creator__[\"a\" /* default */])(name).call(document.documentElement));\n});\n\n/***/ }),\n/* 402 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__selector__ = __webpack_require__(372);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (select) {\n  if (typeof select !== \"function\") select = Object(__WEBPACK_IMPORTED_MODULE_1__selector__[\"a\" /* default */])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](subgroups, this._parents);\n});\n\n/***/ }),\n/* 403 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__selectorAll__ = __webpack_require__(380);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (select) {\n  if (typeof select !== \"function\") select = Object(__WEBPACK_IMPORTED_MODULE_1__selectorAll__[\"a\" /* default */])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](subgroups, parents);\n});\n\n/***/ }),\n/* 404 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matcher__ = __webpack_require__(381);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (match) {\n  if (typeof match !== \"function\") match = Object(__WEBPACK_IMPORTED_MODULE_1__matcher__[\"a\" /* default */])(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](subgroups, this._parents);\n});\n\n/***/ }),\n/* 405 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enter__ = __webpack_require__(382);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constant__ = __webpack_require__(406);\n\n\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new __WEBPACK_IMPORTED_MODULE_1__enter__[\"a\" /* EnterNode */](parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new __WEBPACK_IMPORTED_MODULE_1__enter__[\"a\" /* EnterNode */](parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = Object(__WEBPACK_IMPORTED_MODULE_2__constant__[\"a\" /* default */])(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n});\n\n/***/ }),\n/* 406 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (x) {\n  return function () {\n    return x;\n  };\n});\n\n/***/ }),\n/* 407 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sparse__ = __webpack_require__(383);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(69);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return new __WEBPACK_IMPORTED_MODULE_1__index__[\"a\" /* Selection */](this._exit || this._groups.map(__WEBPACK_IMPORTED_MODULE_0__sparse__[\"a\" /* default */]), this._parents);\n});\n\n/***/ }),\n/* 408 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](merges, this._parents);\n});\n\n/***/ }),\n/* 409 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n});\n\n/***/ }),\n/* 410 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(69);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Selection */](sortgroups, this._parents).order();\n});\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n/***/ }),\n/* 411 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n});\n\n/***/ }),\n/* 412 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n});\n\n/***/ }),\n/* 413 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n});\n\n/***/ }),\n/* 414 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n});\n\n/***/ }),\n/* 415 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return !this.node();\n});\n\n/***/ }),\n/* 416 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n});\n\n/***/ }),\n/* 417 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__namespace__ = __webpack_require__(370);\n\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  var fullname = Object(__WEBPACK_IMPORTED_MODULE_0__namespace__[\"a\" /* default */])(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n});\n\n/***/ }),\n/* 418 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n});\n\n/***/ }),\n/* 419 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function (name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function (name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function (name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) if (!list.contains(names[i])) return false;\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n});\n\n/***/ }),\n/* 420 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n});\n\n/***/ }),\n/* 421 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n});\n\n/***/ }),\n/* 422 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return this.each(raise);\n});\n\n/***/ }),\n/* 423 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return this.each(lower);\n});\n\n/***/ }),\n/* 424 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__creator__ = __webpack_require__(360);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  var create = typeof name === \"function\" ? name : Object(__WEBPACK_IMPORTED_MODULE_0__creator__[\"a\" /* default */])(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n});\n\n/***/ }),\n/* 425 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__creator__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__selector__ = __webpack_require__(372);\n\n\n\nfunction constantNull() {\n  return null;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, before) {\n  var create = typeof name === \"function\" ? name : Object(__WEBPACK_IMPORTED_MODULE_0__creator__[\"a\" /* default */])(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : Object(__WEBPACK_IMPORTED_MODULE_1__selector__[\"a\" /* default */])(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n});\n\n/***/ }),\n/* 426 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return this.each(remove);\n});\n\n/***/ }),\n/* 427 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n});\n\n/***/ }),\n/* 428 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n});\n\n/***/ }),\n/* 429 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__window__ = __webpack_require__(373);\n\n\nfunction dispatchEvent(node, type, params) {\n  var window = Object(__WEBPACK_IMPORTED_MODULE_0__window__[\"a\" /* default */])(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n});\n\n/***/ }),\n/* 430 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = local;\nvar nextId = 0;\nfunction local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function (node) {\n    var id = this._;\n\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n\n    return node[id];\n  },\n  set: function (node, value) {\n    return node[this._] = value;\n  },\n  remove: function (node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function () {\n    return this._;\n  }\n};\n\n/***/ }),\n/* 431 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sourceEvent__ = __webpack_require__(375);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__point__ = __webpack_require__(361);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node) {\n  var event = Object(__WEBPACK_IMPORTED_MODULE_0__sourceEvent__[\"a\" /* default */])();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return Object(__WEBPACK_IMPORTED_MODULE_1__point__[\"a\" /* default */])(node, event);\n});\n\n/***/ }),\n/* 432 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__selection_index__ = __webpack_require__(69);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (selector) {\n  return typeof selector === \"string\" ? new __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"a\" /* Selection */]([document.querySelectorAll(selector)], [document.documentElement]) : new __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"a\" /* Selection */]([selector == null ? [] : selector], __WEBPACK_IMPORTED_MODULE_0__selection_index__[\"c\" /* root */]);\n});\n\n/***/ }),\n/* 433 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sourceEvent__ = __webpack_require__(375);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__point__ = __webpack_require__(361);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = Object(__WEBPACK_IMPORTED_MODULE_0__sourceEvent__[\"a\" /* default */])().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return Object(__WEBPACK_IMPORTED_MODULE_1__point__[\"a\" /* default */])(node, touch);\n    }\n  }\n\n  return null;\n});\n\n/***/ }),\n/* 434 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sourceEvent__ = __webpack_require__(375);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__point__ = __webpack_require__(361);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node, touches) {\n  if (touches == null) touches = Object(__WEBPACK_IMPORTED_MODULE_0__sourceEvent__[\"a\" /* default */])().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = Object(__WEBPACK_IMPORTED_MODULE_1__point__[\"a\" /* default */])(node, touches[i]);\n  }\n\n  return points;\n});\n\n/***/ }),\n/* 435 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_selection_index__ = __webpack_require__(436);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_transition_index__ = __webpack_require__(169);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"transition\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_transition_index__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_active__ = __webpack_require__(457);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"active\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_active__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_interrupt__ = __webpack_require__(385);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interrupt\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_interrupt__[\"a\"]; });\n\n\n\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__interrupt__ = __webpack_require__(437);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transition__ = __webpack_require__(440);\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selection\"].prototype.interrupt = __WEBPACK_IMPORTED_MODULE_1__interrupt__[\"a\" /* default */];\n__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selection\"].prototype.transition = __WEBPACK_IMPORTED_MODULE_2__transition__[\"a\" /* default */];\n\n/***/ }),\n/* 437 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interrupt__ = __webpack_require__(385);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  return this.each(function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__interrupt__[\"a\" /* default */])(this, name);\n  });\n});\n\n/***/ }),\n/* 438 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_dispatch__ = __webpack_require__(439);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_dispatch__[\"a\"]; });\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar noop = {\n  value: function () {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function (typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function () {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) copy[t] = _[t].slice();\n\n    return new Dispatch(copy);\n  },\n  call: function (type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function (type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (dispatch);\n\n/***/ }),\n/* 440 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transition_index__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transition_schedule__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3_ease__ = __webpack_require__(173);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_d3_timer__ = __webpack_require__(170);\n\n\n\n\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: __WEBPACK_IMPORTED_MODULE_2_d3_ease__[\"easeCubicInOut\"]\n};\n\nfunction inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = Object(__WEBPACK_IMPORTED_MODULE_3_d3_timer__[\"now\"])(), defaultTiming;\n    }\n  }\n\n  return timing;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name) {\n  var id, timing;\n\n  if (name instanceof __WEBPACK_IMPORTED_MODULE_0__transition_index__[\"a\" /* Transition */]) {\n    id = name._id, name = name._name;\n  } else {\n    id = Object(__WEBPACK_IMPORTED_MODULE_0__transition_index__[\"c\" /* newId */])(), (timing = defaultTiming).time = Object(__WEBPACK_IMPORTED_MODULE_3_d3_timer__[\"now\"])(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__transition_schedule__[\"e\" /* default */])(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__transition_index__[\"a\" /* Transition */](groups, this._parents, name, id);\n});\n\n/***/ }),\n/* 441 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_interpolate__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tween__ = __webpack_require__(362);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__interpolate__ = __webpack_require__(386);\n\n\n\n\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  var fullname = Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"namespace\"])(name),\n      i = fullname === \"transform\" ? __WEBPACK_IMPORTED_MODULE_0_d3_interpolate__[\"interpolateTransformSvg\"] : __WEBPACK_IMPORTED_MODULE_3__interpolate__[\"a\" /* default */];\n  return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, Object(__WEBPACK_IMPORTED_MODULE_2__tween__[\"b\" /* tweenValue */])(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n});\n\n/***/ }),\n/* 442 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  var fullname = Object(__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"namespace\"])(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n});\n\n/***/ }),\n/* 443 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schedule__ = __webpack_require__(70);\n\n\nfunction delayFunction(id, value) {\n  return function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"g\" /* init */])(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"g\" /* init */])(this, id).delay = value;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(this.node(), id).delay;\n});\n\n/***/ }),\n/* 444 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schedule__ = __webpack_require__(70);\n\n\nfunction durationFunction(id, value) {\n  return function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id).duration = value;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(this.node(), id).duration;\n});\n\n/***/ }),\n/* 445 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schedule__ = __webpack_require__(70);\n\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */])(this, id).ease = value;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(this.node(), id).ease;\n});\n\n/***/ }),\n/* 446 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(169);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (match) {\n  if (typeof match !== \"function\") match = Object(__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"matcher\"])(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_1__index__[\"a\" /* Transition */](subgroups, this._parents, this._name, this._id);\n});\n\n/***/ }),\n/* 447 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(169);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (transition) {\n  if (transition._id !== this._id) throw new Error();\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Transition */](merges, this._parents, this._name, this._id);\n});\n\n/***/ }),\n/* 448 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schedule__ = __webpack_require__(70);\n\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = start(name) ? __WEBPACK_IMPORTED_MODULE_0__schedule__[\"g\" /* init */] : __WEBPACK_IMPORTED_MODULE_0__schedule__[\"h\" /* set */];\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? Object(__WEBPACK_IMPORTED_MODULE_0__schedule__[\"f\" /* get */])(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n});\n\n/***/ }),\n/* 449 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n\n    for (var i in this.__transition) if (+i !== id) return;\n\n    if (parent) parent.removeChild(this);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return this.on(\"end.remove\", removeFunction(this._id));\n});\n\n/***/ }),\n/* 450 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__schedule__ = __webpack_require__(70);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = Object(__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selector\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        Object(__WEBPACK_IMPORTED_MODULE_2__schedule__[\"e\" /* default */])(subgroup[i], name, id, i, subgroup, Object(__WEBPACK_IMPORTED_MODULE_2__schedule__[\"f\" /* get */])(node, id));\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_1__index__[\"a\" /* Transition */](subgroups, this._parents, name, id);\n});\n\n/***/ }),\n/* 451 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__schedule__ = __webpack_require__(70);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = Object(__WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selectorAll\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = Object(__WEBPACK_IMPORTED_MODULE_2__schedule__[\"f\" /* get */])(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            Object(__WEBPACK_IMPORTED_MODULE_2__schedule__[\"e\" /* default */])(child, name, id, k, children, inherit);\n          }\n        }\n\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_1__index__[\"a\" /* Transition */](subgroups, parents, name, id);\n});\n\n/***/ }),\n/* 452 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_selection__ = __webpack_require__(72);\n\nvar Selection = __WEBPACK_IMPORTED_MODULE_0_d3_selection__[\"selection\"].prototype.constructor;\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  return new Selection(this._groups, this._parents);\n});\n\n/***/ }),\n/* 453 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_interpolate__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_selection__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tween__ = __webpack_require__(362);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__interpolate__ = __webpack_require__(386);\n\n\n\n\n\nfunction styleRemove(name, interpolate) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"style\"])(this, name),\n        value1 = (this.style.removeProperty(name), Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"style\"])(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"style\"])(this, name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"style\"])(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), Object(__WEBPACK_IMPORTED_MODULE_1_d3_selection__[\"style\"])(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? __WEBPACK_IMPORTED_MODULE_0_d3_interpolate__[\"interpolateTransformCss\"] : __WEBPACK_IMPORTED_MODULE_3__interpolate__[\"a\" /* default */];\n  return value == null ? this.styleTween(name, styleRemove(name, i)).on(\"end.style.\" + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === \"function\" ? styleFunction(name, i, Object(__WEBPACK_IMPORTED_MODULE_2__tween__[\"b\" /* tweenValue */])(this, \"style.\" + name, value)) : styleConstant(name, i, value + \"\"), priority);\n});\n\n/***/ }),\n/* 454 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n});\n\n/***/ }),\n/* 455 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tween__ = __webpack_require__(362);\n\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return this.tween(\"text\", typeof value === \"function\" ? textFunction(Object(__WEBPACK_IMPORTED_MODULE_0__tween__[\"b\" /* tweenValue */])(this, \"text\", value)) : textConstant(value == null ? \"\" : value + \"\"));\n});\n\n/***/ }),\n/* 456 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__schedule__ = __webpack_require__(70);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var name = this._name,\n      id0 = this._id,\n      id1 = Object(__WEBPACK_IMPORTED_MODULE_0__index__[\"c\" /* newId */])();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = Object(__WEBPACK_IMPORTED_MODULE_1__schedule__[\"f\" /* get */])(node, id0);\n        Object(__WEBPACK_IMPORTED_MODULE_1__schedule__[\"e\" /* default */])(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* Transition */](groups, this._parents, name, id1);\n});\n\n/***/ }),\n/* 457 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transition_index__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transition_schedule__ = __webpack_require__(70);\n\n\nvar root = [null];\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > __WEBPACK_IMPORTED_MODULE_1__transition_schedule__[\"c\" /* SCHEDULED */] && schedule.name === name) {\n        return new __WEBPACK_IMPORTED_MODULE_0__transition_index__[\"a\" /* Transition */]([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n});\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview venn shapes\n * @author leungwensen@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nvar PathUtil = Util.PathUtil;\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.venn;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addFillAttrs(pathAttrs, cfg);\n  return pathAttrs;\n}\n\nfunction getHollowAttrs(cfg) {\n  var defaultCfg = Global.shape.hollowVenn;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(pathAttrs, cfg);\n  return pathAttrs;\n} // register venn geom\n\n\nvar Venn = Shape.registerFactory('venn', {\n  defaultShapeType: 'venn',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    var points = [];\n    Util.each(pointInfo.x, function (subX, index) {\n      var subY = pointInfo.y[index];\n      points.push({\n        x: subX,\n        y: subY\n      });\n    });\n    return points;\n  },\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 1;\n\n    if (type === 'hollow') {\n      return {\n        lineWidth: lineWidth + 1\n      };\n    }\n\n    var opacity = cfg.fillOpacity || cfg.opacity || 1;\n    return {\n      // lineWidth,\n      fillOpacity: opacity - 0.08\n    };\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n});\nShape.registerShape('venn', 'venn', {\n  draw: function draw(cfg, container) {\n    var origin = cfg.origin._origin;\n    var path = origin.path;\n    var attrs = getAttrs(cfg);\n    var segments = PathUtil.parsePathString(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: segments\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nShape.registerShape('venn', 'hollow', {\n  draw: function draw(cfg, container) {\n    var origin = cfg.origin._origin;\n    var path = origin.path;\n    var attrs = getHollowAttrs(cfg);\n    var segments = PathUtil.parsePathString(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: segments\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n});\nmodule.exports = Venn;\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @fileOverview Venn Diagram\n * @author leungwensen@gmail.com\n */\nvar GeomBase = __webpack_require__(20);\n\nvar Util = __webpack_require__(0);\n\nvar SizeMixin = __webpack_require__(357);\n\n__webpack_require__(460);\n\nvar Violin =\n/*#__PURE__*/\nfunction (_GeomBase) {\n  _inheritsLoose(Violin, _GeomBase);\n\n  var _proto = Violin.prototype;\n\n  /**\n   * get default configuration\n   * @protected\n   * @return {Object} configuration\n   */\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _GeomBase.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'violin';\n    cfg.shapeType = 'violin';\n    cfg.generatePoints = true; // super.draw(data, container, shapeFactory, index);\n\n    return cfg;\n  };\n\n  function Violin(cfg) {\n    var _this;\n\n    _this = _GeomBase.call(this, cfg) || this;\n    Util.assign(_assertThisInitialized(_assertThisInitialized(_this)), SizeMixin);\n    return _this;\n  }\n\n  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {\n    var self = this;\n\n    var cfg = _GeomBase.prototype.createShapePointsCfg.call(this, obj);\n\n    cfg.size = self.getNormalizedSize(obj);\n    var sizeField = self.get('_sizeField');\n    cfg._size = obj._origin[sizeField];\n    return cfg;\n  };\n\n  _proto.clearInner = function clearInner() {\n    _GeomBase.prototype.clearInner.call(this);\n\n    this.set('defaultSize', null);\n  };\n\n  _proto._initAttrs = function _initAttrs() {\n    var self = this;\n    var attrOptions = self.get('attrOptions');\n    var sizeField = attrOptions.size ? attrOptions.size.field : self.get('_sizeField') ? self.get('_sizeField') : 'size';\n    self.set('_sizeField', sizeField);\n    delete attrOptions.size;\n\n    _GeomBase.prototype._initAttrs.call(this);\n  };\n\n  return Violin;\n}(GeomBase);\n\nvar ViolinDodge =\n/*#__PURE__*/\nfunction (_Violin) {\n  _inheritsLoose(ViolinDodge, _Violin);\n\n  function ViolinDodge() {\n    return _Violin.apply(this, arguments) || this;\n  }\n\n  var _proto2 = ViolinDodge.prototype;\n\n  _proto2.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Violin.prototype.getDefaultCfg.call(this);\n\n    cfg.hasDefaultAdjust = true;\n    cfg.adjusts = [{\n      type: 'dodge'\n    }];\n    return cfg;\n  };\n\n  return ViolinDodge;\n}(Violin);\n\nViolin.Dodge = ViolinDodge;\nGeomBase.Violin = Violin;\nGeomBase.ViolinDodge = ViolinDodge;\nmodule.exports = Violin;\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview venn shapes\n * @author leungwensen@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Shape = __webpack_require__(18);\n\nvar ShapeUtil = __webpack_require__(45);\n\nvar Global = __webpack_require__(7);\n\nvar PathUtil = __webpack_require__(22);\n\nfunction getAttrs(cfg) {\n  var defaultCfg = Global.shape.venn;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addFillAttrs(pathAttrs, cfg);\n\n  if (cfg.color) {\n    pathAttrs.stroke = pathAttrs.stroke || cfg.color;\n  }\n\n  return pathAttrs;\n}\n\nfunction getHollowAttrs(cfg) {\n  var defaultCfg = Global.shape.hollowVenn;\n  var pathAttrs = Util.mix({}, defaultCfg, cfg.style);\n  ShapeUtil.addStrokeAttrs(pathAttrs, cfg);\n  return pathAttrs;\n}\n\nfunction getViolinPath(points) {\n  var path = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n\n    if (point) {\n      var action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n\n  var first = points[0];\n\n  if (first) {\n    path.push(['L', first.x, first.y]);\n    path.push(['z']);\n  }\n\n  return path;\n}\n\nfunction getSmoothViolinPath(points) {\n  var half = points.length / 2;\n  var leftPoints = [];\n  var rightPoints = [];\n\n  for (var i = 0; i < points.length; i++) {\n    if (i < half) {\n      leftPoints.push(points[i]);\n    } else {\n      rightPoints.push(points[i]);\n    }\n  }\n\n  var leftPath = PathUtil.getSplinePath(leftPoints, false);\n  var rightPath = PathUtil.getSplinePath(rightPoints, false);\n  leftPath.push(['L', rightPoints[0].x, rightPoints[0].y]);\n  rightPath.shift();\n  var path = leftPath.concat(rightPath);\n  path.push(['L', leftPoints[0].x, leftPoints[0].y]);\n  path.push(['z']);\n  return path;\n}\n\nfunction normalizeSize(arr) {\n  var max = Math.max.apply(null, arr);\n  return arr.map(function (num) {\n    return num / max;\n  });\n} // register violin geom shape\n\n\nvar Violin = Shape.registerFactory('violin', {\n  defaultShapeType: 'violin',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    var radius = pointInfo.size / 2;\n    var points = [];\n    var sizeArr = normalizeSize(pointInfo._size);\n    Util.each(pointInfo.y, function (y, index) {\n      var offset = sizeArr[index] * radius;\n      var isMin = index === 0;\n      var isMax = index === pointInfo.y.length - 1;\n      points.push({\n        isMin: isMin,\n        isMax: isMax,\n        x: pointInfo.x - offset,\n        y: y\n      });\n      points.unshift({\n        isMin: isMin,\n        isMax: isMax,\n        x: pointInfo.x + offset,\n        y: y\n      });\n    });\n    return points;\n  },\n  getActiveCfg: function getActiveCfg(type, cfg) {\n    var lineWidth = cfg.lineWidth || 1;\n\n    if (type === 'hollow') {\n      return {\n        lineWidth: lineWidth + 1\n      };\n    }\n\n    var opacity = cfg.fillOpacity || cfg.opacity || 1;\n    return {\n      // lineWidth,\n      fillOpacity: opacity - 0.08\n    };\n  },\n  getSelectedCfg: function getSelectedCfg(type, cfg) {\n    if (cfg && cfg.style) {\n      return cfg.style;\n    }\n\n    return this.getActiveCfg(type, cfg);\n  }\n}); // normal violin, filled path\n\nShape.registerShape('violin', 'violin', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getViolinPath(cfg.points);\n    path = this.parsePath(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n}); // smooth spline violin, filled path\n\nShape.registerShape('violin', 'smooth', {\n  draw: function draw(cfg, container) {\n    var attrs = getAttrs(cfg);\n    var path = getSmoothViolinPath(cfg.points);\n    path = this.parsePath(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getAttrs(cfg));\n  }\n}); // hollow violin, stroked path\n\nShape.registerShape('violin', 'hollow', {\n  draw: function draw(cfg, container) {\n    var attrs = getHollowAttrs(cfg);\n    var path = getViolinPath(cfg.points);\n    path = this.parsePath(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getHollowAttrs(cfg));\n  }\n}); // hollow smooth spline violin, stroked path\n\nShape.registerShape('violin', 'smoothHollow', {\n  draw: function draw(cfg, container) {\n    var attrs = getHollowAttrs(cfg);\n    var path = getSmoothViolinPath(cfg.points);\n    path = this.parsePath(path);\n    var pathShape = container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: path\n      })\n    });\n    return pathShape;\n  },\n  getMarkerCfg: function getMarkerCfg(cfg) {\n    return Util.mix({\n      symbol: 'circle',\n      radius: 4\n    }, getHollowAttrs(cfg));\n  }\n});\nmodule.exports = Violin;\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Facet 的入口\n * @author dxq613@gmail.com\n */\nvar Util = __webpack_require__(0);\n\nvar Chart = __webpack_require__(147);\n\nvar Facets = {};\nFacets.Rect = __webpack_require__(387);\nFacets.List = __webpack_require__(388);\nFacets.Circle = __webpack_require__(462);\nFacets.Tree = __webpack_require__(463);\nFacets.Mirror = __webpack_require__(464);\nFacets.Matrix = __webpack_require__(465);\n\nChart.prototype.facet = function (type, cfg) {\n  var cls = Facets[Util.upperFirst(type)];\n\n  if (!cls) {\n    throw new Error('Not support such type of facets as: ' + type);\n  }\n\n  var preFacets = this.get('facets');\n\n  if (preFacets) {\n    preFacets.destroy();\n  }\n\n  cfg.chart = this;\n  var facets = new cls(cfg);\n  this.set('facets', facets);\n};\n\nmodule.exports = Facets;\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview circle facets\n * @author dxq613@gmail.com\n */\nvar Base = __webpack_require__(363);\n\nfunction getPoint(center, r, angle) {\n  return {\n    x: center.x + r * Math.cos(angle),\n    y: center.y + r * Math.sin(angle)\n  };\n}\n\nvar Circle =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Circle, _Base);\n\n  function Circle() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Circle.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'circle';\n    return cfg;\n  };\n\n  _proto.getRegion = function getRegion(count, index) {\n    var r = 1 / 2; // 画布半径\n\n    var avgAngle = Math.PI * 2 / count;\n    var angle = -1 * Math.PI / 2 + avgAngle * index; // 当前分面所在的弧度\n\n    var facetR = r / (1 + 1 / Math.sin(avgAngle / 2));\n    var center = {\n      x: 0.5,\n      y: 0.5\n    }; // 画布圆心\n\n    var middle = getPoint(center, r - facetR, angle); // 分面的中心点\n\n    var startAngle = Math.PI * 5 / 4; // 右上角\n\n    var endAngle = Math.PI * 1 / 4; // 左下角\n\n    return {\n      start: getPoint(middle, facetR, startAngle),\n      end: getPoint(middle, facetR, endAngle)\n    };\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields;\n    var field = fields[0];\n\n    if (!field) {\n      throw 'Please specify for the field for facet!';\n    }\n\n    var values = self.getFieldValues(field, data);\n    var count = values.length;\n    var rst = [];\n    values.forEach(function (value, index) {\n      var conditions = [{\n        field: field,\n        value: value,\n        values: values\n      }];\n      var filter = self.getFilter(conditions);\n      var subData = data.filter(filter);\n      var facet = {\n        type: self.type,\n        colValue: value,\n        colField: field,\n        colIndex: index,\n        cols: count,\n        rows: 1,\n        rowIndex: 0,\n        data: subData,\n        region: self.getRegion(count, index)\n      };\n      rst.push(facet);\n    });\n    return rst;\n  };\n\n  return Circle;\n}(Base);\n\nmodule.exports = Circle;\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview tree facets\n * @author dxq613@gmail.com\n */\nvar Base = __webpack_require__(363);\n\nvar Util = __webpack_require__(0);\n\nvar assign = Util.assign;\n\nvar Tree =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Tree, _Base);\n\n  function Tree() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Tree.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Base.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'tree';\n    cfg.line = {\n      lineWidth: 1,\n      stroke: '#ddd'\n    };\n    cfg.lineSmooth = false;\n    return cfg;\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields;\n\n    if (!fields.length) {\n      throw 'Please specify for the fields for facet!';\n    }\n\n    var rst = [];\n    var root = self.getRootFacet(data); // if (self.showRoot) {\n\n    rst.push(root); // }\n\n    root.children = self.getChildFacets(data, 1, rst);\n    self.setRegion(rst);\n    return rst;\n  };\n\n  _proto.getRootFacet = function getRootFacet(data) {\n    var self = this;\n    var facet = {\n      type: self.type,\n      rows: self.getRows(),\n      rowIndex: 0,\n      colIndex: 0,\n      colValue: self.rootTitle,\n      data: data\n    };\n    return facet;\n  };\n\n  _proto.getRows = function getRows() {\n    return this.fields.length + 1;\n  }; // get child\n\n\n  _proto.getChildFacets = function getChildFacets(data, level, arr) {\n    var self = this;\n    var fields = self.fields;\n    var length = fields.length;\n\n    if (length < level) {\n      return;\n    }\n\n    var rst = [];\n    var field = fields[level - 1];\n    var values = self.getFieldValues(field, data);\n    values.forEach(function (value, index) {\n      var conditions = [{\n        field: field,\n        value: value,\n        values: values\n      }];\n      var filter = self.getFilter(conditions);\n      var subData = data.filter(filter);\n\n      if (subData.length) {\n        var facet = {\n          type: self.type,\n          colValue: value,\n          colField: field,\n          colIndex: index,\n          rows: self.getRows(),\n          rowIndex: level,\n          data: subData,\n          children: self.getChildFacets(subData, level + 1, arr)\n        };\n        rst.push(facet);\n        arr.push(facet);\n      }\n    });\n    return rst;\n  }; // 设置 region\n\n\n  _proto.setRegion = function setRegion(facets) {\n    var self = this;\n    self.forceColIndex(facets);\n    facets.forEach(function (facet) {\n      facet.region = self.getRegion(facet.rows, facet.cols, facet.colIndex, facet.rowIndex);\n    });\n  }; // set column index of facets\n\n\n  _proto.forceColIndex = function forceColIndex(facets) {\n    var self = this;\n    var leafs = [];\n    var index = 0;\n    facets.forEach(function (facet) {\n      if (self.isLeaf(facet)) {\n        leafs.push(facet);\n        facet.colIndex = index;\n        index++;\n      }\n    });\n    leafs.forEach(function (facet) {\n      facet.cols = leafs.length;\n    });\n    var maxLevel = self.fields.length;\n\n    for (var i = maxLevel - 1; i >= 0; i--) {\n      var levelFacets = self.getFacetsByLevel(facets, i); // var yIndex = maxLevel - i;\n\n      for (var j = 0; j < levelFacets.length; j++) {\n        var facet = levelFacets[j];\n\n        if (!self.isLeaf(facet)) {\n          facet.originColIndex = facet.colIndex;\n          facet.colIndex = self.getRegionIndex(facet.children);\n          facet.cols = leafs.length;\n        }\n      }\n    }\n  }; // get facet use level\n\n\n  _proto.getFacetsByLevel = function getFacetsByLevel(facets, level) {\n    var rst = [];\n    facets.forEach(function (facet) {\n      if (facet.rowIndex === level) {\n        rst.push(facet);\n      }\n    });\n    return rst;\n  }; // set facets region\n\n\n  _proto.getRegion = function getRegion(rows, cols, xIndex, yIndex) {\n    var xWidth = 1 / cols; // x轴方向的每个分面的偏移\n\n    var yWidth = 1 / rows; // y轴方向的每个分面的偏移\n\n    var start = {\n      x: xWidth * xIndex,\n      y: yWidth * yIndex\n    };\n    var end = {\n      x: start.x + xWidth,\n      y: start.y + yWidth * 2 / 3 // 预留1/3的空隙，方便添加连接线\n\n    };\n    return {\n      start: start,\n      end: end\n    };\n  }; // if the facet has children , make it's column index in the middle of it's children\n\n\n  _proto.getRegionIndex = function getRegionIndex(children) {\n    var first = children[0];\n    var last = children[children.length - 1];\n    return (last.colIndex - first.colIndex) / 2 + first.colIndex;\n  }; // is  a leaf without children\n\n\n  _proto.isLeaf = function isLeaf(facet) {\n    return !facet.children || !facet.children.length;\n  };\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.rowIndex !== facet.rows - 1) {\n      axes[xField].label = null;\n      axes[xField].title = null;\n    }\n  }; // 设置 y 坐标轴的文本、title 是否显示\n\n\n  _proto.setYAxis = function setYAxis(yField, axes, facet) {\n    if (facet.originColIndex !== 0 && facet.colIndex !== 0) {\n      axes[yField].title = null;\n      axes[yField].label = null;\n    }\n  }; // 绘制完成后\n\n\n  _proto.onPaint = function onPaint() {\n    _Base.prototype.onPaint.call(this);\n\n    this.group.clear();\n\n    if (this.facets && this.line) {\n      this.drawLines(this.facets, this.group);\n    }\n  };\n\n  _proto.drawLines = function drawLines(facets, group) {\n    var self = this;\n    var lineGroup = group.addGroup();\n    facets.forEach(function (facet) {\n      if (!self.isLeaf(facet)) {\n        var children = facet.children;\n\n        self._addFacetLines(facet, children, lineGroup);\n      }\n    });\n  }; // add lines with it's children\n\n\n  _proto._addFacetLines = function _addFacetLines(facet, children, group) {\n    var self = this;\n    var view = facet.view;\n    var region = view.getViewRegion();\n    var start = {\n      x: region.start.x + (region.end.x - region.start.x) / 2,\n      y: region.start.y\n    };\n    children.forEach(function (subFacet) {\n      var subRegion = subFacet.view.getViewRegion();\n      var end = {\n        x: subRegion.start.x + (subRegion.end.x - subRegion.start.x) / 2,\n        y: subRegion.end.y\n      };\n      var middle1 = {\n        x: start.x,\n        y: start.y + (end.y - start.y) / 2\n      };\n      var middle2 = {\n        x: end.x,\n        y: middle1.y\n      };\n\n      self._drawLine([start, middle1, middle2, end], group);\n    });\n  };\n\n  _proto._getPath = function _getPath(points) {\n    var self = this;\n    var path = [];\n    var smooth = self.lineSmooth;\n\n    if (smooth) {\n      path.push(['M', points[0].x, points[0].y]);\n      path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    } else {\n      points.forEach(function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n    }\n\n    return path;\n  }; // draw line width points\n\n\n  _proto._drawLine = function _drawLine(points, group) {\n    var self = this;\n\n    var path = self._getPath(points);\n\n    var line = self.line;\n    group.addShape('path', {\n      attrs: assign({\n        path: path\n      }, line)\n    });\n  };\n\n  return Tree;\n}(Base);\n\nmodule.exports = Tree;\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview mirror facets\n * @author dxq613@gmail.com\n */\nvar List = __webpack_require__(388);\n\nvar Mirror =\n/*#__PURE__*/\nfunction (_List) {\n  _inheritsLoose(Mirror, _List);\n\n  function Mirror() {\n    return _List.apply(this, arguments) || this;\n  }\n\n  var _proto = Mirror.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _List.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'mirror';\n    this.transpose = false;\n    return cfg;\n  };\n\n  _proto.init = function init() {\n    var self = this;\n\n    if (self.transpose) {\n      self.cols = 2;\n      self.rows = 1;\n    } else {\n      self.cols = 1;\n      self.rows = 2;\n    }\n\n    _List.prototype.init.call(this);\n  };\n\n  _proto.beforeProcessView = function beforeProcessView(view, facet) {\n    if (this.transpose) {\n      if (facet.colIndex % 2 === 0) {\n        view.coord().transpose().scale(-1, 1);\n      } else {\n        view.coord().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coord().scale(1, -1);\n      }\n    }\n  };\n\n  _proto.renderTitle = function renderTitle(view, facet) {\n    if (this.transpose) {\n      this.drawColTitle(view, facet);\n    } else {\n      this.drawRowTitle(view, facet);\n    }\n  };\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.colIndex === 1 || facet.rowIndex === 1) {\n      axes[xField].label = null;\n      axes[xField].title = null;\n    }\n  };\n\n  _proto.setYAxis = function setYAxis()\n  /* yField, axes, facet */\n  {};\n\n  return Mirror;\n}(List);\n\nmodule.exports = Mirror;\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview Use matrices to compare different fields\n * @author dxq613@gmail.com\n */\nvar Rect = __webpack_require__(387);\n\nvar Matrix =\n/*#__PURE__*/\nfunction (_Rect) {\n  _inheritsLoose(Matrix, _Rect);\n\n  function Matrix() {\n    return _Rect.apply(this, arguments) || this;\n  }\n\n  var _proto = Matrix.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Rect.prototype.getDefaultCfg.call(this);\n\n    cfg.type = 'matrix';\n    cfg.showTitle = false;\n    return cfg;\n  };\n\n  _proto.generateFacets = function generateFacets(data) {\n    var self = this;\n    var fields = self.fields;\n    var rows = fields.length;\n    var cols = rows; // 矩阵中行列相等，等于指定的字段个数\n\n    var rst = [];\n\n    for (var i = 0; i < cols; i++) {\n      var colField = fields[i];\n\n      for (var j = 0; j < rows; j++) {\n        var rowField = fields[j];\n        var facet = {\n          type: self.type,\n          colValue: colField,\n          rowValue: rowField,\n          colField: colField,\n          rowField: rowField,\n          colIndex: i,\n          rowIndex: j,\n          cols: cols,\n          rows: rows,\n          data: data,\n          region: self.getRegion(rows, cols, i, j)\n        };\n        rst.push(facet);\n      }\n    }\n\n    return rst;\n  }; // 设置 x 坐标轴的文本、title 是否显示\n\n\n  _proto.setXAxis = function setXAxis(xField, axes, facet) {\n    if (facet.rowIndex !== facet.rows - 1) {\n      axes[xField].title = null;\n      axes[xField].label = null;\n    }\n  }; // 设置 y 坐标轴的文本、title 是否显示\n\n\n  _proto.setYAxis = function setYAxis(yField, axes, facet) {\n    if (facet.colIndex !== 0) {\n      axes[yField].title = null;\n      axes[yField].label = null;\n    }\n  };\n\n  return Matrix;\n}(Rect);\n\nmodule.exports = Matrix;\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @fileOverview Interaction\n * @author leungwensen@gmail.com\n */\nvar G2 = __webpack_require__(172);\n\nvar Chart = __webpack_require__(147);\n\nvar Util = __webpack_require__(0);\n\nvar Interactions = {\n  Base: __webpack_require__(171),\n  Brush: __webpack_require__(467),\n  Drag: __webpack_require__(468),\n  ScrollBar: __webpack_require__(470),\n  ShapeSelect: __webpack_require__(472),\n  Slider: __webpack_require__(473),\n  Zoom: __webpack_require__(475)\n};\nG2._Interactions = {};\n\nG2.registerInteraction = function (type, constructor) {\n  G2._Interactions[type] = constructor;\n};\n\nG2.getInteraction = function (type) {\n  return G2._Interactions[type];\n}; // binding on View\n\n\nChart.prototype.getInteractions = function () {\n  var me = this;\n\n  if (!me._interactions) {\n    me._interactions = {};\n  }\n\n  return me._interactions;\n};\n\nChart.prototype._setInteraction = function (type, interaction) {\n  var me = this;\n  var interactions = me.getInteractions();\n\n  if (interactions[type] && interactions[type] !== interaction) {\n    // only one interaction for a key\n    interactions[type].destroy();\n  }\n\n  interactions[type] = interaction;\n};\n\nChart.prototype.clearInteraction = function (type) {\n  var me = this;\n  var interactions = me.getInteractions();\n\n  if (type) {\n    if (interactions[type]) {\n      interactions[type]._reset();\n\n      interactions[type].destroy();\n    }\n\n    delete interactions[type];\n  } else {\n    Util.each(interactions, function (interaction, key) {\n      interaction._reset();\n\n      interaction.destroy();\n      delete interactions[key];\n    });\n  }\n};\n\nChart.prototype.interact = Chart.prototype.interaction = function (type, cfg) {\n  var me = this;\n  var Ctor = G2.getInteraction(type);\n  var interaction = new Ctor(cfg, me);\n\n  me._setInteraction(type, interaction);\n\n  return me;\n};\n\nG2.registerInteraction('brush', Interactions.Brush);\nG2.registerInteraction('Brush', Interactions.Brush);\nG2.registerInteraction('drag', Interactions.Drag);\nG2.registerInteraction('Drag', Interactions.Drag);\nG2.registerInteraction('zoom', Interactions.Zoom);\nG2.registerInteraction('Zoom', Interactions.Zoom);\nG2.registerInteraction('scroll-bar', Interactions.ScrollBar);\nG2.registerInteraction('ScrollBar', Interactions.ScrollBar);\nG2.registerInteraction('shape-select', Interactions.ShapeSelect);\nG2.registerInteraction('ShapeSelect', Interactions.ShapeSelect);\nG2.registerInteraction('slider', Interactions.Slider);\nG2.registerInteraction('Slider', Interactions.Slider);\nmodule.exports = Interactions;\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Util = __webpack_require__(0);\n\nvar Interaction = __webpack_require__(171); // const G2 = require('../core.js');\n\n\nvar BRUSH_TYPES = ['X', 'Y', 'XY', 'POLYGON'];\nvar DEFAULT_TYPE = 'XY';\n\nvar Brush =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(Brush, _Interaction);\n\n  var _proto = Brush.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      type: DEFAULT_TYPE,\n      startPoint: null,\n      brushing: false,\n      dragging: false,\n      brushShape: null,\n      container: null,\n      polygonPath: null,\n      style: {\n        fill: '#C5D4EB',\n        opacity: 0.3,\n        lineWidth: 1,\n        stroke: '#82A6DD'\n      },\n      draggable: false,\n      dragOffX: 0,\n      dragOffY: 0,\n      inPlot: true,\n      xField: null,\n      yField: null\n    });\n  };\n\n  function Brush(cfg, view) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, view) || this;\n\n    var me = _assertThisInitialized(_assertThisInitialized(_this));\n\n    me.filter = !me.draggable;\n    me.type = me.type.toUpperCase();\n    me.chart = view;\n\n    if (BRUSH_TYPES.indexOf(me.type) === -1) {\n      me.type = DEFAULT_TYPE;\n    }\n\n    var canvas = me.canvas;\n\n    if (canvas) {\n      var plotRange;\n      canvas.get('children').map(function (child) {\n        if (child.get('type') === 'plotBack') {\n          plotRange = child.get('plotRange');\n          return false;\n        }\n\n        return child;\n      });\n      me.plot = {\n        start: plotRange.bl,\n        end: plotRange.tr\n      };\n    }\n\n    if (view) {\n      var coord = view.get('coord');\n      me.plot = {\n        start: coord.start,\n        end: coord.end\n      };\n\n      var xScales = view._getScales('x');\n\n      var yScales = view._getScales('y');\n\n      me.xScale = me.xField ? xScales[me.xField] : view.getXScale();\n      me.yScale = me.yField ? yScales[me.yField] : view.getYScales()[0];\n    }\n\n    return _this;\n  } // onBurshstart() { }\n  // onBrushmove() { }\n  // onBrushend() {}\n  // onDragstart() {}\n  // onDragmove() {}\n  // onDragend() {}\n\n\n  _proto.start = function start(ev) {\n    var me = this;\n    var canvas = me.canvas,\n        type = me.type,\n        brushShape = me.brushShape;\n    if (!type) return;\n    var startPoint = {\n      x: ev.offsetX,\n      y: ev.offsetY\n    };\n    if (!startPoint.x) return;\n    var isInPlot = me.plot && me.inPlot;\n    var canvasDOM = canvas.get('canvasDOM');\n    var pixelRatio = canvas.get('pixelRatio');\n    if (me.selection) me.selection = null;\n\n    if (me.draggable && brushShape && !brushShape.get('destroyed')) {\n      // allow drag the brushShape\n      if (brushShape.isHit(startPoint.x * pixelRatio, startPoint.y * pixelRatio)) {\n        canvasDOM.style.cursor = 'move';\n        me.selection = brushShape;\n        me.dragging = true;\n\n        if (type === 'X') {\n          me.dragoffX = startPoint.x - brushShape.attr('x');\n          me.dragoffY = 0;\n        } else if (type === 'Y') {\n          me.dragoffX = 0;\n          me.dragoffY = startPoint.y - brushShape.attr('y');\n        } else if (type === 'XY') {\n          me.dragoffX = startPoint.x - brushShape.attr('x');\n          me.dragoffY = startPoint.y - brushShape.attr('y');\n        } else if (type === 'POLYGON') {\n          var box = brushShape.getBBox();\n          me.dragoffX = startPoint.x - box.minX;\n          me.dragoffY = startPoint.y - box.minY;\n        }\n\n        if (isInPlot) {// me.selection.attr('clip', canvas.addShape('rect', {\n          //   attrs: {\n          //     x: this.plot.start.x,\n          //     y: this.plot.end.y,\n          //     width: this.plot.end.x - this.plot.start.x,\n          //     height: this.plot.start.y - this.plot.end.y,\n          //     fill: '#fff',\n          //     fillOpacity: 0\n          //   }\n          // }));\n        }\n\n        me.onDragstart && me.onDragstart(ev);\n      }\n\n      me.prePoint = startPoint;\n    }\n\n    if (!me.dragging) {\n      // brush start\n      me.onBrushstart && me.onBrushstart(startPoint);\n      var container = me.container;\n\n      if (isInPlot) {\n        var _me$plot = me.plot,\n            start = _me$plot.start,\n            end = _me$plot.end;\n        if (startPoint.x < start.x || startPoint.x > end.x || startPoint.y < end.y || startPoint.y > start.y) return;\n      }\n\n      canvasDOM.style.cursor = 'crosshair';\n      me.startPoint = startPoint;\n      me.brushShape = null;\n      me.brushing = true;\n\n      if (!container) {\n        container = canvas.addGroup({\n          zIndex: 5 // upper\n\n        });\n        container.initTransform();\n      } else {\n        container.clear();\n      }\n\n      me.container = container;\n      if (type === 'POLYGON') me.polygonPath = \"M \" + startPoint.x + \" \" + startPoint.y;\n    }\n  };\n\n  _proto.process = function process(ev) {\n    var me = this;\n    var brushing = me.brushing,\n        dragging = me.dragging,\n        type = me.type,\n        plot = me.plot,\n        startPoint = me.startPoint,\n        xScale = me.xScale,\n        yScale = me.yScale,\n        canvas = me.canvas;\n\n    if (!brushing && !dragging) {\n      return;\n    }\n\n    var currentPoint = {\n      x: ev.offsetX,\n      y: ev.offsetY\n    };\n    var canvasDOM = canvas.get('canvasDOM');\n\n    if (brushing) {\n      canvasDOM.style.cursor = 'crosshair';\n      var start = plot.start,\n          end = plot.end;\n      var polygonPath = me.polygonPath;\n      var brushShape = me.brushShape;\n      var container = me.container;\n\n      if (me.plot && me.inPlot) {\n        currentPoint = me._limitCoordScope(currentPoint);\n      }\n\n      var rectStartX;\n      var rectStartY;\n      var rectWidth;\n      var rectHeight;\n\n      if (type === 'Y') {\n        rectStartX = start.x;\n        rectStartY = currentPoint.y >= startPoint.y ? startPoint.y : currentPoint.y;\n        rectWidth = Math.abs(start.x - end.x);\n        rectHeight = Math.abs(startPoint.y - currentPoint.y);\n      } else if (type === 'X') {\n        rectStartX = currentPoint.x >= startPoint.x ? startPoint.x : currentPoint.x;\n        rectStartY = end.y;\n        rectWidth = Math.abs(startPoint.x - currentPoint.x);\n        rectHeight = Math.abs(end.y - start.y);\n      } else if (type === 'XY') {\n        if (currentPoint.x >= startPoint.x) {\n          rectStartX = startPoint.x;\n          rectStartY = currentPoint.y >= startPoint.y ? startPoint.y : currentPoint.y;\n        } else {\n          rectStartX = currentPoint.x;\n          rectStartY = currentPoint.y >= startPoint.y ? startPoint.y : currentPoint.y;\n        }\n\n        rectWidth = Math.abs(startPoint.x - currentPoint.x);\n        rectHeight = Math.abs(startPoint.y - currentPoint.y);\n      } else if (type === 'POLYGON') {\n        polygonPath += \"L \" + currentPoint.x + \" \" + currentPoint.y;\n        me.polygonPath = polygonPath;\n\n        if (!brushShape) {\n          brushShape = container.addShape('path', {\n            attrs: Util.mix(me.style, {\n              path: polygonPath\n            })\n          });\n        } else {\n          !brushShape.get('destroyed') && brushShape.attr(Util.mix({}, brushShape._attrs, {\n            path: polygonPath\n          }));\n        }\n      }\n\n      if (type !== 'POLYGON') {\n        if (!brushShape) {\n          brushShape = container.addShape('rect', {\n            attrs: Util.mix(me.style, {\n              x: rectStartX,\n              y: rectStartY,\n              width: rectWidth,\n              height: rectHeight\n            })\n          });\n        } else {\n          !brushShape.get('destroyed') && brushShape.attr(Util.mix({}, brushShape._attrs, {\n            x: rectStartX,\n            y: rectStartY,\n            width: rectWidth,\n            height: rectHeight\n          }));\n        }\n      }\n\n      me.brushShape = brushShape;\n    } else if (dragging) {\n      canvasDOM.style.cursor = 'move';\n      var selection = me.selection;\n\n      if (selection && !selection.get('destroyed')) {\n        if (type === 'POLYGON') {\n          var prePoint = me.prePoint;\n          me.selection.translate(currentPoint.x - prePoint.x, currentPoint.y - prePoint.y);\n        } else {\n          me.dragoffX && selection.attr('x', currentPoint.x - me.dragoffX);\n          me.dragoffY && selection.attr('y', currentPoint.y - me.dragoffY);\n        }\n      }\n    }\n\n    me.prePoint = currentPoint;\n    canvas.draw();\n\n    var _me$_getSelected = me._getSelected(),\n        data = _me$_getSelected.data,\n        shapes = _me$_getSelected.shapes,\n        xValues = _me$_getSelected.xValues,\n        yValues = _me$_getSelected.yValues;\n\n    var eventObj = {\n      data: data,\n      shapes: shapes,\n      x: currentPoint.x,\n      y: currentPoint.y\n    };\n\n    if (xScale) {\n      eventObj[xScale.field] = xValues;\n    }\n\n    if (yScale) {\n      eventObj[yScale.field] = yValues;\n    }\n\n    me.onDragmove && me.onDragmove(eventObj);\n    me.onBrushmove && me.onBrushmove(eventObj);\n  };\n\n  _proto.end = function end(ev) {\n    var me = this;\n    var data = me.data,\n        shapes = me.shapes,\n        xValues = me.xValues,\n        yValues = me.yValues,\n        canvas = me.canvas,\n        type = me.type,\n        startPoint = me.startPoint,\n        chart = me.chart,\n        container = me.container,\n        xScale = me.xScale,\n        yScale = me.yScale;\n    var offsetX = ev.offsetX,\n        offsetY = ev.offsetY;\n    var canvasDOM = canvas.get('canvasDOM');\n    canvasDOM.style.cursor = 'default';\n\n    if (Math.abs(startPoint.x - offsetX) <= 1 && Math.abs(startPoint.y - offsetY) <= 1) {\n      // 防止点击事件\n      me.brushing = false;\n      me.dragging = false;\n      return;\n    }\n\n    var eventObj = {\n      data: data,\n      shapes: shapes,\n      x: offsetX,\n      y: offsetY\n    };\n\n    if (xScale) {\n      eventObj[xScale.field] = xValues;\n    }\n\n    if (yScale) {\n      eventObj[yScale.field] = yValues;\n    }\n\n    if (me.dragging) {\n      me.dragging = false;\n      me.onDragend && me.onDragend(eventObj);\n    } else if (me.brushing) {\n      me.brushing = false;\n      var brushShape = me.brushShape;\n      var polygonPath = me.polygonPath;\n\n      if (type === 'POLYGON') {\n        polygonPath += 'z';\n        brushShape && !brushShape.get('destroyed') && brushShape.attr(Util.mix({}, brushShape._attrs, {\n          path: polygonPath\n        }));\n        me.polygonPath = polygonPath;\n        canvas.draw();\n      }\n\n      if (me.onBrushend) {\n        me.onBrushend(eventObj);\n      } else if (chart && me.filter) {\n        container.clear(); // clear the brush\n        // filter data\n\n        if (type === 'X') {\n          xScale && chart.filter(xScale.field, function (val) {\n            return xValues.indexOf(val) > -1;\n          });\n        } else if (type === 'Y') {\n          yScale && chart.filter(yScale.field, function (val) {\n            return yValues.indexOf(val) > -1;\n          });\n        } else {\n          xScale && chart.filter(xScale.field, function (val) {\n            return xValues.indexOf(val) > -1;\n          });\n          yScale && chart.filter(yScale.field, function (val) {\n            return yValues.indexOf(val) > -1;\n          });\n        }\n\n        chart.repaint();\n      }\n    }\n  };\n\n  _proto.reset = function reset() {\n    var me = this;\n    var chart = me.chart,\n        filter = me.filter,\n        brushShape = me.brushShape,\n        canvas = me.canvas;\n\n    if (chart && filter) {\n      chart.get('options').filters = {};\n      chart.repaint();\n    }\n\n    if (brushShape) {\n      brushShape.destroy();\n      canvas.draw();\n    }\n  };\n\n  _proto._limitCoordScope = function _limitCoordScope(point) {\n    var plot = this.plot;\n    var start = plot.start,\n        end = plot.end;\n\n    if (point.x < start.x) {\n      point.x = start.x;\n    }\n\n    if (point.x > end.x) {\n      point.x = end.x;\n    }\n\n    if (point.y < end.y) {\n      point.y = end.y;\n    }\n\n    if (point.y > start.y) {\n      point.y = start.y;\n    }\n\n    return point;\n  };\n\n  _proto._getSelected = function _getSelected() {\n    var me = this;\n    var chart = me.chart,\n        xScale = me.xScale,\n        yScale = me.yScale,\n        brushShape = me.brushShape,\n        canvas = me.canvas;\n    var pixelRatio = canvas.get('pixelRatio');\n    var selectedShapes = [];\n    var xValues = [];\n    var yValues = [];\n    var selectedData = [];\n\n    if (chart) {\n      var geoms = chart.get('geoms');\n      geoms.map(function (geom) {\n        var shapes = geom.getShapes();\n        shapes.map(function (shape) {\n          var shapeData = shape.get('origin');\n\n          if (!Array.isArray(shapeData)) {\n            // 线图、区域图等\n            shapeData = [shapeData];\n          }\n\n          shapeData.map(function (each) {\n            if (brushShape.isHit(each.x * pixelRatio, each.y * pixelRatio)) {\n              selectedShapes.push(shape);\n              var origin = each._origin;\n              selectedData.push(origin);\n              xScale && xValues.push(origin[xScale.field]);\n              yScale && yValues.push(origin[yScale.field]);\n            }\n\n            return each;\n          });\n          return shape;\n        });\n        return geom;\n      });\n    }\n\n    me.shapes = selectedShapes;\n    me.xValues = xValues;\n    me.yValues = yValues;\n    me.data = selectedData;\n    canvas.draw();\n    return {\n      data: selectedData,\n      xValues: xValues,\n      yValues: yValues,\n      shapes: selectedShapes\n    };\n  };\n\n  return Brush;\n}(Interaction); // G2.registerInteraction('brush', Brush);\n// G2.registerInteraction('Brush', Brush);\n\n\nmodule.exports = Brush;\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Util = __webpack_require__(0);\n\nvar Interaction = __webpack_require__(171);\n\nvar filterData = __webpack_require__(469);\n\nvar getColDef = __webpack_require__(377);\n\nvar getLimitRange = __webpack_require__(378);\n\nvar DAY_TIMESTAMPS = 86400000; // const G2 = require('../core.js');\n\nvar DRAGGING_TYPES = ['X', 'Y', 'XY'];\nvar DEFAULT_TYPE = 'X';\n\nvar Drag =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(Drag, _Interaction);\n\n  var _proto = Drag.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      type: DEFAULT_TYPE,\n      stepRatio: 0.05,\n      limitRange: {},\n      stepByField: {},\n      threshold: 20,\n      originScaleDefsByField: {},\n      previousPoint: null,\n      isDragging: false\n    });\n  };\n\n  _proto._disableTooltip = function _disableTooltip() {\n    var me = this;\n    var chart = me.chart;\n    var tooltipController = chart.get('tooltipController');\n\n    if (tooltipController) {\n      me._showTooltip = true;\n      chart.tooltip(false);\n    }\n  };\n\n  _proto._enableTooltip = function _enableTooltip(ev) {\n    var me = this;\n    var chart = me.chart;\n\n    if (me._showTooltip) {\n      chart.tooltip(true);\n      chart.showTooltip(ev);\n    }\n  };\n\n  function Drag(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var me = _assertThisInitialized(_assertThisInitialized(_this));\n\n    me.type = me.type.toUpperCase();\n    me.chart = chart;\n    me.coord = chart.get('coord');\n    var data = me.data = chart.get('data'); // pre process\n\n    filterData(chart);\n    var scales = chart.getYScales();\n    var xScale = chart.getXScale();\n    scales.push(xScale);\n    var scaleController = chart.get('scaleController');\n    scales.forEach(function (scale) {\n      var field = scale.field;\n      me.limitRange[field] = getLimitRange(data, scale);\n      var def = scaleController.defs[field] || {};\n      me.originScaleDefsByField[field] = Util.mix(def, {\n        nice: !!def.nice\n      });\n\n      if (scale.isLinear) {\n        me.stepByField[field] = (scale.max - scale.min) * me.stepRatio;\n      }\n    });\n\n    if (DRAGGING_TYPES.indexOf(me.type) === -1) {\n      me.type = DEFAULT_TYPE;\n    }\n\n    me._disableTooltip();\n\n    return _this;\n  } // onDragstart() { }\n  // onDrag() { }\n  // onDragend() { }\n\n\n  _proto._applyTranslate = function _applyTranslate(scale, offset, total) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    var me = this;\n\n    if (scale.isLinear) {\n      me._translateLinearScale(scale, offset, total);\n    } else {\n      me._translateCatScale(scale, offset, total);\n    }\n  };\n\n  _proto._translateCatScale = function _translateCatScale(scale, offset, total) {\n    var me = this;\n    var chart = me.chart;\n    var type = scale.type,\n        field = scale.field,\n        values = scale.values,\n        ticks = scale.ticks;\n    var colDef = getColDef(chart, field);\n    var originValues = me.limitRange[field];\n    var ratio = offset / total;\n    var valueLength = values.length;\n    var deltaCount = Math.max(1, Math.abs(parseInt(ratio * valueLength)));\n    var firstIndex = originValues.indexOf(values[0]);\n    var lastIndex = originValues.indexOf(values[valueLength - 1]);\n\n    if (offset > 0 && firstIndex >= 0) {\n      // right\n      for (var i = 0; i < deltaCount && firstIndex > 0; i++) {\n        firstIndex -= 1;\n        lastIndex -= 1;\n      }\n\n      var newValues = originValues.slice(firstIndex, lastIndex + 1);\n      var newTicks = null;\n\n      if (type === 'timeCat') {\n        var tickGap = ticks.length > 2 ? ticks[1] - ticks[0] : DAY_TIMESTAMPS;\n\n        for (var _i = ticks[0] - tickGap; _i >= newValues[0]; _i -= tickGap) {\n          ticks.unshift(_i);\n        }\n\n        newTicks = ticks;\n      }\n\n      chart.scale(field, Util.mix({}, colDef, {\n        values: newValues,\n        ticks: newTicks\n      }));\n    } else if (offset < 0 && lastIndex <= originValues.length - 1) {\n      // left\n      for (var _i2 = 0; _i2 < deltaCount && lastIndex < originValues.length - 1; _i2++) {\n        firstIndex += 1;\n        lastIndex += 1;\n      }\n\n      var _newValues = originValues.slice(firstIndex, lastIndex + 1);\n\n      var _newTicks = null;\n\n      if (type === 'timeCat') {\n        var _tickGap = ticks.length > 2 ? ticks[1] - ticks[0] : DAY_TIMESTAMPS;\n\n        for (var _i3 = ticks[ticks.length - 1] + _tickGap; _i3 <= _newValues[_newValues.length - 1]; _i3 += _tickGap) {\n          ticks.push(_i3);\n        }\n\n        _newTicks = ticks;\n      }\n\n      chart.scale(field, Util.mix({}, colDef, {\n        values: _newValues,\n        ticks: _newTicks\n      }));\n    }\n  };\n\n  _proto._translateLinearScale = function _translateLinearScale(scale, offset, total) {\n    var me = this;\n    var chart = me.chart,\n        limitRange = me.limitRange; // linear / cat\n\n    var min = scale.min,\n        max = scale.max,\n        field = scale.field;\n    if (min === limitRange[field].min && max === limitRange[field].max) return;\n    var ratio = offset / total;\n    var range = max - min;\n    var colDef = getColDef(chart, field);\n    chart.scale(field, Util.mix({}, colDef, {\n      nice: false,\n      min: min + ratio * range,\n      max: max + ratio * range\n    }));\n  };\n\n  _proto.start = function start(ev) {\n    var me = this;\n    var canvas = me.canvas;\n    var canvasDOM = canvas.get('canvasDOM');\n    canvasDOM.style.cursor = 'pointer'; // const coord = chart.get('coord');\n\n    me.isDragging = true;\n    me.previousPoint = {\n      x: ev.x,\n      y: ev.y\n    };\n\n    me._disableTooltip();\n  };\n\n  _proto.process = function process(ev) {\n    var me = this;\n\n    if (me.isDragging) {\n      var chart = me.chart,\n          type = me.type,\n          canvas = me.canvas,\n          coord = me.coord,\n          threshold = me.threshold;\n      var canvasDOM = canvas.get('canvasDOM');\n      canvasDOM.style.cursor = 'move'; // const coord = chart.get('coord');\n\n      var previousPoint = me.previousPoint;\n      var currentPoint = ev;\n      var deltaX = currentPoint.x - previousPoint.x;\n      var deltaY = currentPoint.y - previousPoint.y;\n      var modified = false;\n\n      if (Math.abs(deltaX) > threshold && type.indexOf('X') > -1) {\n        modified = true;\n        var xScale = chart.getXScale();\n\n        me._applyTranslate(xScale, xScale.isLinear ? -deltaX : deltaX, coord.width);\n      }\n\n      if (Math.abs(deltaY) > threshold && type.indexOf('Y') > -1) {\n        modified = true;\n        var yScales = chart.getYScales();\n        yScales.forEach(function (yScale) {\n          me._applyTranslate(yScale, currentPoint.y - previousPoint.y, coord.height);\n        });\n      }\n\n      if (modified) {\n        me.previousPoint = currentPoint;\n        chart.repaint();\n      }\n    }\n  };\n\n  _proto.end = function end(ev) {\n    var me = this;\n    me.isDragging = false;\n    var canvas = me.canvas;\n    var canvasDOM = canvas.get('canvasDOM');\n    canvasDOM.style.cursor = 'default';\n\n    me._enableTooltip(ev);\n  };\n\n  _proto.reset = function reset() {\n    var me = this;\n    var view = me.view,\n        originScaleDefsByField = me.originScaleDefsByField;\n    var scales = view.getYScales();\n    var xScale = view.getXScale();\n    scales.push(xScale);\n    scales.forEach(function (scale) {\n      if (scale.isLinear) {\n        var field = scale.field;\n        view.scale(field, originScaleDefsByField[field]);\n      }\n    });\n    view.repaint();\n\n    me._disableTooltip();\n  };\n\n  return Drag;\n}(Interaction);\n\nmodule.exports = Drag;\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(0);\n\nvar TimeUtil = __webpack_require__(71);\n\nvar getColDefs = __webpack_require__(376);\n\nmodule.exports = function (chart) {\n  chart.on('beforeinitgeoms', function () {\n    chart.set('limitInPlot', true);\n    var data = chart.get('data');\n    var colDefs = getColDefs(chart);\n    if (!colDefs) return data;\n    var geoms = chart.get('geoms');\n    var isSpecialGeom = false;\n    Util.each(geoms, function (geom) {\n      if (['area', 'line', 'path'].indexOf(geom.get('type')) !== -1) {\n        isSpecialGeom = true;\n        return false;\n      }\n    });\n    var fields = [];\n    Util.each(colDefs, function (def, key) {\n      if (!isSpecialGeom && def && (def.values || def.min || def.max)) {\n        fields.push(key);\n      }\n    });\n\n    if (fields.length === 0) {\n      return data;\n    }\n\n    var geomData = [];\n    Util.each(data, function (obj) {\n      var flag = true;\n      Util.each(fields, function (field) {\n        var value = obj[field];\n\n        if (value) {\n          var colDef = colDefs[field];\n\n          if (colDef.type === 'timeCat') {\n            var values = colDef.values;\n\n            if (Util.isNumber(values[0])) {\n              value = TimeUtil.toTimeStamp(value);\n            }\n          }\n\n          if (colDef.values && colDef.values.indexOf(value) === -1 || colDef.min && value < colDef.min || colDef.max && value > colDef.max) {\n            flag = false;\n          }\n        }\n      });\n\n      if (flag) {\n        geomData.push(obj);\n      }\n    });\n    chart.set('filteredData', geomData);\n  });\n};\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar Interaction = __webpack_require__(171);\n\nvar getFieldRange = __webpack_require__(471);\n\nvar getLimitRange = __webpack_require__(378);\n\nvar DEFAULT_TYPE = 'X';\n\nvar ScrollBar =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(ScrollBar, _Interaction);\n\n  var _proto = ScrollBar.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      startEvent: null,\n      processEvent: null,\n      endEvent: null,\n      resetEvent: null,\n      type: DEFAULT_TYPE,\n      xStyle: {\n        backgroundColor: 'rgba(202, 215, 239, .2)',\n        fillerColor: 'rgba(202, 215, 239, .75)',\n        size: 4,\n        lineCap: 'round',\n        offsetX: 0,\n        offsetY: -10\n      },\n      yStyle: {\n        backgroundColor: 'rgba(202, 215, 239, .2)',\n        fillerColor: 'rgba(202, 215, 239, .75)',\n        size: 4,\n        lineCap: 'round',\n        offsetX: 8,\n        offsetY: 0\n      }\n    });\n  };\n\n  _proto._renderScrollBars = function _renderScrollBars() {\n    var chart = this.chart;\n    var scrollBarCfg = chart.get('_scrollBarCfg');\n    if (!scrollBarCfg) return;\n    var data = chart.get('data');\n    var plotRange = chart.get('plotRange');\n    plotRange.width = Math.abs(plotRange.br.x - plotRange.bl.x);\n    plotRange.height = Math.abs(plotRange.tl.y - plotRange.bl.y);\n    var backPlot = chart.get('backPlot');\n    var canvas = chart.get('canvas');\n    var canvasHeight = canvas.get('height');\n    var limitRange = chart.get('_limitRange');\n    var type = scrollBarCfg.type;\n\n    if (type.indexOf('X') > -1) {\n      var _scrollBarCfg$xStyle = scrollBarCfg.xStyle,\n          offsetX = _scrollBarCfg$xStyle.offsetX,\n          offsetY = _scrollBarCfg$xStyle.offsetY,\n          lineCap = _scrollBarCfg$xStyle.lineCap,\n          backgroundColor = _scrollBarCfg$xStyle.backgroundColor,\n          fillerColor = _scrollBarCfg$xStyle.fillerColor,\n          size = _scrollBarCfg$xStyle.size;\n      var xScale = chart.getXScale();\n      var xLimitRange = limitRange[xScale.field];\n\n      if (!xLimitRange) {\n        xLimitRange = getLimitRange(data, xScale);\n        limitRange[xScale.field] = xLimitRange;\n      }\n\n      var currentRange = getFieldRange(xScale, xLimitRange, xScale.type);\n      var horizontalBar = chart.get('_horizontalBar');\n      var yPos = canvasHeight - size / 2 + offsetY;\n\n      if (horizontalBar) {\n        var progressLine = horizontalBar.get('children')[1];\n        progressLine.attr({\n          x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n          x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x)\n        });\n      } else {\n        horizontalBar = backPlot.addGroup({\n          className: 'horizontalBar'\n        });\n        horizontalBar.addShape('line', {\n          attrs: {\n            x1: plotRange.bl.x + offsetX,\n            y1: yPos,\n            x2: plotRange.br.x + offsetX,\n            y2: yPos,\n            lineWidth: size,\n            stroke: backgroundColor,\n            lineCap: lineCap\n          }\n        });\n        horizontalBar.addShape('line', {\n          attrs: {\n            x1: Math.max(plotRange.bl.x + plotRange.width * currentRange[0] + offsetX, plotRange.bl.x),\n            y1: yPos,\n            x2: Math.min(plotRange.bl.x + plotRange.width * currentRange[1] + offsetX, plotRange.br.x),\n            y2: yPos,\n            lineWidth: size,\n            stroke: fillerColor,\n            lineCap: lineCap\n          }\n        });\n        chart.set('_horizontalBar', horizontalBar);\n      }\n    }\n\n    if (type.indexOf('Y') > -1) {\n      var _scrollBarCfg$yStyle = scrollBarCfg.yStyle,\n          _offsetX = _scrollBarCfg$yStyle.offsetX,\n          _offsetY = _scrollBarCfg$yStyle.offsetY,\n          _lineCap = _scrollBarCfg$yStyle.lineCap,\n          _backgroundColor = _scrollBarCfg$yStyle.backgroundColor,\n          _fillerColor = _scrollBarCfg$yStyle.fillerColor,\n          _size = _scrollBarCfg$yStyle.size;\n      var yScale = chart.getYScales()[0];\n      var yLimitRange = limitRange[yScale.field];\n\n      if (!yLimitRange) {\n        yLimitRange = getLimitRange(data, yScale);\n        limitRange[yScale.field] = yLimitRange;\n      }\n\n      var _currentRange = getFieldRange(yScale, yLimitRange, yScale.type);\n\n      var verticalBar = chart.get('_verticalBar');\n      var xPos = _size / 2 + _offsetX;\n\n      if (verticalBar) {\n        var _progressLine = verticalBar.get('children')[1];\n\n        _progressLine.attr({\n          y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n          y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y)\n        });\n      } else {\n        verticalBar = backPlot.addGroup({\n          className: 'verticalBar'\n        });\n        verticalBar.addShape('line', {\n          attrs: {\n            x1: xPos,\n            y1: plotRange.tl.y + _offsetY,\n            x2: xPos,\n            y2: plotRange.bl.y + _offsetY,\n            lineWidth: _size,\n            stroke: _backgroundColor,\n            lineCap: _lineCap\n          }\n        });\n        verticalBar.addShape('line', {\n          attrs: {\n            x1: xPos,\n            y1: Math.max(plotRange.tl.y + plotRange.height * _currentRange[0] + _offsetY, plotRange.tl.y),\n            x2: xPos,\n            y2: Math.min(plotRange.tl.y + plotRange.height * _currentRange[1] + _offsetY, plotRange.bl.y),\n            lineWidth: _size,\n            stroke: _fillerColor,\n            lineCap: _lineCap\n          }\n        });\n        chart.set('_verticalBar', verticalBar);\n      }\n    }\n  };\n\n  function ScrollBar(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var defaultCfg = _this.getDefaultCfg();\n\n    chart.set('_scrollBarCfg', Util.deepMix({}, defaultCfg, cfg));\n    chart.set('_limitRange', {});\n\n    if (!chart.get('_horizontalBar') && !chart.get('_verticalBar')) {\n      _this._renderScrollBars();\n    }\n\n    return _this;\n  }\n\n  _proto._clear = function _clear() {\n    var chart = this.chart;\n\n    if (chart) {\n      var hBar = chart.get('_horizontalBar');\n      var vBar = chart.get('_verticalBar');\n      hBar && hBar.remove(true);\n      vBar && vBar.remove(true);\n      chart.set('_horizontalBar', null);\n      chart.set('_verticalBar', null);\n    }\n  };\n\n  _proto._bindEvents = function _bindEvents() {\n    this._onAfterclearOrBeforechangedata = this._onAfterclearOrBeforechangedata.bind(this);\n    this._onAfterclearinner = this._onAfterclearinner.bind(this);\n    this._onAfterdrawgeoms = this._onAfterdrawgeoms.bind(this);\n    var chart = this.chart;\n    chart.on('afterclear', this._onAfterclearOrBeforechangedata);\n    chart.on('beforechangedata', this._onAfterclearOrBeforechangedata);\n    chart.on('afterclearinner', this._onAfterclearinner);\n    chart.on('afterdrawgeoms', this._onAfterdrawgeoms);\n  };\n\n  _proto._onAfterclearOrBeforechangedata = function _onAfterclearOrBeforechangedata() {\n    this.chart && this.chart.set('_limitRange', {});\n  };\n\n  _proto._onAfterclearinner = function _onAfterclearinner() {\n    this._clear();\n  };\n\n  _proto._onAfterdrawgeoms = function _onAfterdrawgeoms() {\n    this._renderScrollBars();\n  };\n\n  _proto._clearEvents = function _clearEvents() {\n    var chart = this.chart;\n\n    if (chart) {\n      chart.off('afterclear', this._onAfterclearOrBeforechangedata);\n      chart.off('beforechangedata', this._onAfterclearOrBeforechangedata);\n      chart.off('afterclearinner', this._onAfterclearinner);\n      chart.off('afterdrawgeoms', this._onAfterdrawgeoms);\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this._clearEvents();\n\n    this._clear();\n\n    this.canvas.draw();\n  };\n\n  return ScrollBar;\n}(Interaction);\n\nmodule.exports = ScrollBar;\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (scale, limitRange, type) {\n  if (!scale) return [0, 1];\n  var minRatio = 0;\n  var maxRatio = 0;\n\n  if (type === 'linear') {\n    var min = limitRange.min,\n        max = limitRange.max;\n    var range = max - min;\n    minRatio = (scale.min - min) / range;\n    maxRatio = (scale.max - min) / range;\n  } else {\n    var originValues = limitRange;\n    var values = scale.values;\n    var firstIndex = originValues.indexOf(values[0]);\n    var lastIndex = originValues.indexOf(values[values.length - 1]);\n    minRatio = firstIndex / (originValues.length - 1);\n    maxRatio = lastIndex / (originValues.length - 1);\n  }\n\n  return [minRatio, maxRatio];\n};\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar Interaction = __webpack_require__(171);\n\nfunction getOriginalAttrs(attrs, styles) {\n  var origin = {};\n\n  for (var style in styles) {\n    origin[style] = attrs[style];\n  }\n\n  return origin;\n}\n\nvar Select =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(Select, _Interaction);\n\n  function Select() {\n    return _Interaction.apply(this, arguments) || this;\n  }\n\n  var _proto = Select.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var defaultCfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, defaultCfg, {\n      startEvent: 'mouseup',\n      processEvent: null,\n      selectStyle: {\n        fillOpacity: 1\n      },\n      unSelectStyle: {\n        fillOpacity: 0.1\n      },\n      cancelable: true\n    });\n  };\n\n  _proto.start = function start(ev) {\n    var self = this;\n    var chart = self.view;\n    var selectedShape;\n    var unSelectedShapes = [];\n    chart.eachShape(function (obj, shape) {\n      if (shape.isPointInPath(ev.x, ev.y)) {\n        selectedShape = shape;\n      } else {\n        unSelectedShapes.push(shape);\n      }\n    });\n\n    if (!selectedShape) {\n      self.reset();\n      return;\n    }\n\n    if (selectedShape.get('_selected')) {\n      // 已经被选中\n      if (!self.cancelable) {\n        // 不允许取消选中则不处理\n        return;\n      }\n\n      self.reset(); // 允许取消选中\n    } else {\n      // 未被选中\n      var selectStyle = self.selectStyle,\n          unSelectStyle = self.unSelectStyle; // 获取选中效果对应的本来效果,保存下来\n\n      var originAttrs = getOriginalAttrs(selectedShape.attr(), selectedShape);\n      selectedShape.set('_originAttrs', originAttrs);\n      selectedShape.attr(selectStyle);\n      Util.each(unSelectedShapes, function (child) {\n        var originAttrs = child.get('_originAttrs'); // 先恢复到默认状态下\n\n        if (originAttrs) {\n          child.attr(originAttrs);\n        }\n\n        child.set('_selected', false); // 保存未选中效果对应的原始效果\n\n        if (unSelectStyle) {\n          originAttrs = getOriginalAttrs(child.attr(), unSelectStyle);\n          child.set('_originAttrs', originAttrs);\n          child.attr(unSelectStyle);\n        }\n      });\n      selectedShape.set('_selected', true);\n      self.selectedShape = selectedShape;\n      self.canvas.draw();\n    }\n  };\n\n  _proto.end = function end(ev) {\n    var selectedShape = this.selectedShape;\n\n    if (selectedShape && !selectedShape.get('destroyed') && selectedShape.get('origin')) {\n      ev.data = selectedShape.get('origin')._origin; // 绘制数据，包含原始数据啊\n\n      ev.shapeInfo = selectedShape.get('origin');\n      ev.shape = selectedShape;\n      ev.selected = !!selectedShape.get('_selected'); // 返回选中的状态\n    }\n  };\n\n  _proto.reset = function reset() {\n    var self = this;\n\n    if (!self.selectedShape) {\n      return;\n    }\n\n    var chart = self.view;\n    var geom = chart.get('geoms')[0];\n    var container = geom.get('container').get('children')[0];\n    var children = container.get('children');\n    Util.each(children, function (child) {\n      var originAttrs = child.get('_originAttrs');\n\n      if (originAttrs) {\n        child._attrs = originAttrs;\n        child.set('_originAttrs', null);\n      }\n\n      child.set('_selected', false);\n    });\n    self.canvas.draw();\n  };\n\n  return Select;\n}(Interaction);\n\nmodule.exports = Select;\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Range = __webpack_require__(474);\n\nvar Chart = __webpack_require__(147);\n\nvar Util = __webpack_require__(0);\n\nvar G = __webpack_require__(16);\n\nvar Global = __webpack_require__(7);\n\nvar Interaction = __webpack_require__(171);\n\nvar getColDef = __webpack_require__(377);\n\nvar getColDefs = __webpack_require__(376);\n\nvar Canvas = G.Canvas;\nvar DomUtil = Util.DomUtil,\n    isNumber = Util.isNumber;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(Slider, _Interaction);\n\n  var _proto = Slider.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      startEvent: null,\n      processEvent: null,\n      endEvent: null,\n      resetEvent: null,\n      height: 26,\n      width: 'auto',\n      // 默认自适应\n      padding: Global.plotCfg.padding,\n      container: null,\n      xAxis: null,\n      yAxis: null,\n      // 选中区域的样式\n      fillerStyle: {\n        fill: '#BDCCED',\n        fillOpacity: 0.3\n      },\n      // 滑动条背景样式\n      backgroundStyle: {\n        stroke: '#CCD6EC',\n        fill: '#CCD6EC',\n        fillOpacity: 0.3,\n        lineWidth: 1\n      },\n      range: [0, 100],\n      layout: 'horizontal',\n      // 文本颜色\n      textStyle: {\n        fill: '#545454'\n      },\n      // 滑块的样式\n      handleStyle: {\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/QXtfhORGlDuRvLXFzpsQ.png',\n        width: 5\n      },\n      // 背景图表的配置，如果为 false 则表示不渲染\n      backgroundChart: {\n        type: ['area'],\n        // 图表的类型，可以是字符串也可是是数组\n        color: '#CCD6EC'\n      }\n    });\n  };\n\n  _proto._initContainer = function _initContainer() {\n    var me = this;\n    var container = me.container;\n\n    if (!container) {\n      throw new Error('Please specify the container for the Slider!');\n    }\n\n    if (Util.isString(container)) {\n      me.domContainer = document.getElementById(container);\n    } else {\n      me.domContainer = container;\n    }\n  };\n\n  _proto.forceFit = function forceFit() {\n    var me = this;\n\n    if (!me || me.destroyed) {\n      return;\n    }\n\n    var width = DomUtil.getWidth(me.domContainer);\n    var height = me.height;\n\n    if (width !== me.domWidth) {\n      var canvas = me.canvas;\n      canvas.changeSize(width, height); // 改变画布尺寸\n\n      me.bgChart && me.bgChart.changeWidth(width);\n      canvas.clear();\n\n      me._initWidth();\n\n      me._initSlider(); // 初始化滑动条\n\n\n      me._bindEvent();\n\n      canvas.draw();\n    }\n  };\n\n  _proto._initForceFitEvent = function _initForceFitEvent() {\n    var me = this;\n    var timer = setTimeout(Util.wrapBehavior(me, 'forceFit'), 200);\n    clearTimeout(me.resizeTimer);\n    me.resizeTimer = timer;\n  };\n\n  _proto._initStyle = function _initStyle() {\n    var me = this;\n    me.handleStyle = Util.mix({\n      width: me.height,\n      height: me.height\n    }, me.handleStyle);\n\n    if (me.width === 'auto') {\n      // 宽度自适应\n      window.addEventListener('resize', Util.wrapBehavior(me, '_initForceFitEvent'));\n    }\n  };\n\n  _proto._initWidth = function _initWidth() {\n    var me = this;\n    var width;\n\n    if (me.width === 'auto') {\n      width = DomUtil.getWidth(me.domContainer);\n    } else {\n      width = me.width;\n    }\n\n    me.domWidth = width;\n    var padding = Util.toAllPadding(me.padding);\n\n    if (me.layout === 'horizontal') {\n      me.plotWidth = width - padding[1] - padding[3];\n      me.plotPadding = padding[3];\n      me.plotHeight = me.height;\n    } else if (me.layout === 'vertical') {\n      me.plotWidth = me.width;\n      me.plotHeight = me.height - padding[0] - padding[2];\n      me.plotPadding = padding[0];\n    }\n  };\n\n  _proto._initCanvas = function _initCanvas() {\n    var me = this;\n    var width = me.domWidth;\n    var height = me.height;\n    var canvas = new Canvas({\n      width: width,\n      height: height,\n      containerDOM: me.domContainer,\n      capture: false\n    });\n    var node = canvas.get('el');\n    node.style.position = 'absolute';\n    node.style.top = 0;\n    node.style.left = 0;\n    node.style.zIndex = 3;\n    me.canvas = canvas;\n  };\n\n  _proto._initBackground = function _initBackground() {\n    var _Util$deepMix;\n\n    var me = this;\n    var chart = this.chart;\n    var geom = chart.getAllGeoms[0];\n    var data = me.data = me.data || chart.get('data');\n    var xScale = chart.getXScale();\n    var xAxis = me.xAxis || xScale.field;\n    var yAxis = me.yAxis || chart.getYScales()[0].field;\n    var scales = Util.deepMix((_Util$deepMix = {}, _Util$deepMix[\"\" + xAxis] = {\n      range: [0, 1]\n    }, _Util$deepMix), getColDefs(chart), me.scales); // 用户列定义\n\n    delete scales[xAxis].min;\n    delete scales[xAxis].max;\n\n    if (!data) {\n      // 没有数据，则不创建\n      throw new Error('Please specify the data!');\n    }\n\n    if (!xAxis) {\n      throw new Error('Please specify the xAxis!');\n    }\n\n    if (!yAxis) {\n      throw new Error('Please specify the yAxis!');\n    }\n\n    var backgroundChart = me.backgroundChart;\n    var type = backgroundChart.type || geom.get('type');\n    var color = backgroundChart.color || 'grey';\n\n    if (!Util.isArray(type)) {\n      type = [type];\n    }\n\n    var padding = Util.toAllPadding(me.padding);\n    var bgChart = new Chart({\n      container: me.container,\n      width: me.domWidth,\n      height: me.height,\n      padding: [0, padding[1], 0, padding[3]],\n      animate: false\n    });\n    bgChart.source(data);\n    bgChart.scale(scales);\n    bgChart.axis(false);\n    bgChart.tooltip(false);\n    bgChart.legend(false);\n    Util.each(type, function (eachType) {\n      bgChart[eachType]().position(xAxis + '*' + yAxis).color(color).opacity(1);\n    });\n    bgChart.render();\n    me.bgChart = bgChart;\n    me.scale = me.layout === 'horizontal' ? bgChart.getXScale() : bgChart.getYScales()[0];\n\n    if (me.layout === 'vertical') {\n      bgChart.destroy();\n    }\n  };\n\n  _proto._initRange = function _initRange() {\n    var me = this;\n    var startRadio = me.startRadio;\n    var endRadio = me.endRadio;\n    var start = me._startValue;\n    var end = me._endValue;\n    var scale = me.scale;\n    var min = 0;\n    var max = 1; // startRadio 优先级高于 start\n\n    if (isNumber(startRadio)) {\n      min = startRadio;\n    } else if (start) {\n      min = scale.scale(scale.translate(start));\n    } // endRadio 优先级高于 end\n\n\n    if (isNumber(endRadio)) {\n      max = endRadio;\n    } else if (end) {\n      max = scale.scale(scale.translate(end));\n    }\n\n    var minSpan = me.minSpan,\n        maxSpan = me.maxSpan;\n    var totalSpan = 0;\n\n    if (scale.type === 'time' || scale.type === 'timeCat') {\n      // 时间类型已排序\n      var values = scale.values;\n      var firstValue = values[0];\n      var lastValue = values[values.length - 1];\n      totalSpan = lastValue - firstValue;\n    } else if (scale.isLinear) {\n      totalSpan = scale.max - scale.min;\n    }\n\n    if (totalSpan && minSpan) {\n      me.minRange = minSpan / totalSpan * 100;\n    }\n\n    if (totalSpan && maxSpan) {\n      me.maxRange = maxSpan / totalSpan * 100;\n    }\n\n    var range = [min * 100, max * 100];\n    me.range = range;\n    return range;\n  };\n\n  _proto._getHandleValue = function _getHandleValue(type) {\n    var me = this;\n    var value;\n    var range = me.range;\n    var min = range[0] / 100;\n    var max = range[1] / 100;\n    var scale = me.scale;\n\n    if (type === 'min') {\n      value = me._startValue ? me._startValue : scale.invert(min);\n    } else {\n      value = me._endValue ? me._endValue : scale.invert(max);\n    }\n\n    return value;\n  };\n\n  _proto._initSlider = function _initSlider() {\n    var me = this;\n    var canvas = me.canvas;\n\n    var range = me._initRange();\n\n    var scale = me.scale;\n    var rangeElement = canvas.addGroup(Range, {\n      middleAttr: me.fillerStyle,\n      range: range,\n      minRange: me.minRange,\n      maxRange: me.maxRange,\n      layout: me.layout,\n      width: me.plotWidth,\n      height: me.plotHeight,\n      backgroundStyle: me.backgroundStyle,\n      textStyle: me.textStyle,\n      handleStyle: me.handleStyle,\n      minText: scale.getText(me._getHandleValue('min')),\n      maxText: scale.getText(me._getHandleValue('max'))\n    });\n\n    if (me.layout === 'horizontal') {\n      rangeElement.translate(me.plotPadding, 0);\n    } else if (me.layout === 'vertical') {\n      rangeElement.translate(0, me.plotPadding);\n    }\n\n    me.rangeElement = rangeElement;\n  };\n\n  _proto._updateElement = function _updateElement(minRatio, maxRatio) {\n    var me = this;\n    var chart = me.chart,\n        scale = me.scale,\n        rangeElement = me.rangeElement;\n    var field = scale.field;\n    var minTextElement = rangeElement.get('minTextElement');\n    var maxTextElement = rangeElement.get('maxTextElement');\n    var min = scale.invert(minRatio);\n    var max = scale.invert(maxRatio);\n    var minText = scale.getText(min);\n    var maxText = scale.getText(max);\n    minTextElement.attr('text', minText);\n    maxTextElement.attr('text', maxText);\n    me._startValue = minText;\n    me._endValue = maxText;\n\n    if (me.onChange) {\n      me.onChange({\n        startText: minText,\n        endText: maxText,\n        startValue: min,\n        endValue: max,\n        startRadio: minRatio,\n        endRadio: maxRatio\n      });\n    }\n\n    chart.scale(field, Util.mix({}, getColDef(chart, field), {\n      nice: false,\n      min: min,\n      max: max\n    }));\n    chart.repaint();\n  };\n\n  _proto._bindEvent = function _bindEvent() {\n    var me = this;\n    var rangeElement = me.rangeElement;\n    rangeElement.on('sliderchange', function (ev) {\n      var range = ev.range;\n      var minRatio = range[0] / 100;\n      var maxRatio = range[1] / 100;\n\n      me._updateElement(minRatio, maxRatio);\n    });\n  };\n\n  function Slider(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var me = _assertThisInitialized(_assertThisInitialized(_this));\n\n    me._initContainer();\n\n    me._initStyle();\n\n    me.render();\n    return _this;\n  }\n\n  _proto.clear = function clear() {\n    var me = this;\n    me.canvas.clear();\n    me.bgChart && me.bgChart.destroy();\n    me.bgChart = null;\n    me.scale = null;\n    me.canvas.draw();\n  };\n\n  _proto.repaint = function repaint() {\n    var me = this;\n    me.clear();\n    me.render();\n  };\n\n  _proto.render = function render() {\n    var me = this;\n\n    me._initWidth();\n\n    me._initCanvas();\n\n    me._initBackground();\n\n    me._initSlider();\n\n    me._bindEvent();\n\n    me.canvas.draw();\n  };\n\n  _proto.destroy = function destroy() {\n    var me = this;\n    clearTimeout(me.resizeTimer);\n    var rangeElement = me.rangeElement;\n    rangeElement.off('sliderchange');\n    me.bgChart && me.bgChart.destroy();\n    me.canvas.destroy();\n    var container = me.domContainer;\n\n    while (container.hasChildNodes()) {\n      container.removeChild(container.firstChild);\n    }\n\n    window.removeEventListener('resize', Util.getWrapBehavior(me, '_initForceFitEvent'));\n    me.destroyed = true;\n  };\n\n  return Slider;\n}(Interaction);\n\nmodule.exports = Slider;\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Util = __webpack_require__(0);\n\nvar G = __webpack_require__(16);\n\nvar Group = G.Group;\nvar DomUtil = Util.DomUtil;\nvar OFFSET = 5;\n\nvar Range =\n/*#__PURE__*/\nfunction (_Group) {\n  _inheritsLoose(Range, _Group);\n\n  function Range() {\n    return _Group.apply(this, arguments) || this;\n  }\n\n  var _proto = Range.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    return {\n      /**\n       * 范围\n       * @type {Array}\n       */\n      range: null,\n\n      /**\n       * 中滑块属性\n       * @type {ATTRS}\n       */\n      middleAttr: null,\n\n      /**\n       * 背景\n       * @type {G-Element}\n       */\n      backgroundElement: null,\n\n      /**\n       * 下滑块\n       * @type {G-Element}\n       */\n      minHandleElement: null,\n\n      /**\n       * 上滑块\n       * @type {G-Element}\n       */\n      maxHandleElement: null,\n\n      /**\n       * 中块\n       * @type {G-Element}\n       */\n      middleHandleElement: null,\n\n      /**\n       * 当前的激活的元素\n       * @type {G-Element}\n       */\n      currentTarget: null,\n\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'vertical',\n\n      /**\n       * 宽\n       * @type {Number}\n       */\n      width: null,\n\n      /**\n       * 高\n       * @type {Number}\n       */\n      height: null,\n\n      /**\n       * 当前的PageX\n       * @type {Number}\n       */\n      pageX: null,\n\n      /**\n       * 当前的PageY\n       * @type {Number}\n       */\n      pageY: null\n    };\n  };\n\n  _proto._initHandle = function _initHandle(type) {\n    var self = this;\n    var handle = self.addGroup();\n    var layout = self.get('layout');\n    var handleStyle = self.get('handleStyle');\n    var img = handleStyle.img;\n    var iconWidth = handleStyle.width;\n    var iconHeight = handleStyle.height;\n    var text;\n    var handleIcon;\n    var triggerCursor;\n\n    if (layout === 'horizontal') {\n      var _iconWidth = handleStyle.width;\n      triggerCursor = 'ew-resize';\n      handleIcon = handle.addShape('Image', {\n        attrs: {\n          x: -_iconWidth / 2,\n          y: 0,\n          width: _iconWidth,\n          height: iconHeight,\n          img: img,\n          cursor: triggerCursor\n        }\n      });\n      text = handle.addShape('Text', {\n        attrs: Util.mix({\n          x: type === 'min' ? -(_iconWidth / 2 + OFFSET) : _iconWidth / 2 + OFFSET,\n          y: iconHeight / 2,\n          textAlign: type === 'min' ? 'end' : 'start',\n          textBaseline: 'middle',\n          text: type === 'min' ? this.get('minText') : this.get('maxText'),\n          cursor: triggerCursor\n        }, this.get('textStyle'))\n      });\n    } else {\n      triggerCursor = 'ns-resize';\n      handleIcon = handle.addShape('Image', {\n        attrs: {\n          x: 0,\n          y: -iconHeight / 2,\n          width: iconWidth,\n          height: iconHeight,\n          img: img,\n          cursor: triggerCursor\n        }\n      });\n      text = handle.addShape('Text', {\n        attrs: Util.mix({\n          x: iconWidth / 2,\n          y: type === 'min' ? iconHeight / 2 + OFFSET : -(iconHeight / 2 + OFFSET),\n          textAlign: 'center',\n          textBaseline: 'middle',\n          text: type === 'min' ? this.get('minText') : this.get('maxText'),\n          cursor: triggerCursor\n        }, this.get('textStyle'))\n      });\n    }\n\n    this.set(type + 'TextElement', text);\n    this.set(type + 'IconElement', handleIcon);\n    return handle;\n  };\n\n  _proto._initSliderBackground = function _initSliderBackground() {\n    var backgroundElement = this.addGroup();\n    backgroundElement.initTransform();\n    backgroundElement.translate(0, 0);\n    backgroundElement.addShape('Rect', {\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        width: this.get('width'),\n        height: this.get('height')\n      }, this.get('backgroundStyle'))\n    });\n    return backgroundElement;\n  };\n\n  _proto._beforeRenderUI = function _beforeRenderUI() {\n    var backgroundElement = this._initSliderBackground();\n\n    var minHandleElement = this._initHandle('min');\n\n    var maxHandleElement = this._initHandle('max');\n\n    var middleHandleElement = this.addShape('rect', {\n      attrs: this.get('middleAttr')\n    });\n    this.set('middleHandleElement', middleHandleElement);\n    this.set('minHandleElement', minHandleElement);\n    this.set('maxHandleElement', maxHandleElement);\n    this.set('backgroundElement', backgroundElement);\n    backgroundElement.set('zIndex', 0);\n    middleHandleElement.set('zIndex', 1);\n    minHandleElement.set('zIndex', 2);\n    maxHandleElement.set('zIndex', 2);\n    middleHandleElement.attr('cursor', 'move');\n    this.sort();\n  };\n\n  _proto._renderUI = function _renderUI() {\n    if (this.get('layout') === 'horizontal') {\n      this._renderHorizontal();\n    } else {\n      this._renderVertical();\n    }\n  };\n\n  _proto._transform = function _transform(layout) {\n    var range = this.get('range');\n    var minRatio = range[0] / 100;\n    var maxRatio = range[1] / 100;\n    var width = this.get('width');\n    var height = this.get('height');\n    var minHandleElement = this.get('minHandleElement');\n    var maxHandleElement = this.get('maxHandleElement');\n    var middleHandleElement = this.get('middleHandleElement');\n\n    if (minHandleElement.resetMatrix) {\n      minHandleElement.resetMatrix();\n      maxHandleElement.resetMatrix();\n    } else {\n      minHandleElement.initTransform();\n      maxHandleElement.initTransform();\n    }\n\n    if (layout === 'horizontal') {\n      middleHandleElement.attr({\n        x: width * minRatio,\n        y: 0,\n        width: (maxRatio - minRatio) * width,\n        height: height\n      });\n      minHandleElement.translate(minRatio * width, 0);\n      maxHandleElement.translate(maxRatio * width, 0);\n    } else {\n      middleHandleElement.attr({\n        x: 0,\n        y: height * (1 - maxRatio),\n        width: width,\n        height: (maxRatio - minRatio) * height\n      });\n      minHandleElement.translate(0, (1 - minRatio) * height);\n      maxHandleElement.translate(0, (1 - maxRatio) * height);\n    }\n  };\n\n  _proto._renderHorizontal = function _renderHorizontal() {\n    this._transform('horizontal');\n  };\n\n  _proto._renderVertical = function _renderVertical() {\n    this._transform('vertical');\n  };\n\n  _proto._bindUI = function _bindUI() {\n    this.on('mousedown', Util.wrapBehavior(this, '_onMouseDown'));\n  };\n\n  _proto._isElement = function _isElement(target, name) {\n    // 判断是否是该元素\n    var element = this.get(name);\n\n    if (target === element) {\n      return true;\n    }\n\n    if (element.isGroup) {\n      var elementChildren = element.get('children');\n      return elementChildren.indexOf(target) > -1;\n    }\n\n    return false;\n  };\n\n  _proto._getRange = function _getRange(diff, range) {\n    var rst = diff + range;\n    rst = rst > 100 ? 100 : rst;\n    rst = rst < 0 ? 0 : rst;\n    return rst;\n  };\n\n  _proto._limitRange = function _limitRange(diff, limit, range) {\n    range[0] = this._getRange(diff, range[0]);\n    range[1] = range[0] + limit;\n\n    if (range[1] > 100) {\n      range[1] = 100;\n      range[0] = range[1] - limit;\n    }\n  };\n\n  _proto._updateStatus = function _updateStatus(dim, ev) {\n    var totalLength = dim === 'x' ? this.get('width') : this.get('height');\n    dim = Util.upperFirst(dim);\n    var range = this.get('range');\n    var page = this.get('page' + dim);\n    var currentTarget = this.get('currentTarget');\n    var rangeStash = this.get('rangeStash');\n    var layout = this.get('layout');\n    var sign = layout === 'vertical' ? -1 : 1;\n    var currentPage = ev['page' + dim];\n    var diffPage = currentPage - page;\n    var diffRange = diffPage / totalLength * 100 * sign;\n    var diffStashRange;\n    var minRange = this.get('minRange');\n    var maxRange = this.get('maxRange');\n\n    if (range[1] <= range[0]) {\n      if (this._isElement(currentTarget, 'minHandleElement') || this._isElement(currentTarget, 'maxHandleElement')) {\n        range[0] = this._getRange(diffRange, range[0]);\n        range[1] = this._getRange(diffRange, range[0]);\n      }\n    } else {\n      if (this._isElement(currentTarget, 'minHandleElement')) {\n        range[0] = this._getRange(diffRange, range[0]);\n\n        if (minRange) {\n          // 设置了最小范围\n          if (range[1] - range[0] <= minRange) {\n            this._limitRange(diffRange, minRange, range);\n          }\n        }\n\n        if (maxRange) {\n          // 设置了最大范围\n          if (range[1] - range[0] >= maxRange) {\n            this._limitRange(diffRange, maxRange, range);\n          }\n        }\n      }\n\n      if (this._isElement(currentTarget, 'maxHandleElement')) {\n        range[1] = this._getRange(diffRange, range[1]);\n\n        if (minRange) {\n          // 设置了最小范围\n          if (range[1] - range[0] <= minRange) {\n            this._limitRange(diffRange, minRange, range);\n          }\n        }\n\n        if (maxRange) {\n          // 设置了最大范围\n          if (range[1] - range[0] >= maxRange) {\n            this._limitRange(diffRange, maxRange, range);\n          }\n        }\n      }\n    }\n\n    if (this._isElement(currentTarget, 'middleHandleElement')) {\n      diffStashRange = rangeStash[1] - rangeStash[0];\n\n      this._limitRange(diffRange, diffStashRange, range);\n    }\n\n    this.emit('sliderchange', {\n      range: range\n    });\n    this.set('page' + dim, currentPage);\n\n    this._renderUI();\n\n    this.get('canvas').draw(); // need delete\n\n    return;\n  };\n\n  _proto._onMouseDown = function _onMouseDown(ev) {\n    var currentTarget = ev.currentTarget;\n    var originEvent = ev.event;\n    var range = this.get('range');\n    originEvent.stopPropagation();\n    originEvent.preventDefault();\n    this.set('pageX', originEvent.pageX);\n    this.set('pageY', originEvent.pageY);\n    this.set('currentTarget', currentTarget);\n    this.set('rangeStash', [range[0], range[1]]);\n\n    this._bindCanvasEvents();\n  };\n\n  _proto._bindCanvasEvents = function _bindCanvasEvents() {\n    var containerDOM = this.get('canvas').get('containerDOM');\n    this.onMouseMoveListener = DomUtil.addEventListener(containerDOM, 'mousemove', Util.wrapBehavior(this, '_onCanvasMouseMove'));\n    this.onMouseUpListener = DomUtil.addEventListener(containerDOM, 'mouseup', Util.wrapBehavior(this, '_onCanvasMouseUp')); // @2018-06-06 by blue.lb 添加mouseleave事件监听，让用户在操作出滑块区域后有一个“正常”的效果，可以正常重新触发滑块的操作流程\n\n    this.onMouseLeaveListener = DomUtil.addEventListener(containerDOM, 'mouseleave', Util.wrapBehavior(this, '_onCanvasMouseUp'));\n  };\n\n  _proto._onCanvasMouseMove = function _onCanvasMouseMove(ev) {\n    var layout = this.get('layout');\n\n    if (layout === 'horizontal') {\n      this._updateStatus('x', ev);\n    } else {\n      this._updateStatus('y', ev);\n    }\n  };\n\n  _proto._onCanvasMouseUp = function _onCanvasMouseUp() {\n    this._removeDocumentEvents();\n  };\n\n  _proto._removeDocumentEvents = function _removeDocumentEvents() {\n    this.onMouseMoveListener.remove();\n    this.onMouseUpListener.remove();\n    this.onMouseLeaveListener.remove();\n  };\n\n  return Range;\n}(Group);\n\nmodule.exports = Range;\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Util = __webpack_require__(0);\n\nvar Interaction = __webpack_require__(171);\n\nvar getColDef = __webpack_require__(377);\n\nvar getLimitRange = __webpack_require__(378);\n\nvar ZOOMING_TYPES = ['X', 'Y', 'XY'];\nvar DEFAULT_TYPE = 'X';\n\nvar Zoom =\n/*#__PURE__*/\nfunction (_Interaction) {\n  _inheritsLoose(Zoom, _Interaction);\n\n  var _proto = Zoom.prototype;\n\n  _proto.getDefaultCfg = function getDefaultCfg() {\n    var cfg = _Interaction.prototype.getDefaultCfg.call(this);\n\n    return Util.mix({}, cfg, {\n      processEvent: 'mousewheel',\n      type: DEFAULT_TYPE,\n      stepRatio: 0.05,\n      stepByField: {},\n      minScale: 1,\n      maxScale: 4,\n      catStep: 2,\n      limitRange: {},\n      originScaleDefsByField: {}\n    });\n  };\n\n  function Zoom(cfg, chart) {\n    var _this;\n\n    _this = _Interaction.call(this, cfg, chart) || this;\n\n    var me = _assertThisInitialized(_assertThisInitialized(_this));\n\n    me.chart = chart;\n    me.type = me.type.toUpperCase();\n    var data = me.data = chart.get('data');\n    var scales = chart.getYScales();\n    var xScale = chart.getXScale();\n    scales.push(xScale);\n    var scaleController = chart.get('scaleController');\n    scales.forEach(function (scale) {\n      var field = scale.field;\n      var def = scaleController.defs[field] || {};\n      me.limitRange[field] = getLimitRange(data, scale);\n      me.originScaleDefsByField[field] = Util.mix(def, {\n        nice: !!def.nice\n      });\n\n      if (scale.isLinear) {\n        me.stepByField[field] = (scale.max - scale.min) * me.stepRatio;\n      } else {\n        me.stepByField[field] = me.catStep;\n      }\n    });\n\n    if (ZOOMING_TYPES.indexOf(me.type) === -1) {\n      me.type = DEFAULT_TYPE;\n    }\n\n    return _this;\n  } // onZoom() { }\n  // onZoomin() { }\n  // onZoomout() { }\n\n\n  _proto._applyScale = function _applyScale(scale, delta, minOffset, center) {\n    if (minOffset === void 0) {\n      minOffset = 0;\n    }\n\n    var me = this;\n    var chart = me.chart,\n        stepByField = me.stepByField;\n\n    if (scale.isLinear) {\n      var min = scale.min,\n          max = scale.max,\n          field = scale.field;\n      var maxOffset = 1 - minOffset;\n      var step = stepByField[field] * delta;\n      var newMin = min + step * minOffset;\n      var newMax = max - step * maxOffset;\n\n      if (newMax > newMin) {\n        chart.scale(field, {\n          nice: false,\n          min: newMin,\n          max: newMax\n        });\n      }\n    } else {\n      var _field = scale.field,\n          values = scale.values;\n      var _chart = me.chart;\n\n      var coord = _chart.get('coord');\n\n      var colDef = getColDef(_chart, _field);\n      var originValues = me.limitRange[_field];\n      var originValuesLen = originValues.length;\n      var maxScale = me.maxScale;\n      var minScale = me.minScale;\n      var minCount = originValuesLen / maxScale;\n      var maxCount = originValuesLen / minScale;\n      var valuesLength = values.length;\n      var offsetPoint = coord.invertPoint(center);\n      var percent = offsetPoint.x;\n      var deltaCount = valuesLength - delta * this.catStep;\n      var minDelta = parseInt(deltaCount * percent);\n      var maxDelta = deltaCount + minDelta;\n\n      if (delta > 0 && valuesLength >= minCount) {\n        // zoom out\n        var _min = minDelta;\n        var _max = maxDelta;\n\n        if (maxDelta > valuesLength) {\n          _max = valuesLength - 1;\n          _min = valuesLength - deltaCount;\n        }\n\n        var newValues = values.slice(_min, _max);\n\n        _chart.scale(_field, Util.mix({}, colDef, {\n          values: newValues\n        }));\n      } else if (delta < 0 && valuesLength <= maxCount) {\n        // zoom in\n        var firstIndex = originValues.indexOf(values[0]);\n        var lastIndex = originValues.indexOf(values[valuesLength - 1]);\n        var minIndex = Math.max(0, firstIndex - minDelta);\n        var maxIndex = Math.min(lastIndex + maxDelta, originValuesLen);\n\n        var _newValues = originValues.slice(minIndex, maxIndex);\n\n        _chart.scale(_field, Util.mix({}, colDef, {\n          values: _newValues\n        }));\n      }\n    }\n  };\n\n  _proto.process = function process(ev) {\n    var me = this;\n    var chart = me.chart,\n        type = me.type;\n    var coord = chart.get('coord');\n    var deltaY = ev.deltaY;\n    var offsetPoint = coord.invertPoint(ev);\n\n    if (deltaY) {\n      me.onZoom && me.onZoom(deltaY, offsetPoint, me);\n\n      if (deltaY > 0) {\n        me.onZoomin && me.onZoomin(deltaY, offsetPoint, me);\n      } else {\n        me.onZoomout && me.onZoomout(deltaY, offsetPoint, me);\n      }\n\n      var delta = deltaY / Math.abs(deltaY);\n\n      if (type.indexOf('X') > -1) {\n        me._applyScale(chart.getXScale(), delta, offsetPoint.x, ev);\n      }\n\n      if (type.indexOf('Y') > -1) {\n        var yScales = chart.getYScales();\n        yScales.forEach(function (yScale) {\n          me._applyScale(yScale, delta, offsetPoint.y, ev);\n        });\n      }\n    }\n\n    chart.repaint();\n  };\n\n  _proto.reset = function reset() {\n    var me = this;\n    var view = me.view,\n        originScaleDefsByField = me.originScaleDefsByField;\n    var scales = view.getYScales();\n    var xScale = view.getXScale();\n    scales.push(xScale);\n    scales.forEach(function (scale) {\n      if (scale.isLinear) {\n        var field = scale.field;\n        view.scale(field, originScaleDefsByField[field]);\n      }\n    });\n    view.repaint();\n  };\n\n  return Zoom;\n}(Interaction); // G2.registerInteraction('zoom', Zoom);\n// G2.registerInteraction('Zoom', Zoom);\n\n\nmodule.exports = Zoom;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=g2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@antv/g2/build/g2.js\n");

/***/ })

}]);